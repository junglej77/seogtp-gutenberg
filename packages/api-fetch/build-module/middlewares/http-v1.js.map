{"version":3,"names":["OVERRIDE_METHODS","Set","DEFAULT_METHOD","httpV1Middleware","options","next","method","has","toUpperCase","headers"],"sources":["@wordpress/api-fetch/src/middlewares/http-v1.js"],"sourcesContent":["/**\r\n * Set of HTTP methods which are eligible to be overridden.\r\n *\r\n * @type {Set<string>}\r\n */\r\nconst OVERRIDE_METHODS = new Set( [ 'PATCH', 'PUT', 'DELETE' ] );\r\n\r\n/**\r\n * Default request method.\r\n *\r\n * \"A request has an associated method (a method). Unless stated otherwise it\r\n * is `GET`.\"\r\n *\r\n * @see  https://fetch.spec.whatwg.org/#requests\r\n *\r\n * @type {string}\r\n */\r\nconst DEFAULT_METHOD = 'GET';\r\n\r\n/**\r\n * API Fetch middleware which overrides the request method for HTTP v1\r\n * compatibility leveraging the REST API X-HTTP-Method-Override header.\r\n *\r\n * @type {import('../types').APIFetchMiddleware}\r\n */\r\nconst httpV1Middleware = ( options, next ) => {\r\n\tconst { method = DEFAULT_METHOD } = options;\r\n\tif ( OVERRIDE_METHODS.has( method.toUpperCase() ) ) {\r\n\t\toptions = {\r\n\t\t\t...options,\r\n\t\t\theaders: {\r\n\t\t\t\t...options.headers,\r\n\t\t\t\t'X-HTTP-Method-Override': method,\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tmethod: 'POST',\r\n\t\t};\r\n\t}\r\n\r\n\treturn next( options );\r\n};\r\n\r\nexport default httpV1Middleware;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,gBAAgB,GAAG,IAAIC,GAAG,CAAE,CAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAG,CAAC;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAG,KAAK;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAGA,CAAEC,OAAO,EAAEC,IAAI,KAAM;EAC7C,MAAM;IAAEC,MAAM,GAAGJ;EAAe,CAAC,GAAGE,OAAO;EAC3C,IAAKJ,gBAAgB,CAACO,GAAG,CAAED,MAAM,CAACE,WAAW,CAAC,CAAE,CAAC,EAAG;IACnDJ,OAAO,GAAG;MACT,GAAGA,OAAO;MACVK,OAAO,EAAE;QACR,GAAGL,OAAO,CAACK,OAAO;QAClB,wBAAwB,EAAEH,MAAM;QAChC,cAAc,EAAE;MACjB,CAAC;MACDA,MAAM,EAAE;IACT,CAAC;EACF;EAEA,OAAOD,IAAI,CAAED,OAAQ,CAAC;AACvB,CAAC;AAED,eAAeD,gBAAgB","ignoreList":[]}