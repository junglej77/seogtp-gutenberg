{"version":3,"names":["createNonceMiddleware","nonce","middleware","options","next","headers","headerName","toLowerCase"],"sources":["@wordpress/api-fetch/src/middlewares/nonce.js"],"sourcesContent":["/**\r\n * @param {string} nonce\r\n * @return {import('../types').APIFetchMiddleware & { nonce: string }} A middleware to enhance a request with a nonce.\r\n */\r\nfunction createNonceMiddleware( nonce ) {\r\n\t/**\r\n\t * @type {import('../types').APIFetchMiddleware & { nonce: string }}\r\n\t */\r\n\tconst middleware = ( options, next ) => {\r\n\t\tconst { headers = {} } = options;\r\n\r\n\t\t// If an 'X-WP-Nonce' header (or any case-insensitive variation\r\n\t\t// thereof) was specified, no need to add a nonce header.\r\n\t\tfor ( const headerName in headers ) {\r\n\t\t\tif (\r\n\t\t\t\theaderName.toLowerCase() === 'x-wp-nonce' &&\r\n\t\t\t\theaders[ headerName ] === middleware.nonce\r\n\t\t\t) {\r\n\t\t\t\treturn next( options );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn next( {\r\n\t\t\t...options,\r\n\t\t\theaders: {\r\n\t\t\t\t...headers,\r\n\t\t\t\t'X-WP-Nonce': middleware.nonce,\r\n\t\t\t},\r\n\t\t} );\r\n\t};\r\n\r\n\tmiddleware.nonce = nonce;\r\n\r\n\treturn middleware;\r\n}\r\n\r\nexport default createNonceMiddleware;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,qBAAqBA,CAAEC,KAAK,EAAG;EACvC;AACD;AACA;EACC,MAAMC,UAAU,GAAGA,CAAEC,OAAO,EAAEC,IAAI,KAAM;IACvC,MAAM;MAAEC,OAAO,GAAG,CAAC;IAAE,CAAC,GAAGF,OAAO;;IAEhC;IACA;IACA,KAAM,MAAMG,UAAU,IAAID,OAAO,EAAG;MACnC,IACCC,UAAU,CAACC,WAAW,CAAC,CAAC,KAAK,YAAY,IACzCF,OAAO,CAAEC,UAAU,CAAE,KAAKJ,UAAU,CAACD,KAAK,EACzC;QACD,OAAOG,IAAI,CAAED,OAAQ,CAAC;MACvB;IACD;IAEA,OAAOC,IAAI,CAAE;MACZ,GAAGD,OAAO;MACVE,OAAO,EAAE;QACR,GAAGA,OAAO;QACV,YAAY,EAAEH,UAAU,CAACD;MAC1B;IACD,CAAE,CAAC;EACJ,CAAC;EAEDC,UAAU,CAACD,KAAK,GAAGA,KAAK;EAExB,OAAOC,UAAU;AAClB;AAEA,eAAeF,qBAAqB","ignoreList":[]}