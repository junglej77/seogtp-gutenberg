{"version":3,"names":["store","blocksStore","unstable__bootstrapServerSideBlockDefinitions","__","sprintf","apiFetch","noticesStore","addQueryArgs","loadAssets","getPluginUrl","fetchDownloadableBlocks","filterValue","type","receiveDownloadableBlocks","downloadableBlocks","installBlockType","block","registry","dispatch","id","name","success","clearErrorNotice","setIsInstalling","url","links","method","data","status","response","path","slug","_links","addInstalledBlockType","metadataFields","_fields","catch","then","Object","fromEntries","entries","filter","key","includes","registeredBlocks","select","getBlockTypes","some","i","Error","createInfoNotice","title","speak","error","message","isFatal","fatalAPIErrors","folder_exists","unable_to_connect_to_filesystem","code","setErrorNotice","createErrorNotice","isDismissible","uninstallBlockType","removeInstalledBlockType","item","blockId","isInstalling"],"sources":["@wordpress/block-directory/src/store/actions.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport {\r\n\tstore as blocksStore,\r\n\tunstable__bootstrapServerSideBlockDefinitions, // eslint-disable-line camelcase\r\n} from '@wordpress/blocks';\r\nimport { __, sprintf } from '@wordpress/i18n';\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport { store as noticesStore } from '@wordpress/notices';\r\nimport { addQueryArgs } from '@wordpress/url';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { loadAssets } from './load-assets';\r\nimport getPluginUrl from './utils/get-plugin-url';\r\n\r\n/**\r\n * Returns an action object used in signalling that the downloadable blocks\r\n * have been requested and are loading.\r\n *\r\n * @param {string} filterValue Search string.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function fetchDownloadableBlocks( filterValue ) {\r\n\treturn { type: 'FETCH_DOWNLOADABLE_BLOCKS', filterValue };\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that the downloadable blocks\r\n * have been updated.\r\n *\r\n * @param {Array}  downloadableBlocks Downloadable blocks.\r\n * @param {string} filterValue        Search string.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function receiveDownloadableBlocks( downloadableBlocks, filterValue ) {\r\n\treturn {\r\n\t\ttype: 'RECEIVE_DOWNLOADABLE_BLOCKS',\r\n\t\tdownloadableBlocks,\r\n\t\tfilterValue,\r\n\t};\r\n}\r\n\r\n/**\r\n * Action triggered to install a block plugin.\r\n *\r\n * @param {Object} block The block item returned by search.\r\n *\r\n * @return {boolean} Whether the block was successfully installed & loaded.\r\n */\r\nexport const installBlockType =\r\n\t( block ) =>\r\n\tasync ( { registry, dispatch } ) => {\r\n\t\tconst { id, name } = block;\r\n\t\tlet success = false;\r\n\t\tdispatch.clearErrorNotice( id );\r\n\t\ttry {\r\n\t\t\tdispatch.setIsInstalling( id, true );\r\n\r\n\t\t\t// If we have a wp:plugin link, the plugin is installed but inactive.\r\n\t\t\tconst url = getPluginUrl( block );\r\n\t\t\tlet links = {};\r\n\t\t\tif ( url ) {\r\n\t\t\t\tawait apiFetch( {\r\n\t\t\t\t\tmethod: 'PUT',\r\n\t\t\t\t\turl,\r\n\t\t\t\t\tdata: { status: 'active' },\r\n\t\t\t\t} );\r\n\t\t\t} else {\r\n\t\t\t\tconst response = await apiFetch( {\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tpath: 'wp/v2/plugins',\r\n\t\t\t\t\tdata: { slug: id, status: 'active' },\r\n\t\t\t\t} );\r\n\t\t\t\t// Add the `self` link for newly-installed blocks.\r\n\t\t\t\tlinks = response._links;\r\n\t\t\t}\r\n\r\n\t\t\tdispatch.addInstalledBlockType( {\r\n\t\t\t\t...block,\r\n\t\t\t\tlinks: { ...block.links, ...links },\r\n\t\t\t} );\r\n\r\n\t\t\t// Ensures that the block metadata is propagated to the editor when registered on the server.\r\n\t\t\tconst metadataFields = [\r\n\t\t\t\t'api_version',\r\n\t\t\t\t'title',\r\n\t\t\t\t'category',\r\n\t\t\t\t'parent',\r\n\t\t\t\t'icon',\r\n\t\t\t\t'description',\r\n\t\t\t\t'keywords',\r\n\t\t\t\t'attributes',\r\n\t\t\t\t'provides_context',\r\n\t\t\t\t'uses_context',\r\n\t\t\t\t'supports',\r\n\t\t\t\t'styles',\r\n\t\t\t\t'example',\r\n\t\t\t\t'variations',\r\n\t\t\t];\r\n\t\t\tawait apiFetch( {\r\n\t\t\t\tpath: addQueryArgs( `/wp/v2/block-types/${ name }`, {\r\n\t\t\t\t\t_fields: metadataFields,\r\n\t\t\t\t} ),\r\n\t\t\t} )\r\n\t\t\t\t// Ignore when the block is not registered on the server.\r\n\t\t\t\t.catch( () => {} )\r\n\t\t\t\t.then( ( response ) => {\r\n\t\t\t\t\tif ( ! response ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tunstable__bootstrapServerSideBlockDefinitions( {\r\n\t\t\t\t\t\t[ name ]: Object.fromEntries(\r\n\t\t\t\t\t\t\tObject.entries( response ).filter( ( [ key ] ) =>\r\n\t\t\t\t\t\t\t\tmetadataFields.includes( key )\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t} );\r\n\t\t\t\t} );\r\n\r\n\t\t\tawait loadAssets();\r\n\t\t\tconst registeredBlocks = registry\r\n\t\t\t\t.select( blocksStore )\r\n\t\t\t\t.getBlockTypes();\r\n\t\t\tif ( ! registeredBlocks.some( ( i ) => i.name === name ) ) {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t__( 'Error registering block. Try reloading the page.' )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tregistry.dispatch( noticesStore ).createInfoNotice(\r\n\t\t\t\tsprintf(\r\n\t\t\t\t\t// translators: %s is the block title.\r\n\t\t\t\t\t__( 'Block %s installed and added.' ),\r\n\t\t\t\t\tblock.title\r\n\t\t\t\t),\r\n\t\t\t\t{\r\n\t\t\t\t\tspeak: true,\r\n\t\t\t\t\ttype: 'snackbar',\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tsuccess = true;\r\n\t\t} catch ( error ) {\r\n\t\t\tlet message = error.message || __( 'An error occurred.' );\r\n\r\n\t\t\t// Errors we throw are fatal.\r\n\t\t\tlet isFatal = error instanceof Error;\r\n\r\n\t\t\t// Specific API errors that are fatal.\r\n\t\t\tconst fatalAPIErrors = {\r\n\t\t\t\tfolder_exists: __(\r\n\t\t\t\t\t'This block is already installed. Try reloading the page.'\r\n\t\t\t\t),\r\n\t\t\t\tunable_to_connect_to_filesystem: __(\r\n\t\t\t\t\t'Error installing block. You can reload the page and try again.'\r\n\t\t\t\t),\r\n\t\t\t};\r\n\r\n\t\t\tif ( fatalAPIErrors[ error.code ] ) {\r\n\t\t\t\tisFatal = true;\r\n\t\t\t\tmessage = fatalAPIErrors[ error.code ];\r\n\t\t\t}\r\n\r\n\t\t\tdispatch.setErrorNotice( id, message, isFatal );\r\n\t\t\tregistry.dispatch( noticesStore ).createErrorNotice( message, {\r\n\t\t\t\tspeak: true,\r\n\t\t\t\tisDismissible: true,\r\n\t\t\t} );\r\n\t\t}\r\n\t\tdispatch.setIsInstalling( id, false );\r\n\t\treturn success;\r\n\t};\r\n\r\n/**\r\n * Action triggered to uninstall a block plugin.\r\n *\r\n * @param {Object} block The blockType object.\r\n */\r\nexport const uninstallBlockType =\r\n\t( block ) =>\r\n\tasync ( { registry, dispatch } ) => {\r\n\t\ttry {\r\n\t\t\tconst url = getPluginUrl( block );\r\n\t\t\tawait apiFetch( {\r\n\t\t\t\tmethod: 'PUT',\r\n\t\t\t\turl,\r\n\t\t\t\tdata: { status: 'inactive' },\r\n\t\t\t} );\r\n\t\t\tawait apiFetch( {\r\n\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\turl,\r\n\t\t\t} );\r\n\t\t\tdispatch.removeInstalledBlockType( block );\r\n\t\t} catch ( error ) {\r\n\t\t\tregistry\r\n\t\t\t\t.dispatch( noticesStore )\r\n\t\t\t\t.createErrorNotice(\r\n\t\t\t\t\terror.message || __( 'An error occurred.' )\r\n\t\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n/**\r\n * Returns an action object used to add a block type to the \"newly installed\"\r\n * tracking list.\r\n *\r\n * @param {Object} item The block item with the block id and name.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function addInstalledBlockType( item ) {\r\n\treturn {\r\n\t\ttype: 'ADD_INSTALLED_BLOCK_TYPE',\r\n\t\titem,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used to remove a block type from the \"newly installed\"\r\n * tracking list.\r\n *\r\n * @param {string} item The block item with the block id and name.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function removeInstalledBlockType( item ) {\r\n\treturn {\r\n\t\ttype: 'REMOVE_INSTALLED_BLOCK_TYPE',\r\n\t\titem,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used to indicate install in progress.\r\n *\r\n * @param {string}  blockId\r\n * @param {boolean} isInstalling\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function setIsInstalling( blockId, isInstalling ) {\r\n\treturn {\r\n\t\ttype: 'SET_INSTALLING_BLOCK',\r\n\t\tblockId,\r\n\t\tisInstalling,\r\n\t};\r\n}\r\n\r\n/**\r\n * Sets an error notice to be displayed to the user for a given block.\r\n *\r\n * @param {string}  blockId The ID of the block plugin. eg: my-block\r\n * @param {string}  message The message shown in the notice.\r\n * @param {boolean} isFatal Whether the user can recover from the error.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function setErrorNotice( blockId, message, isFatal = false ) {\r\n\treturn {\r\n\t\ttype: 'SET_ERROR_NOTICE',\r\n\t\tblockId,\r\n\t\tmessage,\r\n\t\tisFatal,\r\n\t};\r\n}\r\n\r\n/**\r\n * Sets the error notice to empty for specific block.\r\n *\r\n * @param {string} blockId The ID of the block plugin. eg: my-block\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function clearErrorNotice( blockId ) {\r\n\treturn {\r\n\t\ttype: 'CLEAR_ERROR_NOTICE',\r\n\t\tblockId,\r\n\t};\r\n}\r\n"],"mappings":"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","ignoreList":[]}