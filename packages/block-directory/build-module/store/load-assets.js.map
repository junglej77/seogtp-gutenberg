{"version":3,"names":["apiFetch","loadAsset","el","Promise","resolve","reject","newNode","document","createElement","nodeName","forEach","attr","innerHTML","appendChild","createTextNode","onload","onerror","Error","body","toLowerCase","src","loadAssets","response","url","location","href","parse","data","text","doc","window","DOMParser","parseFromString","newAssets","Array","from","querySelectorAll","filter","asset","id","getElementById","newAsset"],"sources":["@wordpress/block-directory/src/store/load-assets.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport apiFetch from '@wordpress/api-fetch';\r\n\r\n/**\r\n * Load an asset for a block.\r\n *\r\n * This function returns a Promise that will resolve once the asset is loaded,\r\n * or in the case of Stylesheets and Inline JavaScript, will resolve immediately.\r\n *\r\n * @param {HTMLElement} el A HTML Element asset to inject.\r\n *\r\n * @return {Promise} Promise which will resolve when the asset is loaded.\r\n */\r\nexport const loadAsset = ( el ) => {\r\n\treturn new Promise( ( resolve, reject ) => {\r\n\t\t/*\r\n\t\t * Reconstruct the passed element, this is required as inserting the Node directly\r\n\t\t * won't always fire the required onload events, even if the asset wasn't already loaded.\r\n\t\t */\r\n\t\tconst newNode = document.createElement( el.nodeName );\r\n\r\n\t\t[ 'id', 'rel', 'src', 'href', 'type' ].forEach( ( attr ) => {\r\n\t\t\tif ( el[ attr ] ) {\r\n\t\t\t\tnewNode[ attr ] = el[ attr ];\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Append inline <script> contents.\r\n\t\tif ( el.innerHTML ) {\r\n\t\t\tnewNode.appendChild( document.createTextNode( el.innerHTML ) );\r\n\t\t}\r\n\r\n\t\tnewNode.onload = () => resolve( true );\r\n\t\tnewNode.onerror = () => reject( new Error( 'Error loading asset.' ) );\r\n\r\n\t\tdocument.body.appendChild( newNode );\r\n\r\n\t\t// Resolve Stylesheets and Inline JavaScript immediately.\r\n\t\tif (\r\n\t\t\t'link' === newNode.nodeName.toLowerCase() ||\r\n\t\t\t( 'script' === newNode.nodeName.toLowerCase() && ! newNode.src )\r\n\t\t) {\r\n\t\t\tresolve();\r\n\t\t}\r\n\t} );\r\n};\r\n\r\n/**\r\n * Load the asset files for a block\r\n */\r\nexport async function loadAssets() {\r\n\t/*\r\n\t * Fetch the current URL (post-new.php, or post.php?post=1&action=edit) and compare the\r\n\t * JavaScript and CSS assets loaded between the pages. This imports the required assets\r\n\t * for the block into the current page while not requiring that we know them up-front.\r\n\t * In the future this can be improved by reliance upon block.json and/or a script-loader\r\n\t * dependency API.\r\n\t */\r\n\tconst response = await apiFetch( {\r\n\t\turl: document.location.href,\r\n\t\tparse: false,\r\n\t} );\r\n\r\n\tconst data = await response.text();\r\n\r\n\tconst doc = new window.DOMParser().parseFromString( data, 'text/html' );\r\n\r\n\tconst newAssets = Array.from(\r\n\t\tdoc.querySelectorAll( 'link[rel=\"stylesheet\"],script' )\r\n\t).filter( ( asset ) => asset.id && ! document.getElementById( asset.id ) );\r\n\r\n\t/*\r\n\t * Load each asset in order, as they may depend upon an earlier loaded script.\r\n\t * Stylesheets and Inline Scripts will resolve immediately upon insertion.\r\n\t */\r\n\tfor ( const newAsset of newAssets ) {\r\n\t\tawait loadAsset( newAsset );\r\n\t}\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,QAAQ,MAAM,sBAAsB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,GAAKC,EAAE,IAAM;EAClC,OAAO,IAAIC,OAAO,CAAE,CAAEC,OAAO,EAAEC,MAAM,KAAM;IAC1C;AACF;AACA;AACA;IACE,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAEN,EAAE,CAACO,QAAS,CAAC;IAErD,CAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAE,CAACC,OAAO,CAAIC,IAAI,IAAM;MAC3D,IAAKT,EAAE,CAAES,IAAI,CAAE,EAAG;QACjBL,OAAO,CAAEK,IAAI,CAAE,GAAGT,EAAE,CAAES,IAAI,CAAE;MAC7B;IACD,CAAE,CAAC;;IAEH;IACA,IAAKT,EAAE,CAACU,SAAS,EAAG;MACnBN,OAAO,CAACO,WAAW,CAAEN,QAAQ,CAACO,cAAc,CAAEZ,EAAE,CAACU,SAAU,CAAE,CAAC;IAC/D;IAEAN,OAAO,CAACS,MAAM,GAAG,MAAMX,OAAO,CAAE,IAAK,CAAC;IACtCE,OAAO,CAACU,OAAO,GAAG,MAAMX,MAAM,CAAE,IAAIY,KAAK,CAAE,sBAAuB,CAAE,CAAC;IAErEV,QAAQ,CAACW,IAAI,CAACL,WAAW,CAAEP,OAAQ,CAAC;;IAEpC;IACA,IACC,MAAM,KAAKA,OAAO,CAACG,QAAQ,CAACU,WAAW,CAAC,CAAC,IACvC,QAAQ,KAAKb,OAAO,CAACG,QAAQ,CAACU,WAAW,CAAC,CAAC,IAAI,CAAEb,OAAO,CAACc,GAAK,EAC/D;MACDhB,OAAO,CAAC,CAAC;IACV;EACD,CAAE,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA,OAAO,eAAeiB,UAAUA,CAAA,EAAG;EAClC;AACD;AACA;AACA;AACA;AACA;AACA;EACC,MAAMC,QAAQ,GAAG,MAAMtB,QAAQ,CAAE;IAChCuB,GAAG,EAAEhB,QAAQ,CAACiB,QAAQ,CAACC,IAAI;IAC3BC,KAAK,EAAE;EACR,CAAE,CAAC;EAEH,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EAElC,MAAMC,GAAG,GAAG,IAAIC,MAAM,CAACC,SAAS,CAAC,CAAC,CAACC,eAAe,CAAEL,IAAI,EAAE,WAAY,CAAC;EAEvE,MAAMM,SAAS,GAAGC,KAAK,CAACC,IAAI,CAC3BN,GAAG,CAACO,gBAAgB,CAAE,+BAAgC,CACvD,CAAC,CAACC,MAAM,CAAIC,KAAK,IAAMA,KAAK,CAACC,EAAE,IAAI,CAAEhC,QAAQ,CAACiC,cAAc,CAAEF,KAAK,CAACC,EAAG,CAAE,CAAC;;EAE1E;AACD;AACA;AACA;EACC,KAAM,MAAME,QAAQ,IAAIR,SAAS,EAAG;IACnC,MAAMhC,SAAS,CAAEwC,QAAS,CAAC;EAC5B;AACD","ignoreList":[]}