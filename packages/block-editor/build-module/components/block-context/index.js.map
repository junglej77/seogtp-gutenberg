{"version":3,"names":["createContext","useContext","useMemo","jsx","_jsx","Context","BlockContextProvider","value","children","context","nextValue","Provider"],"sources":["@wordpress/block-editor/src/components/block-context/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { createContext, useContext, useMemo } from '@wordpress/element';\r\n\r\n/** @typedef {import('react').ReactNode} ReactNode */\r\n\r\n/**\r\n * @typedef BlockContextProviderProps\r\n *\r\n * @property {Record<string,*>} value    Context value to merge with current\r\n *                                       value.\r\n * @property {ReactNode}        children Component children.\r\n */\r\n\r\n/** @type {import('react').Context<Record<string,*>>} */\r\nconst Context = createContext( {} );\r\n\r\n/**\r\n * Component which merges passed value with current consumed block context.\r\n *\r\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/block-editor/src/components/block-context/README.md\r\n *\r\n * @param {BlockContextProviderProps} props\r\n */\r\nexport function BlockContextProvider( { value, children } ) {\r\n\tconst context = useContext( Context );\r\n\tconst nextValue = useMemo(\r\n\t\t() => ( { ...context, ...value } ),\r\n\t\t[ context, value ]\r\n\t);\r\n\r\n\treturn <Context.Provider value={ nextValue } children={ children } />;\r\n}\r\n\r\nexport default Context;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,aAAa,EAAEC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;;AAEvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AACA,MAAMC,OAAO,GAAGL,aAAa,CAAE,CAAC,CAAE,CAAC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASM,oBAAoBA,CAAE;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAG;EAC3D,MAAMC,OAAO,GAAGR,UAAU,CAAEI,OAAQ,CAAC;EACrC,MAAMK,SAAS,GAAGR,OAAO,CACxB,OAAQ;IAAE,GAAGO,OAAO;IAAE,GAAGF;EAAM,CAAC,CAAE,EAClC,CAAEE,OAAO,EAAEF,KAAK,CACjB,CAAC;EAED,oBAAOH,IAAA,CAACC,OAAO,CAACM,QAAQ;IAACJ,KAAK,EAAGG,SAAW;IAACF,QAAQ,EAAGA;EAAU,CAAE,CAAC;AACtE;AAEA,eAAeH,OAAO","ignoreList":[]}