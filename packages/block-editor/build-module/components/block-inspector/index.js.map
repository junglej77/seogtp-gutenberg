{"version":3,"names":["__","getBlockType","getUnregisteredTypeHandlerName","store","blocksStore","PanelBody","__unstableMotion","motion","useSelect","SkipToSelectedBlock","BlockCard","MultiSelectionInspector","BlockVariationTransforms","useBlockDisplayInformation","blockEditorStore","BlockStyles","InspectorControls","InspectorControlsTabs","useInspectorControlsTabs","PositionControls","useBlockInspectorAnimationSettings","BlockInfo","BlockQuickNavigation","useBorderPanelLabel","unlock","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BlockStylesPanel","clientId","title","children","BlockInspectorLockedBlocks","topLevelLockedBlock","contentClientIds","select","getClientIdsOfDescendants","getBlockName","getBlockEditingMode","filter","console","log","hasBlockStyles","getBlockStyles","length","blockInformation","className","isSynced","Slot","clientIds","BlockInspector","showNoBlockSelectedMessage","count","selectedBlockName","selectedBlockClientId","blockType","getSelectedBlockClientId","getSelectedBlockCount","getContentLockingParent","getTemplateLock","_selectedBlockClientId","_selectedBlockName","_blockType","undefined","availableTabs","name","showTabs","blockInspectorAnimationSettings","borderPanelLabel","blockName","tabs","group","label","isSelectedBlockUnregistered","BlockInspectorSingleBlockWrapper","animate","wrapper","AnimatedContainer","BlockInspectorSingleBlock","animationOrigin","enterDirection","div","x","opacity","transition","ease","duration","initial","blockStyles","blockClientId"],"sources":["D:/jungle/gutenberg/packages/block-editor/src/components/block-inspector/index.js"],"sourcesContent":["import { __ } from '@wordpress/i18n'; // 用于国际化和本地化字符串\r\nimport {\r\n\tgetBlockType,\r\n\tgetUnregisteredTypeHandlerName,\r\n\tstore as blocksStore,\r\n} from '@wordpress/blocks'; // 从blocks库导入函数，用于获取块类型等信息\r\nimport { PanelBody, __unstableMotion as motion } from '@wordpress/components'; // 从components库导入UI组件，PanelBody用于显示一个面板，motion用于动画\r\nimport { useSelect } from '@wordpress/data'; // 从data库导入用于从Redux store中提取数据的钩子\r\n\r\nimport SkipToSelectedBlock from '../skip-to-selected-block'; // 跳转到选中块的组件\r\nimport BlockCard from '../block-card'; // 显示块信息的卡片组件\r\nimport MultiSelectionInspector from '../multi-selection-inspector'; // 多选块检查器组件\r\nimport BlockVariationTransforms from '../block-variation-transforms'; // 块变体转换组件\r\nimport useBlockDisplayInformation from '../use-block-display-information'; // 获取块显示信息的钩子\r\nimport { store as blockEditorStore } from '../../store'; // 引入块编辑器的store\r\nimport BlockStyles from '../block-styles'; // 块样式组件\r\nimport InspectorControls from '../inspector-controls'; // 检查器控件组件\r\nimport InspectorControlsTabs from '../inspector-controls-tabs'; // 检查器控制选项卡组件\r\nimport useInspectorControlsTabs from '../inspector-controls-tabs/use-inspector-controls-tabs'; // 使用检查器控制选项卡的钩子\r\nimport PositionControls from '../inspector-controls-tabs/position-controls-panel'; // 位置控制面板组件\r\nimport useBlockInspectorAnimationSettings from './useBlockInspectorAnimationSettings'; // 使用块检查器动画设置的钩子\r\nimport BlockInfo from '../block-info-slot-fill'; // 块信息插槽填充组件\r\nimport BlockQuickNavigation from '../block-quick-navigation'; // 块快速导航组件\r\nimport { useBorderPanelLabel } from '../../hooks/border'; // 使用边框面板标签的钩子\r\n\r\nimport { unlock } from '../../lock-unlock'; // 解锁函数，可能是一个自定义功能，用于处理权限或解锁特定功能\r\n\r\n// 块样式面板组件，展示块的样式设置\r\nfunction BlockStylesPanel( { clientId } ) {\r\n\treturn (\r\n\t\t<PanelBody title={ __( 'Styles' ) }>\r\n\t\t\t<BlockStyles clientId={ clientId } />\r\n\t\t</PanelBody>\r\n\t);\r\n}\r\n/**\r\n * 锁定块的检查器逻辑\r\n * topLevelLockedBlock: 这是传递给组件的参数，表示当前被锁定或作为顶层块的块的ID。这通常指的是用户不能自由编辑的块（例如模板中的某些块）。\r\n */\r\nfunction BlockInspectorLockedBlocks( { topLevelLockedBlock } ) {\r\n\t/**\r\n\t * getClientIdsOfDescendants: 从存储中获取特定块的所有子块的ID。\r\n\t * getBlockName: 获取块ID对应的块类型名称。\r\n\t * getBlockEditingMode: 获取块的编辑模式，这里特别检查模式是否为contentOnly，这通常意味着块是纯内容块，不应该有其他复杂的布局或样式控制。\r\n\t * contentClientIds: 这个变量存储所有满足条件（非列表项且仅内容模式）的子块ID的数组。\r\n\t */\r\n\tconst contentClientIds = useSelect(\r\n\t\t( select ) => {\r\n\t\t\tconst {\r\n\t\t\t\tgetClientIdsOfDescendants,\r\n\t\t\t\tgetBlockName,\r\n\t\t\t\tgetBlockEditingMode,\r\n\t\t\t} = select( blockEditorStore );\r\n\t\t\treturn getClientIdsOfDescendants( topLevelLockedBlock ).filter(\r\n\t\t\t\t( clientId ) =>\r\n\t\t\t\t\tgetBlockName( clientId ) !== 'core/list-item' &&\r\n\t\t\t\t\tgetBlockEditingMode( clientId ) === 'contentOnly'\r\n\t\t\t);\r\n\t\t},\r\n\t\t[ topLevelLockedBlock ]\r\n\t);\r\n\tconsole.log('contentClientIds',contentClientIds);\r\n\t\r\n\t/**\r\n\t * getBlockStyles: 从存储中获取块的样式选项，通常这些是预定义的样式变体。\r\n\t * hasBlockStyles: 如果顶层锁定块有任何样式变体，此变量为 true。\r\n\t */\r\n\tconst hasBlockStyles = useSelect(\r\n\t\t( select ) => {\r\n\t\t\tconst { getBlockName } = select( blockEditorStore );\r\n\t\t\tconst { getBlockStyles } = select( blocksStore );\r\n\t\t\treturn !! getBlockStyles( getBlockName( topLevelLockedBlock ) )\r\n\t\t\t\t?.length;\r\n\t\t},\r\n\t\t[ topLevelLockedBlock ]\r\n\t);\r\n\t/**\r\n\t * useBlockDisplayInformation: 一个钩子，用于获取块的显示信息，如标题和图标。\r\n\t * BlockCard: 一个组件，显示块的基本信息，如标题和图标。\r\n\t * BlockInfo.Slot: 一个插槽，用于插入额外的块信息。\r\n\t * BlockStylesPanel: 如果块有样式选项，这个组件会显示样式选择面板。\r\n\t * PanelBody: 显示一个面板，这里用于包装“Content”标题下的内容。\r\n\t * BlockQuickNavigation: 提供一个快速导航界面，允许用户在子块之间快速切换。\r\n\t */\r\n\tconst blockInformation = useBlockDisplayInformation( topLevelLockedBlock );\r\n\treturn (\r\n\t\t<div className=\"block-editor-block-inspector\">\r\n\t\t\t<BlockCard\r\n\t\t\t\t{ ...blockInformation }\r\n\t\t\t\tclassName={ blockInformation.isSynced && 'is-synced' }\r\n\t\t\t/>\r\n\t\t\t<BlockInfo.Slot />\r\n\t\t\t{ hasBlockStyles && (\r\n\t\t\t\t<BlockStylesPanel clientId={ topLevelLockedBlock } />\r\n\t\t\t) }\r\n\t\t\t{ contentClientIds.length > 0 && (\r\n\t\t\t\t<PanelBody title={ __( 'Content' ) }>\r\n\t\t\t\t\t<BlockQuickNavigation clientIds={ contentClientIds } />\r\n\t\t\t\t</PanelBody>\r\n\t\t\t) }\r\n\t\t</div>\r\n\t);\r\n}\r\n// 主块检查器组件，根据选中块的情况显示不同的检查器内容\r\nconst BlockInspector = ( { showNoBlockSelectedMessage = true } ) => {\r\n\tconst {\r\n\t\tcount,\r\n\t\tselectedBlockName,\r\n\t\tselectedBlockClientId,\r\n\t\tblockType,\r\n\t\ttopLevelLockedBlock,\r\n\t} = useSelect( ( select ) => {\r\n\t\tconst {\r\n\t\t\tgetSelectedBlockClientId,\r\n\t\t\tgetSelectedBlockCount,\r\n\t\t\tgetBlockName,\r\n\t\t\tgetContentLockingParent,\r\n\t\t\tgetTemplateLock,\r\n\t\t} = unlock( select( blockEditorStore ) );\r\n\t\tconst _selectedBlockClientId = getSelectedBlockClientId();\r\n\t\tconst _selectedBlockName =\r\n\t\t\t_selectedBlockClientId && getBlockName( _selectedBlockClientId );\r\n\t\tconst _blockType =\r\n\t\t\t_selectedBlockName && getBlockType( _selectedBlockName );\r\n\r\n\t\treturn {\r\n\t\t\tcount: getSelectedBlockCount(),\r\n\t\t\tselectedBlockClientId: _selectedBlockClientId,\r\n\t\t\tselectedBlockName: _selectedBlockName,\r\n\t\t\tblockType: _blockType,\r\n\t\t\ttopLevelLockedBlock:\r\n\t\t\t\tgetContentLockingParent( _selectedBlockClientId ) ||\r\n\t\t\t\t( getTemplateLock( _selectedBlockClientId ) === 'contentOnly' ||\r\n\t\t\t\t_selectedBlockName === 'core/block'\r\n\t\t\t\t\t? _selectedBlockClientId\r\n\t\t\t\t\t: undefined ),\r\n\t\t};\r\n\t}, [] );\r\n\tconsole.log('blockType',blockType);\r\n\tconst availableTabs = useInspectorControlsTabs( blockType?.name );\r\n\tconsole.log('availableTabs',availableTabs);\r\n\tconst showTabs = availableTabs?.length > 1;\r\n\r\n\t// The block inspector animation settings will be completely\r\n\t// removed in the future to create an API which allows the block\r\n\t// inspector to transition between what it\r\n\t// displays based on the relationship between the selected block\r\n\t// and its parent, and only enable it if the parent is controlling\r\n\t// its children blocks.\r\n\tconst blockInspectorAnimationSettings =\r\n\t\tuseBlockInspectorAnimationSettings( blockType );\r\n\r\n\tconst borderPanelLabel = useBorderPanelLabel( {\r\n\t\tblockName: selectedBlockName,\r\n\t} );\r\n\r\n\tif ( count > 1 ) {\r\n\t\treturn (\r\n\t\t\t<div className=\"block-editor-block-inspector\">\r\n\t\t\t\t<MultiSelectionInspector />\r\n\t\t\t\t{ showTabs ? (\r\n\t\t\t\t\t<InspectorControlsTabs tabs={ availableTabs } />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<InspectorControls.Slot />\r\n\t\t\t\t\t\t<InspectorControls.Slot\r\n\t\t\t\t\t\t\tgroup=\"color\"\r\n\t\t\t\t\t\t\tlabel={ __( 'Color' ) }\r\n\t\t\t\t\t\t\tclassName=\"color-block-support-panel__inner-wrapper\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InspectorControls.Slot\r\n\t\t\t\t\t\t\tgroup=\"background\"\r\n\t\t\t\t\t\t\tlabel={ __( 'Background image' ) }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InspectorControls.Slot\r\n\t\t\t\t\t\t\tgroup=\"typography\"\r\n\t\t\t\t\t\t\tlabel={ __( 'Typography' ) }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InspectorControls.Slot\r\n\t\t\t\t\t\t\tgroup=\"dimensions\"\r\n\t\t\t\t\t\t\tlabel={ __( 'Dimensions' ) }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InspectorControls.Slot\r\n\t\t\t\t\t\t\tgroup=\"border\"\r\n\t\t\t\t\t\t\tlabel={ borderPanelLabel }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InspectorControls.Slot group=\"styles\" />\r\n\t\t\t\t\t</>\r\n\t\t\t\t) }\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tconst isSelectedBlockUnregistered =\r\n\t\tselectedBlockName === getUnregisteredTypeHandlerName();\r\n\r\n\t/*\r\n\t * If the selected block is of an unregistered type, avoid showing it as an actual selection\r\n\t * because we want the user to focus on the unregistered block warning, not block settings.\r\n\t */\r\n\tif (\r\n\t\t! blockType ||\r\n\t\t! selectedBlockClientId ||\r\n\t\tisSelectedBlockUnregistered\r\n\t) {\r\n\t\tif ( showNoBlockSelectedMessage ) {\r\n\t\t\treturn (\r\n\t\t\t\t<span className=\"block-editor-block-inspector__no-blocks\">\r\n\t\t\t\t\t{ __( '没有选择块' ) }\r\n\t\t\t\t</span>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tconsole.log(topLevelLockedBlock);\r\n\tif ( topLevelLockedBlock ) {\r\n\t\treturn (\r\n\t\t\t<BlockInspectorLockedBlocks\r\n\t\t\t\ttopLevelLockedBlock={ topLevelLockedBlock }\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\tconsole.log('打印单个设置');\r\n\treturn (\r\n\t\t<BlockInspectorSingleBlockWrapper\r\n\t\t\tanimate={ blockInspectorAnimationSettings }\r\n\t\t\twrapper={ ( children ) => (\r\n\t\t\t\t<AnimatedContainer\r\n\t\t\t\t\tblockInspectorAnimationSettings={\r\n\t\t\t\t\t\tblockInspectorAnimationSettings\r\n\t\t\t\t\t}\r\n\t\t\t\t\tselectedBlockClientId={ selectedBlockClientId }\r\n\t\t\t\t>\r\n\t\t\t\t\t{ children }\r\n\t\t\t\t</AnimatedContainer>\r\n\t\t\t) }\r\n\t\t>\r\n\t\t\t<BlockInspectorSingleBlock\r\n\t\t\t\tclientId={ selectedBlockClientId }\r\n\t\t\t\tblockName={ blockType.name }\r\n\t\t\t/>\r\n\t\t</BlockInspectorSingleBlockWrapper>\r\n\t);\r\n};\r\n/**\r\n * 功能: 这个组件用作条件性容器，它决定是否对包含的内容（通常是块检查器的细节部分）应用额外的包装逻辑。\r\n\t用途: 如果 animate 属性为 true，则通过 wrapper 函数添加动画或其他包装逻辑。这主要用于动画效果，提升用户体验。\r\n\t使用场景: 在需要根据某些条件（例如，动画开关或配置）动态包装块检查器内容时使用。\r\n */\r\nconst BlockInspectorSingleBlockWrapper = ( { animate, wrapper, children } ) => {\r\n\treturn animate ? wrapper( children ) : children;\r\n};\r\n/**\r\n * 功能: 该组件使用 motion.div（来自 Framer Motion 库）为其子组件提供动画效果。动画的起始位置和透明度根据 blockInspectorAnimationSettings 动态设置。\r\n\t用途: 主要用于增强用户界面的视觉体验，通过平滑的动画过渡显示选中的块的检查器内容。\r\n\t使用场景: 当块被选中并且用户配置了动画效果时，此容器用于渲染块检查器的主体内容。\r\n */\r\nconst AnimatedContainer = ( {\r\n\tblockInspectorAnimationSettings,\r\n\tselectedBlockClientId,\r\n\tchildren,\r\n} ) => {\r\n\tconst animationOrigin =\r\n\t\tblockInspectorAnimationSettings &&\r\n\t\tblockInspectorAnimationSettings.enterDirection === 'leftToRight'\r\n\t\t\t? -50\r\n\t\t\t: 50;\r\n\r\n\treturn (\r\n\t\t<motion.div\r\n\t\t\tanimate={ {\r\n\t\t\t\tx: 0,\r\n\t\t\t\topacity: 1,\r\n\t\t\t\ttransition: {\r\n\t\t\t\t\tease: 'easeInOut',\r\n\t\t\t\t\tduration: 0.14,\r\n\t\t\t\t},\r\n\t\t\t} }\r\n\t\t\tinitial={ {\r\n\t\t\t\tx: animationOrigin,\r\n\t\t\t\topacity: 0,\r\n\t\t\t} }\r\n\t\t\tkey={ selectedBlockClientId }\r\n\t\t>\r\n\t\t\t{ children }\r\n\t\t</motion.div>\r\n\t);\r\n};\r\n/**\r\n * 功能: 该组件用于展示选中块的详细信息和可用控制选项。\r\n\t用途: 根据块名称加载相应的控制选项卡，显示块的样式、颜色、背景等设置。\r\n\t使用场景: 用于单块检查器视图，当只有一个块被选中时，此组件负责渲染所有相关的控制面板和设置。\r\n */\r\nconst BlockInspectorSingleBlock = ( { clientId, blockName } ) => {\r\n\tconst availableTabs = useInspectorControlsTabs( blockName );\r\n\tconst showTabs = availableTabs?.length > 1;\r\n\tconsole.log('showTabs',showTabs);\r\n\t\r\n\tconst hasBlockStyles = useSelect(\r\n\t\t( select ) => {\r\n\t\t\tconst { getBlockStyles } = select( blocksStore );\r\n\t\t\tconst blockStyles = getBlockStyles( blockName );\r\n\t\t\treturn blockStyles && blockStyles.length > 0;\r\n\t\t},\r\n\t\t[ blockName ]\r\n\t);\r\n\tconsole.log('hasBlockStyles',hasBlockStyles);\r\n\r\n\tconst blockInformation = useBlockDisplayInformation( clientId );\r\n\tconst borderPanelLabel = useBorderPanelLabel( { blockName } );\r\n\r\n\treturn (\r\n\t\t<div className=\"block-editor-block-inspector\">\r\n\t\t\t<BlockCard\r\n\t\t\t\t{ ...blockInformation }\r\n\t\t\t\tclassName={ blockInformation.isSynced && 'is-synced' }\r\n\t\t\t/>\r\n\t\t\t<BlockVariationTransforms blockClientId={ clientId } />\r\n\t\t\t<BlockInfo.Slot />\r\n\t\t\t{ showTabs && (\r\n\t\t\t\t<InspectorControlsTabs\r\n\t\t\t\t\thasBlockStyles={ hasBlockStyles }\r\n\t\t\t\t\tclientId={ clientId }\r\n\t\t\t\t\tblockName={ blockName }\r\n\t\t\t\t\ttabs={ availableTabs }\r\n\t\t\t\t/>\r\n\t\t\t) }\r\n\t\t\t{ ! showTabs && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{ hasBlockStyles && (\r\n\t\t\t\t\t\t<BlockStylesPanel clientId={ clientId } />\r\n\t\t\t\t\t) }\r\n\t\t\t\t\t<InspectorControls.Slot />\r\n\t\t\t\t\t<InspectorControls.Slot group=\"list\" />\r\n\t\t\t\t\t<InspectorControls.Slot\r\n\t\t\t\t\t\tgroup=\"color\"\r\n\t\t\t\t\t\tlabel={ __( 'Color' ) }\r\n\t\t\t\t\t\tclassName=\"color-block-support-panel__inner-wrapper\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InspectorControls.Slot\r\n\t\t\t\t\t\tgroup=\"background\"\r\n\t\t\t\t\t\tlabel={ __( 'Background image' ) }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InspectorControls.Slot\r\n\t\t\t\t\t\tgroup=\"typography\"\r\n\t\t\t\t\t\tlabel={ __( 'Typography' ) }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InspectorControls.Slot\r\n\t\t\t\t\t\tgroup=\"dimensions\"\r\n\t\t\t\t\t\tlabel={ __( 'Dimensions' ) }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InspectorControls.Slot\r\n\t\t\t\t\t\tgroup=\"border\"\r\n\t\t\t\t\t\tlabel={ borderPanelLabel }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<InspectorControls.Slot group=\"styles\" />\r\n\t\t\t\t\t<PositionControls />\r\n\t\t\t\t\t<InspectorControls.Slot group=\"bindings\" />\r\n\t\t\t\t</>\r\n\t\t\t) }\r\n\t\t\t<SkipToSelectedBlock key=\"back\" />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n/**\r\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/block-editor/src/components/block-inspector/README.md\r\n */\r\nexport default BlockInspector;\r\n"],"mappings":"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","ignoreList":[]}