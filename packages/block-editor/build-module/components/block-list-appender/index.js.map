{"version":3,"names":["clsx","useSelect","getDefaultBlockName","DefaultBlockAppender","ButtonBlockAppender","store","blockEditorStore","jsx","_jsx","DefaultAppender","rootClientId","canInsertDefaultBlock","select","canInsertBlockType","className","BlockListAppender","CustomAppender","tagName","TagName","isDragOver","getBlockInsertionPoint","isBlockInsertionPointVisible","getBlockCount","insertionPoint","tabIndex","contentEditable","children"],"sources":["@wordpress/block-editor/src/components/block-list-appender/index.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { useSelect } from '@wordpress/data';\r\nimport { getDefaultBlockName } from '@wordpress/blocks';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport DefaultBlockAppender from '../default-block-appender';\r\nimport ButtonBlockAppender from '../button-block-appender';\r\nimport { store as blockEditorStore } from '../../store';\r\n\r\nfunction DefaultAppender( { rootClientId } ) {\r\n\tconst canInsertDefaultBlock = useSelect( ( select ) =>\r\n\t\tselect( blockEditorStore ).canInsertBlockType(\r\n\t\t\tgetDefaultBlockName(),\r\n\t\t\trootClientId\r\n\t\t)\r\n\t);\r\n\r\n\tif ( canInsertDefaultBlock ) {\r\n\t\t// Render the default block appender if the context supports use\r\n\t\t// of the default appender.\r\n\t\treturn <DefaultBlockAppender rootClientId={ rootClientId } />;\r\n\t}\r\n\r\n\t// Fallback in case the default block can't be inserted.\r\n\treturn (\r\n\t\t<ButtonBlockAppender\r\n\t\t\trootClientId={ rootClientId }\r\n\t\t\tclassName=\"block-list-appender__toggle\"\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default function BlockListAppender( {\r\n\trootClientId,\r\n\tCustomAppender,\r\n\tclassName,\r\n\ttagName: TagName = 'div',\r\n} ) {\r\n\tconst isDragOver = useSelect(\r\n\t\t( select ) => {\r\n\t\t\tconst {\r\n\t\t\t\tgetBlockInsertionPoint,\r\n\t\t\t\tisBlockInsertionPointVisible,\r\n\t\t\t\tgetBlockCount,\r\n\t\t\t} = select( blockEditorStore );\r\n\t\t\tconst insertionPoint = getBlockInsertionPoint();\r\n\t\t\t// Ideally we should also check for `isDragging` but currently it\r\n\t\t\t// requires a lot more setup. We can revisit this once we refactor\r\n\t\t\t// the DnD utility hooks.\r\n\t\t\treturn (\r\n\t\t\t\tisBlockInsertionPointVisible() &&\r\n\t\t\t\trootClientId === insertionPoint?.rootClientId &&\r\n\t\t\t\tgetBlockCount( rootClientId ) === 0\r\n\t\t\t);\r\n\t\t},\r\n\t\t[ rootClientId ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<TagName\r\n\t\t\t// A `tabIndex` is used on the wrapping `div` element in order to\r\n\t\t\t// force a focus event to occur when an appender `button` element\r\n\t\t\t// is clicked. In some browsers (Firefox, Safari), button clicks do\r\n\t\t\t// not emit a focus event, which could cause this event to propagate\r\n\t\t\t// unexpectedly. The `tabIndex` ensures that the interaction is\r\n\t\t\t// captured as a focus, without also adding an extra tab stop.\r\n\t\t\t//\r\n\t\t\t// See: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\r\n\t\t\ttabIndex={ -1 }\r\n\t\t\tclassName={ clsx( 'block-list-appender wp-block', className, {\r\n\t\t\t\t'is-drag-over': isDragOver,\r\n\t\t\t} ) }\r\n\t\t\t// Needed in case the whole editor is content editable (for multi\r\n\t\t\t// selection). It fixes an edge case where ArrowDown and ArrowRight\r\n\t\t\t// should collapse the selection to the end of that selection and\r\n\t\t\t// not into the appender.\r\n\t\t\tcontentEditable={ false }\r\n\t\t\t// The appender exists to let you add the first Paragraph before\r\n\t\t\t// any is inserted. To that end, this appender should visually be\r\n\t\t\t// presented as a block. That means theme CSS should style it as if\r\n\t\t\t// it were an empty paragraph block. That means a `wp-block` class to\r\n\t\t\t// ensure the width is correct, and a [data-block] attribute to ensure\r\n\t\t\t// the correct margin is applied, especially for classic themes which\r\n\t\t\t// have commonly targeted that attribute for margins.\r\n\t\t\tdata-block\r\n\t\t>\r\n\t\t\t{ CustomAppender ? (\r\n\t\t\t\t<CustomAppender />\r\n\t\t\t) : (\r\n\t\t\t\t<DefaultAppender rootClientId={ rootClientId } />\r\n\t\t\t) }\r\n\t\t</TagName>\r\n\t);\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;;AAEvB;AACA;AACA;AACA,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,mBAAmB,QAAQ,mBAAmB;;AAEvD;AACA;AACA;AACA,OAAOC,oBAAoB,MAAM,2BAA2B;AAC5D,OAAOC,mBAAmB,MAAM,0BAA0B;AAC1D,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAExD,SAASC,eAAeA,CAAE;EAAEC;AAAa,CAAC,EAAG;EAC5C,MAAMC,qBAAqB,GAAGV,SAAS,CAAIW,MAAM,IAChDA,MAAM,CAAEN,gBAAiB,CAAC,CAACO,kBAAkB,CAC5CX,mBAAmB,CAAC,CAAC,EACrBQ,YACD,CACD,CAAC;EAED,IAAKC,qBAAqB,EAAG;IAC5B;IACA;IACA,oBAAOH,IAAA,CAACL,oBAAoB;MAACO,YAAY,EAAGA;IAAc,CAAE,CAAC;EAC9D;;EAEA;EACA,oBACCF,IAAA,CAACJ,mBAAmB;IACnBM,YAAY,EAAGA,YAAc;IAC7BI,SAAS,EAAC;EAA6B,CACvC,CAAC;AAEJ;AAEA,eAAe,SAASC,iBAAiBA,CAAE;EAC1CL,YAAY;EACZM,cAAc;EACdF,SAAS;EACTG,OAAO,EAAEC,OAAO,GAAG;AACpB,CAAC,EAAG;EACH,MAAMC,UAAU,GAAGlB,SAAS,CACzBW,MAAM,IAAM;IACb,MAAM;MACLQ,sBAAsB;MACtBC,4BAA4B;MAC5BC;IACD,CAAC,GAAGV,MAAM,CAAEN,gBAAiB,CAAC;IAC9B,MAAMiB,cAAc,GAAGH,sBAAsB,CAAC,CAAC;IAC/C;IACA;IACA;IACA,OACCC,4BAA4B,CAAC,CAAC,IAC9BX,YAAY,KAAKa,cAAc,EAAEb,YAAY,IAC7CY,aAAa,CAAEZ,YAAa,CAAC,KAAK,CAAC;EAErC,CAAC,EACD,CAAEA,YAAY,CACf,CAAC;EAED,oBACCF,IAAA,CAACU;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;IACAM,QAAQ,EAAG,CAAC,CAAG;IACfV,SAAS,EAAGd,IAAI,CAAE,8BAA8B,EAAEc,SAAS,EAAE;MAC5D,cAAc,EAAEK;IACjB,CAAE;IACF;IACA;IACA;IACA;IAAA;IACAM,eAAe,EAAG;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;IAAA;IACA,kBAAU;IAAAC,QAAA,EAERV,cAAc,gBACfR,IAAA,CAACQ,cAAc,IAAE,CAAC,gBAElBR,IAAA,CAACC,eAAe;MAACC,YAAY,EAAGA;IAAc,CAAE;EAChD,CACO,CAAC;AAEZ","ignoreList":[]}