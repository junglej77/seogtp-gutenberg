{"version":3,"names":["useSelect","useDispatch","useRefEffect","isInsideRootBlock","store","blockEditorStore","useFocusHandler","clientId","isBlockSelected","selectBlock","selectionChange","node","onFocus","event","parentElement","closest","target","isContentEditable","addEventListener","removeEventListener"],"sources":["@wordpress/block-editor/src/components/block-list/use-block-props/use-focus-handler.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useSelect, useDispatch } from '@wordpress/data';\r\nimport { useRefEffect } from '@wordpress/compose';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { isInsideRootBlock } from '../../../utils/dom';\r\nimport { store as blockEditorStore } from '../../../store';\r\n\r\n/**\r\n * Selects the block if it receives focus.\r\n *\r\n * @param {string} clientId Block client ID.\r\n */\r\nexport function useFocusHandler( clientId ) {\r\n\tconst { isBlockSelected } = useSelect( blockEditorStore );\r\n\tconst { selectBlock, selectionChange } = useDispatch( blockEditorStore );\r\n\r\n\treturn useRefEffect(\r\n\t\t( node ) => {\r\n\t\t\t/**\r\n\t\t\t * Marks the block as selected when focused and not already\r\n\t\t\t * selected. This specifically handles the case where block does not\r\n\t\t\t * set focus on its own (via `setFocus`), typically if there is no\r\n\t\t\t * focusable input in the block.\r\n\t\t\t *\r\n\t\t\t * @param {FocusEvent} event Focus event.\r\n\t\t\t */\r\n\t\t\tfunction onFocus( event ) {\r\n\t\t\t\t// When the whole editor is editable, let writing flow handle\r\n\t\t\t\t// selection.\r\n\t\t\t\tif (\r\n\t\t\t\t\tnode.parentElement.closest( '[contenteditable=\"true\"]' )\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check synchronously because a non-selected block might be\r\n\t\t\t\t// getting data through `useSelect` asynchronously.\r\n\t\t\t\tif ( isBlockSelected( clientId ) ) {\r\n\t\t\t\t\t// Potentially change selection away from rich text.\r\n\t\t\t\t\tif ( ! event.target.isContentEditable ) {\r\n\t\t\t\t\t\tselectionChange( clientId );\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If an inner block is focussed, that block is resposible for\r\n\t\t\t\t// setting the selected block.\r\n\t\t\t\tif ( ! isInsideRootBlock( node, event.target ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tselectBlock( clientId );\r\n\t\t\t}\r\n\r\n\t\t\tnode.addEventListener( 'focusin', onFocus );\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\tnode.removeEventListener( 'focusin', onFocus );\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ isBlockSelected, selectBlock ]\r\n\t);\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,EAAEC,WAAW,QAAQ,iBAAiB;AACxD,SAASC,YAAY,QAAQ,oBAAoB;;AAEjD;AACA;AACA;AACA,SAASC,iBAAiB,QAAQ,oBAAoB;AACtD,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,gBAAgB;;AAE1D;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAAEC,QAAQ,EAAG;EAC3C,MAAM;IAAEC;EAAgB,CAAC,GAAGR,SAAS,CAAEK,gBAAiB,CAAC;EACzD,MAAM;IAAEI,WAAW;IAAEC;EAAgB,CAAC,GAAGT,WAAW,CAAEI,gBAAiB,CAAC;EAExE,OAAOH,YAAY,CAChBS,IAAI,IAAM;IACX;AACH;AACA;AACA;AACA;AACA;AACA;AACA;IACG,SAASC,OAAOA,CAAEC,KAAK,EAAG;MACzB;MACA;MACA,IACCF,IAAI,CAACG,aAAa,CAACC,OAAO,CAAE,0BAA2B,CAAC,EACvD;QACD;MACD;;MAEA;MACA;MACA,IAAKP,eAAe,CAAED,QAAS,CAAC,EAAG;QAClC;QACA,IAAK,CAAEM,KAAK,CAACG,MAAM,CAACC,iBAAiB,EAAG;UACvCP,eAAe,CAAEH,QAAS,CAAC;QAC5B;QACA;MACD;;MAEA;MACA;MACA,IAAK,CAAEJ,iBAAiB,CAAEQ,IAAI,EAAEE,KAAK,CAACG,MAAO,CAAC,EAAG;QAChD;MACD;MAEAP,WAAW,CAAEF,QAAS,CAAC;IACxB;IAEAI,IAAI,CAACO,gBAAgB,CAAE,SAAS,EAAEN,OAAQ,CAAC;IAE3C,OAAO,MAAM;MACZD,IAAI,CAACQ,mBAAmB,CAAE,SAAS,EAAEP,OAAQ,CAAC;IAC/C,CAAC;EACF,CAAC,EACD,CAAEJ,eAAe,EAAEC,WAAW,CAC/B,CAAC;AACF","ignoreList":[]}