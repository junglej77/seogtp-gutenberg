{"version":3,"names":["isTextField","ENTER","BACKSPACE","DELETE","useSelect","useDispatch","useRefEffect","store","blockEditorStore","useEventHandlers","clientId","isSelected","getBlockRootClientId","getBlockIndex","insertAfterBlock","removeBlock","node","onKeyDown","event","keyCode","target","preventDefault","onDragStart","addEventListener","removeEventListener"],"sources":["@wordpress/block-editor/src/components/block-list/use-block-props/use-selected-block-event-handlers.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { isTextField } from '@wordpress/dom';\r\nimport { ENTER, BACKSPACE, DELETE } from '@wordpress/keycodes';\r\nimport { useSelect, useDispatch } from '@wordpress/data';\r\nimport { useRefEffect } from '@wordpress/compose';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as blockEditorStore } from '../../../store';\r\n\r\n/**\r\n * Adds block behaviour:\r\n *   - Removes the block on BACKSPACE.\r\n *   - Inserts a default block on ENTER.\r\n *   - Disables dragging of block contents.\r\n *\r\n * @param {string} clientId Block client ID.\r\n */\r\nexport function useEventHandlers( { clientId, isSelected } ) {\r\n\tconst { getBlockRootClientId, getBlockIndex } =\r\n\t\tuseSelect( blockEditorStore );\r\n\tconst { insertAfterBlock, removeBlock } = useDispatch( blockEditorStore );\r\n\r\n\treturn useRefEffect(\r\n\t\t( node ) => {\r\n\t\t\tif ( ! isSelected ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Interprets keydown event intent to remove or insert after block if\r\n\t\t\t * key event occurs on wrapper node. This can occur when the block has\r\n\t\t\t * no text fields of its own, particularly after initial insertion, to\r\n\t\t\t * allow for easy deletion and continuous writing flow to add additional\r\n\t\t\t * content.\r\n\t\t\t *\r\n\t\t\t * @param {KeyboardEvent} event Keydown event.\r\n\t\t\t */\r\n\t\t\tfunction onKeyDown( event ) {\r\n\t\t\t\tconst { keyCode, target } = event;\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tkeyCode !== ENTER &&\r\n\t\t\t\t\tkeyCode !== BACKSPACE &&\r\n\t\t\t\t\tkeyCode !== DELETE\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( target !== node || isTextField( target ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tif ( keyCode === ENTER ) {\r\n\t\t\t\t\tinsertAfterBlock( clientId );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tremoveBlock( clientId );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Prevents default dragging behavior within a block. To do: we must\r\n\t\t\t * handle this in the future and clean up the drag target.\r\n\t\t\t *\r\n\t\t\t * @param {DragEvent} event Drag event.\r\n\t\t\t */\r\n\t\t\tfunction onDragStart( event ) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\r\n\t\t\tnode.addEventListener( 'keydown', onKeyDown );\r\n\t\t\tnode.addEventListener( 'dragstart', onDragStart );\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\tnode.removeEventListener( 'keydown', onKeyDown );\r\n\t\t\t\tnode.removeEventListener( 'dragstart', onDragStart );\r\n\t\t\t};\r\n\t\t},\r\n\t\t[\r\n\t\t\tclientId,\r\n\t\t\tisSelected,\r\n\t\t\tgetBlockRootClientId,\r\n\t\t\tgetBlockIndex,\r\n\t\t\tinsertAfterBlock,\r\n\t\t\tremoveBlock,\r\n\t\t]\r\n\t);\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,KAAK,EAAEC,SAAS,EAAEC,MAAM,QAAQ,qBAAqB;AAC9D,SAASC,SAAS,EAAEC,WAAW,QAAQ,iBAAiB;AACxD,SAASC,YAAY,QAAQ,oBAAoB;;AAEjD;AACA;AACA;AACA,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,gBAAgB;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAAE;EAAEC,QAAQ;EAAEC;AAAW,CAAC,EAAG;EAC5D,MAAM;IAAEC,oBAAoB;IAAEC;EAAc,CAAC,GAC5CT,SAAS,CAAEI,gBAAiB,CAAC;EAC9B,MAAM;IAAEM,gBAAgB;IAAEC;EAAY,CAAC,GAAGV,WAAW,CAAEG,gBAAiB,CAAC;EAEzE,OAAOF,YAAY,CAChBU,IAAI,IAAM;IACX,IAAK,CAAEL,UAAU,EAAG;MACnB;IACD;;IAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACG,SAASM,SAASA,CAAEC,KAAK,EAAG;MAC3B,MAAM;QAAEC,OAAO;QAAEC;MAAO,CAAC,GAAGF,KAAK;MAEjC,IACCC,OAAO,KAAKlB,KAAK,IACjBkB,OAAO,KAAKjB,SAAS,IACrBiB,OAAO,KAAKhB,MAAM,EACjB;QACD;MACD;MAEA,IAAKiB,MAAM,KAAKJ,IAAI,IAAIhB,WAAW,CAAEoB,MAAO,CAAC,EAAG;QAC/C;MACD;MAEAF,KAAK,CAACG,cAAc,CAAC,CAAC;MAEtB,IAAKF,OAAO,KAAKlB,KAAK,EAAG;QACxBa,gBAAgB,CAAEJ,QAAS,CAAC;MAC7B,CAAC,MAAM;QACNK,WAAW,CAAEL,QAAS,CAAC;MACxB;IACD;;IAEA;AACH;AACA;AACA;AACA;AACA;IACG,SAASY,WAAWA,CAAEJ,KAAK,EAAG;MAC7BA,KAAK,CAACG,cAAc,CAAC,CAAC;IACvB;IAEAL,IAAI,CAACO,gBAAgB,CAAE,SAAS,EAAEN,SAAU,CAAC;IAC7CD,IAAI,CAACO,gBAAgB,CAAE,WAAW,EAAED,WAAY,CAAC;IAEjD,OAAO,MAAM;MACZN,IAAI,CAACQ,mBAAmB,CAAE,SAAS,EAAEP,SAAU,CAAC;MAChDD,IAAI,CAACQ,mBAAmB,CAAE,WAAW,EAAEF,WAAY,CAAC;IACrD,CAAC;EACF,CAAC,EACD,CACCZ,QAAQ,EACRC,UAAU,EACVC,oBAAoB,EACpBC,aAAa,EACbC,gBAAgB,EAChBC,WAAW,CAEb,CAAC;AACF","ignoreList":[]}