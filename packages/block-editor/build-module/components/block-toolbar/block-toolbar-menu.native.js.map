{"version":3,"names":["Platform","findNodeHandle","getClipboard","setClipboard","ToolbarGroup","ToolbarButton","Picker","getBlockType","getDefaultBlockName","hasBlockSupport","serialize","rawHandler","createBlock","isUnmodifiedDefaultBlock","isReusableBlock","__","sprintf","withDispatch","withSelect","useSelect","withInstanceId","compose","moreHorizontalMobile","useRef","useState","store","noticesStore","reusableBlocksStore","coreStore","getMoversSetup","blockEditorStore","BlockTransformationsMenu","useConvertToGroupButtons","useConvertToGroupButtonProps","jsx","_jsx","jsxs","_jsxs","BlockActionsMenu","blockTitle","canInsertBlockType","getBlocksByClientId","isEmptyDefaultBlock","isLocked","canDuplicate","isFirst","isLast","isReusableBlockType","reusableBlock","rootClientId","selectedBlockClientId","selectedBlockPossibleTransformations","createSuccessNotice","convertToRegularBlocks","duplicateBlock","onMoveDown","onMoveUp","openGeneralSidebar","pasteBlock","removeBlocks","anchorNodeRef","isStackedHorizontally","onDelete","wrapBlockMover","wrapBlockSettings","clipboard","setCurrentClipboard","blockActionsMenuPickerRef","blockTransformationMenuPickerRef","moversOptions","keys","clipboardBlock","HTML","isPasteEnabled","name","innerBlockCount","select","getBlockCount","actionTitle","backward","backwardButtonTitle","forward","forwardButtonTitle","convertToGroupButtonProps","isGroupable","isUngroupable","showConvertToGroupButton","convertToGroupButtons","allOptions","settings","id","label","value","onSelect","backwardButton","disabled","forwardButton","delete","separated","transformButton","current","presentPicker","copyButton","serializedBlock","cutButton","pasteButton","onPasteBlock","duplicateButton","successNotice","title","raw","options","length","group","ungroup","filter","Boolean","children","icon","onPickerSelect","selectedItem","find","item","onPickerPresent","disabledButtonIndices","map","option","index","accessibilityHint","OS","getAnchor","undefined","onClick","extraProps","hint","testID","ref","onChange","destructiveButtonIndex","hideCancelButton","leftAlign","pickerRef","possibleTransformations","selectedBlock","EMPTY_BLOCK_LIST","clientId","getBlockIndex","getBlockRootClientId","getBlockOrder","getBlockName","getBlockTransformItems","getBlock","getSelectedBlockClientIds","getTemplateLock","block","blockName","blockType","blockOrder","currentBlockIndex","innerBlocks","every","innerBlock","isDefaultBlock","isEmptyContent","attributes","content","isExactlyOneBlock","getEntityRecord","currentIndex","dispatch","moveBlocksDown","moveBlocksUp","duplicateBlocks","insertBlock","replaceBlock","clearSelectedBlock","getBlockSelectionEnd","__experimentalConvertBlockToStatic","convertBlockToStatic","setImmediate","args","canReplaceBlock","insertedBlock"],"sources":["@wordpress/block-editor/src/components/block-toolbar/block-toolbar-menu.native.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport { Platform, findNodeHandle } from 'react-native';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport {\r\n\tgetClipboard,\r\n\tsetClipboard,\r\n\tToolbarGroup,\r\n\tToolbarButton,\r\n\tPicker,\r\n} from '@wordpress/components';\r\nimport {\r\n\tgetBlockType,\r\n\tgetDefaultBlockName,\r\n\thasBlockSupport,\r\n\tserialize,\r\n\trawHandler,\r\n\tcreateBlock,\r\n\tisUnmodifiedDefaultBlock,\r\n\tisReusableBlock,\r\n} from '@wordpress/blocks';\r\nimport { __, sprintf } from '@wordpress/i18n';\r\nimport { withDispatch, withSelect, useSelect } from '@wordpress/data';\r\nimport { withInstanceId, compose } from '@wordpress/compose';\r\nimport { moreHorizontalMobile } from '@wordpress/icons';\r\nimport { useRef, useState } from '@wordpress/element';\r\nimport { store as noticesStore } from '@wordpress/notices';\r\nimport { store as reusableBlocksStore } from '@wordpress/reusable-blocks';\r\n// Disable Reason: Needs to be refactored.\r\n// eslint-disable-next-line no-restricted-imports\r\nimport { store as coreStore } from '@wordpress/core-data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { getMoversSetup } from '../block-mover/mover-description';\r\nimport { store as blockEditorStore } from '../../store';\r\nimport BlockTransformationsMenu from '../block-switcher/block-transformations-menu';\r\nimport {\r\n\tuseConvertToGroupButtons,\r\n\tuseConvertToGroupButtonProps,\r\n} from '../convert-to-group-buttons';\r\n\r\nconst BlockActionsMenu = ( {\r\n\t// Select.\r\n\tblockTitle,\r\n\tcanInsertBlockType,\r\n\tgetBlocksByClientId,\r\n\tisEmptyDefaultBlock,\r\n\tisLocked,\r\n\tcanDuplicate,\r\n\tisFirst,\r\n\tisLast,\r\n\tisReusableBlockType,\r\n\treusableBlock,\r\n\trootClientId,\r\n\tselectedBlockClientId,\r\n\tselectedBlockPossibleTransformations,\r\n\t// Dispatch.\r\n\tcreateSuccessNotice,\r\n\tconvertToRegularBlocks,\r\n\tduplicateBlock,\r\n\tonMoveDown,\r\n\tonMoveUp,\r\n\topenGeneralSidebar,\r\n\tpasteBlock,\r\n\tremoveBlocks,\r\n\t// Passed in.\r\n\tanchorNodeRef,\r\n\tisStackedHorizontally,\r\n\tonDelete,\r\n\twrapBlockMover,\r\n\twrapBlockSettings,\r\n} ) => {\r\n\tconst [ clipboard, setCurrentClipboard ] = useState( getClipboard() );\r\n\tconst blockActionsMenuPickerRef = useRef();\r\n\tconst blockTransformationMenuPickerRef = useRef();\r\n\tconst moversOptions = { keys: [ 'icon', 'actionTitle' ] };\r\n\tconst clipboardBlock = clipboard && rawHandler( { HTML: clipboard } )[ 0 ];\r\n\tconst isPasteEnabled =\r\n\t\tclipboardBlock &&\r\n\t\tcanInsertBlockType( clipboardBlock.name, rootClientId );\r\n\r\n\tconst innerBlockCount = useSelect(\r\n\t\t( select ) =>\r\n\t\t\tselect( blockEditorStore ).getBlockCount( selectedBlockClientId ),\r\n\t\t[ selectedBlockClientId ]\r\n\t);\r\n\r\n\tconst {\r\n\t\tactionTitle: {\r\n\t\t\tbackward: backwardButtonTitle,\r\n\t\t\tforward: forwardButtonTitle,\r\n\t\t},\r\n\t} = getMoversSetup( isStackedHorizontally, moversOptions );\r\n\r\n\t// Check if selected block is Groupable and/or Ungroupable.\r\n\tconst convertToGroupButtonProps = useConvertToGroupButtonProps(\r\n\t\t// `selectedBlockClientId` can be undefined in some cases where this\r\n\t\t// component gets re-rendered right after the block is removed.\r\n\t\tselectedBlockClientId ? [ selectedBlockClientId ] : []\r\n\t);\r\n\tconst { isGroupable, isUngroupable } = convertToGroupButtonProps;\r\n\tconst showConvertToGroupButton = isGroupable || isUngroupable;\r\n\tconst convertToGroupButtons = useConvertToGroupButtons( {\r\n\t\t...convertToGroupButtonProps,\r\n\t} );\r\n\r\n\tconst allOptions = {\r\n\t\tsettings: {\r\n\t\t\tid: 'settingsOption',\r\n\t\t\tlabel: __( 'Block settings' ),\r\n\t\t\tvalue: 'settingsOption',\r\n\t\t\tonSelect: openGeneralSidebar,\r\n\t\t},\r\n\t\tbackwardButton: {\r\n\t\t\tid: 'backwardButtonOption',\r\n\t\t\tlabel: backwardButtonTitle,\r\n\t\t\tvalue: 'backwardButtonOption',\r\n\t\t\tdisabled: isFirst,\r\n\t\t\tonSelect: onMoveUp,\r\n\t\t},\r\n\t\tforwardButton: {\r\n\t\t\tid: 'forwardButtonOption',\r\n\t\t\tlabel: forwardButtonTitle,\r\n\t\t\tvalue: 'forwardButtonOption',\r\n\t\t\tdisabled: isLast,\r\n\t\t\tonSelect: onMoveDown,\r\n\t\t},\r\n\t\tdelete: {\r\n\t\t\tid: 'deleteOption',\r\n\t\t\tlabel: __( 'Remove block' ),\r\n\t\t\tvalue: 'deleteOption',\r\n\t\t\tseparated: true,\r\n\t\t\tdisabled: isEmptyDefaultBlock,\r\n\t\t\tonSelect: () => {\r\n\t\t\t\tonDelete();\r\n\t\t\t\tcreateSuccessNotice(\r\n\t\t\t\t\t// translators: displayed right after the block is removed.\r\n\t\t\t\t\t__( 'Block removed' )\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\ttransformButton: {\r\n\t\t\tid: 'transformButtonOption',\r\n\t\t\tlabel: __( 'Transform blockâ€¦' ),\r\n\t\t\tvalue: 'transformButtonOption',\r\n\t\t\tonSelect: () => {\r\n\t\t\t\tif ( blockTransformationMenuPickerRef.current ) {\r\n\t\t\t\t\tblockTransformationMenuPickerRef.current.presentPicker();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tcopyButton: {\r\n\t\t\tid: 'copyButtonOption',\r\n\t\t\tlabel: __( 'Copy' ),\r\n\t\t\tvalue: 'copyButtonOption',\r\n\t\t\tonSelect: () => {\r\n\t\t\t\tconst serializedBlock = serialize(\r\n\t\t\t\t\tgetBlocksByClientId( selectedBlockClientId )\r\n\t\t\t\t);\r\n\t\t\t\tsetCurrentClipboard( serializedBlock );\r\n\t\t\t\tsetClipboard( serializedBlock );\r\n\t\t\t\tcreateSuccessNotice(\r\n\t\t\t\t\t// translators: displayed right after the block is copied.\r\n\t\t\t\t\t__( 'Block copied' )\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\tcutButton: {\r\n\t\t\tid: 'cutButtonOption',\r\n\t\t\tlabel: __( 'Cut block' ),\r\n\t\t\tvalue: 'cutButtonOption',\r\n\t\t\tonSelect: () => {\r\n\t\t\t\tsetClipboard(\r\n\t\t\t\t\tserialize( getBlocksByClientId( selectedBlockClientId ) )\r\n\t\t\t\t);\r\n\t\t\t\tremoveBlocks( selectedBlockClientId );\r\n\t\t\t\tcreateSuccessNotice(\r\n\t\t\t\t\t// translators: displayed right after the block is cut.\r\n\t\t\t\t\t__( 'Block cut' )\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\tpasteButton: {\r\n\t\t\tid: 'pasteButtonOption',\r\n\t\t\tlabel: __( 'Paste block after' ),\r\n\t\t\tvalue: 'pasteButtonOption',\r\n\t\t\tonSelect: () => {\r\n\t\t\t\tonPasteBlock();\r\n\t\t\t\tcreateSuccessNotice(\r\n\t\t\t\t\t// translators: displayed right after the block is pasted.\r\n\t\t\t\t\t__( 'Block pasted' )\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\tduplicateButton: {\r\n\t\t\tid: 'duplicateButtonOption',\r\n\t\t\tlabel: __( 'Duplicate block' ),\r\n\t\t\tvalue: 'duplicateButtonOption',\r\n\t\t\tonSelect: () => {\r\n\t\t\t\tduplicateBlock();\r\n\t\t\t\tcreateSuccessNotice(\r\n\t\t\t\t\t// translators: displayed right after the block is duplicated.\r\n\t\t\t\t\t__( 'Block duplicated' )\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t},\r\n\t\tconvertToRegularBlocks: {\r\n\t\t\tid: 'convertToRegularBlocksOption',\r\n\t\t\tlabel: __( 'Detach' ),\r\n\t\t\tvalue: 'convertToRegularBlocksOption',\r\n\t\t\tonSelect: () => {\r\n\t\t\t\t/* translators: %s: name of the synced block */\r\n\t\t\t\tconst successNotice = __( '%s detached' );\r\n\t\t\t\tcreateSuccessNotice(\r\n\t\t\t\t\tsprintf(\r\n\t\t\t\t\t\tsuccessNotice,\r\n\t\t\t\t\t\treusableBlock?.title?.raw || blockTitle\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tconvertToRegularBlocks();\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n\r\n\tconst options = [\r\n\t\twrapBlockMover && allOptions.backwardButton,\r\n\t\twrapBlockMover && allOptions.forwardButton,\r\n\t\twrapBlockSettings && allOptions.settings,\r\n\t\t! isLocked &&\r\n\t\t\tselectedBlockPossibleTransformations.length &&\r\n\t\t\tallOptions.transformButton,\r\n\t\tcanDuplicate && allOptions.copyButton,\r\n\t\tcanDuplicate && allOptions.cutButton,\r\n\t\tcanDuplicate && isPasteEnabled && allOptions.pasteButton,\r\n\t\tcanDuplicate && allOptions.duplicateButton,\r\n\t\tshowConvertToGroupButton && isGroupable && convertToGroupButtons.group,\r\n\t\tshowConvertToGroupButton &&\r\n\t\t\tisUngroupable &&\r\n\t\t\tconvertToGroupButtons.ungroup,\r\n\t\tisReusableBlockType &&\r\n\t\t\tinnerBlockCount > 0 &&\r\n\t\t\tallOptions.convertToRegularBlocks,\r\n\t\t! isLocked && allOptions.delete,\r\n\t].filter( Boolean );\r\n\r\n\t// End early if there are no options to show.\r\n\tif ( ! options.length ) {\r\n\t\treturn (\r\n\t\t\t<ToolbarGroup>\r\n\t\t\t\t<ToolbarButton\r\n\t\t\t\t\ttitle={ __( 'Open Block Actions Menu' ) }\r\n\t\t\t\t\ticon={ moreHorizontalMobile }\r\n\t\t\t\t\tdisabled\r\n\t\t\t\t/>\r\n\t\t\t</ToolbarGroup>\r\n\t\t);\r\n\t}\r\n\r\n\tfunction onPasteBlock() {\r\n\t\tif ( ! clipboard ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tpasteBlock( rawHandler( { HTML: clipboard } )[ 0 ] );\r\n\t}\r\n\r\n\tfunction onPickerSelect( value ) {\r\n\t\tconst selectedItem = options.find( ( item ) => item.value === value );\r\n\t\tselectedItem.onSelect();\r\n\t}\r\n\r\n\tfunction onPickerPresent() {\r\n\t\tif ( blockActionsMenuPickerRef.current ) {\r\n\t\t\tblockActionsMenuPickerRef.current.presentPicker();\r\n\t\t}\r\n\t}\r\n\r\n\tconst disabledButtonIndices = options\r\n\t\t.map( ( option, index ) => option.disabled && index + 1 )\r\n\t\t.filter( Boolean );\r\n\r\n\tconst accessibilityHint =\r\n\t\tPlatform.OS === 'ios'\r\n\t\t\t? __( 'Double tap to open Action Sheet with available options' )\r\n\t\t\t: __( 'Double tap to open Bottom Sheet with available options' );\r\n\r\n\tconst getAnchor = () =>\r\n\t\tanchorNodeRef ? findNodeHandle( anchorNodeRef ) : undefined;\r\n\r\n\treturn (\r\n\t\t<ToolbarGroup>\r\n\t\t\t<ToolbarButton\r\n\t\t\t\ttitle={ __( 'Open Block Actions Menu' ) }\r\n\t\t\t\tonClick={ onPickerPresent }\r\n\t\t\t\ticon={ moreHorizontalMobile }\r\n\t\t\t\textraProps={ {\r\n\t\t\t\t\thint: accessibilityHint,\r\n\t\t\t\t} }\r\n\t\t\t/>\r\n\t\t\t<Picker\r\n\t\t\t\ttestID=\"block-actions-menu\"\r\n\t\t\t\tref={ blockActionsMenuPickerRef }\r\n\t\t\t\toptions={ options }\r\n\t\t\t\tonChange={ onPickerSelect }\r\n\t\t\t\tdestructiveButtonIndex={ options.length }\r\n\t\t\t\tdisabledButtonIndices={ disabledButtonIndices }\r\n\t\t\t\thideCancelButton={ Platform.OS !== 'ios' }\r\n\t\t\t\tleftAlign\r\n\t\t\t\tgetAnchor={ getAnchor }\r\n\t\t\t\t// translators: %s: block title e.g: \"Paragraph\".\r\n\t\t\t\ttitle={ sprintf( __( '%s block options' ), blockTitle ) }\r\n\t\t\t/>\r\n\t\t\t<BlockTransformationsMenu\r\n\t\t\t\tanchorNodeRef={ anchorNodeRef }\r\n\t\t\t\tblockTitle={ blockTitle }\r\n\t\t\t\tpickerRef={ blockTransformationMenuPickerRef }\r\n\t\t\t\tpossibleTransformations={ selectedBlockPossibleTransformations }\r\n\t\t\t\tselectedBlock={ getBlocksByClientId( selectedBlockClientId ) }\r\n\t\t\t\tselectedBlockClientId={ selectedBlockClientId }\r\n\t\t\t/>\r\n\t\t</ToolbarGroup>\r\n\t);\r\n};\r\n\r\nconst EMPTY_BLOCK_LIST = [];\r\n\r\nexport default compose(\r\n\twithSelect( ( select, { clientId } ) => {\r\n\t\tconst {\r\n\t\t\tgetBlockIndex,\r\n\t\t\tgetBlockRootClientId,\r\n\t\t\tgetBlockOrder,\r\n\t\t\tgetBlockName,\r\n\t\t\tgetBlockTransformItems,\r\n\t\t\tgetBlock,\r\n\t\t\tgetBlocksByClientId,\r\n\t\t\tgetSelectedBlockClientIds,\r\n\t\t\tcanInsertBlockType,\r\n\t\t\tgetTemplateLock,\r\n\t\t} = select( blockEditorStore );\r\n\t\tconst block = getBlock( clientId );\r\n\t\tconst blockName = getBlockName( clientId );\r\n\t\tconst blockType = getBlockType( blockName );\r\n\t\tconst blockTitle = blockType?.title;\r\n\t\tconst rootClientId = getBlockRootClientId( clientId );\r\n\t\tconst blockOrder = getBlockOrder( rootClientId );\r\n\r\n\t\tconst currentBlockIndex = getBlockIndex( clientId );\r\n\t\tconst isFirst = currentBlockIndex === 0;\r\n\t\tconst isLast = currentBlockIndex === blockOrder.length - 1;\r\n\r\n\t\tconst innerBlocks = getBlocksByClientId( clientId );\r\n\r\n\t\tconst canDuplicate = innerBlocks.every( ( innerBlock ) => {\r\n\t\t\treturn (\r\n\t\t\t\t!! innerBlock &&\r\n\t\t\t\thasBlockSupport( innerBlock.name, 'multiple', true ) &&\r\n\t\t\t\tcanInsertBlockType( innerBlock.name, rootClientId )\r\n\t\t\t);\r\n\t\t} );\r\n\r\n\t\tconst isDefaultBlock = blockName === getDefaultBlockName();\r\n\t\tconst isEmptyContent = block?.attributes.content === '';\r\n\t\tconst isExactlyOneBlock = blockOrder.length === 1;\r\n\t\tconst isEmptyDefaultBlock =\r\n\t\t\tisExactlyOneBlock && isDefaultBlock && isEmptyContent;\r\n\t\tconst isLocked = !! getTemplateLock( rootClientId );\r\n\r\n\t\tconst selectedBlockClientId = getSelectedBlockClientIds()[ 0 ];\r\n\t\tconst selectedBlock = selectedBlockClientId\r\n\t\t\t? getBlocksByClientId( selectedBlockClientId )[ 0 ]\r\n\t\t\t: undefined;\r\n\t\tconst selectedBlockPossibleTransformations = selectedBlock\r\n\t\t\t? getBlockTransformItems( selectedBlock, rootClientId )\r\n\t\t\t: EMPTY_BLOCK_LIST;\r\n\r\n\t\tconst isReusableBlockType = block ? isReusableBlock( block ) : false;\r\n\t\tconst reusableBlock = isReusableBlockType\r\n\t\t\t? select( coreStore ).getEntityRecord(\r\n\t\t\t\t\t'postType',\r\n\t\t\t\t\t'wp_block',\r\n\t\t\t\t\tblock?.attributes.ref\r\n\t\t\t  )\r\n\t\t\t: undefined;\r\n\r\n\t\treturn {\r\n\t\t\tblockTitle,\r\n\t\t\tcanInsertBlockType,\r\n\t\t\tcurrentIndex: currentBlockIndex,\r\n\t\t\tgetBlocksByClientId,\r\n\t\t\tisEmptyDefaultBlock,\r\n\t\t\tisLocked,\r\n\t\t\tcanDuplicate,\r\n\t\t\tisFirst,\r\n\t\t\tisLast,\r\n\t\t\tisReusableBlockType,\r\n\t\t\treusableBlock,\r\n\t\t\trootClientId,\r\n\t\t\tselectedBlockClientId,\r\n\t\t\tselectedBlockPossibleTransformations,\r\n\t\t};\r\n\t} ),\r\n\twithDispatch(\r\n\t\t(\r\n\t\t\tdispatch,\r\n\t\t\t{ clientId, rootClientId, currentIndex, selectedBlockClientId },\r\n\t\t\t{ select }\r\n\t\t) => {\r\n\t\t\tconst {\r\n\t\t\t\tmoveBlocksDown,\r\n\t\t\t\tmoveBlocksUp,\r\n\t\t\t\tduplicateBlocks,\r\n\t\t\t\tremoveBlocks,\r\n\t\t\t\tinsertBlock,\r\n\t\t\t\treplaceBlock,\r\n\t\t\t\tclearSelectedBlock,\r\n\t\t\t} = dispatch( blockEditorStore );\r\n\t\t\tconst { openGeneralSidebar } = dispatch( 'core/edit-post' );\r\n\t\t\tconst { getBlockSelectionEnd, getBlock } =\r\n\t\t\t\tselect( blockEditorStore );\r\n\t\t\tconst { createSuccessNotice } = dispatch( noticesStore );\r\n\r\n\t\t\tconst { __experimentalConvertBlockToStatic: convertBlockToStatic } =\r\n\t\t\t\tdispatch( reusableBlocksStore );\r\n\r\n\t\t\treturn {\r\n\t\t\t\tcreateSuccessNotice,\r\n\t\t\t\tconvertToRegularBlocks() {\r\n\t\t\t\t\tclearSelectedBlock();\r\n\t\t\t\t\t// Convert action is executed at the end of the current JavaScript execution block\r\n\t\t\t\t\t// to prevent issues related to undo/redo actions.\r\n\t\t\t\t\tsetImmediate( () =>\r\n\t\t\t\t\t\tconvertBlockToStatic( selectedBlockClientId )\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\tduplicateBlock() {\r\n\t\t\t\t\treturn duplicateBlocks( [ clientId ] );\r\n\t\t\t\t},\r\n\t\t\t\tonMoveDown: ( ...args ) =>\r\n\t\t\t\t\tmoveBlocksDown( [ clientId ], rootClientId, ...args ),\r\n\t\t\t\tonMoveUp: ( ...args ) =>\r\n\t\t\t\t\tmoveBlocksUp( [ clientId ], rootClientId, ...args ),\r\n\t\t\t\topenGeneralSidebar: () =>\r\n\t\t\t\t\topenGeneralSidebar( 'edit-post/block' ),\r\n\t\t\t\tpasteBlock: ( clipboardBlock ) => {\r\n\t\t\t\t\tconst canReplaceBlock = isUnmodifiedDefaultBlock(\r\n\t\t\t\t\t\tgetBlock( getBlockSelectionEnd() )\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tif ( ! canReplaceBlock ) {\r\n\t\t\t\t\t\tconst insertedBlock = createBlock(\r\n\t\t\t\t\t\t\tclipboardBlock.name,\r\n\t\t\t\t\t\t\tclipboardBlock.attributes,\r\n\t\t\t\t\t\t\tclipboardBlock.innerBlocks\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tinsertBlock(\r\n\t\t\t\t\t\t\tinsertedBlock,\r\n\t\t\t\t\t\t\tcurrentIndex + 1,\r\n\t\t\t\t\t\t\trootClientId\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treplaceBlock( clientId, clipboardBlock );\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tremoveBlocks,\r\n\t\t\t};\r\n\t\t}\r\n\t),\r\n\twithInstanceId\r\n)( BlockActionsMenu );\r\n"],"mappings":"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","ignoreList":[]}