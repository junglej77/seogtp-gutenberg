{"version":3,"names":["store","blocksStore","__","sprintf","Button","DropdownMenu","MenuGroup","MenuItemsChoice","__experimentalToggleGroupControl","ToggleGroupControl","__experimentalToggleGroupControlOptionIcon","ToggleGroupControlOptionIcon","VisuallyHidden","useSelect","useDispatch","useMemo","chevronDown","BlockIcon","blockEditorStore","jsx","_jsx","jsxs","_jsxs","VariationsButtons","className","onSelectVariation","selectedValue","variations","children","as","map","variation","__next40pxDefaultSize","icon","showColors","isPressed","name","label","title","onClick","showTooltip","VariationsDropdown","selectOptions","description","value","info","text","popoverProps","position","toggleProps","iconPosition","choices","onSelect","VariationsToggleGroupControl","hideLabelFromVision","onChange","__nextHasNoMarginBottom","__experimentalBlockVariationTransforms","blockClientId","updateBlockAttributes","activeBlockVariation","select","getActiveBlockVariation","getBlockVariations","getBlockName","getBlockAttributes","hasUniqueIcons","variationIcons","Set","forEach","add","src","size","length","variationName","find","attributes","baseClass","showButtons","ButtonComponent","Component"],"sources":["D:/jungle/gutenberg/packages/block-editor/src/components/block-variation-transforms/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { store as blocksStore } from '@wordpress/blocks';\r\nimport { __, sprintf } from '@wordpress/i18n';\r\nimport {\r\n\tButton,\r\n\tDropdownMenu,\r\n\tMenuGroup,\r\n\tMenuItemsChoice,\r\n\t__experimentalToggleGroupControl as ToggleGroupControl,\r\n\t__experimentalToggleGroupControlOptionIcon as ToggleGroupControlOptionIcon,\r\n\tVisuallyHidden,\r\n} from '@wordpress/components';\r\nimport { useSelect, useDispatch } from '@wordpress/data';\r\nimport { useMemo } from '@wordpress/element';\r\nimport { chevronDown } from '@wordpress/icons';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport BlockIcon from '../block-icon';\r\nimport { store as blockEditorStore } from '../../store';\r\n\r\nfunction VariationsButtons( {\r\n\tclassName,\r\n\tonSelectVariation,\r\n\tselectedValue,\r\n\tvariations,\r\n} ) {\r\n\treturn (\r\n\t\t<fieldset className={ className }>\r\n\t\t\t<VisuallyHidden as=\"legend\">\r\n\t\t\t\t{ __( 'Transform to variation' ) }\r\n\t\t\t</VisuallyHidden>\r\n\t\t\t{ variations.map( ( variation ) => (\r\n\t\t\t\t<Button\r\n\t\t\t\t\t// TODO: Switch to `true` (40px size) if possible\r\n\t\t\t\t\t__next40pxDefaultSize={ false }\r\n\t\t\t\t\tkey={ variation.name }\r\n\t\t\t\t\ticon={ <BlockIcon icon={ variation.icon } showColors /> }\r\n\t\t\t\t\tisPressed={ selectedValue === variation.name }\r\n\t\t\t\t\tlabel={\r\n\t\t\t\t\t\tselectedValue === variation.name\r\n\t\t\t\t\t\t\t? variation.title\r\n\t\t\t\t\t\t\t: sprintf(\r\n\t\t\t\t\t\t\t\t\t/* translators: %s: Name of the block variation */\r\n\t\t\t\t\t\t\t\t\t__( 'Transform to %s' ),\r\n\t\t\t\t\t\t\t\t\tvariation.title\r\n\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonClick={ () => onSelectVariation( variation.name ) }\r\n\t\t\t\t\taria-label={ variation.title }\r\n\t\t\t\t\tshowTooltip\r\n\t\t\t\t/>\r\n\t\t\t) ) }\r\n\t\t</fieldset>\r\n\t);\r\n}\r\n\r\nfunction VariationsDropdown( {\r\n\tclassName,\r\n\tonSelectVariation,\r\n\tselectedValue,\r\n\tvariations,\r\n} ) {\r\n\tconst selectOptions = variations.map(\r\n\t\t( { name, title, description } ) => ( {\r\n\t\t\tvalue: name,\r\n\t\t\tlabel: title,\r\n\t\t\tinfo: description,\r\n\t\t} )\r\n\t);\r\n\r\n\treturn (\r\n\t\t<DropdownMenu\r\n\t\t\tclassName={ className }\r\n\t\t\tlabel={ __( 'Transform to variation' ) }\r\n\t\t\ttext={ __( 'Transform to variation' ) }\r\n\t\t\tpopoverProps={ {\r\n\t\t\t\tposition: 'bottom center',\r\n\t\t\t\tclassName: `${ className }__popover`,\r\n\t\t\t} }\r\n\t\t\ticon={ chevronDown }\r\n\t\t\ttoggleProps={ { iconPosition: 'right' } }\r\n\t\t>\r\n\t\t\t{ () => (\r\n\t\t\t\t<div className={ `${ className }__container` }>\r\n\t\t\t\t\t<MenuGroup>\r\n\t\t\t\t\t\t<MenuItemsChoice\r\n\t\t\t\t\t\t\tchoices={ selectOptions }\r\n\t\t\t\t\t\t\tvalue={ selectedValue }\r\n\t\t\t\t\t\t\tonSelect={ onSelectVariation }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</MenuGroup>\r\n\t\t\t\t</div>\r\n\t\t\t) }\r\n\t\t</DropdownMenu>\r\n\t);\r\n}\r\n\r\nfunction VariationsToggleGroupControl( {\r\n\tclassName,\r\n\tonSelectVariation,\r\n\tselectedValue,\r\n\tvariations,\r\n} ) {\r\n\treturn (\r\n\t\t<div className={ className }>\r\n\t\t\t<ToggleGroupControl\r\n\t\t\t\tlabel={ __( 'Transform to variation' ) }\r\n\t\t\t\tvalue={ selectedValue }\r\n\t\t\t\thideLabelFromVision\r\n\t\t\t\tonChange={ onSelectVariation }\r\n\t\t\t\t__next40pxDefaultSize\r\n\t\t\t\t__nextHasNoMarginBottom\r\n\t\t\t>\r\n\t\t\t\t{ variations.map( ( variation ) => (\r\n\t\t\t\t\t<ToggleGroupControlOptionIcon\r\n\t\t\t\t\t\tkey={ variation.name }\r\n\t\t\t\t\t\ticon={\r\n\t\t\t\t\t\t\t<BlockIcon icon={ variation.icon } showColors />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvalue={ variation.name }\r\n\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\tselectedValue === variation.name\r\n\t\t\t\t\t\t\t\t? variation.title\r\n\t\t\t\t\t\t\t\t: sprintf(\r\n\t\t\t\t\t\t\t\t\t\t/* translators: %s: Name of the block variation */\r\n\t\t\t\t\t\t\t\t\t\t__( 'Transform to %s' ),\r\n\t\t\t\t\t\t\t\t\t\tvariation.title\r\n\t\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) ) }\r\n\t\t\t</ToggleGroupControl>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction __experimentalBlockVariationTransforms( { blockClientId } ) {\r\n\tconst { updateBlockAttributes } = useDispatch( blockEditorStore );\r\n\tconst { activeBlockVariation, variations } = useSelect(\r\n\t\t( select ) => {\r\n\t\t\tconst { getActiveBlockVariation, getBlockVariations } =\r\n\t\t\t\tselect( blocksStore );\r\n\t\t\tconst { getBlockName, getBlockAttributes } =\r\n\t\t\t\tselect( blockEditorStore );\r\n\t\t\tconst name = blockClientId && getBlockName( blockClientId );\r\n\t\t\treturn {\r\n\t\t\t\tactiveBlockVariation: getActiveBlockVariation(\r\n\t\t\t\t\tname,\r\n\t\t\t\t\tgetBlockAttributes( blockClientId )\r\n\t\t\t\t),\r\n\t\t\t\tvariations: name && getBlockVariations( name, 'transform' ),\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ blockClientId ]\r\n\t);\r\n\r\n\tconst selectedValue = activeBlockVariation?.name;\r\n\r\n\t// Check if each variation has a unique icon.\r\n\tconst hasUniqueIcons = useMemo( () => {\r\n\t\tconst variationIcons = new Set();\r\n\t\tif ( ! variations ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvariations.forEach( ( variation ) => {\r\n\t\t\tif ( variation.icon ) {\r\n\t\t\t\tvariationIcons.add( variation.icon?.src || variation.icon );\r\n\t\t\t}\r\n\t\t} );\r\n\t\treturn variationIcons.size === variations.length;\r\n\t}, [ variations ] );\r\n\r\n\tconst onSelectVariation = ( variationName ) => {\r\n\t\tupdateBlockAttributes( blockClientId, {\r\n\t\t\t...variations.find( ( { name } ) => name === variationName )\r\n\t\t\t\t.attributes,\r\n\t\t} );\r\n\t};\r\n\r\n\t// Skip rendering if there are no variations\r\n\tif ( ! variations?.length ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst baseClass = 'block-editor-block-variation-transforms';\r\n\r\n\t// Show buttons if there are more than 5 variations because the ToggleGroupControl does not wrap\r\n\tconst showButtons = variations.length > 5;\r\n\r\n\tconst ButtonComponent = showButtons\r\n\t\t? VariationsButtons\r\n\t\t: VariationsToggleGroupControl;\r\n\r\n\tconst Component = hasUniqueIcons ? ButtonComponent : VariationsDropdown;\r\n\r\n\treturn (\r\n\t\t<Component\r\n\t\t\tclassName={ baseClass }\r\n\t\t\tonSelectVariation={ onSelectVariation }\r\n\t\t\tselectedValue={ selectedValue }\r\n\t\t\tvariations={ variations }\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default __experimentalBlockVariationTransforms;\r\n"],"mappings":"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","ignoreList":[]}