{"version":3,"names":["__experimentalBorderBoxControl","BorderBoxControl","__experimentalHasSplitBorders","hasSplitBorders","__experimentalIsDefinedBorder","isDefinedBorder","__experimentalToolsPanel","ToolsPanel","__experimentalToolsPanelItem","ToolsPanelItem","__experimentalItemGroup","ItemGroup","BaseControl","useCallback","useMemo","__","BorderRadiusControl","useColorsPerOrigin","getValueFromVariable","useToolsPanelDropdownMenuProps","setImmutably","useBorderPanelLabel","ShadowPopover","useShadowPresets","jsx","_jsx","jsxs","_jsxs","useHasBorderPanel","settings","controls","Object","values","useHasBorderPanelControls","some","Boolean","hasBorderColor","useHasBorderColorControl","hasBorderRadius","useHasBorderRadiusControl","hasBorderStyle","useHasBorderStyleControl","hasBorderWidth","useHasBorderWidthControl","hasShadow","useHasShadowControl","border","color","radius","style","width","shadows","shadow","length","BorderToolsPanel","resetAllFilter","onChange","value","panelId","children","label","dropdownMenuProps","resetAll","updatedValue","DEFAULT_CONTROLS","BorderPanel","as","Wrapper","inheritedValue","name","defaultControls","_settings$shadow$pres","_ref","_ref2","_shadowPresets$custom","colors","decodeValue","rawValue","encodeColorValue","colorValue","allColors","flatMap","originColors","colorObject","find","slug","borderValue","forEach","side","undefined","setBorder","newBorder","showBorderColor","showBorderStyle","showBorderWidth","showBorderRadius","borderRadiusValues","setBorderRadius","newBorderRadius","borderValues","entries","hasShadowControl","shadowPresets","presets","mergedShadowPresets","custom","theme","default","setShadow","newValue","shadowName","resetShadow","resetBorder","onBorderChange","updatedBorder","previousValue","showBorderByDefault","hasBorderControl","blockName","hasValue","onDeselect","isShownByDefault","enableAlpha","enableStyle","popoverOffset","popoverPlacement","__experimentalIsRenderedInSidebar","size","hideLabelFromVision","VisualLabel","isBordered","isSeparated","onShadowChange"],"sources":["@wordpress/block-editor/src/components/global-styles/border-panel.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport {\r\n\t__experimentalBorderBoxControl as BorderBoxControl,\r\n\t__experimentalHasSplitBorders as hasSplitBorders,\r\n\t__experimentalIsDefinedBorder as isDefinedBorder,\r\n\t__experimentalToolsPanel as ToolsPanel,\r\n\t__experimentalToolsPanelItem as ToolsPanelItem,\r\n\t__experimentalItemGroup as ItemGroup,\r\n\tBaseControl,\r\n} from '@wordpress/components';\r\nimport { useCallback, useMemo } from '@wordpress/element';\r\nimport { __ } from '@wordpress/i18n';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport BorderRadiusControl from '../border-radius-control';\r\nimport { useColorsPerOrigin } from './hooks';\r\nimport { getValueFromVariable, useToolsPanelDropdownMenuProps } from './utils';\r\nimport { setImmutably } from '../../utils/object';\r\nimport { useBorderPanelLabel } from '../../hooks/border';\r\nimport { ShadowPopover, useShadowPresets } from './shadow-panel-components';\r\n\r\nexport function useHasBorderPanel( settings ) {\r\n\tconst controls = Object.values( useHasBorderPanelControls( settings ) );\r\n\treturn controls.some( Boolean );\r\n}\r\n\r\nexport function useHasBorderPanelControls( settings ) {\r\n\tconst controls = {\r\n\t\thasBorderColor: useHasBorderColorControl( settings ),\r\n\t\thasBorderRadius: useHasBorderRadiusControl( settings ),\r\n\t\thasBorderStyle: useHasBorderStyleControl( settings ),\r\n\t\thasBorderWidth: useHasBorderWidthControl( settings ),\r\n\t\thasShadow: useHasShadowControl( settings ),\r\n\t};\r\n\r\n\treturn controls;\r\n}\r\n\r\nfunction useHasBorderColorControl( settings ) {\r\n\treturn settings?.border?.color;\r\n}\r\n\r\nfunction useHasBorderRadiusControl( settings ) {\r\n\treturn settings?.border?.radius;\r\n}\r\n\r\nfunction useHasBorderStyleControl( settings ) {\r\n\treturn settings?.border?.style;\r\n}\r\n\r\nfunction useHasBorderWidthControl( settings ) {\r\n\treturn settings?.border?.width;\r\n}\r\n\r\nfunction useHasShadowControl( settings ) {\r\n\tconst shadows = useShadowPresets( settings );\r\n\treturn !! settings?.shadow && shadows.length > 0;\r\n}\r\n\r\nfunction BorderToolsPanel( {\r\n\tresetAllFilter,\r\n\tonChange,\r\n\tvalue,\r\n\tpanelId,\r\n\tchildren,\r\n\tlabel,\r\n} ) {\r\n\tconst dropdownMenuProps = useToolsPanelDropdownMenuProps();\r\n\tconst resetAll = () => {\r\n\t\tconst updatedValue = resetAllFilter( value );\r\n\t\tonChange( updatedValue );\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ToolsPanel\r\n\t\t\tlabel={ label }\r\n\t\t\tresetAll={ resetAll }\r\n\t\t\tpanelId={ panelId }\r\n\t\t\tdropdownMenuProps={ dropdownMenuProps }\r\n\t\t>\r\n\t\t\t{ children }\r\n\t\t</ToolsPanel>\r\n\t);\r\n}\r\n\r\nconst DEFAULT_CONTROLS = {\r\n\tradius: true,\r\n\tcolor: true,\r\n\twidth: true,\r\n\tshadow: true,\r\n};\r\n\r\nexport default function BorderPanel( {\r\n\tas: Wrapper = BorderToolsPanel,\r\n\tvalue,\r\n\tonChange,\r\n\tinheritedValue = value,\r\n\tsettings,\r\n\tpanelId,\r\n\tname,\r\n\tdefaultControls = DEFAULT_CONTROLS,\r\n} ) {\r\n\tconst colors = useColorsPerOrigin( settings );\r\n\tconst decodeValue = useCallback(\r\n\t\t( rawValue ) => getValueFromVariable( { settings }, '', rawValue ),\r\n\t\t[ settings ]\r\n\t);\r\n\tconst encodeColorValue = ( colorValue ) => {\r\n\t\tconst allColors = colors.flatMap(\r\n\t\t\t( { colors: originColors } ) => originColors\r\n\t\t);\r\n\t\tconst colorObject = allColors.find(\r\n\t\t\t( { color } ) => color === colorValue\r\n\t\t);\r\n\t\treturn colorObject\r\n\t\t\t? 'var:preset|color|' + colorObject.slug\r\n\t\t\t: colorValue;\r\n\t};\r\n\tconst border = useMemo( () => {\r\n\t\tif ( hasSplitBorders( inheritedValue?.border ) ) {\r\n\t\t\tconst borderValue = { ...inheritedValue?.border };\r\n\t\t\t[ 'top', 'right', 'bottom', 'left' ].forEach( ( side ) => {\r\n\t\t\t\tborderValue[ side ] = {\r\n\t\t\t\t\t...borderValue[ side ],\r\n\t\t\t\t\tcolor: decodeValue( borderValue[ side ]?.color ),\r\n\t\t\t\t};\r\n\t\t\t} );\r\n\t\t\treturn borderValue;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\t...inheritedValue?.border,\r\n\t\t\tcolor: inheritedValue?.border?.color\r\n\t\t\t\t? decodeValue( inheritedValue?.border?.color )\r\n\t\t\t\t: undefined,\r\n\t\t};\r\n\t}, [ inheritedValue?.border, decodeValue ] );\r\n\tconst setBorder = ( newBorder ) =>\r\n\t\tonChange( { ...value, border: newBorder } );\r\n\tconst showBorderColor = useHasBorderColorControl( settings );\r\n\tconst showBorderStyle = useHasBorderStyleControl( settings );\r\n\tconst showBorderWidth = useHasBorderWidthControl( settings );\r\n\r\n\t// Border radius.\r\n\tconst showBorderRadius = useHasBorderRadiusControl( settings );\r\n\tconst borderRadiusValues = decodeValue( border?.radius );\r\n\tconst setBorderRadius = ( newBorderRadius ) =>\r\n\t\tsetBorder( { ...border, radius: newBorderRadius } );\r\n\tconst hasBorderRadius = () => {\r\n\t\tconst borderValues = value?.border?.radius;\r\n\t\tif ( typeof borderValues === 'object' ) {\r\n\t\t\treturn Object.entries( borderValues ).some( Boolean );\r\n\t\t}\r\n\t\treturn !! borderValues;\r\n\t};\r\n\tconst hasShadowControl = useHasShadowControl( settings );\r\n\r\n\t// Shadow\r\n\tconst shadow = decodeValue( inheritedValue?.shadow );\r\n\tconst shadowPresets = settings?.shadow?.presets ?? {};\r\n\tconst mergedShadowPresets =\r\n\t\tshadowPresets.custom ??\r\n\t\tshadowPresets.theme ??\r\n\t\tshadowPresets.default ??\r\n\t\t[];\r\n\tconst setShadow = ( newValue ) => {\r\n\t\tconst slug = mergedShadowPresets?.find(\r\n\t\t\t( { shadow: shadowName } ) => shadowName === newValue\r\n\t\t)?.slug;\r\n\r\n\t\tonChange(\r\n\t\t\tsetImmutably(\r\n\t\t\t\tvalue,\r\n\t\t\t\t[ 'shadow' ],\r\n\t\t\t\tslug ? `var:preset|shadow|${ slug }` : newValue || undefined\r\n\t\t\t)\r\n\t\t);\r\n\t};\r\n\tconst hasShadow = () => !! value?.shadow;\r\n\tconst resetShadow = () => setShadow( undefined );\r\n\r\n\tconst resetBorder = () => {\r\n\t\tif ( hasBorderRadius() ) {\r\n\t\t\treturn setBorder( { radius: value?.border?.radius } );\r\n\t\t}\r\n\r\n\t\tsetBorder( undefined );\r\n\t};\r\n\r\n\tconst onBorderChange = ( newBorder ) => {\r\n\t\t// Ensure we have a visible border style when a border width or\r\n\t\t// color is being selected.\r\n\t\tconst updatedBorder = { ...newBorder };\r\n\r\n\t\tif ( hasSplitBorders( updatedBorder ) ) {\r\n\t\t\t[ 'top', 'right', 'bottom', 'left' ].forEach( ( side ) => {\r\n\t\t\t\tif ( updatedBorder[ side ] ) {\r\n\t\t\t\t\tupdatedBorder[ side ] = {\r\n\t\t\t\t\t\t...updatedBorder[ side ],\r\n\t\t\t\t\t\tcolor: encodeColorValue( updatedBorder[ side ]?.color ),\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t} else if ( updatedBorder ) {\r\n\t\t\tupdatedBorder.color = encodeColorValue( updatedBorder.color );\r\n\t\t}\r\n\r\n\t\t// As radius is maintained separately to color, style, and width\r\n\t\t// maintain its value. Undefined values here will be cleaned when\r\n\t\t// global styles are saved.\r\n\t\tsetBorder( { radius: border?.radius, ...updatedBorder } );\r\n\t};\r\n\r\n\tconst resetAllFilter = useCallback( ( previousValue ) => {\r\n\t\treturn {\r\n\t\t\t...previousValue,\r\n\t\t\tborder: undefined,\r\n\t\t\tshadow: undefined,\r\n\t\t};\r\n\t}, [] );\r\n\r\n\tconst showBorderByDefault =\r\n\t\tdefaultControls?.color || defaultControls?.width;\r\n\r\n\tconst hasBorderControl =\r\n\t\tshowBorderColor ||\r\n\t\tshowBorderStyle ||\r\n\t\tshowBorderWidth ||\r\n\t\tshowBorderRadius;\r\n\r\n\tconst label = useBorderPanelLabel( {\r\n\t\tblockName: name,\r\n\t\thasShadowControl,\r\n\t\thasBorderControl,\r\n\t} );\r\n\r\n\treturn (\r\n\t\t<Wrapper\r\n\t\t\tresetAllFilter={ resetAllFilter }\r\n\t\t\tvalue={ value }\r\n\t\t\tonChange={ onChange }\r\n\t\t\tpanelId={ panelId }\r\n\t\t\tlabel={ label }\r\n\t\t>\r\n\t\t\t{ ( showBorderWidth || showBorderColor ) && (\r\n\t\t\t\t<ToolsPanelItem\r\n\t\t\t\t\thasValue={ () => isDefinedBorder( value?.border ) }\r\n\t\t\t\t\tlabel={ __( 'Border' ) }\r\n\t\t\t\t\tonDeselect={ () => resetBorder() }\r\n\t\t\t\t\tisShownByDefault={ showBorderByDefault }\r\n\t\t\t\t\tpanelId={ panelId }\r\n\t\t\t\t>\r\n\t\t\t\t\t<BorderBoxControl\r\n\t\t\t\t\t\tcolors={ colors }\r\n\t\t\t\t\t\tenableAlpha\r\n\t\t\t\t\t\tenableStyle={ showBorderStyle }\r\n\t\t\t\t\t\tonChange={ onBorderChange }\r\n\t\t\t\t\t\tpopoverOffset={ 40 }\r\n\t\t\t\t\t\tpopoverPlacement=\"left-start\"\r\n\t\t\t\t\t\tvalue={ border }\r\n\t\t\t\t\t\t__experimentalIsRenderedInSidebar\r\n\t\t\t\t\t\tsize=\"__unstable-large\"\r\n\t\t\t\t\t\thideLabelFromVision={ ! hasShadowControl }\r\n\t\t\t\t\t\tlabel={ __( 'Border' ) }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ToolsPanelItem>\r\n\t\t\t) }\r\n\t\t\t{ showBorderRadius && (\r\n\t\t\t\t<ToolsPanelItem\r\n\t\t\t\t\thasValue={ hasBorderRadius }\r\n\t\t\t\t\tlabel={ __( 'Radius' ) }\r\n\t\t\t\t\tonDeselect={ () => setBorderRadius( undefined ) }\r\n\t\t\t\t\tisShownByDefault={ defaultControls.radius }\r\n\t\t\t\t\tpanelId={ panelId }\r\n\t\t\t\t>\r\n\t\t\t\t\t<BorderRadiusControl\r\n\t\t\t\t\t\tvalues={ borderRadiusValues }\r\n\t\t\t\t\t\tonChange={ ( newValue ) => {\r\n\t\t\t\t\t\t\tsetBorderRadius( newValue || undefined );\r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ToolsPanelItem>\r\n\t\t\t) }\r\n\t\t\t{ hasShadowControl && (\r\n\t\t\t\t<ToolsPanelItem\r\n\t\t\t\t\tlabel={ __( 'Shadow' ) }\r\n\t\t\t\t\thasValue={ hasShadow }\r\n\t\t\t\t\tonDeselect={ resetShadow }\r\n\t\t\t\t\tisShownByDefault={ defaultControls.shadow }\r\n\t\t\t\t\tpanelId={ panelId }\r\n\t\t\t\t>\r\n\t\t\t\t\t{ hasBorderControl ? (\r\n\t\t\t\t\t\t<BaseControl.VisualLabel as=\"legend\">\r\n\t\t\t\t\t\t\t{ __( 'Shadow' ) }\r\n\t\t\t\t\t\t</BaseControl.VisualLabel>\r\n\t\t\t\t\t) : null }\r\n\r\n\t\t\t\t\t<ItemGroup isBordered isSeparated>\r\n\t\t\t\t\t\t<ShadowPopover\r\n\t\t\t\t\t\t\tshadow={ shadow }\r\n\t\t\t\t\t\t\tonShadowChange={ setShadow }\r\n\t\t\t\t\t\t\tsettings={ settings }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</ItemGroup>\r\n\t\t\t\t</ToolsPanelItem>\r\n\t\t\t) }\r\n\t\t</Wrapper>\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]}