{"version":3,"names":["useSelect","useEffect","useState","useMemo","useCallback","__","store","blockEditorStore","PanelColorGradientSettings","useColorsPerOrigin","useGradientsPerOrigin","getValueFromVariable","setImmutably","ContrastChecker","InspectorControls","useHasColorPanel","useHasTextPanel","useHasBackgroundColorPanel","useGlobalStyles","jsx","_jsx","ColorPanel","value","inheritedValue","onChange","settings","colors","gradients","globalStyles","detectedBackgroundColor","setDetectedBackgroundColor","detectedTextColor","setDetectedTextColor","baseGlobalStyles","select","getSettings","__experimentalGlobalStylesBaseStyles","color","decodeValue","rawValue","encodeColorValue","colorValue","allColors","flatMap","originColors","colorObject","find","slug","encodeGradientValue","gradientValue","allGradients","originGradients","gradientObject","gradient","showTextPanel","textColor","text","setTextColor","newColor","resetTextColor","undefined","showBackgroundPanel","backgroundColor","background","setBackgroundColor","newValue","setGradient","newGradient","resetBackground","currentGradients","withoutGradientsSupport","Array","isArray","length","items","label","onColorChange","onColorCleared","onGradientChange","filter","Boolean","currentDetectedTextColor","currentDetectedBackgroundColor","children","title","initialOpen"],"sources":["@wordpress/block-editor/src/components/global-styles/color-panel.native.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useSelect } from '@wordpress/data';\r\nimport { useEffect, useState, useMemo, useCallback } from '@wordpress/element';\r\nimport { __ } from '@wordpress/i18n';\r\nimport { store as blockEditorStore } from '@wordpress/block-editor';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport PanelColorGradientSettings from '../colors-gradients/panel-color-gradient-settings';\r\nimport { useColorsPerOrigin, useGradientsPerOrigin } from './hooks';\r\nimport { getValueFromVariable } from './utils';\r\nimport { setImmutably } from '../../utils/object';\r\nimport ContrastChecker from '../contrast-checker';\r\nimport InspectorControls from '../inspector-controls';\r\nimport {\r\n\tuseHasColorPanel,\r\n\tuseHasTextPanel,\r\n\tuseHasBackgroundColorPanel,\r\n} from './color-panel.js';\r\nimport { useGlobalStyles } from './use-global-styles-context';\r\n\r\nconst ColorPanel = ( {\r\n\tvalue,\r\n\tinheritedValue = value,\r\n\tonChange,\r\n\tsettings,\r\n} ) => {\r\n\tconst colors = useColorsPerOrigin( settings );\r\n\tconst gradients = useGradientsPerOrigin( settings );\r\n\tconst globalStyles = useGlobalStyles();\r\n\r\n\tconst [ detectedBackgroundColor, setDetectedBackgroundColor ] = useState();\r\n\tconst [ detectedTextColor, setDetectedTextColor ] = useState();\r\n\r\n\tconst { baseGlobalStyles } = useSelect( ( select ) => {\r\n\t\tconst { getSettings } = select( blockEditorStore );\r\n\t\treturn {\r\n\t\t\tbaseGlobalStyles:\r\n\t\t\t\tgetSettings()?.__experimentalGlobalStylesBaseStyles?.color,\r\n\t\t};\r\n\t} );\r\n\r\n\tconst decodeValue = ( rawValue ) =>\r\n\t\tgetValueFromVariable( { settings }, '', rawValue );\r\n\tconst encodeColorValue = useCallback(\r\n\t\t( colorValue ) => {\r\n\t\t\tconst allColors = colors.flatMap(\r\n\t\t\t\t( { colors: originColors } ) => originColors\r\n\t\t\t);\r\n\t\t\tconst colorObject = allColors.find(\r\n\t\t\t\t( { color } ) => color === colorValue\r\n\t\t\t);\r\n\t\t\treturn colorObject\r\n\t\t\t\t? 'var:preset|color|' + colorObject.slug\r\n\t\t\t\t: colorValue;\r\n\t\t},\r\n\t\t[ colors ]\r\n\t);\r\n\tconst encodeGradientValue = useCallback(\r\n\t\t( gradientValue ) => {\r\n\t\t\tconst allGradients = gradients.flatMap(\r\n\t\t\t\t( { gradients: originGradients } ) => originGradients\r\n\t\t\t);\r\n\t\t\tconst gradientObject = allGradients.find(\r\n\t\t\t\t( { gradient } ) => gradient === gradientValue\r\n\t\t\t);\r\n\t\t\treturn gradientObject\r\n\t\t\t\t? 'var:preset|gradient|' + gradientObject.slug\r\n\t\t\t\t: gradientValue;\r\n\t\t},\r\n\t\t[ gradients ]\r\n\t);\r\n\r\n\t// Text Color\r\n\tconst showTextPanel = useHasTextPanel( settings );\r\n\tconst textColor = decodeValue( inheritedValue?.color?.text );\r\n\tconst setTextColor = useCallback(\r\n\t\t( newColor ) => {\r\n\t\t\tonChange(\r\n\t\t\t\tsetImmutably(\r\n\t\t\t\t\tvalue,\r\n\t\t\t\t\t[ 'color', 'text' ],\r\n\t\t\t\t\tencodeColorValue( newColor )\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t},\r\n\t\t[ encodeColorValue, onChange, value ]\r\n\t);\r\n\tconst resetTextColor = useCallback(\r\n\t\t() => setTextColor( undefined ),\r\n\t\t[ setTextColor ]\r\n\t);\r\n\r\n\t// BackgroundColor\r\n\tconst showBackgroundPanel = useHasBackgroundColorPanel( settings );\r\n\tconst backgroundColor = decodeValue( inheritedValue?.color?.background );\r\n\tconst gradient = decodeValue( inheritedValue?.color?.gradient );\r\n\tconst setBackgroundColor = useCallback(\r\n\t\t( newColor ) => {\r\n\t\t\tconst newValue = setImmutably(\r\n\t\t\t\tvalue,\r\n\t\t\t\t[ 'color', 'background' ],\r\n\t\t\t\tencodeColorValue( newColor )\r\n\t\t\t);\r\n\t\t\tnewValue.color.gradient = undefined;\r\n\t\t\tonChange( newValue );\r\n\t\t},\r\n\t\t[ encodeColorValue, onChange, value ]\r\n\t);\r\n\tconst setGradient = useCallback(\r\n\t\t( newGradient ) => {\r\n\t\t\tconst newValue = setImmutably(\r\n\t\t\t\tvalue,\r\n\t\t\t\t[ 'color', 'gradient' ],\r\n\t\t\t\tencodeGradientValue( newGradient )\r\n\t\t\t);\r\n\t\t\tnewValue.color.background = undefined;\r\n\t\t\tonChange( newValue );\r\n\t\t},\r\n\t\t[ encodeGradientValue, onChange, value ]\r\n\t);\r\n\tconst resetBackground = useCallback( () => {\r\n\t\tconst newValue = setImmutably(\r\n\t\t\tvalue,\r\n\t\t\t[ 'color', 'background' ],\r\n\t\t\tundefined\r\n\t\t);\r\n\t\tnewValue.color.gradient = undefined;\r\n\t\tonChange( newValue );\r\n\t}, [ onChange, value ] );\r\n\tconst currentGradients = settings?.color?.gradients;\r\n\tconst withoutGradientsSupport =\r\n\t\tArray.isArray( currentGradients ) && currentGradients.length === 0;\r\n\r\n\tconst items = useMemo(\r\n\t\t() =>\r\n\t\t\t[\r\n\t\t\t\tshowTextPanel && {\r\n\t\t\t\t\tlabel: __( 'Text' ),\r\n\t\t\t\t\tcolorValue: textColor,\r\n\t\t\t\t\tonColorChange: setTextColor,\r\n\t\t\t\t\tonColorCleared: resetTextColor,\r\n\t\t\t\t},\r\n\t\t\t\tshowBackgroundPanel && {\r\n\t\t\t\t\tlabel: __( 'Background' ),\r\n\t\t\t\t\tcolorValue: backgroundColor,\r\n\t\t\t\t\tonColorChange: setBackgroundColor,\r\n\t\t\t\t\tonColorCleared: resetBackground,\r\n\t\t\t\t\tonGradientChange: ! withoutGradientsSupport\r\n\t\t\t\t\t\t? setGradient\r\n\t\t\t\t\t\t: undefined,\r\n\t\t\t\t\tgradientValue: gradient,\r\n\t\t\t\t},\r\n\t\t\t].filter( Boolean ),\r\n\t\t[\r\n\t\t\tbackgroundColor,\r\n\t\t\tgradient,\r\n\t\t\tresetBackground,\r\n\t\t\tresetTextColor,\r\n\t\t\tsetBackgroundColor,\r\n\t\t\tsetGradient,\r\n\t\t\tsetTextColor,\r\n\t\t\tshowBackgroundPanel,\r\n\t\t\tshowTextPanel,\r\n\t\t\ttextColor,\r\n\t\t\twithoutGradientsSupport,\r\n\t\t]\r\n\t);\r\n\r\n\tuseEffect( () => {\r\n\t\t// The following logic is used to determine current text/background colors:\r\n\t\t// 1. The globalStyles object is queried to determine whether a color has been\r\n\t\t// set via a block's settings.\r\n\t\t// 2. If a block-based theme is in use and no globalStyles exist, the theme's\r\n\t\t// default/base colors are used.\r\n\t\t// 3. If no globalStyles exist and a theme isn't block-based, there is no way\r\n\t\t// to determine the default text/background color and the checker won't run.\r\n\t\tconst currentDetectedTextColor =\r\n\t\t\tglobalStyles?.color || baseGlobalStyles?.text;\r\n\t\tconst currentDetectedBackgroundColor =\r\n\t\t\tglobalStyles?.backgroundColor || baseGlobalStyles?.background;\r\n\r\n\t\tsetDetectedTextColor( currentDetectedTextColor );\r\n\t\tsetDetectedBackgroundColor( currentDetectedBackgroundColor );\r\n\t}, [ globalStyles, baseGlobalStyles ] );\r\n\r\n\treturn (\r\n\t\t<InspectorControls>\r\n\t\t\t<PanelColorGradientSettings\r\n\t\t\t\ttitle={ __( 'Color' ) }\r\n\t\t\t\tinitialOpen={ false }\r\n\t\t\t\tsettings={ items }\r\n\t\t\t>\r\n\t\t\t\t<ContrastChecker\r\n\t\t\t\t\tbackgroundColor={ detectedBackgroundColor }\r\n\t\t\t\t\ttextColor={ detectedTextColor }\r\n\t\t\t\t/>\r\n\t\t\t</PanelColorGradientSettings>\r\n\t\t</InspectorControls>\r\n\t);\r\n};\r\n\r\nexport { useHasColorPanel };\r\nexport default ColorPanel;\r\n"],"mappings":"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","ignoreList":[]}