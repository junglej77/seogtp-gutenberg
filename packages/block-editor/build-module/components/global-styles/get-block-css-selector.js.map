{"version":3,"names":["scopeSelector","getValueFromObjectPath","getBlockCSSSelector","blockType","target","options","fallback","name","selectors","supports","hasSelectors","Object","keys","length","path","Array","isArray","join","rootSelector","root","__experimentalSelector","replace","pathArray","split","fallbackSelector","featureSelector","subfeatureSelector"],"sources":["@wordpress/block-editor/src/components/global-styles/get-block-css-selector.js"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport { scopeSelector } from './utils';\r\nimport { getValueFromObjectPath } from '../../utils/object';\r\n\r\n/**\r\n * Determine the CSS selector for the block type and target provided, returning\r\n * it if available.\r\n *\r\n * @param {import('@wordpress/blocks').Block} blockType        The block's type.\r\n * @param {string|string[]}                   target           The desired selector's target e.g. `root`, delimited string, or array path.\r\n * @param {Object}                            options          Options object.\r\n * @param {boolean}                           options.fallback Whether or not to fallback to broader selector.\r\n *\r\n * @return {?string} The CSS selector or `null` if no selector available.\r\n */\r\nexport function getBlockCSSSelector(\r\n\tblockType,\r\n\ttarget = 'root',\r\n\toptions = {}\r\n) {\r\n\tif ( ! target ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst { fallback = false } = options;\r\n\tconst { name, selectors, supports } = blockType;\r\n\r\n\tconst hasSelectors = selectors && Object.keys( selectors ).length > 0;\r\n\tconst path = Array.isArray( target ) ? target.join( '.' ) : target;\r\n\r\n\t// Root selector.\r\n\r\n\t// Calculated before returning as it can be used as a fallback for feature\r\n\t// selectors later on.\r\n\tlet rootSelector = null;\r\n\r\n\tif ( hasSelectors && selectors.root ) {\r\n\t\t// Use the selectors API if available.\r\n\t\trootSelector = selectors?.root;\r\n\t} else if ( supports?.__experimentalSelector ) {\r\n\t\t// Use the old experimental selector supports property if set.\r\n\t\trootSelector = supports.__experimentalSelector;\r\n\t} else {\r\n\t\t// If no root selector found, generate default block class selector.\r\n\t\trootSelector =\r\n\t\t\t'.wp-block-' + name.replace( 'core/', '' ).replace( '/', '-' );\r\n\t}\r\n\r\n\t// Return selector if it's the root target we are looking for.\r\n\tif ( path === 'root' ) {\r\n\t\treturn rootSelector;\r\n\t}\r\n\r\n\t// If target is not `root` or `duotone` we have a feature or subfeature\r\n\t// as the target. If the target is a string convert to an array.\r\n\tconst pathArray = Array.isArray( target ) ? target : target.split( '.' );\r\n\r\n\t// Feature selectors ( may fallback to root selector );\r\n\tif ( pathArray.length === 1 ) {\r\n\t\tconst fallbackSelector = fallback ? rootSelector : null;\r\n\r\n\t\t// Prefer the selectors API if available.\r\n\t\tif ( hasSelectors ) {\r\n\t\t\t// Get selector from either `feature.root` or shorthand path.\r\n\t\t\tconst featureSelector =\r\n\t\t\t\tgetValueFromObjectPath( selectors, `${ path }.root`, null ) ||\r\n\t\t\t\tgetValueFromObjectPath( selectors, path, null );\r\n\r\n\t\t\t// Return feature selector if found or any available fallback.\r\n\t\t\treturn featureSelector || fallbackSelector;\r\n\t\t}\r\n\r\n\t\t// Try getting old experimental supports selector value.\r\n\t\tconst featureSelector = getValueFromObjectPath(\r\n\t\t\tsupports,\r\n\t\t\t`${ path }.__experimentalSelector`,\r\n\t\t\tnull\r\n\t\t);\r\n\r\n\t\t// If nothing to work with, provide fallback selector if available.\r\n\t\tif ( ! featureSelector ) {\r\n\t\t\treturn fallbackSelector;\r\n\t\t}\r\n\r\n\t\t// Scope the feature selector by the block's root selector.\r\n\t\treturn scopeSelector( rootSelector, featureSelector );\r\n\t}\r\n\r\n\t// Subfeature selector.\r\n\t// This may fallback either to parent feature or root selector.\r\n\tlet subfeatureSelector;\r\n\r\n\t// Use selectors API if available.\r\n\tif ( hasSelectors ) {\r\n\t\tsubfeatureSelector = getValueFromObjectPath( selectors, path, null );\r\n\t}\r\n\r\n\t// Only return if we have a subfeature selector.\r\n\tif ( subfeatureSelector ) {\r\n\t\treturn subfeatureSelector;\r\n\t}\r\n\r\n\t// To this point we don't have a subfeature selector. If a fallback has been\r\n\t// requested, remove subfeature from target path and return results of a\r\n\t// call for the parent feature's selector.\r\n\tif ( fallback ) {\r\n\t\treturn getBlockCSSSelector( blockType, pathArray[ 0 ], options );\r\n\t}\r\n\r\n\t// We tried.\r\n\treturn null;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,SAAS;AACvC,SAASC,sBAAsB,QAAQ,oBAAoB;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,mBAAmBA,CAClCC,SAAS,EACTC,MAAM,GAAG,MAAM,EACfC,OAAO,GAAG,CAAC,CAAC,EACX;EACD,IAAK,CAAED,MAAM,EAAG;IACf,OAAO,IAAI;EACZ;EAEA,MAAM;IAAEE,QAAQ,GAAG;EAAM,CAAC,GAAGD,OAAO;EACpC,MAAM;IAAEE,IAAI;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAGN,SAAS;EAE/C,MAAMO,YAAY,GAAGF,SAAS,IAAIG,MAAM,CAACC,IAAI,CAAEJ,SAAU,CAAC,CAACK,MAAM,GAAG,CAAC;EACrE,MAAMC,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAEZ,MAAO,CAAC,GAAGA,MAAM,CAACa,IAAI,CAAE,GAAI,CAAC,GAAGb,MAAM;;EAElE;;EAEA;EACA;EACA,IAAIc,YAAY,GAAG,IAAI;EAEvB,IAAKR,YAAY,IAAIF,SAAS,CAACW,IAAI,EAAG;IACrC;IACAD,YAAY,GAAGV,SAAS,EAAEW,IAAI;EAC/B,CAAC,MAAM,IAAKV,QAAQ,EAAEW,sBAAsB,EAAG;IAC9C;IACAF,YAAY,GAAGT,QAAQ,CAACW,sBAAsB;EAC/C,CAAC,MAAM;IACN;IACAF,YAAY,GACX,YAAY,GAAGX,IAAI,CAACc,OAAO,CAAE,OAAO,EAAE,EAAG,CAAC,CAACA,OAAO,CAAE,GAAG,EAAE,GAAI,CAAC;EAChE;;EAEA;EACA,IAAKP,IAAI,KAAK,MAAM,EAAG;IACtB,OAAOI,YAAY;EACpB;;EAEA;EACA;EACA,MAAMI,SAAS,GAAGP,KAAK,CAACC,OAAO,CAAEZ,MAAO,CAAC,GAAGA,MAAM,GAAGA,MAAM,CAACmB,KAAK,CAAE,GAAI,CAAC;;EAExE;EACA,IAAKD,SAAS,CAACT,MAAM,KAAK,CAAC,EAAG;IAC7B,MAAMW,gBAAgB,GAAGlB,QAAQ,GAAGY,YAAY,GAAG,IAAI;;IAEvD;IACA,IAAKR,YAAY,EAAG;MACnB;MACA,MAAMe,eAAe,GACpBxB,sBAAsB,CAAEO,SAAS,EAAG,GAAGM,IAAM,OAAM,EAAE,IAAK,CAAC,IAC3Db,sBAAsB,CAAEO,SAAS,EAAEM,IAAI,EAAE,IAAK,CAAC;;MAEhD;MACA,OAAOW,eAAe,IAAID,gBAAgB;IAC3C;;IAEA;IACA,MAAMC,eAAe,GAAGxB,sBAAsB,CAC7CQ,QAAQ,EACP,GAAGK,IAAM,yBAAwB,EAClC,IACD,CAAC;;IAED;IACA,IAAK,CAAEW,eAAe,EAAG;MACxB,OAAOD,gBAAgB;IACxB;;IAEA;IACA,OAAOxB,aAAa,CAAEkB,YAAY,EAAEO,eAAgB,CAAC;EACtD;;EAEA;EACA;EACA,IAAIC,kBAAkB;;EAEtB;EACA,IAAKhB,YAAY,EAAG;IACnBgB,kBAAkB,GAAGzB,sBAAsB,CAAEO,SAAS,EAAEM,IAAI,EAAE,IAAK,CAAC;EACrE;;EAEA;EACA,IAAKY,kBAAkB,EAAG;IACzB,OAAOA,kBAAkB;EAC1B;;EAEA;EACA;EACA;EACA,IAAKpB,QAAQ,EAAG;IACf,OAAOJ,mBAAmB,CAAEC,SAAS,EAAEmB,SAAS,CAAE,CAAC,CAAE,EAAEjB,OAAQ,CAAC;EACjE;;EAEA;EACA,OAAO,IAAI;AACZ","ignoreList":[]}