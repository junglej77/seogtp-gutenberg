{"version":3,"names":["memoize","__","_n","sprintf","getBlockTypes","globalStylesChangesCache","Map","EMPTY_ARRAY","translationMap","caption","link","button","heading","h1","h2","h3","h4","h5","h6","getBlockNames","reduce","accumulator","name","title","isObject","obj","getTranslation","key","keyArray","split","blockName","undefined","deepCompare","changedObject","originalObject","parentPath","slice","join","allKeys","Set","Object","keys","diffs","path","changedPath","concat","getGlobalStylesChangelist","next","previous","cacheKey","JSON","stringify","has","get","changedValueTree","styles","background","color","typography","spacing","blocks","elements","settings","length","set","result","acc","curr","translation","push","getGlobalStylesChanges","options","changeList","changesLength","maxResults","entries","group","includes","map","changeValues","changeValuesLength","joinedChangesValue"],"sources":["@wordpress/block-editor/src/components/global-styles/get-global-styles-changes.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport memoize from 'memize';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { __, _n, sprintf } from '@wordpress/i18n';\r\nimport { getBlockTypes } from '@wordpress/blocks';\r\n\r\nconst globalStylesChangesCache = new Map();\r\nconst EMPTY_ARRAY = [];\r\nconst translationMap = {\r\n\tcaption: __( 'Caption' ),\r\n\tlink: __( 'Link' ),\r\n\tbutton: __( 'Button' ),\r\n\theading: __( 'Heading' ),\r\n\th1: __( 'H1' ),\r\n\th2: __( 'H2' ),\r\n\th3: __( 'H3' ),\r\n\th4: __( 'H4' ),\r\n\th5: __( 'H5' ),\r\n\th6: __( 'H6' ),\r\n\t'settings.color': __( 'Color' ),\r\n\t'settings.typography': __( 'Typography' ),\r\n\t'styles.color': __( 'Colors' ),\r\n\t'styles.spacing': __( 'Spacing' ),\r\n\t'styles.background': __( 'Background' ),\r\n\t'styles.typography': __( 'Typography' ),\r\n};\r\nconst getBlockNames = memoize( () =>\r\n\tgetBlockTypes().reduce( ( accumulator, { name, title } ) => {\r\n\t\taccumulator[ name ] = title;\r\n\t\treturn accumulator;\r\n\t}, {} )\r\n);\r\nconst isObject = ( obj ) => obj !== null && typeof obj === 'object';\r\n\r\n/**\r\n * Get the translation for a given global styles key.\r\n * @param {string} key A key representing a path to a global style property or setting.\r\n * @return {string|undefined}                A translated key or undefined if no translation exists.\r\n */\r\nfunction getTranslation( key ) {\r\n\tif ( translationMap[ key ] ) {\r\n\t\treturn translationMap[ key ];\r\n\t}\r\n\r\n\tconst keyArray = key.split( '.' );\r\n\r\n\tif ( keyArray?.[ 0 ] === 'blocks' ) {\r\n\t\tconst blockName = getBlockNames()?.[ keyArray[ 1 ] ];\r\n\t\treturn blockName || keyArray[ 1 ];\r\n\t}\r\n\r\n\tif ( keyArray?.[ 0 ] === 'elements' ) {\r\n\t\treturn translationMap[ keyArray[ 1 ] ] || keyArray[ 1 ];\r\n\t}\r\n\r\n\treturn undefined;\r\n}\r\n\r\n/**\r\n * A deep comparison of two objects, optimized for comparing global styles.\r\n * @param {Object} changedObject  The changed object to compare.\r\n * @param {Object} originalObject The original object to compare against.\r\n * @param {string} parentPath     A key/value pair object of block names and their rendered titles.\r\n * @return {string[]}             An array of paths whose values have changed.\r\n */\r\nfunction deepCompare( changedObject, originalObject, parentPath = '' ) {\r\n\t// We have two non-object values to compare.\r\n\tif ( ! isObject( changedObject ) && ! isObject( originalObject ) ) {\r\n\t\t/*\r\n\t\t * Only return a path if the value has changed.\r\n\t\t * And then only the path name up to 2 levels deep.\r\n\t\t */\r\n\t\treturn changedObject !== originalObject\r\n\t\t\t? parentPath.split( '.' ).slice( 0, 2 ).join( '.' )\r\n\t\t\t: undefined;\r\n\t}\r\n\r\n\t// Enable comparison when an object doesn't have a corresponding property to compare.\r\n\tchangedObject = isObject( changedObject ) ? changedObject : {};\r\n\toriginalObject = isObject( originalObject ) ? originalObject : {};\r\n\r\n\tconst allKeys = new Set( [\r\n\t\t...Object.keys( changedObject ),\r\n\t\t...Object.keys( originalObject ),\r\n\t] );\r\n\r\n\tlet diffs = [];\r\n\tfor ( const key of allKeys ) {\r\n\t\tconst path = parentPath ? parentPath + '.' + key : key;\r\n\t\tconst changedPath = deepCompare(\r\n\t\t\tchangedObject[ key ],\r\n\t\t\toriginalObject[ key ],\r\n\t\t\tpath\r\n\t\t);\r\n\t\tif ( changedPath ) {\r\n\t\t\tdiffs = diffs.concat( changedPath );\r\n\t\t}\r\n\t}\r\n\treturn diffs;\r\n}\r\n\r\n/**\r\n * Returns an array of translated summarized global styles changes.\r\n * Results are cached using a Map() key of `JSON.stringify( { next, previous } )`.\r\n *\r\n * @param {Object} next     The changed object to compare.\r\n * @param {Object} previous The original object to compare against.\r\n * @return {Array[]}        A 2-dimensional array of tuples: [ \"group\", \"translated change\" ].\r\n */\r\nexport function getGlobalStylesChangelist( next, previous ) {\r\n\tconst cacheKey = JSON.stringify( { next, previous } );\r\n\r\n\tif ( globalStylesChangesCache.has( cacheKey ) ) {\r\n\t\treturn globalStylesChangesCache.get( cacheKey );\r\n\t}\r\n\r\n\t/*\r\n\t * Compare the two changesets with normalized keys.\r\n\t * The order of these keys determines the order in which\r\n\t * they'll appear in the results.\r\n\t */\r\n\tconst changedValueTree = deepCompare(\r\n\t\t{\r\n\t\t\tstyles: {\r\n\t\t\t\tbackground: next?.styles?.background,\r\n\t\t\t\tcolor: next?.styles?.color,\r\n\t\t\t\ttypography: next?.styles?.typography,\r\n\t\t\t\tspacing: next?.styles?.spacing,\r\n\t\t\t},\r\n\t\t\tblocks: next?.styles?.blocks,\r\n\t\t\telements: next?.styles?.elements,\r\n\t\t\tsettings: next?.settings,\r\n\t\t},\r\n\t\t{\r\n\t\t\tstyles: {\r\n\t\t\t\tbackground: previous?.styles?.background,\r\n\t\t\t\tcolor: previous?.styles?.color,\r\n\t\t\t\ttypography: previous?.styles?.typography,\r\n\t\t\t\tspacing: previous?.styles?.spacing,\r\n\t\t\t},\r\n\t\t\tblocks: previous?.styles?.blocks,\r\n\t\t\telements: previous?.styles?.elements,\r\n\t\t\tsettings: previous?.settings,\r\n\t\t}\r\n\t);\r\n\r\n\tif ( ! changedValueTree.length ) {\r\n\t\tglobalStylesChangesCache.set( cacheKey, EMPTY_ARRAY );\r\n\t\treturn EMPTY_ARRAY;\r\n\t}\r\n\r\n\t// Remove duplicate results.\r\n\tconst result = [ ...new Set( changedValueTree ) ]\r\n\t\t/*\r\n\t\t * Translate the keys.\r\n\t\t * Remove empty translations.\r\n\t\t */\r\n\t\t.reduce( ( acc, curr ) => {\r\n\t\t\tconst translation = getTranslation( curr );\r\n\t\t\tif ( translation ) {\r\n\t\t\t\tacc.push( [ curr.split( '.' )[ 0 ], translation ] );\r\n\t\t\t}\r\n\t\t\treturn acc;\r\n\t\t}, [] );\r\n\r\n\tglobalStylesChangesCache.set( cacheKey, result );\r\n\r\n\treturn result;\r\n}\r\n\r\n/**\r\n * From a getGlobalStylesChangelist() result, returns an array of translated global styles changes, grouped by type.\r\n * The types are 'blocks', 'elements', 'settings', and 'styles'.\r\n *\r\n * @param {Object}              next     The changed object to compare.\r\n * @param {Object}              previous The original object to compare against.\r\n * @param {{maxResults:number}} options  Options. maxResults: results to return before truncating.\r\n * @return {string[]}                    An array of translated changes.\r\n */\r\nexport default function getGlobalStylesChanges( next, previous, options = {} ) {\r\n\tlet changeList = getGlobalStylesChangelist( next, previous );\r\n\tconst changesLength = changeList.length;\r\n\tconst { maxResults } = options;\r\n\r\n\tif ( changesLength ) {\r\n\t\t// Truncate to `n` results if necessary.\r\n\t\tif ( !! maxResults && changesLength > maxResults ) {\r\n\t\t\tchangeList = changeList.slice( 0, maxResults );\r\n\t\t}\r\n\t\treturn Object.entries(\r\n\t\t\tchangeList.reduce( ( acc, curr ) => {\r\n\t\t\t\tconst group = acc[ curr[ 0 ] ] || [];\r\n\t\t\t\tif ( ! group.includes( curr[ 1 ] ) ) {\r\n\t\t\t\t\tacc[ curr[ 0 ] ] = [ ...group, curr[ 1 ] ];\r\n\t\t\t\t}\r\n\t\t\t\treturn acc;\r\n\t\t\t}, {} )\r\n\t\t).map( ( [ key, changeValues ] ) => {\r\n\t\t\tconst changeValuesLength = changeValues.length;\r\n\t\t\tconst joinedChangesValue = changeValues.join(\r\n\t\t\t\t/* translators: Used between list items, there is a space after the comma. */\r\n\t\t\t\t__( ', ' ) // eslint-disable-line @wordpress/i18n-no-flanking-whitespace\r\n\t\t\t);\r\n\t\t\tswitch ( key ) {\r\n\t\t\t\tcase 'blocks': {\r\n\t\t\t\t\treturn sprintf(\r\n\t\t\t\t\t\t// translators: %s: a list of block names separated by a comma.\r\n\t\t\t\t\t\t_n( '%s block.', '%s blocks.', changeValuesLength ),\r\n\t\t\t\t\t\tjoinedChangesValue\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tcase 'elements': {\r\n\t\t\t\t\treturn sprintf(\r\n\t\t\t\t\t\t// translators: %s: a list of element names separated by a comma.\r\n\t\t\t\t\t\t_n( '%s element.', '%s elements.', changeValuesLength ),\r\n\t\t\t\t\t\tjoinedChangesValue\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tcase 'settings': {\r\n\t\t\t\t\treturn sprintf(\r\n\t\t\t\t\t\t// translators: %s: a list of theme.json setting labels separated by a comma.\r\n\t\t\t\t\t\t__( '%s settings.' ),\r\n\t\t\t\t\t\tjoinedChangesValue\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tcase 'styles': {\r\n\t\t\t\t\treturn sprintf(\r\n\t\t\t\t\t\t// translators: %s: a list of theme.json top-level styles labels separated by a comma.\r\n\t\t\t\t\t\t__( '%s styles.' ),\r\n\t\t\t\t\t\tjoinedChangesValue\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tdefault: {\r\n\t\t\t\t\treturn sprintf(\r\n\t\t\t\t\t\t// translators: %s: a list of global styles changes separated by a comma.\r\n\t\t\t\t\t\t__( '%s.' ),\r\n\t\t\t\t\t\tjoinedChangesValue\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n\r\n\treturn EMPTY_ARRAY;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,OAAO,MAAM,QAAQ;;AAE5B;AACA;AACA;AACA,SAASC,EAAE,EAAEC,EAAE,EAAEC,OAAO,QAAQ,iBAAiB;AACjD,SAASC,aAAa,QAAQ,mBAAmB;AAEjD,MAAMC,wBAAwB,GAAG,IAAIC,GAAG,CAAC,CAAC;AAC1C,MAAMC,WAAW,GAAG,EAAE;AACtB,MAAMC,cAAc,GAAG;EACtBC,OAAO,EAAER,EAAE,CAAE,SAAU,CAAC;EACxBS,IAAI,EAAET,EAAE,CAAE,MAAO,CAAC;EAClBU,MAAM,EAAEV,EAAE,CAAE,QAAS,CAAC;EACtBW,OAAO,EAAEX,EAAE,CAAE,SAAU,CAAC;EACxBY,EAAE,EAAEZ,EAAE,CAAE,IAAK,CAAC;EACda,EAAE,EAAEb,EAAE,CAAE,IAAK,CAAC;EACdc,EAAE,EAAEd,EAAE,CAAE,IAAK,CAAC;EACde,EAAE,EAAEf,EAAE,CAAE,IAAK,CAAC;EACdgB,EAAE,EAAEhB,EAAE,CAAE,IAAK,CAAC;EACdiB,EAAE,EAAEjB,EAAE,CAAE,IAAK,CAAC;EACd,gBAAgB,EAAEA,EAAE,CAAE,OAAQ,CAAC;EAC/B,qBAAqB,EAAEA,EAAE,CAAE,YAAa,CAAC;EACzC,cAAc,EAAEA,EAAE,CAAE,QAAS,CAAC;EAC9B,gBAAgB,EAAEA,EAAE,CAAE,SAAU,CAAC;EACjC,mBAAmB,EAAEA,EAAE,CAAE,YAAa,CAAC;EACvC,mBAAmB,EAAEA,EAAE,CAAE,YAAa;AACvC,CAAC;AACD,MAAMkB,aAAa,GAAGnB,OAAO,CAAE,MAC9BI,aAAa,CAAC,CAAC,CAACgB,MAAM,CAAE,CAAEC,WAAW,EAAE;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAM;EAC3DF,WAAW,CAAEC,IAAI,CAAE,GAAGC,KAAK;EAC3B,OAAOF,WAAW;AACnB,CAAC,EAAE,CAAC,CAAE,CACP,CAAC;AACD,MAAMG,QAAQ,GAAKC,GAAG,IAAMA,GAAG,KAAK,IAAI,IAAI,OAAOA,GAAG,KAAK,QAAQ;;AAEnE;AACA;AACA;AACA;AACA;AACA,SAASC,cAAcA,CAAEC,GAAG,EAAG;EAC9B,IAAKnB,cAAc,CAAEmB,GAAG,CAAE,EAAG;IAC5B,OAAOnB,cAAc,CAAEmB,GAAG,CAAE;EAC7B;EAEA,MAAMC,QAAQ,GAAGD,GAAG,CAACE,KAAK,CAAE,GAAI,CAAC;EAEjC,IAAKD,QAAQ,GAAI,CAAC,CAAE,KAAK,QAAQ,EAAG;IACnC,MAAME,SAAS,GAAGX,aAAa,CAAC,CAAC,GAAIS,QAAQ,CAAE,CAAC,CAAE,CAAE;IACpD,OAAOE,SAAS,IAAIF,QAAQ,CAAE,CAAC,CAAE;EAClC;EAEA,IAAKA,QAAQ,GAAI,CAAC,CAAE,KAAK,UAAU,EAAG;IACrC,OAAOpB,cAAc,CAAEoB,QAAQ,CAAE,CAAC,CAAE,CAAE,IAAIA,QAAQ,CAAE,CAAC,CAAE;EACxD;EAEA,OAAOG,SAAS;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAWA,CAAEC,aAAa,EAAEC,cAAc,EAAEC,UAAU,GAAG,EAAE,EAAG;EACtE;EACA,IAAK,CAAEX,QAAQ,CAAES,aAAc,CAAC,IAAI,CAAET,QAAQ,CAAEU,cAAe,CAAC,EAAG;IAClE;AACF;AACA;AACA;IACE,OAAOD,aAAa,KAAKC,cAAc,GACpCC,UAAU,CAACN,KAAK,CAAE,GAAI,CAAC,CAACO,KAAK,CAAE,CAAC,EAAE,CAAE,CAAC,CAACC,IAAI,CAAE,GAAI,CAAC,GACjDN,SAAS;EACb;;EAEA;EACAE,aAAa,GAAGT,QAAQ,CAAES,aAAc,CAAC,GAAGA,aAAa,GAAG,CAAC,CAAC;EAC9DC,cAAc,GAAGV,QAAQ,CAAEU,cAAe,CAAC,GAAGA,cAAc,GAAG,CAAC,CAAC;EAEjE,MAAMI,OAAO,GAAG,IAAIC,GAAG,CAAE,CACxB,GAAGC,MAAM,CAACC,IAAI,CAAER,aAAc,CAAC,EAC/B,GAAGO,MAAM,CAACC,IAAI,CAAEP,cAAe,CAAC,CAC/B,CAAC;EAEH,IAAIQ,KAAK,GAAG,EAAE;EACd,KAAM,MAAMf,GAAG,IAAIW,OAAO,EAAG;IAC5B,MAAMK,IAAI,GAAGR,UAAU,GAAGA,UAAU,GAAG,GAAG,GAAGR,GAAG,GAAGA,GAAG;IACtD,MAAMiB,WAAW,GAAGZ,WAAW,CAC9BC,aAAa,CAAEN,GAAG,CAAE,EACpBO,cAAc,CAAEP,GAAG,CAAE,EACrBgB,IACD,CAAC;IACD,IAAKC,WAAW,EAAG;MAClBF,KAAK,GAAGA,KAAK,CAACG,MAAM,CAAED,WAAY,CAAC;IACpC;EACD;EACA,OAAOF,KAAK;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,yBAAyBA,CAAEC,IAAI,EAAEC,QAAQ,EAAG;EAC3D,MAAMC,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAAE;IAAEJ,IAAI;IAAEC;EAAS,CAAE,CAAC;EAErD,IAAK3C,wBAAwB,CAAC+C,GAAG,CAAEH,QAAS,CAAC,EAAG;IAC/C,OAAO5C,wBAAwB,CAACgD,GAAG,CAAEJ,QAAS,CAAC;EAChD;;EAEA;AACD;AACA;AACA;AACA;EACC,MAAMK,gBAAgB,GAAGtB,WAAW,CACnC;IACCuB,MAAM,EAAE;MACPC,UAAU,EAAET,IAAI,EAAEQ,MAAM,EAAEC,UAAU;MACpCC,KAAK,EAAEV,IAAI,EAAEQ,MAAM,EAAEE,KAAK;MAC1BC,UAAU,EAAEX,IAAI,EAAEQ,MAAM,EAAEG,UAAU;MACpCC,OAAO,EAAEZ,IAAI,EAAEQ,MAAM,EAAEI;IACxB,CAAC;IACDC,MAAM,EAAEb,IAAI,EAAEQ,MAAM,EAAEK,MAAM;IAC5BC,QAAQ,EAAEd,IAAI,EAAEQ,MAAM,EAAEM,QAAQ;IAChCC,QAAQ,EAAEf,IAAI,EAAEe;EACjB,CAAC,EACD;IACCP,MAAM,EAAE;MACPC,UAAU,EAAER,QAAQ,EAAEO,MAAM,EAAEC,UAAU;MACxCC,KAAK,EAAET,QAAQ,EAAEO,MAAM,EAAEE,KAAK;MAC9BC,UAAU,EAAEV,QAAQ,EAAEO,MAAM,EAAEG,UAAU;MACxCC,OAAO,EAAEX,QAAQ,EAAEO,MAAM,EAAEI;IAC5B,CAAC;IACDC,MAAM,EAAEZ,QAAQ,EAAEO,MAAM,EAAEK,MAAM;IAChCC,QAAQ,EAAEb,QAAQ,EAAEO,MAAM,EAAEM,QAAQ;IACpCC,QAAQ,EAAEd,QAAQ,EAAEc;EACrB,CACD,CAAC;EAED,IAAK,CAAER,gBAAgB,CAACS,MAAM,EAAG;IAChC1D,wBAAwB,CAAC2D,GAAG,CAAEf,QAAQ,EAAE1C,WAAY,CAAC;IACrD,OAAOA,WAAW;EACnB;;EAEA;EACA,MAAM0D,MAAM,GAAG,CAAE,GAAG,IAAI1B,GAAG,CAAEe,gBAAiB,CAAC;EAC9C;AACF;AACA;AACA,KAHE,CAIClC,MAAM,CAAE,CAAE8C,GAAG,EAAEC,IAAI,KAAM;IACzB,MAAMC,WAAW,GAAG1C,cAAc,CAAEyC,IAAK,CAAC;IAC1C,IAAKC,WAAW,EAAG;MAClBF,GAAG,CAACG,IAAI,CAAE,CAAEF,IAAI,CAACtC,KAAK,CAAE,GAAI,CAAC,CAAE,CAAC,CAAE,EAAEuC,WAAW,CAAG,CAAC;IACpD;IACA,OAAOF,GAAG;EACX,CAAC,EAAE,EAAG,CAAC;EAER7D,wBAAwB,CAAC2D,GAAG,CAAEf,QAAQ,EAAEgB,MAAO,CAAC;EAEhD,OAAOA,MAAM;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASK,sBAAsBA,CAAEvB,IAAI,EAAEC,QAAQ,EAAEuB,OAAO,GAAG,CAAC,CAAC,EAAG;EAC9E,IAAIC,UAAU,GAAG1B,yBAAyB,CAAEC,IAAI,EAAEC,QAAS,CAAC;EAC5D,MAAMyB,aAAa,GAAGD,UAAU,CAACT,MAAM;EACvC,MAAM;IAAEW;EAAW,CAAC,GAAGH,OAAO;EAE9B,IAAKE,aAAa,EAAG;IACpB;IACA,IAAK,CAAC,CAAEC,UAAU,IAAID,aAAa,GAAGC,UAAU,EAAG;MAClDF,UAAU,GAAGA,UAAU,CAACpC,KAAK,CAAE,CAAC,EAAEsC,UAAW,CAAC;IAC/C;IACA,OAAOlC,MAAM,CAACmC,OAAO,CACpBH,UAAU,CAACpD,MAAM,CAAE,CAAE8C,GAAG,EAAEC,IAAI,KAAM;MACnC,MAAMS,KAAK,GAAGV,GAAG,CAAEC,IAAI,CAAE,CAAC,CAAE,CAAE,IAAI,EAAE;MACpC,IAAK,CAAES,KAAK,CAACC,QAAQ,CAAEV,IAAI,CAAE,CAAC,CAAG,CAAC,EAAG;QACpCD,GAAG,CAAEC,IAAI,CAAE,CAAC,CAAE,CAAE,GAAG,CAAE,GAAGS,KAAK,EAAET,IAAI,CAAE,CAAC,CAAE,CAAE;MAC3C;MACA,OAAOD,GAAG;IACX,CAAC,EAAE,CAAC,CAAE,CACP,CAAC,CAACY,GAAG,CAAE,CAAE,CAAEnD,GAAG,EAAEoD,YAAY,CAAE,KAAM;MACnC,MAAMC,kBAAkB,GAAGD,YAAY,CAAChB,MAAM;MAC9C,MAAMkB,kBAAkB,GAAGF,YAAY,CAAC1C,IAAI,EAC3C;MACApC,EAAE,CAAE,IAAK,CAAC,CAAC;MACZ,CAAC;MACD,QAAS0B,GAAG;QACX,KAAK,QAAQ;UAAE;YACd,OAAOxB,OAAO;YACb;YACAD,EAAE,CAAE,WAAW,EAAE,YAAY,EAAE8E,kBAAmB,CAAC,EACnDC,kBACD,CAAC;UACF;QACA,KAAK,UAAU;UAAE;YAChB,OAAO9E,OAAO;YACb;YACAD,EAAE,CAAE,aAAa,EAAE,cAAc,EAAE8E,kBAAmB,CAAC,EACvDC,kBACD,CAAC;UACF;QACA,KAAK,UAAU;UAAE;YAChB,OAAO9E,OAAO;YACb;YACAF,EAAE,CAAE,cAAe,CAAC,EACpBgF,kBACD,CAAC;UACF;QACA,KAAK,QAAQ;UAAE;YACd,OAAO9E,OAAO;YACb;YACAF,EAAE,CAAE,YAAa,CAAC,EAClBgF,kBACD,CAAC;UACF;QACA;UAAS;YACR,OAAO9E,OAAO;YACb;YACAF,EAAE,CAAE,KAAM,CAAC,EACXgF,kBACD,CAAC;UACF;MACD;IACD,CAAE,CAAC;EACJ;EAEA,OAAO1E,WAAW;AACnB","ignoreList":[]}