{"version":3,"names":["useDispatch","useSelect","useEffect","useMemo","usePrevious","store","blockEditorStore","GridRect","setImmutably","useGridLayoutSync","clientId","gridClientId","gridLayout","blockOrder","selectedBlockLayout","select","_getBlockAttributes$l","getBlockAttributes","getBlockOrder","selectedBlock","getSelectedBlock","layout","attributes","style","getBlockRootClientId","updateBlockAttributes","__unstableMarkNextChangeAsNotPersistent","selectedBlockRect","previouslySelectedBlockRect","previousIsManualPlacement","isManualPlacement","previousBlockOrder","updates","occupiedRects","_getBlockAttributes$s","columnStart","rowStart","columnSpan","rowSpan","push","_attributes$style$lay","newColumnStart","newRowStart","placeBlock","columnCount","columnEnd","rowEnd","bottomMostRow","Math","max","map","r","rowCount","includes","_attributes$style$lay2","rootClientId","rootAttributes","type","hasEmptyLayoutAttribute","Object","keys","length","undefined","_attributes$style$lay3","gridColumnCount","blockColumnSpan","blockRowSpan","startColumn","startRow","row","column","candidateRect","some","intersectsRect"],"sources":["@wordpress/block-editor/src/components/grid/use-grid-layout-sync.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useDispatch, useSelect } from '@wordpress/data';\r\nimport { useEffect, useMemo } from '@wordpress/element';\r\nimport { usePrevious } from '@wordpress/compose';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as blockEditorStore } from '../../store';\r\nimport { GridRect } from './utils';\r\nimport { setImmutably } from '../../utils/object';\r\n\r\nexport function useGridLayoutSync( { clientId: gridClientId } ) {\r\n\tconst { gridLayout, blockOrder, selectedBlockLayout } = useSelect(\r\n\t\t( select ) => {\r\n\t\t\tconst { getBlockAttributes, getBlockOrder } =\r\n\t\t\t\tselect( blockEditorStore );\r\n\t\t\tconst selectedBlock = select( blockEditorStore ).getSelectedBlock();\r\n\t\t\treturn {\r\n\t\t\t\tgridLayout: getBlockAttributes( gridClientId ).layout ?? {},\r\n\t\t\t\tblockOrder: getBlockOrder( gridClientId ),\r\n\t\t\t\tselectedBlockLayout: selectedBlock?.attributes.style?.layout,\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ gridClientId ]\r\n\t);\r\n\r\n\tconst { getBlockAttributes, getBlockRootClientId } =\r\n\t\tuseSelect( blockEditorStore );\r\n\tconst { updateBlockAttributes, __unstableMarkNextChangeAsNotPersistent } =\r\n\t\tuseDispatch( blockEditorStore );\r\n\r\n\tconst selectedBlockRect = useMemo(\r\n\t\t() =>\r\n\t\t\tselectedBlockLayout ? new GridRect( selectedBlockLayout ) : null,\r\n\t\t[ selectedBlockLayout ]\r\n\t);\r\n\r\n\tconst previouslySelectedBlockRect = usePrevious( selectedBlockRect );\r\n\tconst previousIsManualPlacement = usePrevious(\r\n\t\tgridLayout.isManualPlacement\r\n\t);\r\n\tconst previousBlockOrder = usePrevious( blockOrder );\r\n\r\n\tuseEffect( () => {\r\n\t\tconst updates = {};\r\n\r\n\t\tif ( gridLayout.isManualPlacement ) {\r\n\t\t\tconst occupiedRects = [];\r\n\r\n\t\t\t// Respect the position of blocks that already have a columnStart and rowStart value.\r\n\t\t\tfor ( const clientId of blockOrder ) {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tcolumnStart,\r\n\t\t\t\t\trowStart,\r\n\t\t\t\t\tcolumnSpan = 1,\r\n\t\t\t\t\trowSpan = 1,\r\n\t\t\t\t} = getBlockAttributes( clientId ).style?.layout ?? {};\r\n\t\t\t\tif ( ! columnStart || ! rowStart ) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\toccupiedRects.push(\r\n\t\t\t\t\tnew GridRect( {\r\n\t\t\t\t\t\tcolumnStart,\r\n\t\t\t\t\t\trowStart,\r\n\t\t\t\t\t\tcolumnSpan,\r\n\t\t\t\t\t\trowSpan,\r\n\t\t\t\t\t} )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// When in manual mode, ensure that every block has a columnStart and rowStart value.\r\n\t\t\tfor ( const clientId of blockOrder ) {\r\n\t\t\t\tconst attributes = getBlockAttributes( clientId );\r\n\t\t\t\tconst {\r\n\t\t\t\t\tcolumnStart,\r\n\t\t\t\t\trowStart,\r\n\t\t\t\t\tcolumnSpan = 1,\r\n\t\t\t\t\trowSpan = 1,\r\n\t\t\t\t} = attributes.style?.layout ?? {};\r\n\t\t\t\tif ( columnStart && rowStart ) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tconst [ newColumnStart, newRowStart ] = placeBlock(\r\n\t\t\t\t\toccupiedRects,\r\n\t\t\t\t\tgridLayout.columnCount,\r\n\t\t\t\t\tcolumnSpan,\r\n\t\t\t\t\trowSpan,\r\n\t\t\t\t\tpreviouslySelectedBlockRect?.columnEnd,\r\n\t\t\t\t\tpreviouslySelectedBlockRect?.rowEnd\r\n\t\t\t\t);\r\n\t\t\t\toccupiedRects.push(\r\n\t\t\t\t\tnew GridRect( {\r\n\t\t\t\t\t\tcolumnStart: newColumnStart,\r\n\t\t\t\t\t\trowStart: newRowStart,\r\n\t\t\t\t\t\tcolumnSpan,\r\n\t\t\t\t\t\trowSpan,\r\n\t\t\t\t\t} )\r\n\t\t\t\t);\r\n\t\t\t\tupdates[ clientId ] = {\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t...attributes.style,\r\n\t\t\t\t\t\tlayout: {\r\n\t\t\t\t\t\t\t...attributes.style?.layout,\r\n\t\t\t\t\t\t\tcolumnStart: newColumnStart,\r\n\t\t\t\t\t\t\trowStart: newRowStart,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// Ensure there's enough rows to fit all blocks.\r\n\t\t\tconst bottomMostRow = Math.max(\r\n\t\t\t\t...occupiedRects.map( ( r ) => r.rowEnd )\r\n\t\t\t);\r\n\t\t\tif (\r\n\t\t\t\t! gridLayout.rowCount ||\r\n\t\t\t\tgridLayout.rowCount < bottomMostRow\r\n\t\t\t) {\r\n\t\t\t\tupdates[ gridClientId ] = {\r\n\t\t\t\t\tlayout: {\r\n\t\t\t\t\t\t...gridLayout,\r\n\t\t\t\t\t\trowCount: bottomMostRow,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// Unset grid layout attributes for blocks removed from the grid.\r\n\t\t\tfor ( const clientId of previousBlockOrder ?? [] ) {\r\n\t\t\t\tif ( ! blockOrder.includes( clientId ) ) {\r\n\t\t\t\t\tconst rootClientId = getBlockRootClientId( clientId );\r\n\r\n\t\t\t\t\t// Block was removed from the editor, so nothing to do.\r\n\t\t\t\t\tif ( rootClientId === null ) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Check if the block is being moved to another grid.\r\n\t\t\t\t\t// If so, do nothing and let the new grid parent handle\r\n\t\t\t\t\t// the attributes.\r\n\t\t\t\t\tconst rootAttributes = getBlockAttributes( rootClientId );\r\n\t\t\t\t\tif ( rootAttributes?.layout?.type === 'grid' ) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst attributes = getBlockAttributes( clientId );\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tcolumnStart,\r\n\t\t\t\t\t\trowStart,\r\n\t\t\t\t\t\tcolumnSpan,\r\n\t\t\t\t\t\trowSpan,\r\n\t\t\t\t\t\t...layout\r\n\t\t\t\t\t} = attributes.style?.layout ?? {};\r\n\r\n\t\t\t\t\tif ( columnStart || rowStart || columnSpan || rowSpan ) {\r\n\t\t\t\t\t\tconst hasEmptyLayoutAttribute =\r\n\t\t\t\t\t\t\tObject.keys( layout ).length === 0;\r\n\r\n\t\t\t\t\t\tupdates[ clientId ] = setImmutably(\r\n\t\t\t\t\t\t\tattributes,\r\n\t\t\t\t\t\t\t[ 'style', 'layout' ],\r\n\t\t\t\t\t\t\thasEmptyLayoutAttribute ? undefined : layout\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Remove all of the columnStart and rowStart values\r\n\t\t\t// when switching from manual to auto mode,\r\n\t\t\tif ( previousIsManualPlacement === true ) {\r\n\t\t\t\tfor ( const clientId of blockOrder ) {\r\n\t\t\t\t\tconst attributes = getBlockAttributes( clientId );\r\n\t\t\t\t\tconst { columnStart, rowStart, ...layout } =\r\n\t\t\t\t\t\tattributes.style?.layout ?? {};\r\n\t\t\t\t\t// Only update attributes if columnStart or rowStart are set.\r\n\t\t\t\t\tif ( columnStart || rowStart ) {\r\n\t\t\t\t\t\tconst hasEmptyLayoutAttribute =\r\n\t\t\t\t\t\t\tObject.keys( layout ).length === 0;\r\n\r\n\t\t\t\t\t\tupdates[ clientId ] = setImmutably(\r\n\t\t\t\t\t\t\tattributes,\r\n\t\t\t\t\t\t\t[ 'style', 'layout' ],\r\n\t\t\t\t\t\t\thasEmptyLayoutAttribute ? undefined : layout\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove row styles in auto mode\r\n\t\t\tif ( gridLayout.rowCount ) {\r\n\t\t\t\tupdates[ gridClientId ] = {\r\n\t\t\t\t\tlayout: {\r\n\t\t\t\t\t\t...gridLayout,\r\n\t\t\t\t\t\trowCount: undefined,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( Object.keys( updates ).length ) {\r\n\t\t\t__unstableMarkNextChangeAsNotPersistent();\r\n\t\t\tupdateBlockAttributes(\r\n\t\t\t\tObject.keys( updates ),\r\n\t\t\t\tupdates,\r\n\t\t\t\t/* uniqueByBlock: */ true\r\n\t\t\t);\r\n\t\t}\r\n\t}, [\r\n\t\t// Actual deps to sync:\r\n\t\tgridClientId,\r\n\t\tgridLayout,\r\n\t\tpreviousBlockOrder,\r\n\t\tblockOrder,\r\n\t\tpreviouslySelectedBlockRect,\r\n\t\tpreviousIsManualPlacement,\r\n\t\t// These won't change, but the linter thinks they might:\r\n\t\t__unstableMarkNextChangeAsNotPersistent,\r\n\t\tgetBlockAttributes,\r\n\t\tgetBlockRootClientId,\r\n\t\tupdateBlockAttributes,\r\n\t] );\r\n}\r\n\r\n/**\r\n * @param {GridRect[]} occupiedRects\r\n * @param {number}     gridColumnCount\r\n * @param {number}     blockColumnSpan\r\n * @param {number}     blockRowSpan\r\n * @param {number?}    startColumn\r\n * @param {number?}    startRow\r\n */\r\nfunction placeBlock(\r\n\toccupiedRects,\r\n\tgridColumnCount,\r\n\tblockColumnSpan,\r\n\tblockRowSpan,\r\n\tstartColumn = 1,\r\n\tstartRow = 1\r\n) {\r\n\tfor ( let row = startRow; ; row++ ) {\r\n\t\tfor (\r\n\t\t\tlet column = row === startRow ? startColumn : 1;\r\n\t\t\tcolumn <= gridColumnCount;\r\n\t\t\tcolumn++\r\n\t\t) {\r\n\t\t\tconst candidateRect = new GridRect( {\r\n\t\t\t\tcolumnStart: column,\r\n\t\t\t\trowStart: row,\r\n\t\t\t\tcolumnSpan: blockColumnSpan,\r\n\t\t\t\trowSpan: blockRowSpan,\r\n\t\t\t} );\r\n\t\t\tif (\r\n\t\t\t\t! occupiedRects.some( ( r ) =>\r\n\t\t\t\t\tr.intersectsRect( candidateRect )\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\treturn [ column, row ];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"],"mappings":"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","ignoreList":[]}