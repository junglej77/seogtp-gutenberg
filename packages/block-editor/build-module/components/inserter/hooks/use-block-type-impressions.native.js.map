{"version":3,"names":["useSelect","useDispatch","setBlockTypeImpressions","store","blockEditorStore","useBlockTypeImpressions","blockTypes","blockTypeImpressions","select","getSettings","getBlockEditorSettings","impressions","updateSettings","items","map","blockType","isNew","name","trackBlockTypeSelected","updatedBlockTypeImpressions"],"sources":["@wordpress/block-editor/src/components/inserter/hooks/use-block-type-impressions.native.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useSelect, useDispatch } from '@wordpress/data';\r\nimport { setBlockTypeImpressions } from '@wordpress/react-native-bridge';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as blockEditorStore } from '../../../store';\r\n\r\nfunction useBlockTypeImpressions( blockTypes ) {\r\n\tconst { blockTypeImpressions } = useSelect( ( select ) => {\r\n\t\tconst { getSettings: getBlockEditorSettings } =\r\n\t\t\tselect( blockEditorStore );\r\n\t\tconst { impressions } = getBlockEditorSettings();\r\n\r\n\t\treturn {\r\n\t\t\tblockTypeImpressions: impressions,\r\n\t\t};\r\n\t}, [] );\r\n\tconst { updateSettings } = useDispatch( blockEditorStore );\r\n\r\n\tconst items = blockTypes.map( ( blockType ) => ( {\r\n\t\t...blockType,\r\n\t\tisNew: blockTypeImpressions[ blockType.name ] > 0,\r\n\t} ) );\r\n\tconst trackBlockTypeSelected = ( { name } ) => {\r\n\t\tif ( blockTypeImpressions[ name ] > 0 ) {\r\n\t\t\tconst updatedBlockTypeImpressions = {\r\n\t\t\t\t...blockTypeImpressions,\r\n\t\t\t\t[ name ]: 0,\r\n\t\t\t};\r\n\t\t\t// Persist block type impression to JavaScript store.\r\n\t\t\tupdateSettings( {\r\n\t\t\t\timpressions: updatedBlockTypeImpressions,\r\n\t\t\t} );\r\n\r\n\t\t\t// Persist block type impression count to native app store.\r\n\t\t\tsetBlockTypeImpressions( updatedBlockTypeImpressions );\r\n\t\t}\r\n\t};\r\n\r\n\treturn { items, trackBlockTypeSelected };\r\n}\r\n\r\nexport default useBlockTypeImpressions;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,EAAEC,WAAW,QAAQ,iBAAiB;AACxD,SAASC,uBAAuB,QAAQ,gCAAgC;;AAExE;AACA;AACA;AACA,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,gBAAgB;AAE1D,SAASC,uBAAuBA,CAAEC,UAAU,EAAG;EAC9C,MAAM;IAAEC;EAAqB,CAAC,GAAGP,SAAS,CAAIQ,MAAM,IAAM;IACzD,MAAM;MAAEC,WAAW,EAAEC;IAAuB,CAAC,GAC5CF,MAAM,CAAEJ,gBAAiB,CAAC;IAC3B,MAAM;MAAEO;IAAY,CAAC,GAAGD,sBAAsB,CAAC,CAAC;IAEhD,OAAO;MACNH,oBAAoB,EAAEI;IACvB,CAAC;EACF,CAAC,EAAE,EAAG,CAAC;EACP,MAAM;IAAEC;EAAe,CAAC,GAAGX,WAAW,CAAEG,gBAAiB,CAAC;EAE1D,MAAMS,KAAK,GAAGP,UAAU,CAACQ,GAAG,CAAIC,SAAS,KAAQ;IAChD,GAAGA,SAAS;IACZC,KAAK,EAAET,oBAAoB,CAAEQ,SAAS,CAACE,IAAI,CAAE,GAAG;EACjD,CAAC,CAAG,CAAC;EACL,MAAMC,sBAAsB,GAAGA,CAAE;IAAED;EAAK,CAAC,KAAM;IAC9C,IAAKV,oBAAoB,CAAEU,IAAI,CAAE,GAAG,CAAC,EAAG;MACvC,MAAME,2BAA2B,GAAG;QACnC,GAAGZ,oBAAoB;QACvB,CAAEU,IAAI,GAAI;MACX,CAAC;MACD;MACAL,cAAc,CAAE;QACfD,WAAW,EAAEQ;MACd,CAAE,CAAC;;MAEH;MACAjB,uBAAuB,CAAEiB,2BAA4B,CAAC;IACvD;EACD,CAAC;EAED,OAAO;IAAEN,KAAK;IAAEK;EAAuB,CAAC;AACzC;AAEA,eAAeb,uBAAuB","ignoreList":[]}