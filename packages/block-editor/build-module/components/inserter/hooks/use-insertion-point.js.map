{"version":3,"names":["useDispatch","useRegistry","useSelect","isUnmodifiedDefaultBlock","_n","sprintf","speak","useCallback","store","blockEditorStore","unlock","getIndex","destinationRootClientId","destinationIndex","rootClientId","registry","parents","select","getBlockParents","parentIndex","indexOf","getBlockIndex","getBlockOrder","length","useInsertionPoint","insertionIndex","clientId","isAppender","onSelect","shouldFocusBlock","selectBlockOnInsert","getSelectedBlock","getSelectedBlockClientId","getBlockRootClientId","selectedBlockClientId","_destinationRootClientId","_destinationIndex","undefined","replaceBlocks","insertBlocks","showInsertionPoint","hideInsertionPoint","setLastFocus","onInsertBlocks","blocks","meta","shouldForceFocusBlock","_rootClientId","selectedBlock","blockLength","Array","isArray","message","onToggleInsertionPoint","item","hasOwnProperty"],"sources":["@wordpress/block-editor/src/components/inserter/hooks/use-insertion-point.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useDispatch, useRegistry, useSelect } from '@wordpress/data';\r\nimport { isUnmodifiedDefaultBlock } from '@wordpress/blocks';\r\nimport { _n, sprintf } from '@wordpress/i18n';\r\nimport { speak } from '@wordpress/a11y';\r\nimport { useCallback } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as blockEditorStore } from '../../../store';\r\nimport { unlock } from '../../../lock-unlock';\r\n\r\nfunction getIndex( {\r\n\tdestinationRootClientId,\r\n\tdestinationIndex,\r\n\trootClientId,\r\n\tregistry,\r\n} ) {\r\n\tif ( rootClientId === destinationRootClientId ) {\r\n\t\treturn destinationIndex;\r\n\t}\r\n\tconst parents = [\r\n\t\t'',\r\n\t\t...registry\r\n\t\t\t.select( blockEditorStore )\r\n\t\t\t.getBlockParents( destinationRootClientId ),\r\n\t\tdestinationRootClientId,\r\n\t];\r\n\tconst parentIndex = parents.indexOf( rootClientId );\r\n\tif ( parentIndex !== -1 ) {\r\n\t\treturn (\r\n\t\t\tregistry\r\n\t\t\t\t.select( blockEditorStore )\r\n\t\t\t\t.getBlockIndex( parents[ parentIndex + 1 ] ) + 1\r\n\t\t);\r\n\t}\r\n\treturn registry.select( blockEditorStore ).getBlockOrder( rootClientId )\r\n\t\t.length;\r\n}\r\n\r\n/**\r\n * @typedef WPInserterConfig\r\n *\r\n * @property {string=}   rootClientId   If set, insertion will be into the\r\n *                                      block with this ID.\r\n * @property {number=}   insertionIndex If set, insertion will be into this\r\n *                                      explicit position.\r\n * @property {string=}   clientId       If set, insertion will be after the\r\n *                                      block with this ID.\r\n * @property {boolean=}  isAppender     Whether the inserter is an appender\r\n *                                      or not.\r\n * @property {Function=} onSelect       Called after insertion.\r\n */\r\n\r\n/**\r\n * Returns the insertion point state given the inserter config.\r\n *\r\n * @param {WPInserterConfig} config Inserter Config.\r\n * @return {Array} Insertion Point State (rootClientID, onInsertBlocks and onToggle).\r\n */\r\nfunction useInsertionPoint( {\r\n\trootClientId = '',\r\n\tinsertionIndex,\r\n\tclientId,\r\n\tisAppender,\r\n\tonSelect,\r\n\tshouldFocusBlock = true,\r\n\tselectBlockOnInsert = true,\r\n} ) {\r\n\tconst registry = useRegistry();\r\n\tconst { getSelectedBlock } = useSelect( blockEditorStore );\r\n\tconst { destinationRootClientId, destinationIndex } = useSelect(\r\n\t\t( select ) => {\r\n\t\t\tconst {\r\n\t\t\t\tgetSelectedBlockClientId,\r\n\t\t\t\tgetBlockRootClientId,\r\n\t\t\t\tgetBlockIndex,\r\n\t\t\t\tgetBlockOrder,\r\n\t\t\t} = select( blockEditorStore );\r\n\t\t\tconst selectedBlockClientId = getSelectedBlockClientId();\r\n\r\n\t\t\tlet _destinationRootClientId = rootClientId;\r\n\t\t\tlet _destinationIndex;\r\n\r\n\t\t\tif ( insertionIndex !== undefined ) {\r\n\t\t\t\t// Insert into a specific index.\r\n\t\t\t\t_destinationIndex = insertionIndex;\r\n\t\t\t} else if ( clientId ) {\r\n\t\t\t\t// Insert after a specific client ID.\r\n\t\t\t\t_destinationIndex = getBlockIndex( clientId );\r\n\t\t\t} else if ( ! isAppender && selectedBlockClientId ) {\r\n\t\t\t\t_destinationRootClientId = getBlockRootClientId(\r\n\t\t\t\t\tselectedBlockClientId\r\n\t\t\t\t);\r\n\t\t\t\t_destinationIndex = getBlockIndex( selectedBlockClientId ) + 1;\r\n\t\t\t} else {\r\n\t\t\t\t// Insert at the end of the list.\r\n\t\t\t\t_destinationIndex = getBlockOrder(\r\n\t\t\t\t\t_destinationRootClientId\r\n\t\t\t\t).length;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdestinationRootClientId: _destinationRootClientId,\r\n\t\t\t\tdestinationIndex: _destinationIndex,\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ rootClientId, insertionIndex, clientId, isAppender ]\r\n\t);\r\n\r\n\tconst {\r\n\t\treplaceBlocks,\r\n\t\tinsertBlocks,\r\n\t\tshowInsertionPoint,\r\n\t\thideInsertionPoint,\r\n\t\tsetLastFocus,\r\n\t} = unlock( useDispatch( blockEditorStore ) );\r\n\r\n\tconst onInsertBlocks = useCallback(\r\n\t\t( blocks, meta, shouldForceFocusBlock = false, _rootClientId ) => {\r\n\t\t\t// When we are trying to move focus or select a new block on insert, we also\r\n\t\t\t// need to clear the last focus to avoid the focus being set to the wrong block\r\n\t\t\t// when tabbing back into the canvas if the block was added from outside the\r\n\t\t\t// editor canvas.\r\n\t\t\tif (\r\n\t\t\t\tshouldForceFocusBlock ||\r\n\t\t\t\tshouldFocusBlock ||\r\n\t\t\t\tselectBlockOnInsert\r\n\t\t\t) {\r\n\t\t\t\tsetLastFocus( null );\r\n\t\t\t}\r\n\r\n\t\t\tconst selectedBlock = getSelectedBlock();\r\n\r\n\t\t\tif (\r\n\t\t\t\t! isAppender &&\r\n\t\t\t\tselectedBlock &&\r\n\t\t\t\tisUnmodifiedDefaultBlock( selectedBlock )\r\n\t\t\t) {\r\n\t\t\t\treplaceBlocks(\r\n\t\t\t\t\tselectedBlock.clientId,\r\n\t\t\t\t\tblocks,\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\tshouldFocusBlock || shouldForceFocusBlock ? 0 : null,\r\n\t\t\t\t\tmeta\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tinsertBlocks(\r\n\t\t\t\t\tblocks,\r\n\t\t\t\t\tisAppender || _rootClientId === undefined\r\n\t\t\t\t\t\t? destinationIndex\r\n\t\t\t\t\t\t: getIndex( {\r\n\t\t\t\t\t\t\t\tdestinationRootClientId,\r\n\t\t\t\t\t\t\t\tdestinationIndex,\r\n\t\t\t\t\t\t\t\trootClientId: _rootClientId,\r\n\t\t\t\t\t\t\t\tregistry,\r\n\t\t\t\t\t\t  } ),\r\n\t\t\t\t\tisAppender || _rootClientId === undefined\r\n\t\t\t\t\t\t? destinationRootClientId\r\n\t\t\t\t\t\t: _rootClientId,\r\n\t\t\t\t\tselectBlockOnInsert,\r\n\t\t\t\t\tshouldFocusBlock || shouldForceFocusBlock ? 0 : null,\r\n\t\t\t\t\tmeta\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tconst blockLength = Array.isArray( blocks ) ? blocks.length : 1;\r\n\t\t\tconst message = sprintf(\r\n\t\t\t\t// translators: %d: the name of the block that has been added\r\n\t\t\t\t_n( '%d block added.', '%d blocks added.', blockLength ),\r\n\t\t\t\tblockLength\r\n\t\t\t);\r\n\t\t\tspeak( message );\r\n\r\n\t\t\tif ( onSelect ) {\r\n\t\t\t\tonSelect( blocks );\r\n\t\t\t}\r\n\t\t},\r\n\t\t[\r\n\t\t\tisAppender,\r\n\t\t\tgetSelectedBlock,\r\n\t\t\treplaceBlocks,\r\n\t\t\tinsertBlocks,\r\n\t\t\tdestinationRootClientId,\r\n\t\t\tdestinationIndex,\r\n\t\t\tonSelect,\r\n\t\t\tshouldFocusBlock,\r\n\t\t\tselectBlockOnInsert,\r\n\t\t]\r\n\t);\r\n\r\n\tconst onToggleInsertionPoint = useCallback(\r\n\t\t( item ) => {\r\n\t\t\tif ( item?.hasOwnProperty( 'rootClientId' ) ) {\r\n\t\t\t\tshowInsertionPoint(\r\n\t\t\t\t\titem.rootClientId,\r\n\t\t\t\t\tgetIndex( {\r\n\t\t\t\t\t\tdestinationRootClientId,\r\n\t\t\t\t\t\tdestinationIndex,\r\n\t\t\t\t\t\trootClientId: item.rootClientId,\r\n\t\t\t\t\t\tregistry,\r\n\t\t\t\t\t} )\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\thideInsertionPoint();\r\n\t\t\t}\r\n\t\t},\r\n\t\t[\r\n\t\t\tshowInsertionPoint,\r\n\t\t\thideInsertionPoint,\r\n\t\t\tdestinationRootClientId,\r\n\t\t\tdestinationIndex,\r\n\t\t]\r\n\t);\r\n\r\n\treturn [ destinationRootClientId, onInsertBlocks, onToggleInsertionPoint ];\r\n}\r\n\r\nexport default useInsertionPoint;\r\n"],"mappings":"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","ignoreList":[]}