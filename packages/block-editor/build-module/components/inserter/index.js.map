{"version":3,"names":["clsx","speak","__","_x","sprintf","Dropdown","Button","Component","withDispatch","withSelect","compose","ifCondition","createBlock","store","blocksStore","plus","InserterMenu","QuickInserter","blockEditorStore","jsx","_jsx","defaultRenderToggle","onToggle","disabled","isOpen","blockTitle","hasSingleBlockType","toggleProps","prioritizePatterns","as","Wrapper","label","labelProp","onClick","rest","handleClick","event","icon","tooltipPosition","className","Inserter","constructor","arguments","bind","renderToggle","renderContent","props","directInsertBlock","hasItems","onClose","rootClientId","clientId","isAppender","showInserterHelpPanel","__experimentalIsQuick","isQuick","onSelectOrClose","selectBlockOnInsert","onSelect","blocks","firstBlock","Array","isArray","length","render","position","insertOnlyAllowedBlock","contentClassName","popoverProps","shift","expandOnMobile","headerTitle","select","shouldDirectInsert","getBlockRootClientId","hasInserterItems","getAllowedBlocks","getDirectInsertBlock","getSettings","getBlockVariations","undefined","allowedBlocks","settings","name","allowedBlockType","title","__experimentalPreferPatternsOnRoot","dispatch","ownProps","getAdjacentBlockAttributes","attributesToCopy","getBlock","getPreviousBlockClientId","result","adjacentAttributes","parentBlock","innerBlocks","lastInnerBlock","attributes","currentBlock","previousBlock","forEach","attribute","hasOwnProperty","getInsertionIndex","getBlockIndex","getBlockSelectionEnd","getBlockOrder","end","insertBlock","blockToInsert","newAttributes","message"],"sources":["@wordpress/block-editor/src/components/inserter/index.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { speak } from '@wordpress/a11y';\r\nimport { __, _x, sprintf } from '@wordpress/i18n';\r\nimport { Dropdown, Button } from '@wordpress/components';\r\nimport { Component } from '@wordpress/element';\r\nimport { withDispatch, withSelect } from '@wordpress/data';\r\nimport { compose, ifCondition } from '@wordpress/compose';\r\nimport { createBlock, store as blocksStore } from '@wordpress/blocks';\r\nimport { plus } from '@wordpress/icons';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport InserterMenu from './menu';\r\nimport QuickInserter from './quick-inserter';\r\nimport { store as blockEditorStore } from '../../store';\r\n\r\nconst defaultRenderToggle = ( {\r\n\tonToggle,\r\n\tdisabled,\r\n\tisOpen,\r\n\tblockTitle,\r\n\thasSingleBlockType,\r\n\ttoggleProps = {},\r\n\tprioritizePatterns,\r\n} ) => {\r\n\tconst {\r\n\t\tas: Wrapper = Button,\r\n\t\tlabel: labelProp,\r\n\t\tonClick,\r\n\t\t...rest\r\n\t} = toggleProps;\r\n\r\n\tlet label = labelProp;\r\n\tif ( ! label && hasSingleBlockType ) {\r\n\t\tlabel = sprintf(\r\n\t\t\t// translators: %s: the name of the block when there is only one\r\n\t\t\t_x( 'Add %s', 'directly add the only allowed block' ),\r\n\t\t\tblockTitle\r\n\t\t);\r\n\t} else if ( ! label && prioritizePatterns ) {\r\n\t\tlabel = __( 'Add pattern' );\r\n\t} else if ( ! label ) {\r\n\t\tlabel = _x( 'Add block', 'Generic label for block inserter button' );\r\n\t}\r\n\r\n\t// Handle both onClick functions from the toggle and the parent component.\r\n\tfunction handleClick( event ) {\r\n\t\tif ( onToggle ) {\r\n\t\t\tonToggle( event );\r\n\t\t}\r\n\t\tif ( onClick ) {\r\n\t\t\tonClick( event );\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Wrapper\r\n\t\t\ticon={ plus }\r\n\t\t\tlabel={ label }\r\n\t\t\ttooltipPosition=\"bottom\"\r\n\t\t\tonClick={ handleClick }\r\n\t\t\tclassName=\"block-editor-inserter__toggle\"\r\n\t\t\taria-haspopup={ ! hasSingleBlockType ? 'true' : false }\r\n\t\t\taria-expanded={ ! hasSingleBlockType ? isOpen : false }\r\n\t\t\tdisabled={ disabled }\r\n\t\t\t{ ...rest }\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nclass Inserter extends Component {\r\n\tconstructor() {\r\n\t\tsuper( ...arguments );\r\n\r\n\t\tthis.onToggle = this.onToggle.bind( this );\r\n\t\tthis.renderToggle = this.renderToggle.bind( this );\r\n\t\tthis.renderContent = this.renderContent.bind( this );\r\n\t}\r\n\r\n\tonToggle( isOpen ) {\r\n\t\tconst { onToggle } = this.props;\r\n\r\n\t\t// Surface toggle callback to parent component.\r\n\t\tif ( onToggle ) {\r\n\t\t\tonToggle( isOpen );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render callback to display Dropdown toggle element.\r\n\t *\r\n\t * @param {Object}   options\r\n\t * @param {Function} options.onToggle Callback to invoke when toggle is\r\n\t *                                    pressed.\r\n\t * @param {boolean}  options.isOpen   Whether dropdown is currently open.\r\n\t *\r\n\t * @return {Element} Dropdown toggle element.\r\n\t */\r\n\trenderToggle( { onToggle, isOpen } ) {\r\n\t\tconst {\r\n\t\t\tdisabled,\r\n\t\t\tblockTitle,\r\n\t\t\thasSingleBlockType,\r\n\t\t\tdirectInsertBlock,\r\n\t\t\ttoggleProps,\r\n\t\t\thasItems,\r\n\t\t\trenderToggle = defaultRenderToggle,\r\n\t\t\tprioritizePatterns,\r\n\t\t} = this.props;\r\n\r\n\t\treturn renderToggle( {\r\n\t\t\tonToggle,\r\n\t\t\tisOpen,\r\n\t\t\tdisabled: disabled || ! hasItems,\r\n\t\t\tblockTitle,\r\n\t\t\thasSingleBlockType,\r\n\t\t\tdirectInsertBlock,\r\n\t\t\ttoggleProps,\r\n\t\t\tprioritizePatterns,\r\n\t\t} );\r\n\t}\r\n\r\n\t/**\r\n\t * Render callback to display Dropdown content element.\r\n\t *\r\n\t * @param {Object}   options\r\n\t * @param {Function} options.onClose Callback to invoke when dropdown is\r\n\t *                                   closed.\r\n\t *\r\n\t * @return {Element} Dropdown content element.\r\n\t */\r\n\trenderContent( { onClose } ) {\r\n\t\tconst {\r\n\t\t\trootClientId,\r\n\t\t\tclientId,\r\n\t\t\tisAppender,\r\n\t\t\tshowInserterHelpPanel,\r\n\r\n\t\t\t// This prop is experimental to give some time for the quick inserter to mature\r\n\t\t\t// Feel free to make them stable after a few releases.\r\n\t\t\t__experimentalIsQuick: isQuick,\r\n\t\t\tprioritizePatterns,\r\n\t\t\tonSelectOrClose,\r\n\t\t\tselectBlockOnInsert,\r\n\t\t} = this.props;\r\n\r\n\t\tif ( isQuick ) {\r\n\t\t\treturn (\r\n\t\t\t\t<QuickInserter\r\n\t\t\t\t\tonSelect={ ( blocks ) => {\r\n\t\t\t\t\t\tconst firstBlock =\r\n\t\t\t\t\t\t\tArray.isArray( blocks ) && blocks?.length\r\n\t\t\t\t\t\t\t\t? blocks[ 0 ]\r\n\t\t\t\t\t\t\t\t: blocks;\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tonSelectOrClose &&\r\n\t\t\t\t\t\t\ttypeof onSelectOrClose === 'function'\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tonSelectOrClose( firstBlock );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonClose();\r\n\t\t\t\t\t} }\r\n\t\t\t\t\trootClientId={ rootClientId }\r\n\t\t\t\t\tclientId={ clientId }\r\n\t\t\t\t\tisAppender={ isAppender }\r\n\t\t\t\t\tprioritizePatterns={ prioritizePatterns }\r\n\t\t\t\t\tselectBlockOnInsert={ selectBlockOnInsert }\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<InserterMenu\r\n\t\t\t\tonSelect={ () => {\r\n\t\t\t\t\tonClose();\r\n\t\t\t\t} }\r\n\t\t\t\trootClientId={ rootClientId }\r\n\t\t\t\tclientId={ clientId }\r\n\t\t\t\tisAppender={ isAppender }\r\n\t\t\t\tshowInserterHelpPanel={ showInserterHelpPanel }\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tposition,\r\n\t\t\thasSingleBlockType,\r\n\t\t\tdirectInsertBlock,\r\n\t\t\tinsertOnlyAllowedBlock,\r\n\t\t\t__experimentalIsQuick: isQuick,\r\n\t\t\tonSelectOrClose,\r\n\t\t} = this.props;\r\n\r\n\t\tif ( hasSingleBlockType || directInsertBlock ) {\r\n\t\t\treturn this.renderToggle( { onToggle: insertOnlyAllowedBlock } );\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Dropdown\r\n\t\t\t\tclassName=\"block-editor-inserter\"\r\n\t\t\t\tcontentClassName={ clsx( 'block-editor-inserter__popover', {\r\n\t\t\t\t\t'is-quick': isQuick,\r\n\t\t\t\t} ) }\r\n\t\t\t\tpopoverProps={ { position, shift: true } }\r\n\t\t\t\tonToggle={ this.onToggle }\r\n\t\t\t\texpandOnMobile\r\n\t\t\t\theaderTitle={ __( 'Add a block' ) }\r\n\t\t\t\trenderToggle={ this.renderToggle }\r\n\t\t\t\trenderContent={ this.renderContent }\r\n\t\t\t\tonClose={ onSelectOrClose }\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default compose( [\r\n\twithSelect(\r\n\t\t( select, { clientId, rootClientId, shouldDirectInsert = true } ) => {\r\n\t\t\tconst {\r\n\t\t\t\tgetBlockRootClientId,\r\n\t\t\t\thasInserterItems,\r\n\t\t\t\tgetAllowedBlocks,\r\n\t\t\t\tgetDirectInsertBlock,\r\n\t\t\t\tgetSettings,\r\n\t\t\t} = select( blockEditorStore );\r\n\r\n\t\t\tconst { getBlockVariations } = select( blocksStore );\r\n\r\n\t\t\trootClientId =\r\n\t\t\t\trootClientId || getBlockRootClientId( clientId ) || undefined;\r\n\r\n\t\t\tconst allowedBlocks = getAllowedBlocks( rootClientId );\r\n\r\n\t\t\tconst directInsertBlock =\r\n\t\t\t\tshouldDirectInsert && getDirectInsertBlock( rootClientId );\r\n\r\n\t\t\tconst settings = getSettings();\r\n\r\n\t\t\tconst hasSingleBlockType =\r\n\t\t\t\tallowedBlocks?.length === 1 &&\r\n\t\t\t\tgetBlockVariations( allowedBlocks[ 0 ].name, 'inserter' )\r\n\t\t\t\t\t?.length === 0;\r\n\r\n\t\t\tlet allowedBlockType = false;\r\n\t\t\tif ( hasSingleBlockType ) {\r\n\t\t\t\tallowedBlockType = allowedBlocks[ 0 ];\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\thasItems: hasInserterItems( rootClientId ),\r\n\t\t\t\thasSingleBlockType,\r\n\t\t\t\tblockTitle: allowedBlockType ? allowedBlockType.title : '',\r\n\t\t\t\tallowedBlockType,\r\n\t\t\t\tdirectInsertBlock,\r\n\t\t\t\trootClientId,\r\n\t\t\t\tprioritizePatterns:\r\n\t\t\t\t\tsettings.__experimentalPreferPatternsOnRoot &&\r\n\t\t\t\t\t! rootClientId,\r\n\t\t\t};\r\n\t\t}\r\n\t),\r\n\twithDispatch( ( dispatch, ownProps, { select } ) => {\r\n\t\treturn {\r\n\t\t\tinsertOnlyAllowedBlock() {\r\n\t\t\t\tconst {\r\n\t\t\t\t\trootClientId,\r\n\t\t\t\t\tclientId,\r\n\t\t\t\t\tisAppender,\r\n\t\t\t\t\thasSingleBlockType,\r\n\t\t\t\t\tallowedBlockType,\r\n\t\t\t\t\tdirectInsertBlock,\r\n\t\t\t\t\tonSelectOrClose,\r\n\t\t\t\t\tselectBlockOnInsert,\r\n\t\t\t\t} = ownProps;\r\n\r\n\t\t\t\tif ( ! hasSingleBlockType && ! directInsertBlock ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction getAdjacentBlockAttributes( attributesToCopy ) {\r\n\t\t\t\t\tconst { getBlock, getPreviousBlockClientId } =\r\n\t\t\t\t\t\tselect( blockEditorStore );\r\n\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t! attributesToCopy ||\r\n\t\t\t\t\t\t( ! clientId && ! rootClientId )\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn {};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst result = {};\r\n\t\t\t\t\tlet adjacentAttributes = {};\r\n\r\n\t\t\t\t\t// If there is no clientId, then attempt to get attributes\r\n\t\t\t\t\t// from the last block within innerBlocks of the root block.\r\n\t\t\t\t\tif ( ! clientId ) {\r\n\t\t\t\t\t\tconst parentBlock = getBlock( rootClientId );\r\n\r\n\t\t\t\t\t\tif ( parentBlock?.innerBlocks?.length ) {\r\n\t\t\t\t\t\t\tconst lastInnerBlock =\r\n\t\t\t\t\t\t\t\tparentBlock.innerBlocks[\r\n\t\t\t\t\t\t\t\t\tparentBlock.innerBlocks.length - 1\r\n\t\t\t\t\t\t\t\t];\r\n\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tdirectInsertBlock &&\r\n\t\t\t\t\t\t\t\tdirectInsertBlock?.name === lastInnerBlock.name\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tadjacentAttributes = lastInnerBlock.attributes;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Otherwise, attempt to get attributes from the\r\n\t\t\t\t\t\t// previous block relative to the current clientId.\r\n\t\t\t\t\t\tconst currentBlock = getBlock( clientId );\r\n\t\t\t\t\t\tconst previousBlock = getBlock(\r\n\t\t\t\t\t\t\tgetPreviousBlockClientId( clientId )\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tif ( currentBlock?.name === previousBlock?.name ) {\r\n\t\t\t\t\t\t\tadjacentAttributes =\r\n\t\t\t\t\t\t\t\tpreviousBlock?.attributes || {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Copy over only those attributes flagged to be copied.\r\n\t\t\t\t\tattributesToCopy.forEach( ( attribute ) => {\r\n\t\t\t\t\t\tif ( adjacentAttributes.hasOwnProperty( attribute ) ) {\r\n\t\t\t\t\t\t\tresult[ attribute ] =\r\n\t\t\t\t\t\t\t\tadjacentAttributes[ attribute ];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfunction getInsertionIndex() {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tgetBlockIndex,\r\n\t\t\t\t\t\tgetBlockSelectionEnd,\r\n\t\t\t\t\t\tgetBlockOrder,\r\n\t\t\t\t\t\tgetBlockRootClientId,\r\n\t\t\t\t\t} = select( blockEditorStore );\r\n\r\n\t\t\t\t\t// If the clientId is defined, we insert at the position of the block.\r\n\t\t\t\t\tif ( clientId ) {\r\n\t\t\t\t\t\treturn getBlockIndex( clientId );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If there a selected block, we insert after the selected block.\r\n\t\t\t\t\tconst end = getBlockSelectionEnd();\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t! isAppender &&\r\n\t\t\t\t\t\tend &&\r\n\t\t\t\t\t\tgetBlockRootClientId( end ) === rootClientId\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn getBlockIndex( end ) + 1;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Otherwise, we insert at the end of the current rootClientId.\r\n\t\t\t\t\treturn getBlockOrder( rootClientId ).length;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst { insertBlock } = dispatch( blockEditorStore );\r\n\r\n\t\t\t\tlet blockToInsert;\r\n\r\n\t\t\t\t// Attempt to augment the directInsertBlock with attributes from an adjacent block.\r\n\t\t\t\t// This ensures styling from nearby blocks is preserved in the newly inserted block.\r\n\t\t\t\t// See: https://github.com/WordPress/gutenberg/issues/37904\r\n\t\t\t\tif ( directInsertBlock ) {\r\n\t\t\t\t\tconst newAttributes = getAdjacentBlockAttributes(\r\n\t\t\t\t\t\tdirectInsertBlock.attributesToCopy\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tblockToInsert = createBlock( directInsertBlock.name, {\r\n\t\t\t\t\t\t...( directInsertBlock.attributes || {} ),\r\n\t\t\t\t\t\t...newAttributes,\r\n\t\t\t\t\t} );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tblockToInsert = createBlock( allowedBlockType.name );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinsertBlock(\r\n\t\t\t\t\tblockToInsert,\r\n\t\t\t\t\tgetInsertionIndex(),\r\n\t\t\t\t\trootClientId,\r\n\t\t\t\t\tselectBlockOnInsert\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif ( onSelectOrClose ) {\r\n\t\t\t\t\tonSelectOrClose( {\r\n\t\t\t\t\t\tclientId: blockToInsert?.clientId,\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst message = sprintf(\r\n\t\t\t\t\t// translators: %s: the name of the block that has been added\r\n\t\t\t\t\t__( '%s block added' ),\r\n\t\t\t\t\tallowedBlockType.title\r\n\t\t\t\t);\r\n\t\t\t\tspeak( message );\r\n\t\t\t},\r\n\t\t};\r\n\t} ),\r\n\t// The global inserter should always be visible, we are using ( ! isAppender && ! rootClientId && ! clientId ) as\r\n\t// a way to detect the global Inserter.\r\n\tifCondition(\r\n\t\t( { hasItems, isAppender, rootClientId, clientId } ) =>\r\n\t\t\thasItems || ( ! isAppender && ! rootClientId && ! clientId )\r\n\t),\r\n] )( Inserter );\r\n"],"mappings":"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","ignoreList":[]}