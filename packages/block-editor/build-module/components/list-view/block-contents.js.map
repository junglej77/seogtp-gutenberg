{"version":3,"names":["clsx","useSelect","forwardRef","ListViewBlockSelectButton","BlockDraggable","store","blockEditorStore","useListViewContext","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ListViewBlockContents","onClick","onToggleExpanded","block","isSelected","position","siblingBlockCount","level","isExpanded","selectedClientIds","props","ref","clientId","blockMovingClientId","selectedBlockInBlockEditor","select","hasBlockMovingClientId","getSelectedBlockClientId","AdditionalBlockContent","insertedBlock","setInsertedBlock","isBlockMoveTarget","className","draggableClientIds","includes","children","appendToOwnerDocument","clientIds","cloneClassname","draggable","onDragStart","onDragEnd"],"sources":["@wordpress/block-editor/src/components/list-view/block-contents.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { useSelect } from '@wordpress/data';\r\nimport { forwardRef } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport ListViewBlockSelectButton from './block-select-button';\r\nimport BlockDraggable from '../block-draggable';\r\nimport { store as blockEditorStore } from '../../store';\r\nimport { useListViewContext } from './context';\r\n\r\nconst ListViewBlockContents = forwardRef(\r\n\t(\r\n\t\t{\r\n\t\t\tonClick,\r\n\t\t\tonToggleExpanded,\r\n\t\t\tblock,\r\n\t\t\tisSelected,\r\n\t\t\tposition,\r\n\t\t\tsiblingBlockCount,\r\n\t\t\tlevel,\r\n\t\t\tisExpanded,\r\n\t\t\tselectedClientIds,\r\n\t\t\t...props\r\n\t\t},\r\n\t\tref\r\n\t) => {\r\n\t\tconst { clientId } = block;\r\n\r\n\t\tconst { blockMovingClientId, selectedBlockInBlockEditor } = useSelect(\r\n\t\t\t( select ) => {\r\n\t\t\t\tconst { hasBlockMovingClientId, getSelectedBlockClientId } =\r\n\t\t\t\t\tselect( blockEditorStore );\r\n\t\t\t\treturn {\r\n\t\t\t\t\tblockMovingClientId: hasBlockMovingClientId(),\r\n\t\t\t\t\tselectedBlockInBlockEditor: getSelectedBlockClientId(),\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t[]\r\n\t\t);\r\n\r\n\t\tconst { AdditionalBlockContent, insertedBlock, setInsertedBlock } =\r\n\t\t\tuseListViewContext();\r\n\r\n\t\tconst isBlockMoveTarget =\r\n\t\t\tblockMovingClientId && selectedBlockInBlockEditor === clientId;\r\n\r\n\t\tconst className = clsx( 'block-editor-list-view-block-contents', {\r\n\t\t\t'is-dropping-before': isBlockMoveTarget,\r\n\t\t} );\r\n\r\n\t\t// Only include all selected blocks if the currently clicked on block\r\n\t\t// is one of the selected blocks. This ensures that if a user attempts\r\n\t\t// to drag a block that isn't part of the selection, they're still able\r\n\t\t// to drag it and rearrange its position.\r\n\t\tconst draggableClientIds = selectedClientIds.includes( clientId )\r\n\t\t\t? selectedClientIds\r\n\t\t\t: [ clientId ];\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{ AdditionalBlockContent && (\r\n\t\t\t\t\t<AdditionalBlockContent\r\n\t\t\t\t\t\tblock={ block }\r\n\t\t\t\t\t\tinsertedBlock={ insertedBlock }\r\n\t\t\t\t\t\tsetInsertedBlock={ setInsertedBlock }\r\n\t\t\t\t\t/>\r\n\t\t\t\t) }\r\n\t\t\t\t<BlockDraggable\r\n\t\t\t\t\tappendToOwnerDocument\r\n\t\t\t\t\tclientIds={ draggableClientIds }\r\n\t\t\t\t\tcloneClassname=\"block-editor-list-view-draggable-chip\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{ ( { draggable, onDragStart, onDragEnd } ) => (\r\n\t\t\t\t\t\t<ListViewBlockSelectButton\r\n\t\t\t\t\t\t\tref={ ref }\r\n\t\t\t\t\t\t\tclassName={ className }\r\n\t\t\t\t\t\t\tblock={ block }\r\n\t\t\t\t\t\t\tonClick={ onClick }\r\n\t\t\t\t\t\t\tonToggleExpanded={ onToggleExpanded }\r\n\t\t\t\t\t\t\tisSelected={ isSelected }\r\n\t\t\t\t\t\t\tposition={ position }\r\n\t\t\t\t\t\t\tsiblingBlockCount={ siblingBlockCount }\r\n\t\t\t\t\t\t\tlevel={ level }\r\n\t\t\t\t\t\t\tdraggable={ draggable }\r\n\t\t\t\t\t\t\tonDragStart={ onDragStart }\r\n\t\t\t\t\t\t\tonDragEnd={ onDragEnd }\r\n\t\t\t\t\t\t\tisExpanded={ isExpanded }\r\n\t\t\t\t\t\t\t{ ...props }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) }\r\n\t\t\t\t</BlockDraggable>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nexport default ListViewBlockContents;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;;AAEvB;AACA;AACA;AACA,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,UAAU,QAAQ,oBAAoB;;AAE/C;AACA;AACA;AACA,OAAOC,yBAAyB,MAAM,uBAAuB;AAC7D,OAAOC,cAAc,MAAM,oBAAoB;AAC/C,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,aAAa;AACvD,SAASC,kBAAkB,QAAQ,WAAW;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/C,MAAMC,qBAAqB,GAAGZ,UAAU,CACvC,CACC;EACCa,OAAO;EACPC,gBAAgB;EAChBC,KAAK;EACLC,UAAU;EACVC,QAAQ;EACRC,iBAAiB;EACjBC,KAAK;EACLC,UAAU;EACVC,iBAAiB;EACjB,GAAGC;AACJ,CAAC,EACDC,GAAG,KACC;EACJ,MAAM;IAAEC;EAAS,CAAC,GAAGT,KAAK;EAE1B,MAAM;IAAEU,mBAAmB;IAAEC;EAA2B,CAAC,GAAG3B,SAAS,CAClE4B,MAAM,IAAM;IACb,MAAM;MAAEC,sBAAsB;MAAEC;IAAyB,CAAC,GACzDF,MAAM,CAAEvB,gBAAiB,CAAC;IAC3B,OAAO;MACNqB,mBAAmB,EAAEG,sBAAsB,CAAC,CAAC;MAC7CF,0BAA0B,EAAEG,wBAAwB,CAAC;IACtD,CAAC;EACF,CAAC,EACD,EACD,CAAC;EAED,MAAM;IAAEC,sBAAsB;IAAEC,aAAa;IAAEC;EAAiB,CAAC,GAChE3B,kBAAkB,CAAC,CAAC;EAErB,MAAM4B,iBAAiB,GACtBR,mBAAmB,IAAIC,0BAA0B,KAAKF,QAAQ;EAE/D,MAAMU,SAAS,GAAGpC,IAAI,CAAE,uCAAuC,EAAE;IAChE,oBAAoB,EAAEmC;EACvB,CAAE,CAAC;;EAEH;EACA;EACA;EACA;EACA,MAAME,kBAAkB,GAAGd,iBAAiB,CAACe,QAAQ,CAAEZ,QAAS,CAAC,GAC9DH,iBAAiB,GACjB,CAAEG,QAAQ,CAAE;EAEf,oBACCb,KAAA,CAAAF,SAAA;IAAA4B,QAAA,GACGP,sBAAsB,iBACvBvB,IAAA,CAACuB,sBAAsB;MACtBf,KAAK,EAAGA,KAAO;MACfgB,aAAa,EAAGA,aAAe;MAC/BC,gBAAgB,EAAGA;IAAkB,CACrC,CACD,eACDzB,IAAA,CAACL,cAAc;MACdoC,qBAAqB;MACrBC,SAAS,EAAGJ,kBAAoB;MAChCK,cAAc,EAAC,uCAAuC;MAAAH,QAAA,EAEpDA,CAAE;QAAEI,SAAS;QAAEC,WAAW;QAAEC;MAAU,CAAC,kBACxCpC,IAAA,CAACN,yBAAyB;QACzBsB,GAAG,EAAGA,GAAK;QACXW,SAAS,EAAGA,SAAW;QACvBnB,KAAK,EAAGA,KAAO;QACfF,OAAO,EAAGA,OAAS;QACnBC,gBAAgB,EAAGA,gBAAkB;QACrCE,UAAU,EAAGA,UAAY;QACzBC,QAAQ,EAAGA,QAAU;QACrBC,iBAAiB,EAAGA,iBAAmB;QACvCC,KAAK,EAAGA,KAAO;QACfsB,SAAS,EAAGA,SAAW;QACvBC,WAAW,EAAGA,WAAa;QAC3BC,SAAS,EAAGA,SAAW;QACvBvB,UAAU,EAAGA,UAAY;QAAA,GACpBE;MAAK,CACV;IACD,CACc,CAAC;EAAA,CAChB,CAAC;AAEL,CACD,CAAC;AAED,eAAeV,qBAAqB","ignoreList":[]}