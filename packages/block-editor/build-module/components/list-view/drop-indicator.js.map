{"version":3,"names":["clsx","__experimentalHStack","HStack","__experimentalTruncate","Truncate","Popover","getScrollContainer","useCallback","useMemo","isRTL","BlockIcon","useBlockDisplayInformation","useBlockDisplayTitle","ListViewExpander","jsx","_jsx","jsxs","_jsxs","ListViewDropIndicatorPreview","draggedBlockClientId","listViewRef","blockDropTarget","blockInformation","blockTitle","clientId","context","rootClientId","dropPosition","rootBlockElement","blockElement","current","_rootBlockElement","querySelector","undefined","_blockElement","targetElement","rtl","getDropIndicatorWidth","targetElementRect","indent","width","offsetWidth","scrollContainer","ownerDocument","windowScroll","body","documentElement","scrollContainerRect","getBoundingClientRect","distanceBetweenContainerAndTarget","right","left","scrollContainerWidth","clientWidth","style","horizontalScrollOffsetStyle","transform","ariaLevel","_ariaLevel","parseInt","getAttribute","hasAdjacentSelectedBranch","classList","contains","popoverAnchor","isValidDropPosition","contextElement","rect","top","doc","scrollbarWidth","height","window","DOMRect","animate","anchor","focusOnMount","className","variant","flip","resize","children","onClick","icon","showColors","alignment","justify","spacing","ellipsizeMode"],"sources":["@wordpress/block-editor/src/components/list-view/drop-indicator.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport {\r\n\t__experimentalHStack as HStack,\r\n\t__experimentalTruncate as Truncate,\r\n\tPopover,\r\n} from '@wordpress/components';\r\n\r\nimport { getScrollContainer } from '@wordpress/dom';\r\nimport { useCallback, useMemo } from '@wordpress/element';\r\nimport { isRTL } from '@wordpress/i18n';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport BlockIcon from '../block-icon';\r\nimport useBlockDisplayInformation from '../use-block-display-information';\r\nimport useBlockDisplayTitle from '../block-title/use-block-display-title';\r\nimport ListViewExpander from './expander';\r\n\r\nexport default function ListViewDropIndicatorPreview( {\r\n\tdraggedBlockClientId,\r\n\tlistViewRef,\r\n\tblockDropTarget,\r\n} ) {\r\n\tconst blockInformation = useBlockDisplayInformation( draggedBlockClientId );\r\n\tconst blockTitle = useBlockDisplayTitle( {\r\n\t\tclientId: draggedBlockClientId,\r\n\t\tcontext: 'list-view',\r\n\t} );\r\n\r\n\tconst { rootClientId, clientId, dropPosition } = blockDropTarget || {};\r\n\r\n\tconst [ rootBlockElement, blockElement ] = useMemo( () => {\r\n\t\tif ( ! listViewRef.current ) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\t// The rootClientId will be defined whenever dropping into inner\r\n\t\t// block lists, but is undefined when dropping at the root level.\r\n\t\tconst _rootBlockElement = rootClientId\r\n\t\t\t? listViewRef.current.querySelector(\r\n\t\t\t\t\t`[data-block=\"${ rootClientId }\"]`\r\n\t\t\t  )\r\n\t\t\t: undefined;\r\n\r\n\t\t// The clientId represents the sibling block, the dragged block will\r\n\t\t// usually be inserted adjacent to it. It will be undefined when\r\n\t\t// dropping a block into an empty block list.\r\n\t\tconst _blockElement = clientId\r\n\t\t\t? listViewRef.current.querySelector(\r\n\t\t\t\t\t`[data-block=\"${ clientId }\"]`\r\n\t\t\t  )\r\n\t\t\t: undefined;\r\n\r\n\t\treturn [ _rootBlockElement, _blockElement ];\r\n\t}, [ listViewRef, rootClientId, clientId ] );\r\n\r\n\t// The targetElement is the element that the drop indicator will appear\r\n\t// before or after. When dropping into an empty block list, blockElement\r\n\t// is undefined, so the indicator will appear after the rootBlockElement.\r\n\tconst targetElement = blockElement || rootBlockElement;\r\n\r\n\tconst rtl = isRTL();\r\n\r\n\tconst getDropIndicatorWidth = useCallback(\r\n\t\t( targetElementRect, indent ) => {\r\n\t\t\tif ( ! targetElement ) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\t// Default to assuming that the width of the drop indicator\r\n\t\t\t// should be the same as the target element.\r\n\t\t\tlet width = targetElement.offsetWidth;\r\n\r\n\t\t\t// In deeply nested lists, where a scrollbar is present,\r\n\t\t\t// the width of the drop indicator should be the width of\r\n\t\t\t// the scroll container, minus the distance from the left\r\n\t\t\t// edge of the scroll container to the left edge of the\r\n\t\t\t// target element.\r\n\t\t\tconst scrollContainer = getScrollContainer(\r\n\t\t\t\ttargetElement,\r\n\t\t\t\t'horizontal'\r\n\t\t\t);\r\n\r\n\t\t\tconst ownerDocument = targetElement.ownerDocument;\r\n\t\t\tconst windowScroll =\r\n\t\t\t\tscrollContainer === ownerDocument.body ||\r\n\t\t\t\tscrollContainer === ownerDocument.documentElement;\r\n\r\n\t\t\tif ( scrollContainer && ! windowScroll ) {\r\n\t\t\t\tconst scrollContainerRect =\r\n\t\t\t\t\tscrollContainer.getBoundingClientRect();\r\n\r\n\t\t\t\tconst distanceBetweenContainerAndTarget = isRTL()\r\n\t\t\t\t\t? scrollContainerRect.right - targetElementRect.right\r\n\t\t\t\t\t: targetElementRect.left - scrollContainerRect.left;\r\n\r\n\t\t\t\tconst scrollContainerWidth = scrollContainer.clientWidth;\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tscrollContainerWidth <\r\n\t\t\t\t\twidth + distanceBetweenContainerAndTarget\r\n\t\t\t\t) {\r\n\t\t\t\t\twidth =\r\n\t\t\t\t\t\tscrollContainerWidth -\r\n\t\t\t\t\t\tdistanceBetweenContainerAndTarget;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// LTR logic for ensuring the drop indicator does not extend\r\n\t\t\t\t// beyond the right edge of the scroll container.\r\n\t\t\t\tif (\r\n\t\t\t\t\t! rtl &&\r\n\t\t\t\t\ttargetElementRect.left + indent < scrollContainerRect.left\r\n\t\t\t\t) {\r\n\t\t\t\t\twidth -= scrollContainerRect.left - targetElementRect.left;\r\n\t\t\t\t\treturn width;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// RTL logic for ensuring the drop indicator does not extend\r\n\t\t\t\t// beyond the right edge of the scroll container.\r\n\t\t\t\tif (\r\n\t\t\t\t\trtl &&\r\n\t\t\t\t\ttargetElementRect.right - indent > scrollContainerRect.right\r\n\t\t\t\t) {\r\n\t\t\t\t\twidth -=\r\n\t\t\t\t\t\ttargetElementRect.right - scrollContainerRect.right;\r\n\t\t\t\t\treturn width;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Subtract the indent from the final width of the indicator.\r\n\t\t\treturn width - indent;\r\n\t\t},\r\n\t\t[ rtl, targetElement ]\r\n\t);\r\n\r\n\tconst style = useMemo( () => {\r\n\t\tif ( ! targetElement ) {\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\tconst targetElementRect = targetElement.getBoundingClientRect();\r\n\r\n\t\treturn {\r\n\t\t\twidth: getDropIndicatorWidth( targetElementRect, 0 ),\r\n\t\t};\r\n\t}, [ getDropIndicatorWidth, targetElement ] );\r\n\r\n\tconst horizontalScrollOffsetStyle = useMemo( () => {\r\n\t\tif ( ! targetElement ) {\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\tconst scrollContainer = getScrollContainer( targetElement );\r\n\t\tconst ownerDocument = targetElement.ownerDocument;\r\n\t\tconst windowScroll =\r\n\t\t\tscrollContainer === ownerDocument.body ||\r\n\t\t\tscrollContainer === ownerDocument.documentElement;\r\n\r\n\t\tif ( scrollContainer && ! windowScroll ) {\r\n\t\t\tconst scrollContainerRect = scrollContainer.getBoundingClientRect();\r\n\t\t\tconst targetElementRect = targetElement.getBoundingClientRect();\r\n\r\n\t\t\tconst distanceBetweenContainerAndTarget = rtl\r\n\t\t\t\t? scrollContainerRect.right - targetElementRect.right\r\n\t\t\t\t: targetElementRect.left - scrollContainerRect.left;\r\n\r\n\t\t\tif ( ! rtl && scrollContainerRect.left > targetElementRect.left ) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttransform: `translateX( ${ distanceBetweenContainerAndTarget }px )`,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tif ( rtl && scrollContainerRect.right < targetElementRect.right ) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttransform: `translateX( ${\r\n\t\t\t\t\t\tdistanceBetweenContainerAndTarget * -1\r\n\t\t\t\t\t}px )`,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}, [ rtl, targetElement ] );\r\n\r\n\tconst ariaLevel = useMemo( () => {\r\n\t\tif ( ! rootBlockElement ) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\r\n\t\tconst _ariaLevel = parseInt(\r\n\t\t\trootBlockElement.getAttribute( 'aria-level' ),\r\n\t\t\t10\r\n\t\t);\r\n\r\n\t\treturn _ariaLevel ? _ariaLevel + 1 : 1;\r\n\t}, [ rootBlockElement ] );\r\n\r\n\tconst hasAdjacentSelectedBranch = useMemo( () => {\r\n\t\tif ( ! targetElement ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn targetElement.classList.contains( 'is-branch-selected' );\r\n\t}, [ targetElement ] );\r\n\r\n\tconst popoverAnchor = useMemo( () => {\r\n\t\tconst isValidDropPosition =\r\n\t\t\tdropPosition === 'top' ||\r\n\t\t\tdropPosition === 'bottom' ||\r\n\t\t\tdropPosition === 'inside';\r\n\t\tif ( ! targetElement || ! isValidDropPosition ) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tcontextElement: targetElement,\r\n\t\t\tgetBoundingClientRect() {\r\n\t\t\t\tconst rect = targetElement.getBoundingClientRect();\r\n\t\t\t\t// In RTL languages, the drop indicator should be positioned\r\n\t\t\t\t// to the left of the target element, with the width of the\r\n\t\t\t\t// indicator determining the indent at the right edge of the\r\n\t\t\t\t// target element. In LTR languages, the drop indicator should\r\n\t\t\t\t// end at the right edge of the target element, with the indent\r\n\t\t\t\t// added to the position of the left edge of the target element.\r\n\t\t\t\t// let left = rtl ? rect.left : rect.left + indent;\r\n\t\t\t\tlet left = rect.left;\r\n\t\t\t\tlet top = 0;\r\n\r\n\t\t\t\t// In deeply nested lists, where a scrollbar is present,\r\n\t\t\t\t// the width of the drop indicator should be the width of\r\n\t\t\t\t// the visible area of the scroll container. Additionally,\r\n\t\t\t\t// the left edge of the drop indicator line needs to be\r\n\t\t\t\t// offset by the distance the left edge of the target element\r\n\t\t\t\t// and the left edge of the scroll container. The ensures\r\n\t\t\t\t// that the drop indicator position never breaks out of the\r\n\t\t\t\t// visible area of the scroll container.\r\n\t\t\t\tconst scrollContainer = getScrollContainer(\r\n\t\t\t\t\ttargetElement,\r\n\t\t\t\t\t'horizontal'\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst doc = targetElement.ownerDocument;\r\n\t\t\t\tconst windowScroll =\r\n\t\t\t\t\tscrollContainer === doc.body ||\r\n\t\t\t\t\tscrollContainer === doc.documentElement;\r\n\r\n\t\t\t\t// If the scroll container is not the window, offset the left position, if need be.\r\n\t\t\t\tif ( scrollContainer && ! windowScroll ) {\r\n\t\t\t\t\tconst scrollContainerRect =\r\n\t\t\t\t\t\tscrollContainer.getBoundingClientRect();\r\n\r\n\t\t\t\t\t// In RTL languages, a vertical scrollbar is present on the\r\n\t\t\t\t\t// left edge of the scroll container. The width of the\r\n\t\t\t\t\t// scrollbar needs to be accounted for when positioning the\r\n\t\t\t\t\t// drop indicator.\r\n\t\t\t\t\tconst scrollbarWidth = rtl\r\n\t\t\t\t\t\t? scrollContainer.offsetWidth -\r\n\t\t\t\t\t\t  scrollContainer.clientWidth\r\n\t\t\t\t\t\t: 0;\r\n\r\n\t\t\t\t\tif ( left < scrollContainerRect.left + scrollbarWidth ) {\r\n\t\t\t\t\t\tleft = scrollContainerRect.left + scrollbarWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( dropPosition === 'top' ) {\r\n\t\t\t\t\ttop = rect.top - rect.height * 2;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// `dropPosition` is either `bottom` or `inside`\r\n\t\t\t\t\ttop = rect.top;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst width = getDropIndicatorWidth( rect, 0 );\r\n\t\t\t\tconst height = rect.height;\r\n\r\n\t\t\t\treturn new window.DOMRect( left, top, width, height );\r\n\t\t\t},\r\n\t\t};\r\n\t}, [ targetElement, dropPosition, getDropIndicatorWidth, rtl ] );\r\n\r\n\tif ( ! targetElement ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Popover\r\n\t\t\tanimate={ false }\r\n\t\t\tanchor={ popoverAnchor }\r\n\t\t\tfocusOnMount={ false }\r\n\t\t\tclassName=\"block-editor-list-view-drop-indicator--preview\"\r\n\t\t\tvariant=\"unstyled\"\r\n\t\t\tflip={ false }\r\n\t\t\tresize\r\n\t\t>\r\n\t\t\t<div\r\n\t\t\t\tstyle={ style }\r\n\t\t\t\tclassName={ clsx(\r\n\t\t\t\t\t'block-editor-list-view-drop-indicator__line',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'block-editor-list-view-drop-indicator__line--darker':\r\n\t\t\t\t\t\t\thasAdjacentSelectedBranch,\r\n\t\t\t\t\t}\r\n\t\t\t\t) }\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"block-editor-list-view-leaf\"\r\n\t\t\t\t\taria-level={ ariaLevel }\r\n\t\t\t\t>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={ clsx(\r\n\t\t\t\t\t\t\t'block-editor-list-view-block-select-button',\r\n\t\t\t\t\t\t\t'block-editor-list-view-block-contents'\r\n\t\t\t\t\t\t) }\r\n\t\t\t\t\t\tstyle={ horizontalScrollOffsetStyle }\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ListViewExpander onClick={ () => {} } />\r\n\t\t\t\t\t\t<BlockIcon\r\n\t\t\t\t\t\t\ticon={ blockInformation?.icon }\r\n\t\t\t\t\t\t\tshowColors\r\n\t\t\t\t\t\t\tcontext=\"list-view\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<HStack\r\n\t\t\t\t\t\t\talignment=\"center\"\r\n\t\t\t\t\t\t\tclassName=\"block-editor-list-view-block-select-button__label-wrapper\"\r\n\t\t\t\t\t\t\tjustify=\"flex-start\"\r\n\t\t\t\t\t\t\tspacing={ 1 }\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span className=\"block-editor-list-view-block-select-button__title\">\r\n\t\t\t\t\t\t\t\t<Truncate ellipsizeMode=\"auto\">\r\n\t\t\t\t\t\t\t\t\t{ blockTitle }\r\n\t\t\t\t\t\t\t\t</Truncate>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</HStack>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"block-editor-list-view-block__menu-cell\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Popover>\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]}