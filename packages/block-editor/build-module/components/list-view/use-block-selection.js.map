{"version":3,"names":["speak","__","sprintf","useDispatch","useSelect","useCallback","UP","DOWN","HOME","END","ESCAPE","store","blocksStore","blockEditorStore","getCommonDepthClientIds","useBlockSelection","clearSelectedBlock","multiSelect","selectBlock","getBlockName","getBlockParents","getBlockSelectionStart","getSelectedBlockClientIds","hasMultiSelection","hasSelectedBlock","getBlockType","updateBlockSelection","event","clientId","destinationClientId","focusPosition","shiftKey","keyCode","preventDefault","isOnlyDeselection","type","isKeyPress","selectedBlocks","clientIdWithParents","some","blockId","includes","startTarget","endTarget","startParents","endParents","start","end","updatedSelectedBlocks","length","selectionDiff","filter","label","title"],"sources":["@wordpress/block-editor/src/components/list-view/use-block-selection.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { speak } from '@wordpress/a11y';\r\nimport { __, sprintf } from '@wordpress/i18n';\r\nimport { useDispatch, useSelect } from '@wordpress/data';\r\nimport { useCallback } from '@wordpress/element';\r\nimport { UP, DOWN, HOME, END, ESCAPE } from '@wordpress/keycodes';\r\nimport { store as blocksStore } from '@wordpress/blocks';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as blockEditorStore } from '../../store';\r\nimport { getCommonDepthClientIds } from './utils';\r\n\r\nexport default function useBlockSelection() {\r\n\tconst { clearSelectedBlock, multiSelect, selectBlock } =\r\n\t\tuseDispatch( blockEditorStore );\r\n\tconst {\r\n\t\tgetBlockName,\r\n\t\tgetBlockParents,\r\n\t\tgetBlockSelectionStart,\r\n\t\tgetSelectedBlockClientIds,\r\n\t\thasMultiSelection,\r\n\t\thasSelectedBlock,\r\n\t} = useSelect( blockEditorStore );\r\n\r\n\tconst { getBlockType } = useSelect( blocksStore );\r\n\r\n\tconst updateBlockSelection = useCallback(\r\n\t\tasync ( event, clientId, destinationClientId, focusPosition ) => {\r\n\t\t\tif ( ! event?.shiftKey && event?.keyCode !== ESCAPE ) {\r\n\t\t\t\tselectBlock( clientId, focusPosition );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// To handle multiple block selection via the `SHIFT` key, prevent\r\n\t\t\t// the browser default behavior of opening the link in a new window.\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tconst isOnlyDeselection =\r\n\t\t\t\tevent.type === 'keydown' && event.keyCode === ESCAPE;\r\n\t\t\tconst isKeyPress =\r\n\t\t\t\tevent.type === 'keydown' &&\r\n\t\t\t\t( event.keyCode === UP ||\r\n\t\t\t\t\tevent.keyCode === DOWN ||\r\n\t\t\t\t\tevent.keyCode === HOME ||\r\n\t\t\t\t\tevent.keyCode === END );\r\n\r\n\t\t\t// Handle clicking on a block when no blocks are selected, and return early.\r\n\t\t\tif (\r\n\t\t\t\t! isKeyPress &&\r\n\t\t\t\t! hasSelectedBlock() &&\r\n\t\t\t\t! hasMultiSelection()\r\n\t\t\t) {\r\n\t\t\t\tselectBlock( clientId, null );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst selectedBlocks = getSelectedBlockClientIds();\r\n\t\t\tconst clientIdWithParents = [\r\n\t\t\t\t...getBlockParents( clientId ),\r\n\t\t\t\tclientId,\r\n\t\t\t];\r\n\r\n\t\t\tif (\r\n\t\t\t\tisOnlyDeselection ||\r\n\t\t\t\t( isKeyPress &&\r\n\t\t\t\t\t! selectedBlocks.some( ( blockId ) =>\r\n\t\t\t\t\t\tclientIdWithParents.includes( blockId )\r\n\t\t\t\t\t) )\r\n\t\t\t) {\r\n\t\t\t\t// Ensure that shift-selecting blocks via the keyboard only\r\n\t\t\t\t// expands the current selection if focusing over already\r\n\t\t\t\t// selected blocks. Otherwise, clear the selection so that\r\n\t\t\t\t// a user can create a new selection entirely by keyboard.\r\n\t\t\t\tawait clearSelectedBlock();\r\n\t\t\t}\r\n\r\n\t\t\t// Update selection, if not only clearing the selection.\r\n\t\t\tif ( ! isOnlyDeselection ) {\r\n\t\t\t\tlet startTarget = getBlockSelectionStart();\r\n\t\t\t\tlet endTarget = clientId;\r\n\r\n\t\t\t\t// Handle keyboard behavior for selecting multiple blocks.\r\n\t\t\t\tif ( isKeyPress ) {\r\n\t\t\t\t\tif ( ! hasSelectedBlock() && ! hasMultiSelection() ) {\r\n\t\t\t\t\t\t// Set the starting point of the selection to the currently\r\n\t\t\t\t\t\t// focused block, if there are no blocks currently selected.\r\n\t\t\t\t\t\t// This ensures that as the selection is expanded or contracted,\r\n\t\t\t\t\t\t// the starting point of the selection is anchored to that block.\r\n\t\t\t\t\t\tstartTarget = clientId;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( destinationClientId ) {\r\n\t\t\t\t\t\t// If the user presses UP or DOWN, we want to ensure that the block they're\r\n\t\t\t\t\t\t// moving to is the target for selection, and not the currently focused one.\r\n\t\t\t\t\t\tendTarget = destinationClientId;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst startParents = getBlockParents( startTarget );\r\n\t\t\t\tconst endParents = getBlockParents( endTarget );\r\n\r\n\t\t\t\tconst { start, end } = getCommonDepthClientIds(\r\n\t\t\t\t\tstartTarget,\r\n\t\t\t\t\tendTarget,\r\n\t\t\t\t\tstartParents,\r\n\t\t\t\t\tendParents\r\n\t\t\t\t);\r\n\t\t\t\tawait multiSelect( start, end, null );\r\n\t\t\t}\r\n\r\n\t\t\t// Announce deselected block, or number of deselected blocks if\r\n\t\t\t// the total number of blocks deselected is greater than one.\r\n\t\t\tconst updatedSelectedBlocks = getSelectedBlockClientIds();\r\n\r\n\t\t\t// If the selection is greater than 1 and the Home or End keys\r\n\t\t\t// were used to generate the selection, then skip announcing the\r\n\t\t\t// deselected blocks.\r\n\t\t\tif (\r\n\t\t\t\t( event.keyCode === HOME || event.keyCode === END ) &&\r\n\t\t\t\tupdatedSelectedBlocks.length > 1\r\n\t\t\t) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst selectionDiff = selectedBlocks.filter(\r\n\t\t\t\t( blockId ) => ! updatedSelectedBlocks.includes( blockId )\r\n\t\t\t);\r\n\r\n\t\t\tlet label;\r\n\t\t\tif ( selectionDiff.length === 1 ) {\r\n\t\t\t\tconst title = getBlockType(\r\n\t\t\t\t\tgetBlockName( selectionDiff[ 0 ] )\r\n\t\t\t\t)?.title;\r\n\t\t\t\tif ( title ) {\r\n\t\t\t\t\tlabel = sprintf(\r\n\t\t\t\t\t\t/* translators: %s: block name */\r\n\t\t\t\t\t\t__( '%s deselected.' ),\r\n\t\t\t\t\t\ttitle\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t} else if ( selectionDiff.length > 1 ) {\r\n\t\t\t\tlabel = sprintf(\r\n\t\t\t\t\t/* translators: %s: number of deselected blocks */\r\n\t\t\t\t\t__( '%s blocks deselected.' ),\r\n\t\t\t\t\tselectionDiff.length\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif ( label ) {\r\n\t\t\t\tspeak( label, 'assertive' );\r\n\t\t\t}\r\n\t\t},\r\n\t\t[\r\n\t\t\tclearSelectedBlock,\r\n\t\t\tgetBlockName,\r\n\t\t\tgetBlockType,\r\n\t\t\tgetBlockParents,\r\n\t\t\tgetBlockSelectionStart,\r\n\t\t\tgetSelectedBlockClientIds,\r\n\t\t\thasMultiSelection,\r\n\t\t\thasSelectedBlock,\r\n\t\t\tmultiSelect,\r\n\t\t\tselectBlock,\r\n\t\t]\r\n\t);\r\n\r\n\treturn {\r\n\t\tupdateBlockSelection,\r\n\t};\r\n}\r\n"],"mappings":"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","ignoreList":[]}