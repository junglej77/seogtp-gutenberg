{"version":3,"names":["useMemo","useSelect","store","blockEditorStore","MAX_IMAGES","getImage","block","name","attributes","url","alt","clientId","getImagesFromGallery","innerBlocks","images","innerBlock","img","push","length","getImagesFromBlock","isExpanded","useListViewImages","select","_block","getBlock"],"sources":["@wordpress/block-editor/src/components/list-view/use-list-view-images.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useMemo } from '@wordpress/element';\r\nimport { useSelect } from '@wordpress/data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as blockEditorStore } from '../../store';\r\n\r\n// Maximum number of images to display in a list view row.\r\nconst MAX_IMAGES = 3;\r\n\r\nfunction getImage( block ) {\r\n\tif ( block.name !== 'core/image' ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( block.attributes?.url ) {\r\n\t\treturn {\r\n\t\t\turl: block.attributes.url,\r\n\t\t\talt: block.attributes.alt,\r\n\t\t\tclientId: block.clientId,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nfunction getImagesFromGallery( block ) {\r\n\tif ( block.name !== 'core/gallery' || ! block.innerBlocks ) {\r\n\t\treturn [];\r\n\t}\r\n\r\n\tconst images = [];\r\n\r\n\tfor ( const innerBlock of block.innerBlocks ) {\r\n\t\tconst img = getImage( innerBlock );\r\n\t\tif ( img ) {\r\n\t\t\timages.push( img );\r\n\t\t}\r\n\t\tif ( images.length >= MAX_IMAGES ) {\r\n\t\t\treturn images;\r\n\t\t}\r\n\t}\r\n\r\n\treturn images;\r\n}\r\n\r\nfunction getImagesFromBlock( block, isExpanded ) {\r\n\tconst img = getImage( block );\r\n\tif ( img ) {\r\n\t\treturn [ img ];\r\n\t}\r\n\treturn isExpanded ? [] : getImagesFromGallery( block );\r\n}\r\n\r\n/**\r\n * Get a block's preview images for display within a list view row.\r\n *\r\n * TODO: Currently only supports images from the core/image and core/gallery\r\n * blocks. This should be expanded to support other blocks that have images,\r\n * potentially via an API that blocks can opt into / provide their own logic.\r\n *\r\n * @param {Object}  props            Hook properties.\r\n * @param {string}  props.clientId   The block's clientId.\r\n * @param {boolean} props.isExpanded Whether or not the block is expanded in the list view.\r\n * @return {Array} Images.\r\n */\r\nexport default function useListViewImages( { clientId, isExpanded } ) {\r\n\tconst { block } = useSelect(\r\n\t\t( select ) => {\r\n\t\t\tconst _block = select( blockEditorStore ).getBlock( clientId );\r\n\t\t\treturn { block: _block };\r\n\t\t},\r\n\t\t[ clientId ]\r\n\t);\r\n\r\n\tconst images = useMemo( () => {\r\n\t\treturn getImagesFromBlock( block, isExpanded );\r\n\t}, [ block, isExpanded ] );\r\n\r\n\treturn images;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,SAAS,QAAQ,iBAAiB;;AAE3C;AACA;AACA;AACA,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,aAAa;;AAEvD;AACA,MAAMC,UAAU,GAAG,CAAC;AAEpB,SAASC,QAAQA,CAAEC,KAAK,EAAG;EAC1B,IAAKA,KAAK,CAACC,IAAI,KAAK,YAAY,EAAG;IAClC;EACD;EAEA,IAAKD,KAAK,CAACE,UAAU,EAAEC,GAAG,EAAG;IAC5B,OAAO;MACNA,GAAG,EAAEH,KAAK,CAACE,UAAU,CAACC,GAAG;MACzBC,GAAG,EAAEJ,KAAK,CAACE,UAAU,CAACE,GAAG;MACzBC,QAAQ,EAAEL,KAAK,CAACK;IACjB,CAAC;EACF;AACD;AAEA,SAASC,oBAAoBA,CAAEN,KAAK,EAAG;EACtC,IAAKA,KAAK,CAACC,IAAI,KAAK,cAAc,IAAI,CAAED,KAAK,CAACO,WAAW,EAAG;IAC3D,OAAO,EAAE;EACV;EAEA,MAAMC,MAAM,GAAG,EAAE;EAEjB,KAAM,MAAMC,UAAU,IAAIT,KAAK,CAACO,WAAW,EAAG;IAC7C,MAAMG,GAAG,GAAGX,QAAQ,CAAEU,UAAW,CAAC;IAClC,IAAKC,GAAG,EAAG;MACVF,MAAM,CAACG,IAAI,CAAED,GAAI,CAAC;IACnB;IACA,IAAKF,MAAM,CAACI,MAAM,IAAId,UAAU,EAAG;MAClC,OAAOU,MAAM;IACd;EACD;EAEA,OAAOA,MAAM;AACd;AAEA,SAASK,kBAAkBA,CAAEb,KAAK,EAAEc,UAAU,EAAG;EAChD,MAAMJ,GAAG,GAAGX,QAAQ,CAAEC,KAAM,CAAC;EAC7B,IAAKU,GAAG,EAAG;IACV,OAAO,CAAEA,GAAG,CAAE;EACf;EACA,OAAOI,UAAU,GAAG,EAAE,GAAGR,oBAAoB,CAAEN,KAAM,CAAC;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASe,iBAAiBA,CAAE;EAAEV,QAAQ;EAAES;AAAW,CAAC,EAAG;EACrE,MAAM;IAAEd;EAAM,CAAC,GAAGL,SAAS,CACxBqB,MAAM,IAAM;IACb,MAAMC,MAAM,GAAGD,MAAM,CAAEnB,gBAAiB,CAAC,CAACqB,QAAQ,CAAEb,QAAS,CAAC;IAC9D,OAAO;MAAEL,KAAK,EAAEiB;IAAO,CAAC;EACzB,CAAC,EACD,CAAEZ,QAAQ,CACX,CAAC;EAED,MAAMG,MAAM,GAAGd,OAAO,CAAE,MAAM;IAC7B,OAAOmB,kBAAkB,CAAEb,KAAK,EAAEc,UAAW,CAAC;EAC/C,CAAC,EAAE,CAAEd,KAAK,EAAEc,UAAU,CAAG,CAAC;EAE1B,OAAON,MAAM;AACd","ignoreList":[]}