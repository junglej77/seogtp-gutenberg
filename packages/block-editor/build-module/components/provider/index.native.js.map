{"version":3,"names":["useDispatch","useEffect","withRegistryProvider","useBlockSync","store","blockEditorStore","BlockRefsProvider","jsx","_jsx","BlockEditorProvider","props","children","settings","updateSettings","ExperimentalBlockEditorProvider"],"sources":["@wordpress/block-editor/src/components/provider/index.native.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useDispatch } from '@wordpress/data';\r\nimport { useEffect } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport withRegistryProvider from './with-registry-provider';\r\nimport useBlockSync from './use-block-sync';\r\nimport { store as blockEditorStore } from '../../store';\r\nimport { BlockRefsProvider } from './block-refs-provider';\r\n\r\n/** @typedef {import('@wordpress/data').WPDataRegistry} WPDataRegistry */\r\n\r\nconst BlockEditorProvider = withRegistryProvider( function ( props ) {\r\n\tconst { children, settings } = props;\r\n\r\n\tconst { updateSettings } = useDispatch( blockEditorStore );\r\n\tuseEffect( () => {\r\n\t\tupdateSettings( settings );\r\n\t}, [ settings ] );\r\n\r\n\t// Syncs the entity provider with changes in the block-editor store.\r\n\tuseBlockSync( props );\r\n\r\n\treturn <BlockRefsProvider>{ children }</BlockRefsProvider>;\r\n} );\r\n\r\nexport default BlockEditorProvider;\r\nexport { BlockEditorProvider as ExperimentalBlockEditorProvider };\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,SAAS,QAAQ,oBAAoB;;AAE9C;AACA;AACA;AACA,OAAOC,oBAAoB,MAAM,0BAA0B;AAC3D,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,aAAa;AACvD,SAASC,iBAAiB,QAAQ,uBAAuB;;AAEzD;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAEA,MAAMC,mBAAmB,GAAGP,oBAAoB,CAAE,UAAWQ,KAAK,EAAG;EACpE,MAAM;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGF,KAAK;EAEpC,MAAM;IAAEG;EAAe,CAAC,GAAGb,WAAW,CAAEK,gBAAiB,CAAC;EAC1DJ,SAAS,CAAE,MAAM;IAChBY,cAAc,CAAED,QAAS,CAAC;EAC3B,CAAC,EAAE,CAAEA,QAAQ,CAAG,CAAC;;EAEjB;EACAT,YAAY,CAAEO,KAAM,CAAC;EAErB,oBAAOF,IAAA,CAACF,iBAAiB;IAAAK,QAAA,EAAGA;EAAQ,CAAqB,CAAC;AAC3D,CAAE,CAAC;AAEH,eAAeF,mBAAmB;AAClC,SAASA,mBAAmB,IAAIK,+BAA+B","ignoreList":[]}