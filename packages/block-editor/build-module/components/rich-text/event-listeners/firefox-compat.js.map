{"version":3,"names":["store","blockEditorStore","props","element","onFocus","registry","current","select","isMultiSelecting","parentEditable","parentElement","closest","focus","addEventListener","removeEventListener"],"sources":["@wordpress/block-editor/src/components/rich-text/event-listeners/firefox-compat.js"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport { store as blockEditorStore } from '../../../store';\r\n\r\nexport default ( props ) => ( element ) => {\r\n\tfunction onFocus() {\r\n\t\tconst { registry } = props.current;\r\n\t\tif ( ! registry.select( blockEditorStore ).isMultiSelecting() ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// This is a little hack to work around focus issues with nested\r\n\t\t// editable elements in Firefox. For some reason the editable child\r\n\t\t// element sometimes regains focus, while it should not be focusable\r\n\t\t// and focus should remain on the editable parent element.\r\n\t\t// To do: try to find the cause of the shifting focus.\r\n\t\tconst parentEditable = element.parentElement.closest(\r\n\t\t\t'[contenteditable=\"true\"]'\r\n\t\t);\r\n\r\n\t\tif ( parentEditable ) {\r\n\t\t\tparentEditable.focus();\r\n\t\t}\r\n\t}\r\n\r\n\telement.addEventListener( 'focus', onFocus );\r\n\treturn () => {\r\n\t\telement.removeEventListener( 'focus', onFocus );\r\n\t};\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,KAAK,IAAIC,gBAAgB,QAAQ,gBAAgB;AAE1D,gBAAiBC,KAAK,IAAQC,OAAO,IAAM;EAC1C,SAASC,OAAOA,CAAA,EAAG;IAClB,MAAM;MAAEC;IAAS,CAAC,GAAGH,KAAK,CAACI,OAAO;IAClC,IAAK,CAAED,QAAQ,CAACE,MAAM,CAAEN,gBAAiB,CAAC,CAACO,gBAAgB,CAAC,CAAC,EAAG;MAC/D;IACD;;IAEA;IACA;IACA;IACA;IACA;IACA,MAAMC,cAAc,GAAGN,OAAO,CAACO,aAAa,CAACC,OAAO,CACnD,0BACD,CAAC;IAED,IAAKF,cAAc,EAAG;MACrBA,cAAc,CAACG,KAAK,CAAC,CAAC;IACvB;EACD;EAEAT,OAAO,CAACU,gBAAgB,CAAE,OAAO,EAAET,OAAQ,CAAC;EAC5C,OAAO,MAAM;IACZD,OAAO,CAACW,mBAAmB,CAAE,OAAO,EAAEV,OAAQ,CAAC;EAChD,CAAC;AACF,CAAC","ignoreList":[]}