{"version":3,"names":["insert","toHTMLString","getBlockTransforms","findTransform","store","blockEditorStore","preventEventDiscovery","retrieveSelectedAttribute","START_OF_SELECTED_AREA","findSelection","blocks","i","length","attributeKey","attributes","toString","replace","clientId","nestedSelection","innerBlocks","props","element","inputRule","getValue","onReplace","selectionChange","registry","current","value","start","text","characterBefore","slice","trimmedTextBefore","trim","prefixTransforms","filter","type","transformation","prefix","content","block","transform","dispatch","__unstableMarkAutomaticChange","onInput","event","inputType","onChange","__unstableAllowPrefixTransformations","formatTypes","transformed","reduce","accumlator","__unstableInputRule","__unstableMarkLastChangeAsPersistent","activeFormats","addEventListener","removeEventListener"],"sources":["@wordpress/block-editor/src/components/rich-text/event-listeners/input-rules.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { insert, toHTMLString } from '@wordpress/rich-text';\r\nimport { getBlockTransforms, findTransform } from '@wordpress/blocks';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as blockEditorStore } from '../../../store';\r\nimport { preventEventDiscovery } from '../prevent-event-discovery';\r\nimport {\r\n\tretrieveSelectedAttribute,\r\n\tSTART_OF_SELECTED_AREA,\r\n} from '../../../utils/selection';\r\n\r\nexport function findSelection( blocks ) {\r\n\tlet i = blocks.length;\r\n\r\n\twhile ( i-- ) {\r\n\t\tconst attributeKey = retrieveSelectedAttribute(\r\n\t\t\tblocks[ i ].attributes\r\n\t\t);\r\n\r\n\t\tif ( attributeKey ) {\r\n\t\t\tblocks[ i ].attributes[ attributeKey ] = blocks[ i ].attributes[\r\n\t\t\t\tattributeKey\r\n\t\t\t]\r\n\t\t\t\t// To do: refactor this to use rich text's selection instead, so\r\n\t\t\t\t// we no longer have to use on this hack inserting a special\r\n\t\t\t\t// character.\r\n\t\t\t\t.toString()\r\n\t\t\t\t.replace( START_OF_SELECTED_AREA, '' );\r\n\t\t\treturn [ blocks[ i ].clientId, attributeKey, 0, 0 ];\r\n\t\t}\r\n\r\n\t\tconst nestedSelection = findSelection( blocks[ i ].innerBlocks );\r\n\r\n\t\tif ( nestedSelection ) {\r\n\t\t\treturn nestedSelection;\r\n\t\t}\r\n\t}\r\n\r\n\treturn [];\r\n}\r\n\r\nexport default ( props ) => ( element ) => {\r\n\tfunction inputRule() {\r\n\t\tconst { getValue, onReplace, selectionChange, registry } =\r\n\t\t\tprops.current;\r\n\r\n\t\tif ( ! onReplace ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// We must use getValue() here because value may be update\r\n\t\t// asynchronously.\r\n\t\tconst value = getValue();\r\n\t\tconst { start, text } = value;\r\n\t\tconst characterBefore = text.slice( start - 1, start );\r\n\r\n\t\t// The character right before the caret must be a plain space.\r\n\t\tif ( characterBefore !== ' ' ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst trimmedTextBefore = text.slice( 0, start ).trim();\r\n\t\tconst prefixTransforms = getBlockTransforms( 'from' ).filter(\r\n\t\t\t( { type } ) => type === 'prefix'\r\n\t\t);\r\n\t\tconst transformation = findTransform(\r\n\t\t\tprefixTransforms,\r\n\t\t\t( { prefix } ) => {\r\n\t\t\t\treturn trimmedTextBefore === prefix;\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tif ( ! transformation ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst content = toHTMLString( {\r\n\t\t\tvalue: insert( value, START_OF_SELECTED_AREA, 0, start ),\r\n\t\t} );\r\n\t\tconst block = transformation.transform( content );\r\n\r\n\t\tselectionChange( ...findSelection( [ block ] ) );\r\n\t\tonReplace( [ block ] );\r\n\t\tregistry.dispatch( blockEditorStore ).__unstableMarkAutomaticChange();\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction onInput( event ) {\r\n\t\tconst { inputType, type } = event;\r\n\t\tconst {\r\n\t\t\tgetValue,\r\n\t\t\tonChange,\r\n\t\t\t__unstableAllowPrefixTransformations,\r\n\t\t\tformatTypes,\r\n\t\t\tregistry,\r\n\t\t} = props.current;\r\n\r\n\t\t// Only run input rules when inserting text.\r\n\t\tif ( inputType !== 'insertText' && type !== 'compositionend' ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( __unstableAllowPrefixTransformations && inputRule() ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst value = getValue();\r\n\t\tconst transformed = formatTypes.reduce(\r\n\t\t\t( accumlator, { __unstableInputRule } ) => {\r\n\t\t\t\tif ( __unstableInputRule ) {\r\n\t\t\t\t\taccumlator = __unstableInputRule( accumlator );\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn accumlator;\r\n\t\t\t},\r\n\t\t\tpreventEventDiscovery( value )\r\n\t\t);\r\n\r\n\t\tconst {\r\n\t\t\t__unstableMarkLastChangeAsPersistent,\r\n\t\t\t__unstableMarkAutomaticChange,\r\n\t\t} = registry.dispatch( blockEditorStore );\r\n\r\n\t\tif ( transformed !== value ) {\r\n\t\t\t__unstableMarkLastChangeAsPersistent();\r\n\t\t\tonChange( {\r\n\t\t\t\t...transformed,\r\n\t\t\t\tactiveFormats: value.activeFormats,\r\n\t\t\t} );\r\n\t\t\t__unstableMarkAutomaticChange();\r\n\t\t}\r\n\t}\r\n\r\n\telement.addEventListener( 'input', onInput );\r\n\telement.addEventListener( 'compositionend', onInput );\r\n\treturn () => {\r\n\t\telement.removeEventListener( 'input', onInput );\r\n\t\telement.removeEventListener( 'compositionend', onInput );\r\n\t};\r\n};\r\n"],"mappings":"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","ignoreList":[]}