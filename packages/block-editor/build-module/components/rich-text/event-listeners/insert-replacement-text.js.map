{"version":3,"names":["store","blockEditorStore","props","element","onInput","event","inputType","registry","current","dispatch","__unstableMarkLastChangeAsPersistent","addEventListener","removeEventListener"],"sources":["@wordpress/block-editor/src/components/rich-text/event-listeners/insert-replacement-text.js"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport { store as blockEditorStore } from '../../../store';\r\n\r\n/**\r\n * When the browser is about to auto correct, add an undo level so the user can\r\n * revert the change.\r\n *\r\n * @param {Object} props\r\n */\r\nexport default ( props ) => ( element ) => {\r\n\tfunction onInput( event ) {\r\n\t\tif ( event.inputType !== 'insertReplacementText' ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst { registry } = props.current;\r\n\t\tregistry\r\n\t\t\t.dispatch( blockEditorStore )\r\n\t\t\t.__unstableMarkLastChangeAsPersistent();\r\n\t}\r\n\r\n\telement.addEventListener( 'beforeinput', onInput );\r\n\treturn () => {\r\n\t\telement.removeEventListener( 'beforeinput', onInput );\r\n\t};\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,KAAK,IAAIC,gBAAgB,QAAQ,gBAAgB;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAiBC,KAAK,IAAQC,OAAO,IAAM;EAC1C,SAASC,OAAOA,CAAEC,KAAK,EAAG;IACzB,IAAKA,KAAK,CAACC,SAAS,KAAK,uBAAuB,EAAG;MAClD;IACD;IAEA,MAAM;MAAEC;IAAS,CAAC,GAAGL,KAAK,CAACM,OAAO;IAClCD,QAAQ,CACNE,QAAQ,CAAER,gBAAiB,CAAC,CAC5BS,oCAAoC,CAAC,CAAC;EACzC;EAEAP,OAAO,CAACQ,gBAAgB,CAAE,aAAa,EAAEP,OAAQ,CAAC;EAClD,OAAO,MAAM;IACZD,OAAO,CAACS,mBAAmB,CAAE,aAAa,EAAER,OAAQ,CAAC;EACtD,CAAC;AACF,CAAC","ignoreList":[]}