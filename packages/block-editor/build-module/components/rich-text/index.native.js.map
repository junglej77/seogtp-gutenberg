{"version":3,"names":["clsx","Platform","useRef","useCallback","forwardRef","useDispatch","useSelect","pasteHandler","children","childrenSource","getBlockTransforms","findTransform","isUnmodifiedDefaultBlock","useInstanceId","useMergeRefs","__unstableCreateElement","isEmpty","insert","remove","create","split","toHTMLString","isURL","Autocomplete","useBlockEditContext","RemoveBrowserShortcuts","filePasteHandler","FormatToolbarContainer","store","blockEditorStore","addActiveFormats","getAllowedFormats","createLinkInParagraph","EmbedHandlerPicker","Content","RichText","withDeprecations","findSelection","START_OF_SELECTED_AREA","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","classes","RichTextWrapper","tagName","start","reversed","value","originalValue","onChange","originalOnChange","isSelected","originalIsSelected","inlineToolbar","wrapperClassName","autocompleters","onReplace","placeholder","allowedFormats","withoutInteractiveFormatting","onRemove","onMerge","onSplit","__unstableOnSplitAtEnd","onSplitAtEnd","__unstableOnSplitMiddle","onSplitMiddle","__unstableOnSplitAtDoubleLineEnd","onSplitAtDoubleLineEnd","identifier","preserveWhiteSpace","__unstablePastePlainText","pastePlainText","__unstableEmbedURLOnPaste","__unstableDisableFormats","disableFormats","disableLineBreaks","unstableOnFocus","__unstableAllowPrefixTransformations","__unstableUseSplitSelection","__unstableMobileNoFocusOnMount","deleteEnter","placeholderTextColor","textAlign","selectionColor","tagsToEliminate","disableEditingMenu","fontSize","fontFamily","fontWeight","fontStyle","minWidth","maxWidth","onBlur","disableSuggestions","disableAutocorrection","containerWidth","onEnter","onCustomEnter","props","providedRef","instanceId","fallbackRef","clientId","blockIsSelected","embedHandlerPickerRef","selector","select","getSelectionStart","getSelectionEnd","getSettings","didAutomaticChange","getBlock","isMultiSelecting","hasMultiSelection","getSelectedBlockClientId","selectionStart","selectionEnd","__experimentalUndo","undo","undefined","attributeKey","extraProps","OS","block","shouldBlurOnUnmount","offset","disabled","__unstableMarkLastChangeAsPersistent","enterFormattedText","exitFormattedText","selectionChange","__unstableMarkAutomaticChange","__unstableSplitSelection","clearSelectedBlock","adjustedAllowedFormats","hasFormats","length","adjustedValue","adjustedOnChange","Array","isArray","toHTML","newValue","fromDOM","document","childNodes","onSelectionChange","selectionChangeStart","selectionChangeEnd","clearCurrentSelectionOnUnmount","onDelete","isReverse","splitValue","record","pastedBlocks","blocks","before","after","hasPastedBlocks","lastPastedBlockIndex","isAfterOriginal","push","indexToSelect","initialPosition","shiftKey","canSplit","transforms","filter","type","transformation","item","regExp","test","text","transform","content","splitStart","end","splitEnd","canSplitAtEnd","slice","onPaste","html","plainText","isInternal","files","activeFormats","pastedValue","HTML","mode","window","console","log","isPastedURL","trim","presentEmbedHandlerPicker","current","presentPicker","createEmbed","createLink","valueToInsert","canPasteEmbed","name","source","inputRule","startPosition","characterBefore","trimmedTextBefore","prefixTransforms","prefix","currentSelection","mergedRef","nativeEditorRef","__unstableIsSelected","__unstableInputRule","__unstableOnEnterFormattedText","__unstableOnExitFormattedText","__unstableOnCreateUndoLevel","__unstableDidAutomaticChange","__unstableUndo","id","style","nestedIsSelected","onFocus","editableProps","editableTagName","TagName","inline","anchorRef","completers","contentRef","listBoxId","activeId","onKeyDown","className","event","ref","PrivateRichText","defaultProps","format","Raw","RichTextShortcut","RichTextToolbarButton","__unstableRichTextInputEvent"],"sources":["@wordpress/block-editor/src/components/rich-text/index.native.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { Platform, useRef, useCallback, forwardRef } from '@wordpress/element';\r\nimport { useDispatch, useSelect } from '@wordpress/data';\r\nimport {\r\n\tpasteHandler,\r\n\tchildren as childrenSource,\r\n\tgetBlockTransforms,\r\n\tfindTransform,\r\n\tisUnmodifiedDefaultBlock,\r\n} from '@wordpress/blocks';\r\nimport { useInstanceId, useMergeRefs } from '@wordpress/compose';\r\nimport {\r\n\t__unstableCreateElement,\r\n\tisEmpty,\r\n\tinsert,\r\n\tremove,\r\n\tcreate,\r\n\tsplit,\r\n\ttoHTMLString,\r\n} from '@wordpress/rich-text';\r\nimport { isURL } from '@wordpress/url';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport Autocomplete from '../autocomplete';\r\nimport { useBlockEditContext } from '../block-edit';\r\nimport { RemoveBrowserShortcuts } from './remove-browser-shortcuts';\r\nimport { filePasteHandler } from './file-paste-handler';\r\nimport FormatToolbarContainer from './format-toolbar-container';\r\nimport { store as blockEditorStore } from '../../store';\r\nimport {\r\n\taddActiveFormats,\r\n\tgetAllowedFormats,\r\n\tcreateLinkInParagraph,\r\n} from './utils';\r\nimport EmbedHandlerPicker from './embed-handler-picker';\r\nimport { Content } from './content';\r\nimport RichText from './native';\r\nimport { withDeprecations } from './with-deprecations';\r\nimport { findSelection } from './event-listeners/input-rules';\r\nimport { START_OF_SELECTED_AREA } from '../../utils/selection';\r\n\r\nconst classes = 'block-editor-rich-text__editable';\r\n\r\nexport function RichTextWrapper(\r\n\t{\r\n\t\tchildren,\r\n\t\ttagName,\r\n\t\tstart,\r\n\t\treversed,\r\n\t\tvalue: originalValue,\r\n\t\tonChange: originalOnChange,\r\n\t\tisSelected: originalIsSelected,\r\n\t\tinlineToolbar,\r\n\t\twrapperClassName,\r\n\t\tautocompleters,\r\n\t\tonReplace,\r\n\t\tplaceholder,\r\n\t\tallowedFormats,\r\n\t\twithoutInteractiveFormatting,\r\n\t\tonRemove,\r\n\t\tonMerge,\r\n\t\tonSplit,\r\n\t\t__unstableOnSplitAtEnd: onSplitAtEnd,\r\n\t\t__unstableOnSplitMiddle: onSplitMiddle,\r\n\t\t__unstableOnSplitAtDoubleLineEnd: onSplitAtDoubleLineEnd,\r\n\t\tidentifier,\r\n\t\tpreserveWhiteSpace,\r\n\t\t__unstablePastePlainText: pastePlainText,\r\n\t\t__unstableEmbedURLOnPaste,\r\n\t\t__unstableDisableFormats: disableFormats,\r\n\t\tdisableLineBreaks,\r\n\t\tunstableOnFocus,\r\n\t\t__unstableAllowPrefixTransformations,\r\n\t\t// Native props.\r\n\t\t__unstableUseSplitSelection,\r\n\t\t__unstableMobileNoFocusOnMount,\r\n\t\tdeleteEnter,\r\n\t\tplaceholderTextColor,\r\n\t\ttextAlign,\r\n\t\tselectionColor,\r\n\t\ttagsToEliminate,\r\n\t\tdisableEditingMenu,\r\n\t\tfontSize,\r\n\t\tfontFamily,\r\n\t\tfontWeight,\r\n\t\tfontStyle,\r\n\t\tminWidth,\r\n\t\tmaxWidth,\r\n\t\tonBlur,\r\n\t\tdisableSuggestions,\r\n\t\tdisableAutocorrection,\r\n\t\tcontainerWidth,\r\n\t\tonEnter: onCustomEnter,\r\n\t\t...props\r\n\t},\r\n\tprovidedRef\r\n) {\r\n\tconst instanceId = useInstanceId( RichTextWrapper );\r\n\r\n\tidentifier = identifier || instanceId;\r\n\r\n\tconst fallbackRef = useRef();\r\n\tconst { clientId, isSelected: blockIsSelected } = useBlockEditContext();\r\n\tconst embedHandlerPickerRef = useRef();\r\n\tconst selector = ( select ) => {\r\n\t\tconst {\r\n\t\t\tgetSelectionStart,\r\n\t\t\tgetSelectionEnd,\r\n\t\t\tgetSettings,\r\n\t\t\tdidAutomaticChange,\r\n\t\t\tgetBlock,\r\n\t\t\tisMultiSelecting,\r\n\t\t\thasMultiSelection,\r\n\t\t\tgetSelectedBlockClientId,\r\n\t\t} = select( blockEditorStore );\r\n\r\n\t\tconst selectionStart = getSelectionStart();\r\n\t\tconst selectionEnd = getSelectionEnd();\r\n\t\tconst { __experimentalUndo: undo } = getSettings();\r\n\r\n\t\tlet isSelected;\r\n\r\n\t\tif ( originalIsSelected === undefined ) {\r\n\t\t\tisSelected =\r\n\t\t\t\tselectionStart.clientId === clientId &&\r\n\t\t\t\tselectionStart.attributeKey === identifier;\r\n\t\t} else if ( originalIsSelected ) {\r\n\t\t\tisSelected = selectionStart.clientId === clientId;\r\n\t\t}\r\n\r\n\t\tlet extraProps = {};\r\n\t\tif ( Platform.OS === 'native' ) {\r\n\t\t\t// If the block of this RichText is unmodified then it's a candidate for replacing when adding a new block.\r\n\t\t\t// In order to fix https://github.com/wordpress-mobile/gutenberg-mobile/issues/1126, let's blur on unmount in that case.\r\n\t\t\t// This apparently assumes functionality the BlockHlder actually.\r\n\t\t\tconst block = clientId && getBlock( clientId );\r\n\t\t\tconst shouldBlurOnUnmount =\r\n\t\t\t\tblock && isSelected && isUnmodifiedDefaultBlock( block );\r\n\t\t\textraProps = {\r\n\t\t\t\tshouldBlurOnUnmount,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tselectionStart: isSelected ? selectionStart.offset : undefined,\r\n\t\t\tselectionEnd: isSelected ? selectionEnd.offset : undefined,\r\n\t\t\tisSelected,\r\n\t\t\tdidAutomaticChange: didAutomaticChange(),\r\n\t\t\tdisabled: isMultiSelecting() || hasMultiSelection(),\r\n\t\t\tundo,\r\n\t\t\tgetSelectedBlockClientId,\r\n\t\t\t...extraProps,\r\n\t\t};\r\n\t};\r\n\t// This selector must run on every render so the right selection state is\r\n\t// retrieved from the store on merge.\r\n\t// To do: fix this somehow.\r\n\tconst {\r\n\t\tselectionStart,\r\n\t\tselectionEnd,\r\n\t\tisSelected,\r\n\t\tgetSelectedBlockClientId,\r\n\t\tdidAutomaticChange,\r\n\t\tdisabled,\r\n\t\tundo,\r\n\t\tshouldBlurOnUnmount,\r\n\t} = useSelect( selector );\r\n\tconst {\r\n\t\t__unstableMarkLastChangeAsPersistent,\r\n\t\tenterFormattedText,\r\n\t\texitFormattedText,\r\n\t\tselectionChange,\r\n\t\t__unstableMarkAutomaticChange,\r\n\t\t__unstableSplitSelection,\r\n\t\tclearSelectedBlock,\r\n\t} = useDispatch( blockEditorStore );\r\n\tconst adjustedAllowedFormats = getAllowedFormats( {\r\n\t\tallowedFormats,\r\n\t\tdisableFormats,\r\n\t} );\r\n\tconst hasFormats =\r\n\t\t! adjustedAllowedFormats || adjustedAllowedFormats.length > 0;\r\n\tlet adjustedValue = originalValue;\r\n\tlet adjustedOnChange = originalOnChange;\r\n\r\n\t// Handle deprecated format.\r\n\tif ( Array.isArray( originalValue ) ) {\r\n\t\tadjustedValue = childrenSource.toHTML( originalValue );\r\n\t\tadjustedOnChange = ( newValue ) =>\r\n\t\t\toriginalOnChange(\r\n\t\t\t\tchildrenSource.fromDOM(\r\n\t\t\t\t\t__unstableCreateElement( document, newValue ).childNodes\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t}\r\n\r\n\tconst onSelectionChange = useCallback(\r\n\t\t( selectionChangeStart, selectionChangeEnd ) => {\r\n\t\t\tselectionChange(\r\n\t\t\t\tclientId,\r\n\t\t\t\tidentifier,\r\n\t\t\t\tselectionChangeStart,\r\n\t\t\t\tselectionChangeEnd\r\n\t\t\t);\r\n\t\t},\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t\t[ clientId, identifier ]\r\n\t);\r\n\r\n\tconst clearCurrentSelectionOnUnmount = useCallback( () => {\r\n\t\tif ( getSelectedBlockClientId() === clientId ) {\r\n\t\t\tclearSelectedBlock();\r\n\t\t}\r\n\t}, [ clearSelectedBlock, clientId, getSelectedBlockClientId ] );\r\n\r\n\tconst onDelete = useCallback(\r\n\t\t( { value, isReverse } ) => {\r\n\t\t\tif ( onMerge ) {\r\n\t\t\t\tonMerge( ! isReverse );\r\n\t\t\t}\r\n\r\n\t\t\t// Only handle remove on Backspace. This serves dual-purpose of being\r\n\t\t\t// an intentional user interaction distinguishing between Backspace and\r\n\t\t\t// Delete to remove the empty field, but also to avoid merge & remove\r\n\t\t\t// causing destruction of two fields (merge, then removed merged).\r\n\t\t\telse if ( onRemove && isEmpty( value ) && isReverse ) {\r\n\t\t\t\tonRemove( ! isReverse );\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ onMerge, onRemove ]\r\n\t);\r\n\r\n\t/**\r\n\t * Signals to the RichText owner that the block can be replaced with two\r\n\t * blocks as a result of splitting the block by pressing enter, or with\r\n\t * blocks as a result of splitting the block by pasting block content in the\r\n\t * instance.\r\n\t *\r\n\t * @param {Object} record       The rich text value to split.\r\n\t * @param {Array}  pastedBlocks The pasted blocks to insert, if any.\r\n\t */\r\n\tconst splitValue = useCallback(\r\n\t\t( record, pastedBlocks = [] ) => {\r\n\t\t\tif ( ! onReplace || ! onSplit ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst blocks = [];\r\n\t\t\tconst [ before, after ] = split( record );\r\n\t\t\tconst hasPastedBlocks = pastedBlocks.length > 0;\r\n\t\t\tlet lastPastedBlockIndex = -1;\r\n\r\n\t\t\t// Consider the after value to be the original it is not empty and\r\n\t\t\t// the before value *is* empty.\r\n\t\t\tconst isAfterOriginal = isEmpty( before ) && ! isEmpty( after );\r\n\r\n\t\t\t// Create a block with the content before the caret if there's no pasted\r\n\t\t\t// blocks, or if there are pasted blocks and the value is not empty.\r\n\t\t\t// We do not want a leading empty block on paste, but we do if split\r\n\t\t\t// with e.g. the enter key.\r\n\t\t\tif ( ! hasPastedBlocks || ! isEmpty( before ) ) {\r\n\t\t\t\tblocks.push(\r\n\t\t\t\t\tonSplit(\r\n\t\t\t\t\t\ttoHTMLString( { value: before } ),\r\n\t\t\t\t\t\t! isAfterOriginal\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tlastPastedBlockIndex += 1;\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasPastedBlocks ) {\r\n\t\t\t\tblocks.push( ...pastedBlocks );\r\n\t\t\t\tlastPastedBlockIndex += pastedBlocks.length;\r\n\t\t\t} else if ( onSplitMiddle ) {\r\n\t\t\t\tblocks.push( onSplitMiddle() );\r\n\t\t\t}\r\n\r\n\t\t\t// If there's pasted blocks, append a block with non empty content\r\n\t\t\t// after the caret. Otherwise, do append an empty block if there\r\n\t\t\t// is no `onSplitMiddle` prop, but if there is and the content is\r\n\t\t\t// empty, the middle block is enough to set focus in.\r\n\t\t\tif (\r\n\t\t\t\thasPastedBlocks\r\n\t\t\t\t\t? ! isEmpty( after )\r\n\t\t\t\t\t: ! onSplitMiddle || ! isEmpty( after )\r\n\t\t\t) {\r\n\t\t\t\tblocks.push(\r\n\t\t\t\t\tonSplit( toHTMLString( { value: after } ), isAfterOriginal )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// If there are pasted blocks, set the selection to the last one.\r\n\t\t\t// Otherwise, set the selection to the second block.\r\n\t\t\tconst indexToSelect = hasPastedBlocks ? lastPastedBlockIndex : 1;\r\n\r\n\t\t\t// If there are pasted blocks, move the caret to the end of the selected block\r\n\t\t\t// Otherwise, retain the default value.\r\n\t\t\tconst initialPosition = hasPastedBlocks ? -1 : 0;\r\n\r\n\t\t\tonReplace( blocks, indexToSelect, initialPosition );\r\n\t\t},\r\n\t\t[ onReplace, onSplit, onSplitMiddle ]\r\n\t);\r\n\r\n\tconst onEnter = useCallback(\r\n\t\t( { value, onChange, shiftKey } ) => {\r\n\t\t\tconst canSplit = onReplace && onSplit;\r\n\r\n\t\t\tif ( onReplace ) {\r\n\t\t\t\tconst transforms = getBlockTransforms( 'from' ).filter(\r\n\t\t\t\t\t( { type } ) => type === 'enter'\r\n\t\t\t\t);\r\n\t\t\t\tconst transformation = findTransform( transforms, ( item ) => {\r\n\t\t\t\t\treturn item.regExp.test( value.text );\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tif ( transformation ) {\r\n\t\t\t\t\tonReplace( [\r\n\t\t\t\t\t\ttransformation.transform( { content: value.text } ),\r\n\t\t\t\t\t] );\r\n\t\t\t\t\t__unstableMarkAutomaticChange();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( onCustomEnter ) {\r\n\t\t\t\tonCustomEnter();\r\n\t\t\t}\r\n\r\n\t\t\tconst { text, start: splitStart, end: splitEnd } = value;\r\n\t\t\tconst canSplitAtEnd =\r\n\t\t\t\tonSplitAtEnd &&\r\n\t\t\t\tsplitStart === splitEnd &&\r\n\t\t\t\tsplitEnd === text.length;\r\n\r\n\t\t\tif ( shiftKey ) {\r\n\t\t\t\tif ( ! disableLineBreaks ) {\r\n\t\t\t\t\tonChange( insert( value, '\\n' ) );\r\n\t\t\t\t}\r\n\t\t\t} else if ( canSplit ) {\r\n\t\t\t\tsplitValue( value );\r\n\t\t\t} else if ( __unstableUseSplitSelection ) {\r\n\t\t\t\t__unstableSplitSelection();\r\n\t\t\t} else if ( canSplitAtEnd ) {\r\n\t\t\t\tonSplitAtEnd();\r\n\t\t\t} else if (\r\n\t\t\t\t// For some blocks it's desirable to split at the end of the\r\n\t\t\t\t// block when there are two line breaks at the end of the\r\n\t\t\t\t// block, so triple Enter exits the block.\r\n\t\t\t\tonSplitAtDoubleLineEnd &&\r\n\t\t\t\tsplitStart === splitEnd &&\r\n\t\t\t\tsplitEnd === text.length &&\r\n\t\t\t\ttext.slice( -2 ) === '\\n\\n'\r\n\t\t\t) {\r\n\t\t\t\tvalue.start = value.end - 2;\r\n\t\t\t\tonChange( remove( value ) );\r\n\t\t\t\tonSplitAtDoubleLineEnd();\r\n\t\t\t} else if ( ! disableLineBreaks ) {\r\n\t\t\t\tonChange( insert( value, '\\n' ) );\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t\t[\r\n\t\t\tonReplace,\r\n\t\t\tonSplit,\r\n\t\t\t__unstableMarkAutomaticChange,\r\n\t\t\tsplitValue,\r\n\t\t\tonSplitAtEnd,\r\n\t\t]\r\n\t);\r\n\r\n\tconst onPaste = useCallback(\r\n\t\t( {\r\n\t\t\tvalue,\r\n\t\t\tonChange,\r\n\t\t\thtml,\r\n\t\t\tplainText,\r\n\t\t\tisInternal,\r\n\t\t\tfiles,\r\n\t\t\tactiveFormats,\r\n\t\t} ) => {\r\n\t\t\t// If the data comes from a rich text instance, we can directly use it\r\n\t\t\t// without filtering the data. The filters are only meant for externally\r\n\t\t\t// pasted content and remove inline styles.\r\n\t\t\tif ( isInternal ) {\r\n\t\t\t\tconst pastedValue = create( {\r\n\t\t\t\t\thtml,\r\n\t\t\t\t\tpreserveWhiteSpace,\r\n\t\t\t\t} );\r\n\t\t\t\taddActiveFormats( pastedValue, activeFormats );\r\n\t\t\t\tonChange( insert( value, pastedValue ) );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( pastePlainText ) {\r\n\t\t\t\tonChange( insert( value, create( { text: plainText } ) ) );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Only process file if no HTML is present.\r\n\t\t\t// Note: a pasted file may have the URL as plain text.\r\n\t\t\tif ( files && files.length && ! html ) {\r\n\t\t\t\tconst content = pasteHandler( {\r\n\t\t\t\t\tHTML: filePasteHandler( files ),\r\n\t\t\t\t\tmode: 'BLOCKS',\r\n\t\t\t\t\ttagName,\r\n\t\t\t\t\tpreserveWhiteSpace,\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// Allows us to ask for this information when we get a report.\r\n\t\t\t\t// eslint-disable-next-line no-console\r\n\t\t\t\twindow.console.log( 'Received items:\\n\\n', files );\r\n\r\n\t\t\t\tif ( onReplace && isEmpty( value ) ) {\r\n\t\t\t\t\tonReplace( content );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsplitValue( value, content );\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet mode = onReplace && onSplit ? 'AUTO' : 'INLINE';\r\n\r\n\t\t\tconst isPastedURL = isURL( plainText.trim() );\r\n\t\t\tconst presentEmbedHandlerPicker = () =>\r\n\t\t\t\tembedHandlerPickerRef.current?.presentPicker( {\r\n\t\t\t\t\tcreateEmbed: () =>\r\n\t\t\t\t\t\tonReplace( content, content.length - 1, -1 ),\r\n\t\t\t\t\tcreateLink: () =>\r\n\t\t\t\t\t\tcreateLinkInParagraph( plainText.trim(), onReplace ),\r\n\t\t\t\t} );\r\n\r\n\t\t\tif (\r\n\t\t\t\t__unstableEmbedURLOnPaste &&\r\n\t\t\t\tisEmpty( value ) &&\r\n\t\t\t\tisPastedURL\r\n\t\t\t) {\r\n\t\t\t\tmode = 'BLOCKS';\r\n\t\t\t}\r\n\r\n\t\t\tconst content = pasteHandler( {\r\n\t\t\t\tHTML: html,\r\n\t\t\t\tplainText,\r\n\t\t\t\tmode,\r\n\t\t\t\ttagName,\r\n\t\t\t\tpreserveWhiteSpace,\r\n\t\t\t} );\r\n\r\n\t\t\tif ( typeof content === 'string' ) {\r\n\t\t\t\tconst valueToInsert = create( { html: content } );\r\n\t\t\t\taddActiveFormats( valueToInsert, activeFormats );\r\n\t\t\t\tonChange( insert( value, valueToInsert ) );\r\n\t\t\t} else if ( content.length > 0 ) {\r\n\t\t\t\t// When an URL is pasted in an empty paragraph then the EmbedHandlerPicker should showcase options allowing the transformation of that URL\r\n\t\t\t\t// into either an Embed block or a link within the target paragraph. If the paragraph is non-empty, the URL is pasted as text.\r\n\t\t\t\tconst canPasteEmbed =\r\n\t\t\t\t\tisPastedURL &&\r\n\t\t\t\t\tcontent.length === 1 &&\r\n\t\t\t\t\tcontent[ 0 ].name === 'core/embed';\r\n\t\t\t\tif ( onReplace && isEmpty( value ) ) {\r\n\t\t\t\t\tif ( canPasteEmbed ) {\r\n\t\t\t\t\t\tonChange(\r\n\t\t\t\t\t\t\tinsert( value, create( { text: plainText } ) )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif ( __unstableEmbedURLOnPaste ) {\r\n\t\t\t\t\t\t\tpresentEmbedHandlerPicker();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonReplace( content, content.length - 1, -1, {\r\n\t\t\t\t\t\tsource: 'clipboard',\r\n\t\t\t\t\t} );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( canPasteEmbed ) {\r\n\t\t\t\t\t\tonChange(\r\n\t\t\t\t\t\t\tinsert( value, create( { text: plainText } ) )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsplitValue( value, content );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[\r\n\t\t\ttagName,\r\n\t\t\tonReplace,\r\n\t\t\tonSplit,\r\n\t\t\tsplitValue,\r\n\t\t\t__unstableEmbedURLOnPaste,\r\n\t\t\tpreserveWhiteSpace,\r\n\t\t\tpastePlainText,\r\n\t\t]\r\n\t);\r\n\r\n\tconst inputRule = useCallback(\r\n\t\t( value ) => {\r\n\t\t\tif ( ! onReplace ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst { start: startPosition, text } = value;\r\n\t\t\tconst characterBefore = text.slice(\r\n\t\t\t\tstartPosition - 1,\r\n\t\t\t\tstartPosition\r\n\t\t\t);\r\n\r\n\t\t\t// The character right before the caret must be a plain space.\r\n\t\t\tif ( characterBefore !== ' ' ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst trimmedTextBefore = text.slice( 0, start ).trim();\r\n\t\t\tconst prefixTransforms = getBlockTransforms( 'from' ).filter(\r\n\t\t\t\t( { type } ) => type === 'prefix'\r\n\t\t\t);\r\n\t\t\tconst transformation = findTransform(\r\n\t\t\t\tprefixTransforms,\r\n\t\t\t\t( { prefix } ) => {\r\n\t\t\t\t\treturn trimmedTextBefore === prefix;\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tif ( ! transformation ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst content = toHTMLString( {\r\n\t\t\t\tvalue: insert( value, START_OF_SELECTED_AREA, 0, start ),\r\n\t\t\t} );\r\n\t\t\tconst block = transformation.transform( content );\r\n\t\t\tconst currentSelection = findSelection( [ block ] );\r\n\t\t\tonReplace( [ block ] );\r\n\t\t\tselectionChange( ...currentSelection );\r\n\t\t\t__unstableMarkAutomaticChange();\r\n\t\t},\r\n\t\t[ onReplace, start, selectionChange, __unstableMarkAutomaticChange ]\r\n\t);\r\n\r\n\tconst mergedRef = useMergeRefs( [ providedRef, fallbackRef ] );\r\n\r\n\treturn (\r\n\t\t<RichText\r\n\t\t\tclientId={ clientId }\r\n\t\t\tidentifier={ identifier }\r\n\t\t\tnativeEditorRef={ mergedRef }\r\n\t\t\tvalue={ adjustedValue }\r\n\t\t\tonChange={ adjustedOnChange }\r\n\t\t\tselectionStart={ selectionStart }\r\n\t\t\tselectionEnd={ selectionEnd }\r\n\t\t\tonSelectionChange={ onSelectionChange }\r\n\t\t\ttagName={ tagName }\r\n\t\t\tstart={ start }\r\n\t\t\treversed={ reversed }\r\n\t\t\tplaceholder={ placeholder }\r\n\t\t\tallowedFormats={ adjustedAllowedFormats }\r\n\t\t\twithoutInteractiveFormatting={ withoutInteractiveFormatting }\r\n\t\t\tonEnter={ onEnter }\r\n\t\t\tonDelete={ onDelete }\r\n\t\t\tonPaste={ onPaste }\r\n\t\t\t__unstableIsSelected={ isSelected }\r\n\t\t\t__unstableInputRule={ inputRule }\r\n\t\t\t__unstableOnEnterFormattedText={ enterFormattedText }\r\n\t\t\t__unstableOnExitFormattedText={ exitFormattedText }\r\n\t\t\t__unstableOnCreateUndoLevel={ __unstableMarkLastChangeAsPersistent }\r\n\t\t\t__unstableMarkAutomaticChange={ __unstableMarkAutomaticChange }\r\n\t\t\t__unstableDidAutomaticChange={ didAutomaticChange }\r\n\t\t\t__unstableUndo={ undo }\r\n\t\t\t__unstableDisableFormats={ disableFormats }\r\n\t\t\tpreserveWhiteSpace={ preserveWhiteSpace }\r\n\t\t\tdisabled={ disabled }\r\n\t\t\tunstableOnFocus={ unstableOnFocus }\r\n\t\t\t__unstableAllowPrefixTransformations={\r\n\t\t\t\t__unstableAllowPrefixTransformations\r\n\t\t\t}\r\n\t\t\t// Native props.\r\n\t\t\tblockIsSelected={\r\n\t\t\t\toriginalIsSelected !== undefined\r\n\t\t\t\t\t? originalIsSelected\r\n\t\t\t\t\t: blockIsSelected\r\n\t\t\t}\r\n\t\t\tshouldBlurOnUnmount={ shouldBlurOnUnmount }\r\n\t\t\t__unstableMobileNoFocusOnMount={ __unstableMobileNoFocusOnMount }\r\n\t\t\tdeleteEnter={ deleteEnter }\r\n\t\t\tplaceholderTextColor={ placeholderTextColor }\r\n\t\t\ttextAlign={ textAlign }\r\n\t\t\tselectionColor={ selectionColor }\r\n\t\t\ttagsToEliminate={ tagsToEliminate }\r\n\t\t\tdisableEditingMenu={ disableEditingMenu }\r\n\t\t\tfontSize={ fontSize }\r\n\t\t\tfontFamily={ fontFamily }\r\n\t\t\tfontWeight={ fontWeight }\r\n\t\t\tfontStyle={ fontStyle }\r\n\t\t\tminWidth={ minWidth }\r\n\t\t\tmaxWidth={ maxWidth }\r\n\t\t\tonBlur={ onBlur }\r\n\t\t\tdisableSuggestions={ disableSuggestions }\r\n\t\t\tdisableAutocorrection={ disableAutocorrection }\r\n\t\t\tcontainerWidth={ containerWidth }\r\n\t\t\tclearCurrentSelectionOnUnmount={ clearCurrentSelectionOnUnmount }\r\n\t\t\t// Props to be set on the editable container are destructured on the\r\n\t\t\t// element itself for web (see below), but passed through rich text\r\n\t\t\t// for native.\r\n\t\t\tid={ props.id }\r\n\t\t\tstyle={ props.style }\r\n\t\t>\r\n\t\t\t{ ( {\r\n\t\t\t\tisSelected: nestedIsSelected,\r\n\t\t\t\tvalue,\r\n\t\t\t\tonChange,\r\n\t\t\t\tonFocus,\r\n\t\t\t\teditableProps,\r\n\t\t\t\teditableTagName: TagName,\r\n\t\t\t} ) => (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{ children && children( { value, onChange, onFocus } ) }\r\n\t\t\t\t\t{ nestedIsSelected && hasFormats && (\r\n\t\t\t\t\t\t<FormatToolbarContainer\r\n\t\t\t\t\t\t\tinline={ inlineToolbar }\r\n\t\t\t\t\t\t\tanchorRef={ fallbackRef.current }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) }\r\n\t\t\t\t\t{ nestedIsSelected && <RemoveBrowserShortcuts /> }\r\n\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\tonReplace={ onReplace }\r\n\t\t\t\t\t\tcompleters={ autocompleters }\r\n\t\t\t\t\t\trecord={ value }\r\n\t\t\t\t\t\tonChange={ onChange }\r\n\t\t\t\t\t\tisSelected={ nestedIsSelected }\r\n\t\t\t\t\t\tcontentRef={ fallbackRef }\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{ ( { listBoxId, activeId, onKeyDown } ) => (\r\n\t\t\t\t\t\t\t<TagName\r\n\t\t\t\t\t\t\t\t{ ...editableProps }\r\n\t\t\t\t\t\t\t\t{ ...props }\r\n\t\t\t\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t\t\t\tprops.style\r\n\t\t\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\t\t\t\t...props.style,\r\n\t\t\t\t\t\t\t\t\t\t\t\t...editableProps.style,\r\n\t\t\t\t\t\t\t\t\t\t  }\r\n\t\t\t\t\t\t\t\t\t\t: editableProps.style\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tclassName={ clsx(\r\n\t\t\t\t\t\t\t\t\tclasses,\r\n\t\t\t\t\t\t\t\t\tprops.className,\r\n\t\t\t\t\t\t\t\t\teditableProps.className\r\n\t\t\t\t\t\t\t\t) }\r\n\t\t\t\t\t\t\t\taria-autocomplete={\r\n\t\t\t\t\t\t\t\t\tlistBoxId ? 'list' : undefined\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\taria-owns={ listBoxId }\r\n\t\t\t\t\t\t\t\taria-activedescendant={ activeId }\r\n\t\t\t\t\t\t\t\tonKeyDown={ ( event ) => {\r\n\t\t\t\t\t\t\t\t\tonKeyDown( event );\r\n\t\t\t\t\t\t\t\t\teditableProps.onKeyDown( event );\r\n\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) }\r\n\t\t\t\t\t</Autocomplete>\r\n\t\t\t\t\t<EmbedHandlerPicker ref={ embedHandlerPickerRef } />\r\n\t\t\t\t</>\r\n\t\t\t) }\r\n\t\t</RichText>\r\n\t);\r\n}\r\n\r\n// This export does not actually implement a private API, but was exported\r\n// under this name for interoperability with the web version of the RichText\r\n// component.\r\nexport const PrivateRichText = withDeprecations(\r\n\tforwardRef( RichTextWrapper )\r\n);\r\n\r\nPrivateRichText.Content = Content;\r\n\r\nPrivateRichText.isEmpty = ( value ) => {\r\n\treturn ! value || value.length === 0;\r\n};\r\n\r\nPrivateRichText.Content.defaultProps = {\r\n\tformat: 'string',\r\n\tvalue: '',\r\n};\r\n\r\nPrivateRichText.Raw = forwardRef( ( props, ref ) => (\r\n\t<RichText { ...props } nativeEditorRef={ ref } />\r\n) );\r\n\r\n/**\r\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/block-editor/src/components/rich-text/README.md\r\n */\r\nexport default PrivateRichText;\r\nexport { RichTextShortcut } from './shortcut';\r\nexport { RichTextToolbarButton } from './toolbar-button';\r\nexport { __unstableRichTextInputEvent } from './input-event';\r\n"],"mappings":"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","ignoreList":[]}