{"version":3,"names":["renderToString","createBlock","jsx","_jsx","addActiveFormats","value","activeFormats","length","index","formats","getMultilineTag","multiline","getAllowedFormats","allowedFormats","disableFormats","EMPTY_ARRAY","createLinkInParagraph","url","onReplace","link","href","children","content"],"sources":["@wordpress/block-editor/src/components/rich-text/utils.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { renderToString } from '@wordpress/element';\r\nimport { createBlock } from '@wordpress/blocks';\r\n\r\nexport function addActiveFormats( value, activeFormats ) {\r\n\tif ( activeFormats?.length ) {\r\n\t\tlet index = value.formats.length;\r\n\r\n\t\twhile ( index-- ) {\r\n\t\t\tvalue.formats[ index ] = [\r\n\t\t\t\t...activeFormats,\r\n\t\t\t\t...( value.formats[ index ] || [] ),\r\n\t\t\t];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Get the multiline tag based on the multiline prop.\r\n *\r\n * @param {?(string|boolean)} multiline The multiline prop.\r\n *\r\n * @return {string | undefined} The multiline tag.\r\n */\r\nexport function getMultilineTag( multiline ) {\r\n\tif ( multiline !== true && multiline !== 'p' && multiline !== 'li' ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\treturn multiline === true ? 'p' : multiline;\r\n}\r\n\r\nexport function getAllowedFormats( { allowedFormats, disableFormats } ) {\r\n\tif ( disableFormats ) {\r\n\t\treturn getAllowedFormats.EMPTY_ARRAY;\r\n\t}\r\n\r\n\treturn allowedFormats;\r\n}\r\n\r\ngetAllowedFormats.EMPTY_ARRAY = [];\r\n\r\n/**\r\n * Creates a link from pasted URL.\r\n * Creates a paragraph block containing a link to the URL, and calls `onReplace`.\r\n *\r\n * @param {string}   url       The URL that could not be embedded.\r\n * @param {Function} onReplace Function to call with the created fallback block.\r\n */\r\nexport function createLinkInParagraph( url, onReplace ) {\r\n\tconst link = <a href={ url }>{ url }</a>;\r\n\tonReplace(\r\n\t\tcreateBlock( 'core/paragraph', { content: renderToString( link ) } )\r\n\t);\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,cAAc,QAAQ,oBAAoB;AACnD,SAASC,WAAW,QAAQ,mBAAmB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEhD,OAAO,SAASC,gBAAgBA,CAAEC,KAAK,EAAEC,aAAa,EAAG;EACxD,IAAKA,aAAa,EAAEC,MAAM,EAAG;IAC5B,IAAIC,KAAK,GAAGH,KAAK,CAACI,OAAO,CAACF,MAAM;IAEhC,OAAQC,KAAK,EAAE,EAAG;MACjBH,KAAK,CAACI,OAAO,CAAED,KAAK,CAAE,GAAG,CACxB,GAAGF,aAAa,EAChB,IAAKD,KAAK,CAACI,OAAO,CAAED,KAAK,CAAE,IAAI,EAAE,CAAE,CACnC;IACF;EACD;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,eAAeA,CAAEC,SAAS,EAAG;EAC5C,IAAKA,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,GAAG,IAAIA,SAAS,KAAK,IAAI,EAAG;IACpE;EACD;EAEA,OAAOA,SAAS,KAAK,IAAI,GAAG,GAAG,GAAGA,SAAS;AAC5C;AAEA,OAAO,SAASC,iBAAiBA,CAAE;EAAEC,cAAc;EAAEC;AAAe,CAAC,EAAG;EACvE,IAAKA,cAAc,EAAG;IACrB,OAAOF,iBAAiB,CAACG,WAAW;EACrC;EAEA,OAAOF,cAAc;AACtB;AAEAD,iBAAiB,CAACG,WAAW,GAAG,EAAE;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,qBAAqBA,CAAEC,GAAG,EAAEC,SAAS,EAAG;EACvD,MAAMC,IAAI,gBAAGhB,IAAA;IAAGiB,IAAI,EAAGH,GAAK;IAAAI,QAAA,EAAGJ;EAAG,CAAK,CAAC;EACxCC,SAAS,CACRjB,WAAW,CAAE,gBAAgB,EAAE;IAAEqB,OAAO,EAAEtB,cAAc,CAAEmB,IAAK;EAAE,CAAE,CACpE,CAAC;AACF","ignoreList":[]}