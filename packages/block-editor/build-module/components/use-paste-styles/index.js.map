{"version":3,"names":["useCallback","getBlockType","parse","useDispatch","useRegistry","store","noticesStore","__","sprintf","blockEditorStore","hasAlignSupport","hasBorderSupport","hasBackgroundColorSupport","hasTextAlignSupport","hasTextColorSupport","hasGradientSupport","hasCustomClassNameSupport","hasFontFamilySupport","hasFontSizeSupport","hasLayoutSupport","hasStyleSupport","hasSerializedBlocks","text","blocks","__unstableSkipMigrationLogs","__unstableSkipAutop","length","name","err","STYLE_ATTRIBUTES","align","borderColor","nameOrType","backgroundColor","textAlign","textColor","gradient","className","fontFamily","fontSize","layout","style","getStyleAttributes","sourceBlock","targetBlock","Object","entries","reduce","attributes","attributeKey","hasSupport","recursivelyUpdateBlockAttributes","targetBlocks","sourceBlocks","updateBlockAttributes","index","Math","min","clientId","innerBlocks","usePasteStyles","registry","createSuccessNotice","createWarningNotice","createErrorNotice","html","window","navigator","clipboard","type","readText","error","copiedBlocks","batch","map","title"],"sources":["@wordpress/block-editor/src/components/use-paste-styles/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useCallback } from '@wordpress/element';\r\nimport { getBlockType, parse } from '@wordpress/blocks';\r\nimport { useDispatch, useRegistry } from '@wordpress/data';\r\nimport { store as noticesStore } from '@wordpress/notices';\r\nimport { __, sprintf } from '@wordpress/i18n';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as blockEditorStore } from '../../store';\r\nimport {\r\n\thasAlignSupport,\r\n\thasBorderSupport,\r\n\thasBackgroundColorSupport,\r\n\thasTextAlignSupport,\r\n\thasTextColorSupport,\r\n\thasGradientSupport,\r\n\thasCustomClassNameSupport,\r\n\thasFontFamilySupport,\r\n\thasFontSizeSupport,\r\n\thasLayoutSupport,\r\n\thasStyleSupport,\r\n} from '../../hooks/supports';\r\n\r\n/**\r\n * Determine if the copied text looks like serialized blocks or not.\r\n * Since plain text will always get parsed into a freeform block,\r\n * we check that if the parsed blocks is anything other than that.\r\n *\r\n * @param {string} text The copied text.\r\n * @return {boolean} True if the text looks like serialized blocks, false otherwise.\r\n */\r\nfunction hasSerializedBlocks( text ) {\r\n\ttry {\r\n\t\tconst blocks = parse( text, {\r\n\t\t\t__unstableSkipMigrationLogs: true,\r\n\t\t\t__unstableSkipAutop: true,\r\n\t\t} );\r\n\t\tif ( blocks.length === 1 && blocks[ 0 ].name === 'core/freeform' ) {\r\n\t\t\t// It's likely that the text is just plain text and not serialized blocks.\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t} catch ( err ) {\r\n\t\t// Parsing error, the text is not serialized blocks.\r\n\t\t// (Even though that it technically won't happen)\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\n/**\r\n * Style attributes are attributes being added in `block-editor/src/hooks/*`.\r\n * (Except for some unrelated to style like `anchor` or `settings`.)\r\n * They generally represent the default block supports.\r\n */\r\nconst STYLE_ATTRIBUTES = {\r\n\talign: hasAlignSupport,\r\n\tborderColor: ( nameOrType ) => hasBorderSupport( nameOrType, 'color' ),\r\n\tbackgroundColor: hasBackgroundColorSupport,\r\n\ttextAlign: hasTextAlignSupport,\r\n\ttextColor: hasTextColorSupport,\r\n\tgradient: hasGradientSupport,\r\n\tclassName: hasCustomClassNameSupport,\r\n\tfontFamily: hasFontFamilySupport,\r\n\tfontSize: hasFontSizeSupport,\r\n\tlayout: hasLayoutSupport,\r\n\tstyle: hasStyleSupport,\r\n};\r\n\r\n/**\r\n * Get the \"style attributes\" from a given block to a target block.\r\n *\r\n * @param {WPBlock} sourceBlock The source block.\r\n * @param {WPBlock} targetBlock The target block.\r\n * @return {Object} the filtered attributes object.\r\n */\r\nfunction getStyleAttributes( sourceBlock, targetBlock ) {\r\n\treturn Object.entries( STYLE_ATTRIBUTES ).reduce(\r\n\t\t( attributes, [ attributeKey, hasSupport ] ) => {\r\n\t\t\t// Only apply the attribute if both blocks support it.\r\n\t\t\tif (\r\n\t\t\t\thasSupport( sourceBlock.name ) &&\r\n\t\t\t\thasSupport( targetBlock.name )\r\n\t\t\t) {\r\n\t\t\t\t// Override attributes that are not present in the block to their defaults.\r\n\t\t\t\tattributes[ attributeKey ] =\r\n\t\t\t\t\tsourceBlock.attributes[ attributeKey ];\r\n\t\t\t}\r\n\t\t\treturn attributes;\r\n\t\t},\r\n\t\t{}\r\n\t);\r\n}\r\n\r\n/**\r\n * Update the target blocks with style attributes recursively.\r\n *\r\n * @param {WPBlock[]} targetBlocks          The target blocks to be updated.\r\n * @param {WPBlock[]} sourceBlocks          The source blocks to get th style attributes from.\r\n * @param {Function}  updateBlockAttributes The function to update the attributes.\r\n */\r\nfunction recursivelyUpdateBlockAttributes(\r\n\ttargetBlocks,\r\n\tsourceBlocks,\r\n\tupdateBlockAttributes\r\n) {\r\n\tfor (\r\n\t\tlet index = 0;\r\n\t\tindex < Math.min( sourceBlocks.length, targetBlocks.length );\r\n\t\tindex += 1\r\n\t) {\r\n\t\tupdateBlockAttributes(\r\n\t\t\ttargetBlocks[ index ].clientId,\r\n\t\t\tgetStyleAttributes( sourceBlocks[ index ], targetBlocks[ index ] )\r\n\t\t);\r\n\r\n\t\trecursivelyUpdateBlockAttributes(\r\n\t\t\ttargetBlocks[ index ].innerBlocks,\r\n\t\t\tsourceBlocks[ index ].innerBlocks,\r\n\t\t\tupdateBlockAttributes\r\n\t\t);\r\n\t}\r\n}\r\n\r\n/**\r\n * A hook to return a pasteStyles event function for handling pasting styles to blocks.\r\n *\r\n * @return {Function} A function to update the styles to the blocks.\r\n */\r\nexport default function usePasteStyles() {\r\n\tconst registry = useRegistry();\r\n\tconst { updateBlockAttributes } = useDispatch( blockEditorStore );\r\n\tconst { createSuccessNotice, createWarningNotice, createErrorNotice } =\r\n\t\tuseDispatch( noticesStore );\r\n\r\n\treturn useCallback(\r\n\t\tasync ( targetBlocks ) => {\r\n\t\t\tlet html = '';\r\n\t\t\ttry {\r\n\t\t\t\t// `http:` sites won't have the clipboard property on navigator.\r\n\t\t\t\t// (with the exception of localhost.)\r\n\t\t\t\tif ( ! window.navigator.clipboard ) {\r\n\t\t\t\t\tcreateErrorNotice(\r\n\t\t\t\t\t\t__(\r\n\t\t\t\t\t\t\t'Unable to paste styles. This feature is only available on secure (https) sites in supporting browsers.'\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\t{ type: 'snackbar' }\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\thtml = await window.navigator.clipboard.readText();\r\n\t\t\t} catch ( error ) {\r\n\t\t\t\t// Possibly the permission is denied.\r\n\t\t\t\tcreateErrorNotice(\r\n\t\t\t\t\t__(\r\n\t\t\t\t\t\t'Unable to paste styles. Please allow browser clipboard permissions before continuing.'\r\n\t\t\t\t\t),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'snackbar',\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Abort if the copied text is empty or doesn't look like serialized blocks.\r\n\t\t\tif ( ! html || ! hasSerializedBlocks( html ) ) {\r\n\t\t\t\tcreateWarningNotice(\r\n\t\t\t\t\t__(\r\n\t\t\t\t\t\t\"Unable to paste styles. Block styles couldn't be found within the copied content.\"\r\n\t\t\t\t\t),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: 'snackbar',\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst copiedBlocks = parse( html );\r\n\r\n\t\t\tif ( copiedBlocks.length === 1 ) {\r\n\t\t\t\t// Apply styles of the block to all the target blocks.\r\n\t\t\t\tregistry.batch( () => {\r\n\t\t\t\t\trecursivelyUpdateBlockAttributes(\r\n\t\t\t\t\t\ttargetBlocks,\r\n\t\t\t\t\t\ttargetBlocks.map( () => copiedBlocks[ 0 ] ),\r\n\t\t\t\t\t\tupdateBlockAttributes\r\n\t\t\t\t\t);\r\n\t\t\t\t} );\r\n\t\t\t} else {\r\n\t\t\t\tregistry.batch( () => {\r\n\t\t\t\t\trecursivelyUpdateBlockAttributes(\r\n\t\t\t\t\t\ttargetBlocks,\r\n\t\t\t\t\t\tcopiedBlocks,\r\n\t\t\t\t\t\tupdateBlockAttributes\r\n\t\t\t\t\t);\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\tif ( targetBlocks.length === 1 ) {\r\n\t\t\t\tconst title = getBlockType( targetBlocks[ 0 ].name )?.title;\r\n\t\t\t\tcreateSuccessNotice(\r\n\t\t\t\t\tsprintf(\r\n\t\t\t\t\t\t// Translators: Name of the block being pasted, e.g. \"Paragraph\".\r\n\t\t\t\t\t\t__( 'Pasted styles to %s.' ),\r\n\t\t\t\t\t\ttitle\r\n\t\t\t\t\t),\r\n\t\t\t\t\t{ type: 'snackbar' }\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tcreateSuccessNotice(\r\n\t\t\t\t\tsprintf(\r\n\t\t\t\t\t\t// Translators: The number of the blocks.\r\n\t\t\t\t\t\t__( 'Pasted styles to %d blocks.' ),\r\n\t\t\t\t\t\ttargetBlocks.length\r\n\t\t\t\t\t),\r\n\t\t\t\t\t{ type: 'snackbar' }\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[\r\n\t\t\tregistry.batch,\r\n\t\t\tupdateBlockAttributes,\r\n\t\t\tcreateSuccessNotice,\r\n\t\t\tcreateWarningNotice,\r\n\t\t\tcreateErrorNotice,\r\n\t\t]\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]}