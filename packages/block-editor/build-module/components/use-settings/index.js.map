{"version":3,"names":["useSelect","deprecated","useBlockEditContext","store","blockEditorStore","unlock","useSettings","paths","clientId","select","getBlockSettings","useSetting","path","since","alternative","note","value"],"sources":["@wordpress/block-editor/src/components/use-settings/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useSelect } from '@wordpress/data';\r\nimport deprecated from '@wordpress/deprecated';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { useBlockEditContext } from '../block-edit';\r\nimport { store as blockEditorStore } from '../../store';\r\nimport { unlock } from '../../lock-unlock';\r\n\r\n/**\r\n * Hook that retrieves the given settings for the block instance in use.\r\n *\r\n * It looks up the settings first in the block instance hierarchy.\r\n * If none are found, it'll look them up in the block editor settings.\r\n *\r\n * @param {string[]} paths The paths to the settings.\r\n * @return {any[]} Returns the values defined for the settings.\r\n * @example\r\n * ```js\r\n * const [ fixed, sticky ] = useSettings( 'position.fixed', 'position.sticky' );\r\n * ```\r\n */\r\nexport function useSettings( ...paths ) {\r\n\tconst { clientId = null } = useBlockEditContext();\r\n\treturn useSelect(\r\n\t\t( select ) =>\r\n\t\t\tunlock( select( blockEditorStore ) ).getBlockSettings(\r\n\t\t\t\tclientId,\r\n\t\t\t\t...paths\r\n\t\t\t),\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t\t[ clientId, ...paths ]\r\n\t);\r\n}\r\n\r\n/**\r\n * Hook that retrieves the given setting for the block instance in use.\r\n *\r\n * It looks up the setting first in the block instance hierarchy.\r\n * If none is found, it'll look it up in the block editor settings.\r\n *\r\n * @deprecated 6.5.0 Use useSettings instead.\r\n *\r\n * @param {string} path The path to the setting.\r\n * @return {any} Returns the value defined for the setting.\r\n * @example\r\n * ```js\r\n * const isEnabled = useSetting( 'typography.dropCap' );\r\n * ```\r\n */\r\nexport function useSetting( path ) {\r\n\tdeprecated( 'wp.blockEditor.useSetting', {\r\n\t\tsince: '6.5',\r\n\t\talternative: 'wp.blockEditor.useSettings',\r\n\t\tnote: 'The new useSettings function can retrieve multiple settings at once, with better performance.',\r\n\t} );\r\n\r\n\tconst [ value ] = useSettings( path );\r\n\treturn value;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,UAAU,MAAM,uBAAuB;;AAE9C;AACA;AACA;AACA,SAASC,mBAAmB,QAAQ,eAAe;AACnD,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,aAAa;AACvD,SAASC,MAAM,QAAQ,mBAAmB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAAE,GAAGC,KAAK,EAAG;EACvC,MAAM;IAAEC,QAAQ,GAAG;EAAK,CAAC,GAAGN,mBAAmB,CAAC,CAAC;EACjD,OAAOF,SAAS,CACbS,MAAM,IACPJ,MAAM,CAAEI,MAAM,CAAEL,gBAAiB,CAAE,CAAC,CAACM,gBAAgB,CACpDF,QAAQ,EACR,GAAGD,KACJ,CAAC;EACF;EACA,CAAEC,QAAQ,EAAE,GAAGD,KAAK,CACrB,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,UAAUA,CAAEC,IAAI,EAAG;EAClCX,UAAU,CAAE,2BAA2B,EAAE;IACxCY,KAAK,EAAE,KAAK;IACZC,WAAW,EAAE,4BAA4B;IACzCC,IAAI,EAAE;EACP,CAAE,CAAC;EAEH,MAAM,CAAEC,KAAK,CAAE,GAAGV,WAAW,CAAEM,IAAK,CAAC;EACrC,OAAOI,KAAK;AACb","ignoreList":[]}