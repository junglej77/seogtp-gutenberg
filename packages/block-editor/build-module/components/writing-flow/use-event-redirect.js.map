{"version":3,"names":["useRefEffect","getSelectionRoot","useEventRedirect","node","onInput","event","target","ownerDocument","defaultView","prototype","Object","getPrototypeOf","constructorName","constructor","name","Constructor","root","init","key","bubbles","newEvent","type","cancelled","dispatchEvent","preventDefault","events","forEach","eventType","addEventListener","removeEventListener"],"sources":["@wordpress/block-editor/src/components/writing-flow/use-event-redirect.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useRefEffect } from '@wordpress/compose';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { getSelectionRoot } from './utils';\r\n\r\n/**\r\n * Whenever content editable is enabled on writing flow, it will have focus, so\r\n * we need to dispatch some events to the root of the selection to ensure\r\n * compatibility with rich text. In the future, perhaps the rich text event\r\n * handlers should be attached to the window instead.\r\n *\r\n * Alternatively, we could try to find a way to always maintain rich text focus.\r\n */\r\nexport default function useEventRedirect() {\r\n\treturn useRefEffect( ( node ) => {\r\n\t\tfunction onInput( event ) {\r\n\t\t\tif ( event.target !== node ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst { ownerDocument } = node;\r\n\t\t\tconst { defaultView } = ownerDocument;\r\n\t\t\tconst prototype = Object.getPrototypeOf( event );\r\n\t\t\tconst constructorName = prototype.constructor.name;\r\n\t\t\tconst Constructor = defaultView[ constructorName ];\r\n\t\t\tconst root = getSelectionRoot( ownerDocument );\r\n\r\n\t\t\tif ( ! root || root === node ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst init = {};\r\n\r\n\t\t\tfor ( const key in event ) {\r\n\t\t\t\tinit[ key ] = event[ key ];\r\n\t\t\t}\r\n\r\n\t\t\tinit.bubbles = false;\r\n\r\n\t\t\tconst newEvent = new Constructor( event.type, init );\r\n\t\t\tconst cancelled = ! root.dispatchEvent( newEvent );\r\n\r\n\t\t\tif ( cancelled ) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst events = [\r\n\t\t\t'beforeinput',\r\n\t\t\t'input',\r\n\t\t\t'compositionstart',\r\n\t\t\t'compositionend',\r\n\t\t\t'compositionupdate',\r\n\t\t\t'keydown',\r\n\t\t];\r\n\r\n\t\tevents.forEach( ( eventType ) => {\r\n\t\t\tnode.addEventListener( eventType, onInput );\r\n\t\t} );\r\n\r\n\t\treturn () => {\r\n\t\t\tevents.forEach( ( eventType ) => {\r\n\t\t\t\tnode.removeEventListener( eventType, onInput );\r\n\t\t\t} );\r\n\t\t};\r\n\t}, [] );\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,oBAAoB;;AAEjD;AACA;AACA;AACA,SAASC,gBAAgB,QAAQ,SAAS;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAC1C,OAAOF,YAAY,CAAIG,IAAI,IAAM;IAChC,SAASC,OAAOA,CAAEC,KAAK,EAAG;MACzB,IAAKA,KAAK,CAACC,MAAM,KAAKH,IAAI,EAAG;QAC5B;MACD;MAEA,MAAM;QAAEI;MAAc,CAAC,GAAGJ,IAAI;MAC9B,MAAM;QAAEK;MAAY,CAAC,GAAGD,aAAa;MACrC,MAAME,SAAS,GAAGC,MAAM,CAACC,cAAc,CAAEN,KAAM,CAAC;MAChD,MAAMO,eAAe,GAAGH,SAAS,CAACI,WAAW,CAACC,IAAI;MAClD,MAAMC,WAAW,GAAGP,WAAW,CAAEI,eAAe,CAAE;MAClD,MAAMI,IAAI,GAAGf,gBAAgB,CAAEM,aAAc,CAAC;MAE9C,IAAK,CAAES,IAAI,IAAIA,IAAI,KAAKb,IAAI,EAAG;QAC9B;MACD;MAEA,MAAMc,IAAI,GAAG,CAAC,CAAC;MAEf,KAAM,MAAMC,GAAG,IAAIb,KAAK,EAAG;QAC1BY,IAAI,CAAEC,GAAG,CAAE,GAAGb,KAAK,CAAEa,GAAG,CAAE;MAC3B;MAEAD,IAAI,CAACE,OAAO,GAAG,KAAK;MAEpB,MAAMC,QAAQ,GAAG,IAAIL,WAAW,CAAEV,KAAK,CAACgB,IAAI,EAAEJ,IAAK,CAAC;MACpD,MAAMK,SAAS,GAAG,CAAEN,IAAI,CAACO,aAAa,CAAEH,QAAS,CAAC;MAElD,IAAKE,SAAS,EAAG;QAChBjB,KAAK,CAACmB,cAAc,CAAC,CAAC;MACvB;IACD;IAEA,MAAMC,MAAM,GAAG,CACd,aAAa,EACb,OAAO,EACP,kBAAkB,EAClB,gBAAgB,EAChB,mBAAmB,EACnB,SAAS,CACT;IAEDA,MAAM,CAACC,OAAO,CAAIC,SAAS,IAAM;MAChCxB,IAAI,CAACyB,gBAAgB,CAAED,SAAS,EAAEvB,OAAQ,CAAC;IAC5C,CAAE,CAAC;IAEH,OAAO,MAAM;MACZqB,MAAM,CAACC,OAAO,CAAIC,SAAS,IAAM;QAChCxB,IAAI,CAAC0B,mBAAmB,CAAEF,SAAS,EAAEvB,OAAQ,CAAC;MAC/C,CAAE,CAAC;IACJ,CAAC;EACF,CAAC,EAAE,EAAG,CAAC;AACR","ignoreList":[]}