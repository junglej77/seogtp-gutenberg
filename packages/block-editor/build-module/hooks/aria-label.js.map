{"version":3,"names":["addFilter","hasBlockSupport","ARIA_LABEL_SCHEMA","type","source","attribute","selector","addAttribute","settings","attributes","ariaLabel","addSaveProps","extraProps","blockType","attributeKeys","hasSupport","name"],"sources":["@wordpress/block-editor/src/hooks/aria-label.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { addFilter } from '@wordpress/hooks';\r\nimport { hasBlockSupport } from '@wordpress/blocks';\r\n\r\nconst ARIA_LABEL_SCHEMA = {\r\n\ttype: 'string',\r\n\tsource: 'attribute',\r\n\tattribute: 'aria-label',\r\n\tselector: '*',\r\n};\r\n\r\n/**\r\n * Filters registered block settings, extending attributes with ariaLabel using aria-label\r\n * of the first node.\r\n *\r\n * @param {Object} settings Original block settings.\r\n *\r\n * @return {Object} Filtered block settings.\r\n */\r\nexport function addAttribute( settings ) {\r\n\t// Allow blocks to specify their own attribute definition with default values if needed.\r\n\tif ( settings?.attributes?.ariaLabel?.type ) {\r\n\t\treturn settings;\r\n\t}\r\n\tif ( hasBlockSupport( settings, 'ariaLabel' ) ) {\r\n\t\t// Gracefully handle if settings.attributes is undefined.\r\n\t\tsettings.attributes = {\r\n\t\t\t...settings.attributes,\r\n\t\t\tariaLabel: ARIA_LABEL_SCHEMA,\r\n\t\t};\r\n\t}\r\n\r\n\treturn settings;\r\n}\r\n\r\n/**\r\n * Override props assigned to save component to inject aria-label, if block\r\n * supports ariaLabel. This is only applied if the block's save result is an\r\n * element and not a markup string.\r\n *\r\n * @param {Object} extraProps Additional props applied to save element.\r\n * @param {Object} blockType  Block type.\r\n * @param {Object} attributes Current block attributes.\r\n *\r\n * @return {Object} Filtered props applied to save element.\r\n */\r\nexport function addSaveProps( extraProps, blockType, attributes ) {\r\n\tif ( hasBlockSupport( blockType, 'ariaLabel' ) ) {\r\n\t\textraProps[ 'aria-label' ] =\r\n\t\t\tattributes.ariaLabel === '' ? null : attributes.ariaLabel;\r\n\t}\r\n\r\n\treturn extraProps;\r\n}\r\n\r\nexport default {\r\n\taddSaveProps,\r\n\tattributeKeys: [ 'ariaLabel' ],\r\n\thasSupport( name ) {\r\n\t\treturn hasBlockSupport( name, 'ariaLabel' );\r\n\t},\r\n};\r\n\r\naddFilter(\r\n\t'blocks.registerBlockType',\r\n\t'core/ariaLabel/attribute',\r\n\taddAttribute\r\n);\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,eAAe,QAAQ,mBAAmB;AAEnD,MAAMC,iBAAiB,GAAG;EACzBC,IAAI,EAAE,QAAQ;EACdC,MAAM,EAAE,WAAW;EACnBC,SAAS,EAAE,YAAY;EACvBC,QAAQ,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAAEC,QAAQ,EAAG;EACxC;EACA,IAAKA,QAAQ,EAAEC,UAAU,EAAEC,SAAS,EAAEP,IAAI,EAAG;IAC5C,OAAOK,QAAQ;EAChB;EACA,IAAKP,eAAe,CAAEO,QAAQ,EAAE,WAAY,CAAC,EAAG;IAC/C;IACAA,QAAQ,CAACC,UAAU,GAAG;MACrB,GAAGD,QAAQ,CAACC,UAAU;MACtBC,SAAS,EAAER;IACZ,CAAC;EACF;EAEA,OAAOM,QAAQ;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,YAAYA,CAAEC,UAAU,EAAEC,SAAS,EAAEJ,UAAU,EAAG;EACjE,IAAKR,eAAe,CAAEY,SAAS,EAAE,WAAY,CAAC,EAAG;IAChDD,UAAU,CAAE,YAAY,CAAE,GACzBH,UAAU,CAACC,SAAS,KAAK,EAAE,GAAG,IAAI,GAAGD,UAAU,CAACC,SAAS;EAC3D;EAEA,OAAOE,UAAU;AAClB;AAEA,eAAe;EACdD,YAAY;EACZG,aAAa,EAAE,CAAE,WAAW,CAAE;EAC9BC,UAAUA,CAAEC,IAAI,EAAG;IAClB,OAAOf,eAAe,CAAEe,IAAI,EAAE,WAAY,CAAC;EAC5C;AACD,CAAC;AAEDhB,SAAS,CACR,0BAA0B,EAC1B,0BAA0B,EAC1BO,YACD,CAAC","ignoreList":[]}