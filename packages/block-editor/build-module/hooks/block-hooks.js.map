{"version":3,"names":["__","Fragment","useMemo","__experimentalHStack","HStack","PanelBody","ToggleControl","createBlock","store","blocksStore","useDispatch","useSelect","BlockIcon","InspectorControls","blockEditorStore","jsx","_jsx","jsxs","_jsxs","EMPTY_OBJECT","BlockHooksControlPure","name","clientId","metadata","ignoredHookedBlocks","blockTypes","select","getBlockTypes","hookedBlocksForCurrentBlock","filter","blockName","blockHooks","includes","hookedBlockClientIds","getBlocks","getBlockRootClientId","getGlobalBlockCount","rootClientId","_hookedBlockClientIds","reduce","clientIds","block","relativePosition","candidates","undefined","hookedBlock","find","candidate","Object","values","length","getBlockIndex","getBlockCount","insertBlock","removeBlock","groupedHookedBlocks","groups","namespace","split","push","insertBlockIntoDesignatedLocation","blockIndex","innerBlocksLength","children","className","title","initialOpen","keys","map","vendor","checked","__nextHasNoMarginBottom","label","justify","icon","onChange","edit","attributeKeys","hasSupport"],"sources":["@wordpress/block-editor/src/hooks/block-hooks.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\nimport { Fragment, useMemo } from '@wordpress/element';\r\nimport {\r\n\t__experimentalHStack as HStack,\r\n\tPanelBody,\r\n\tToggleControl,\r\n} from '@wordpress/components';\r\nimport { createBlock, store as blocksStore } from '@wordpress/blocks';\r\nimport { useDispatch, useSelect } from '@wordpress/data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { BlockIcon, InspectorControls } from '../components';\r\nimport { store as blockEditorStore } from '../store';\r\n\r\nconst EMPTY_OBJECT = {};\r\n\r\nfunction BlockHooksControlPure( {\r\n\tname,\r\n\tclientId,\r\n\tmetadata: { ignoredHookedBlocks = [] } = {},\r\n} ) {\r\n\tconst blockTypes = useSelect(\r\n\t\t( select ) => select( blocksStore ).getBlockTypes(),\r\n\t\t[]\r\n\t);\r\n\r\n\t// A hooked block added via a filter will not be exposed through a block\r\n\t// type's `blockHooks` property; however, if the containing layout has been\r\n\t// modified, it will be present in the anchor block's `ignoredHookedBlocks`\r\n\t// metadata.\r\n\tconst hookedBlocksForCurrentBlock = useMemo(\r\n\t\t() =>\r\n\t\t\tblockTypes?.filter(\r\n\t\t\t\t( { name: blockName, blockHooks } ) =>\r\n\t\t\t\t\t( blockHooks && name in blockHooks ) ||\r\n\t\t\t\t\tignoredHookedBlocks.includes( blockName )\r\n\t\t\t),\r\n\t\t[ blockTypes, name, ignoredHookedBlocks ]\r\n\t);\r\n\r\n\tconst hookedBlockClientIds = useSelect(\r\n\t\t( select ) => {\r\n\t\t\tconst { getBlocks, getBlockRootClientId, getGlobalBlockCount } =\r\n\t\t\t\tselect( blockEditorStore );\r\n\r\n\t\t\tconst rootClientId = getBlockRootClientId( clientId );\r\n\t\t\tconst _hookedBlockClientIds = hookedBlocksForCurrentBlock.reduce(\r\n\t\t\t\t( clientIds, block ) => {\r\n\t\t\t\t\t// If the block doesn't exist anywhere in the block tree,\r\n\t\t\t\t\t// we know that we have to set the toggle to disabled.\r\n\t\t\t\t\tif ( getGlobalBlockCount( block.name ) === 0 ) {\r\n\t\t\t\t\t\treturn clientIds;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst relativePosition = block?.blockHooks?.[ name ];\r\n\t\t\t\t\tlet candidates;\r\n\r\n\t\t\t\t\tswitch ( relativePosition ) {\r\n\t\t\t\t\t\tcase 'before':\r\n\t\t\t\t\t\tcase 'after':\r\n\t\t\t\t\t\t\t// Any of the current block's siblings (with the right block type) qualifies\r\n\t\t\t\t\t\t\t// as a hooked block (inserted `before` or `after` the current one), as the block\r\n\t\t\t\t\t\t\t// might've been automatically inserted and then moved around a bit by the user.\r\n\t\t\t\t\t\t\tcandidates = getBlocks( rootClientId );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'first_child':\r\n\t\t\t\t\t\tcase 'last_child':\r\n\t\t\t\t\t\t\t// Any of the current block's child blocks (with the right block type) qualifies\r\n\t\t\t\t\t\t\t// as a hooked first or last child block, as the block might've been automatically\r\n\t\t\t\t\t\t\t// inserted and then moved around a bit by the user.\r\n\t\t\t\t\t\t\tcandidates = getBlocks( clientId );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase undefined:\r\n\t\t\t\t\t\t\t// If we haven't found a blockHooks field with a relative position for the hooked\r\n\t\t\t\t\t\t\t// block, it means that it was added by a filter. In this case, we look for the block\r\n\t\t\t\t\t\t\t// both among the current block's siblings and its children.\r\n\t\t\t\t\t\t\tcandidates = [\r\n\t\t\t\t\t\t\t\t...getBlocks( rootClientId ),\r\n\t\t\t\t\t\t\t\t...getBlocks( clientId ),\r\n\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst hookedBlock = candidates?.find(\r\n\t\t\t\t\t\t( candidate ) => candidate.name === block.name\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// If the block exists in the designated location, we consider it hooked\r\n\t\t\t\t\t// and show the toggle as enabled.\r\n\t\t\t\t\tif ( hookedBlock ) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...clientIds,\r\n\t\t\t\t\t\t\t[ block.name ]: hookedBlock.clientId,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// If no hooked block was found in any of its designated locations,\r\n\t\t\t\t\t// we set the toggle to disabled.\r\n\t\t\t\t\treturn clientIds;\r\n\t\t\t\t},\r\n\t\t\t\t{}\r\n\t\t\t);\r\n\r\n\t\t\tif ( Object.values( _hookedBlockClientIds ).length > 0 ) {\r\n\t\t\t\treturn _hookedBlockClientIds;\r\n\t\t\t}\r\n\r\n\t\t\treturn EMPTY_OBJECT;\r\n\t\t},\r\n\t\t[ hookedBlocksForCurrentBlock, name, clientId ]\r\n\t);\r\n\r\n\tconst { getBlockIndex, getBlockCount, getBlockRootClientId } =\r\n\t\tuseSelect( blockEditorStore );\r\n\tconst { insertBlock, removeBlock } = useDispatch( blockEditorStore );\r\n\r\n\tif ( ! hookedBlocksForCurrentBlock.length ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Group by block namespace (i.e. prefix before the slash).\r\n\tconst groupedHookedBlocks = hookedBlocksForCurrentBlock.reduce(\r\n\t\t( groups, block ) => {\r\n\t\t\tconst [ namespace ] = block.name.split( '/' );\r\n\t\t\tif ( ! groups[ namespace ] ) {\r\n\t\t\t\tgroups[ namespace ] = [];\r\n\t\t\t}\r\n\t\t\tgroups[ namespace ].push( block );\r\n\t\t\treturn groups;\r\n\t\t},\r\n\t\t{}\r\n\t);\r\n\r\n\tconst insertBlockIntoDesignatedLocation = ( block, relativePosition ) => {\r\n\t\tconst blockIndex = getBlockIndex( clientId );\r\n\t\tconst innerBlocksLength = getBlockCount( clientId );\r\n\t\tconst rootClientId = getBlockRootClientId( clientId );\r\n\r\n\t\tswitch ( relativePosition ) {\r\n\t\t\tcase 'before':\r\n\t\t\tcase 'after':\r\n\t\t\t\tinsertBlock(\r\n\t\t\t\t\tblock,\r\n\t\t\t\t\trelativePosition === 'after' ? blockIndex + 1 : blockIndex,\r\n\t\t\t\t\trootClientId, // Insert as a child of the current block's parent\r\n\t\t\t\t\tfalse\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'first_child':\r\n\t\t\tcase 'last_child':\r\n\t\t\t\tinsertBlock(\r\n\t\t\t\t\tblock,\r\n\t\t\t\t\t// TODO: It'd be great if insertBlock() would accept negative indices for insertion.\r\n\t\t\t\t\trelativePosition === 'first_child' ? 0 : innerBlocksLength,\r\n\t\t\t\t\tclientId, // Insert as a child of the current block.\r\n\t\t\t\t\tfalse\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase undefined:\r\n\t\t\t\t// If we do not know the relative position, it is because the block was\r\n\t\t\t\t// added via a filter. In this case, we default to inserting it after the\r\n\t\t\t\t// current block.\r\n\t\t\t\tinsertBlock(\r\n\t\t\t\t\tblock,\r\n\t\t\t\t\tblockIndex + 1,\r\n\t\t\t\t\trootClientId, // Insert as a child of the current block's parent\r\n\t\t\t\t\tfalse\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<InspectorControls>\r\n\t\t\t<PanelBody\r\n\t\t\t\tclassName=\"block-editor-hooks__block-hooks\"\r\n\t\t\t\ttitle={ __( 'Plugins' ) }\r\n\t\t\t\tinitialOpen\r\n\t\t\t>\r\n\t\t\t\t<p className=\"block-editor-hooks__block-hooks-helptext\">\r\n\t\t\t\t\t{ __(\r\n\t\t\t\t\t\t'Manage the inclusion of blocks added automatically by plugins.'\r\n\t\t\t\t\t) }\r\n\t\t\t\t</p>\r\n\t\t\t\t{ Object.keys( groupedHookedBlocks ).map( ( vendor ) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Fragment key={ vendor }>\r\n\t\t\t\t\t\t\t<h3>{ vendor }</h3>\r\n\t\t\t\t\t\t\t{ groupedHookedBlocks[ vendor ].map( ( block ) => {\r\n\t\t\t\t\t\t\t\tconst checked =\r\n\t\t\t\t\t\t\t\t\tblock.name in hookedBlockClientIds;\r\n\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<ToggleControl\r\n\t\t\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\r\n\t\t\t\t\t\t\t\t\t\tchecked={ checked }\r\n\t\t\t\t\t\t\t\t\t\tkey={ block.title }\r\n\t\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t\t<HStack justify=\"flex-start\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<BlockIcon\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon={ block.icon }\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>{ block.title }</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</HStack>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tonChange={ () => {\r\n\t\t\t\t\t\t\t\t\t\t\tif ( ! checked ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Create and insert block.\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst relativePosition =\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tblock.blockHooks[ name ];\r\n\t\t\t\t\t\t\t\t\t\t\t\tinsertBlockIntoDesignatedLocation(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcreateBlock( block.name ),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trelativePosition\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Remove block.\r\n\t\t\t\t\t\t\t\t\t\t\tremoveBlock(\r\n\t\t\t\t\t\t\t\t\t\t\t\thookedBlockClientIds[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tblock.name\r\n\t\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t\tfalse\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t} ) }\r\n\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t);\r\n\t\t\t\t} ) }\r\n\t\t\t</PanelBody>\r\n\t\t</InspectorControls>\r\n\t);\r\n}\r\n\r\nexport default {\r\n\tedit: BlockHooksControlPure,\r\n\tattributeKeys: [ 'metadata' ],\r\n\thasSupport() {\r\n\t\treturn true;\r\n\t},\r\n};\r\n"],"mappings":"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","ignoreList":[]}