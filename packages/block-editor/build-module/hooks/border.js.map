{"version":3,"names":["clsx","hasBlockSupport","getBlockSupport","__experimentalHasSplitBorders","hasSplitBorders","Platform","useCallback","useMemo","addFilter","useSelect","getColorClassName","InspectorControls","useMultipleOriginColorsAndGradients","cleanEmptyObject","shouldSkipSerialization","useBlockSettings","useHasBorderPanel","useHasBorderPanelControls","BorderPanel","StylesBorderPanel","store","blockEditorStore","__","jsx","_jsx","BORDER_SUPPORT_KEY","SHADOW_SUPPORT_KEY","getColorByProperty","colors","property","value","matchedColor","some","origin","color","getMultiOriginColor","namedColor","customColor","colorObject","undefined","getColorSlugFromVariable","exec","styleToAttributes","style","border","borderColor","borderColorValue","borderColorSlug","startsWith","substring","length","updatedStyle","attributesToStyle","attributes","BordersInspectorControl","label","children","resetAllFilter","attributesResetAllFilter","existingStyle","group","clientId","name","setAttributes","settings","isEnabled","selector","select","getBlockAttributes","onChange","newStyle","defaultControls","as","panelId","hasBorderSupport","blockName","feature","OS","support","radius","width","hasShadowSupport","useBorderPanelLabel","hasBorderControl","hasShadowControl","controls","hasBorderColor","hasBorderStyle","hasBorderWidth","hasBorderRadius","hasShadow","removeBorderAttribute","attribute","addAttributes","type","addSaveProps","props","blockNameOrType","borderClasses","getBorderClasses","newClassName","className","borderColorClass","useBlockProps","borderTopColor","top","borderRightColor","right","borderBottomColor","bottom","borderLeftColor","left","extraStyles","attributeKeys","hasSupport"],"sources":["D:/jungle/gutenberg/packages/block-editor/src/hooks/border.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { hasBlockSupport, getBlockSupport } from '@wordpress/blocks';\r\nimport { __experimentalHasSplitBorders as hasSplitBorders } from '@wordpress/components';\r\nimport { Platform, useCallback, useMemo } from '@wordpress/element';\r\nimport { addFilter } from '@wordpress/hooks';\r\nimport { useSelect } from '@wordpress/data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { getColorClassName } from '../components/colors';\r\nimport InspectorControls from '../components/inspector-controls';\r\nimport useMultipleOriginColorsAndGradients from '../components/colors-gradients/use-multiple-origin-colors-and-gradients';\r\nimport {\r\n\tcleanEmptyObject,\r\n\tshouldSkipSerialization,\r\n\tuseBlockSettings,\r\n} from './utils';\r\nimport {\r\n\tuseHasBorderPanel,\r\n\tuseHasBorderPanelControls,\r\n\tBorderPanel as StylesBorderPanel,\r\n} from '../components/global-styles';\r\nimport { store as blockEditorStore } from '../store';\r\nimport { __ } from '@wordpress/i18n';\r\n\r\nexport const BORDER_SUPPORT_KEY = '__experimentalBorder';\r\nexport const SHADOW_SUPPORT_KEY = 'shadow';\r\n\r\nconst getColorByProperty = ( colors, property, value ) => {\r\n\tlet matchedColor;\r\n\r\n\tcolors.some( ( origin ) =>\r\n\t\torigin.colors.some( ( color ) => {\r\n\t\t\tif ( color[ property ] === value ) {\r\n\t\t\t\tmatchedColor = color;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t} )\r\n\t);\r\n\r\n\treturn matchedColor;\r\n};\r\n\r\nexport const getMultiOriginColor = ( { colors, namedColor, customColor } ) => {\r\n\t// Search each origin (default, theme, or user) for matching color by name.\r\n\tif ( namedColor ) {\r\n\t\tconst colorObject = getColorByProperty( colors, 'slug', namedColor );\r\n\t\tif ( colorObject ) {\r\n\t\t\treturn colorObject;\r\n\t\t}\r\n\t}\r\n\r\n\t// Skip if no custom color or matching named color.\r\n\tif ( ! customColor ) {\r\n\t\treturn { color: undefined };\r\n\t}\r\n\r\n\t// Attempt to find color via custom color value or build new object.\r\n\tconst colorObject = getColorByProperty( colors, 'color', customColor );\r\n\treturn colorObject ? colorObject : { color: customColor };\r\n};\r\n\r\nfunction getColorSlugFromVariable( value ) {\r\n\tconst namedColor = /var:preset\\|color\\|(.+)/.exec( value );\r\n\tif ( namedColor && namedColor[ 1 ] ) {\r\n\t\treturn namedColor[ 1 ];\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nfunction styleToAttributes( style ) {\r\n\tif ( hasSplitBorders( style?.border ) ) {\r\n\t\treturn {\r\n\t\t\tstyle,\r\n\t\t\tborderColor: undefined,\r\n\t\t};\r\n\t}\r\n\r\n\tconst borderColorValue = style?.border?.color;\r\n\tconst borderColorSlug = borderColorValue?.startsWith( 'var:preset|color|' )\r\n\t\t? borderColorValue.substring( 'var:preset|color|'.length )\r\n\t\t: undefined;\r\n\tconst updatedStyle = { ...style };\r\n\tupdatedStyle.border = {\r\n\t\t...updatedStyle.border,\r\n\t\tcolor: borderColorSlug ? undefined : borderColorValue,\r\n\t};\r\n\treturn {\r\n\t\tstyle: cleanEmptyObject( updatedStyle ),\r\n\t\tborderColor: borderColorSlug,\r\n\t};\r\n}\r\n\r\nfunction attributesToStyle( attributes ) {\r\n\tif ( hasSplitBorders( attributes.style?.border ) ) {\r\n\t\treturn attributes.style;\r\n\t}\r\n\treturn {\r\n\t\t...attributes.style,\r\n\t\tborder: {\r\n\t\t\t...attributes.style?.border,\r\n\t\t\tcolor: attributes.borderColor\r\n\t\t\t\t? 'var:preset|color|' + attributes.borderColor\r\n\t\t\t\t: attributes.style?.border?.color,\r\n\t\t},\r\n\t};\r\n}\r\n\r\nfunction BordersInspectorControl( { label, children, resetAllFilter } ) {\r\n\tconst attributesResetAllFilter = useCallback(\r\n\t\t( attributes ) => {\r\n\t\t\tconst existingStyle = attributesToStyle( attributes );\r\n\t\t\tconst updatedStyle = resetAllFilter( existingStyle );\r\n\t\t\treturn {\r\n\t\t\t\t...attributes,\r\n\t\t\t\t...styleToAttributes( updatedStyle ),\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ resetAllFilter ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<InspectorControls\r\n\t\t\tgroup=\"border\"\r\n\t\t\tresetAllFilter={ attributesResetAllFilter }\r\n\t\t\tlabel={ label }\r\n\t\t>\r\n\t\t\t{ children }\r\n\t\t</InspectorControls>\r\n\t);\r\n}\r\n\r\nexport function BorderPanel( { clientId, name, setAttributes, settings } ) {\r\n\tconst isEnabled = useHasBorderPanel( settings );\r\n\tfunction selector( select ) {\r\n\t\tconst { style, borderColor } =\r\n\t\t\tselect( blockEditorStore ).getBlockAttributes( clientId ) || {};\r\n\t\treturn { style, borderColor };\r\n\t}\r\n\tconst { style, borderColor } = useSelect( selector, [ clientId ] );\r\n\tconst value = useMemo( () => {\r\n\t\treturn attributesToStyle( { style, borderColor } );\r\n\t}, [ style, borderColor ] );\r\n\r\n\tconst onChange = ( newStyle ) => {\r\n\t\tsetAttributes( styleToAttributes( newStyle ) );\r\n\t};\r\n\r\n\tif ( ! isEnabled ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst defaultControls = {\r\n\t\t...getBlockSupport( name, [\r\n\t\t\tBORDER_SUPPORT_KEY,\r\n\t\t\t'__experimentalDefaultControls',\r\n\t\t] ),\r\n\t\t...getBlockSupport( name, [\r\n\t\t\tSHADOW_SUPPORT_KEY,\r\n\t\t\t'__experimentalDefaultControls',\r\n\t\t] ),\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StylesBorderPanel\r\n\t\t\tas={ BordersInspectorControl }\r\n\t\t\tpanelId={ clientId }\r\n\t\t\tsettings={ settings }\r\n\t\t\tvalue={ value }\r\n\t\t\tonChange={ onChange }\r\n\t\t\tdefaultControls={ defaultControls }\r\n\t\t/>\r\n\t);\r\n}\r\n\r\n/**\r\n * Determine whether there is block support for border properties.\r\n *\r\n * @param {string} blockName Block name.\r\n * @param {string} feature   Border feature to check support for.\r\n *\r\n * @return {boolean} Whether there is support.\r\n */\r\nexport function hasBorderSupport( blockName, feature = 'any' ) {\r\n\tif ( Platform.OS !== 'web' ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst support = getBlockSupport( blockName, BORDER_SUPPORT_KEY );\r\n\r\n\tif ( support === true ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif ( feature === 'any' ) {\r\n\t\treturn !! (\r\n\t\t\tsupport?.color ||\r\n\t\t\tsupport?.radius ||\r\n\t\t\tsupport?.width ||\r\n\t\t\tsupport?.style\r\n\t\t);\r\n\t}\r\n\r\n\treturn !! support?.[ feature ];\r\n}\r\n\r\n/**\r\n * Determine whether there is block support for shadow properties.\r\n *\r\n * @param {string} blockName Block name.\r\n *\r\n * @return {boolean} Whether there is support.\r\n */\r\nexport function hasShadowSupport( blockName ) {\r\n\treturn hasBlockSupport( blockName, SHADOW_SUPPORT_KEY );\r\n}\r\n\r\nexport function useBorderPanelLabel( {\r\n\tblockName,\r\n\thasBorderControl,\r\n\thasShadowControl,\r\n} = {} ) {\r\n\tconst settings = useBlockSettings( blockName );\r\n\tconst controls = useHasBorderPanelControls( settings );\r\n\r\n\tif ( ! hasBorderControl && ! hasShadowControl && blockName ) {\r\n\t\thasBorderControl =\r\n\t\t\tcontrols?.hasBorderColor ||\r\n\t\t\tcontrols?.hasBorderStyle ||\r\n\t\t\tcontrols?.hasBorderWidth ||\r\n\t\t\tcontrols?.hasBorderRadius;\r\n\t\thasShadowControl = controls?.hasShadow;\r\n\t}\r\n\r\n\tif ( hasBorderControl && hasShadowControl ) {\r\n\t\treturn __( 'Border & Shadow' );\r\n\t}\r\n\r\n\tif ( hasShadowControl ) {\r\n\t\treturn __( 'Shadow' );\r\n\t}\r\n\r\n\treturn __( 'Border' );\r\n}\r\n\r\n/**\r\n * Returns a new style object where the specified border attribute has been\r\n * removed.\r\n *\r\n * @param {Object} style     Styles from block attributes.\r\n * @param {string} attribute The border style attribute to clear.\r\n *\r\n * @return {Object} Style object with the specified attribute removed.\r\n */\r\nexport function removeBorderAttribute( style, attribute ) {\r\n\treturn cleanEmptyObject( {\r\n\t\t...style,\r\n\t\tborder: {\r\n\t\t\t...style?.border,\r\n\t\t\t[ attribute ]: undefined,\r\n\t\t},\r\n\t} );\r\n}\r\n\r\n/**\r\n * Filters registered block settings, extending attributes to include\r\n * `borderColor` if needed.\r\n *\r\n * @param {Object} settings Original block settings.\r\n *\r\n * @return {Object} Updated block settings.\r\n */\r\nfunction addAttributes( settings ) {\r\n\tif ( ! hasBorderSupport( settings, 'color' ) ) {\r\n\t\treturn settings;\r\n\t}\r\n\r\n\t// Allow blocks to specify default value if needed.\r\n\tif ( settings.attributes.borderColor ) {\r\n\t\treturn settings;\r\n\t}\r\n\r\n\t// Add new borderColor attribute to block settings.\r\n\treturn {\r\n\t\t...settings,\r\n\t\tattributes: {\r\n\t\t\t...settings.attributes,\r\n\t\t\tborderColor: {\r\n\t\t\t\ttype: 'string',\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n}\r\n\r\n/**\r\n * Override props assigned to save component to inject border color.\r\n *\r\n * @param {Object}        props           Additional props applied to save element.\r\n * @param {Object|string} blockNameOrType Block type definition.\r\n * @param {Object}        attributes      Block's attributes.\r\n *\r\n * @return {Object} Filtered props to apply to save element.\r\n */\r\nfunction addSaveProps( props, blockNameOrType, attributes ) {\r\n\tif (\r\n\t\t! hasBorderSupport( blockNameOrType, 'color' ) ||\r\n\t\tshouldSkipSerialization( blockNameOrType, BORDER_SUPPORT_KEY, 'color' )\r\n\t) {\r\n\t\treturn props;\r\n\t}\r\n\r\n\tconst borderClasses = getBorderClasses( attributes );\r\n\tconst newClassName = clsx( props.className, borderClasses );\r\n\r\n\t// If we are clearing the last of the previous classes in `className`\r\n\t// set it to `undefined` to avoid rendering empty DOM attributes.\r\n\tprops.className = newClassName ? newClassName : undefined;\r\n\r\n\treturn props;\r\n}\r\n\r\n/**\r\n * Generates a CSS class name consisting of all the applicable border color\r\n * classes given the current block attributes.\r\n *\r\n * @param {Object} attributes Block's attributes.\r\n *\r\n * @return {string} CSS class name.\r\n */\r\nexport function getBorderClasses( attributes ) {\r\n\tconst { borderColor, style } = attributes;\r\n\tconst borderColorClass = getColorClassName( 'border-color', borderColor );\r\n\r\n\treturn clsx( {\r\n\t\t'has-border-color': borderColor || style?.border?.color,\r\n\t\t[ borderColorClass ]: !! borderColorClass,\r\n\t} );\r\n}\r\n\r\nfunction useBlockProps( { name, borderColor, style } ) {\r\n\tconst { colors } = useMultipleOriginColorsAndGradients();\r\n\r\n\tif (\r\n\t\t! hasBorderSupport( name, 'color' ) ||\r\n\t\tshouldSkipSerialization( name, BORDER_SUPPORT_KEY, 'color' )\r\n\t) {\r\n\t\treturn {};\r\n\t}\r\n\r\n\tconst { color: borderColorValue } = getMultiOriginColor( {\r\n\t\tcolors,\r\n\t\tnamedColor: borderColor,\r\n\t} );\r\n\tconst { color: borderTopColor } = getMultiOriginColor( {\r\n\t\tcolors,\r\n\t\tnamedColor: getColorSlugFromVariable( style?.border?.top?.color ),\r\n\t} );\r\n\tconst { color: borderRightColor } = getMultiOriginColor( {\r\n\t\tcolors,\r\n\t\tnamedColor: getColorSlugFromVariable( style?.border?.right?.color ),\r\n\t} );\r\n\r\n\tconst { color: borderBottomColor } = getMultiOriginColor( {\r\n\t\tcolors,\r\n\t\tnamedColor: getColorSlugFromVariable( style?.border?.bottom?.color ),\r\n\t} );\r\n\tconst { color: borderLeftColor } = getMultiOriginColor( {\r\n\t\tcolors,\r\n\t\tnamedColor: getColorSlugFromVariable( style?.border?.left?.color ),\r\n\t} );\r\n\r\n\tconst extraStyles = {\r\n\t\tborderTopColor: borderTopColor || borderColorValue,\r\n\t\tborderRightColor: borderRightColor || borderColorValue,\r\n\t\tborderBottomColor: borderBottomColor || borderColorValue,\r\n\t\tborderLeftColor: borderLeftColor || borderColorValue,\r\n\t};\r\n\r\n\treturn addSaveProps(\r\n\t\t{ style: cleanEmptyObject( extraStyles ) || {} },\r\n\t\tname,\r\n\t\t{ borderColor, style }\r\n\t);\r\n}\r\n\r\nexport default {\r\n\tuseBlockProps,\r\n\taddSaveProps,\r\n\tattributeKeys: [ 'borderColor', 'style' ],\r\n\thasSupport( name ) {\r\n\t\treturn hasBorderSupport( name, 'color' );\r\n\t},\r\n};\r\n\r\naddFilter(\r\n\t'blocks.registerBlockType',\r\n\t'core/border/addAttributes',\r\n\taddAttributes\r\n);\r\n"],"mappings":"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","ignoreList":[]}