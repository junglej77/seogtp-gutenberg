{"version":3,"names":["clsx","addFilter","TextControl","__","hasBlockSupport","InspectorControls","useBlockEditingMode","jsx","_jsx","addAttribute","settings","attributes","className","type","CustomClassNameControlsPure","setAttributes","blockEditingMode","group","children","__nextHasNoMarginBottom","__next40pxDefaultSize","autoComplete","label","value","onChange","nextValue","undefined","help","edit","addSaveProps","attributeKeys","hasSupport","name","extraProps","blockType","addTransforms","result","source","index","results","length","innerBlocks","originClassName"],"sources":["@wordpress/block-editor/src/hooks/custom-class-name.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { addFilter } from '@wordpress/hooks';\r\nimport { TextControl } from '@wordpress/components';\r\nimport { __ } from '@wordpress/i18n';\r\nimport { hasBlockSupport } from '@wordpress/blocks';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { InspectorControls } from '../components';\r\nimport { useBlockEditingMode } from '../components/block-editing-mode';\r\n\r\n/**\r\n * Filters registered block settings, extending attributes to include `className`.\r\n *\r\n * @param {Object} settings Original block settings.\r\n *\r\n * @return {Object} Filtered block settings.\r\n */\r\nexport function addAttribute( settings ) {\r\n\tif ( hasBlockSupport( settings, 'customClassName', true ) ) {\r\n\t\t// Gracefully handle if settings.attributes is undefined.\r\n\t\tsettings.attributes = {\r\n\t\t\t...settings.attributes,\r\n\t\t\tclassName: {\r\n\t\t\t\ttype: 'string',\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\treturn settings;\r\n}\r\n\r\nfunction CustomClassNameControlsPure( { className, setAttributes } ) {\r\n\tconst blockEditingMode = useBlockEditingMode();\r\n\tif ( blockEditingMode !== 'default' ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<InspectorControls group=\"advanced\">\r\n\t\t\t<TextControl\r\n\t\t\t\t__nextHasNoMarginBottom\r\n\t\t\t\t__next40pxDefaultSize\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tlabel={ __( 'Additional CSS class(es)' ) }\r\n\t\t\t\tvalue={ className || '' }\r\n\t\t\t\tonChange={ ( nextValue ) => {\r\n\t\t\t\t\tsetAttributes( {\r\n\t\t\t\t\t\tclassName: nextValue !== '' ? nextValue : undefined,\r\n\t\t\t\t\t} );\r\n\t\t\t\t} }\r\n\t\t\t\thelp={ __( 'Separate multiple classes with spaces.' ) }\r\n\t\t\t/>\r\n\t\t</InspectorControls>\r\n\t);\r\n}\r\n\r\nexport default {\r\n\tedit: CustomClassNameControlsPure,\r\n\taddSaveProps,\r\n\tattributeKeys: [ 'className' ],\r\n\thasSupport( name ) {\r\n\t\treturn hasBlockSupport( name, 'customClassName', true );\r\n\t},\r\n};\r\n\r\n/**\r\n * Override props assigned to save component to inject the className, if block\r\n * supports customClassName. This is only applied if the block's save result is an\r\n * element and not a markup string.\r\n *\r\n * @param {Object} extraProps Additional props applied to save element.\r\n * @param {Object} blockType  Block type.\r\n * @param {Object} attributes Current block attributes.\r\n *\r\n * @return {Object} Filtered props applied to save element.\r\n */\r\nexport function addSaveProps( extraProps, blockType, attributes ) {\r\n\tif (\r\n\t\thasBlockSupport( blockType, 'customClassName', true ) &&\r\n\t\tattributes.className\r\n\t) {\r\n\t\textraProps.className = clsx(\r\n\t\t\textraProps.className,\r\n\t\t\tattributes.className\r\n\t\t);\r\n\t}\r\n\r\n\treturn extraProps;\r\n}\r\n\r\nexport function addTransforms( result, source, index, results ) {\r\n\tif ( ! hasBlockSupport( result.name, 'customClassName', true ) ) {\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// If the condition verifies we are probably in the presence of a wrapping transform\r\n\t// e.g: nesting paragraphs in a group or columns and in that case the class should not be kept.\r\n\tif ( results.length === 1 && result.innerBlocks.length === source.length ) {\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// If we are transforming one block to multiple blocks or multiple blocks to one block,\r\n\t// we ignore the class during the transform.\r\n\tif (\r\n\t\t( results.length === 1 && source.length > 1 ) ||\r\n\t\t( results.length > 1 && source.length === 1 )\r\n\t) {\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// If we are in presence of transform between one or more block in the source\r\n\t// that have one or more blocks in the result\r\n\t// we apply the class on source N to the result N,\r\n\t// if source N does not exists we do nothing.\r\n\tif ( source[ index ] ) {\r\n\t\tconst originClassName = source[ index ]?.attributes.className;\r\n\t\tif ( originClassName ) {\r\n\t\t\treturn {\r\n\t\t\t\t...result,\r\n\t\t\t\tattributes: {\r\n\t\t\t\t\t...result.attributes,\r\n\t\t\t\t\tclassName: originClassName,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n}\r\n\r\naddFilter(\r\n\t'blocks.registerBlockType',\r\n\t'core/editor/custom-class-name/attribute',\r\n\taddAttribute\r\n);\r\n\r\naddFilter(\r\n\t'blocks.switchToBlockType.transformedBlock',\r\n\t'core/color/addTransforms',\r\n\taddTransforms\r\n);\r\n"],"mappings":"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","ignoreList":[]}