{"version":3,"names":["clsx","addFilter","hasBlockSupport","addAttribute","settings","attributes","className","type","addSaveProps","extraProps","blockType","attributeKeys","hasSupport","name"],"sources":["@wordpress/block-editor/src/hooks/custom-class-name.native.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { addFilter } from '@wordpress/hooks';\r\nimport { hasBlockSupport } from '@wordpress/blocks';\r\n\r\n/**\r\n * Filters registered block settings, extending attributes to include `className`.\r\n *\r\n * @param {Object} settings Original block settings.\r\n *\r\n * @return {Object} Filtered block settings.\r\n */\r\nexport function addAttribute( settings ) {\r\n\tif ( hasBlockSupport( settings, 'customClassName', true ) ) {\r\n\t\t// Gracefully handle if settings.attributes is undefined.\r\n\t\tsettings.attributes = {\r\n\t\t\t...settings.attributes,\r\n\t\t\tclassName: {\r\n\t\t\t\ttype: 'string',\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\treturn settings;\r\n}\r\n\r\n/**\r\n * Override props assigned to save component to inject the className, if block\r\n * supports customClassName. This is only applied if the block's save result is an\r\n * element and not a markup string.\r\n *\r\n * @param {Object} extraProps Additional props applied to save element.\r\n * @param {Object} blockType  Block type.\r\n * @param {Object} attributes Current block attributes.\r\n *\r\n * @return {Object} Filtered props applied to save element.\r\n */\r\nexport function addSaveProps( extraProps, blockType, attributes ) {\r\n\tif (\r\n\t\thasBlockSupport( blockType, 'customClassName', true ) &&\r\n\t\tattributes.className\r\n\t) {\r\n\t\textraProps.className = clsx(\r\n\t\t\textraProps.className,\r\n\t\t\tattributes.className\r\n\t\t);\r\n\t}\r\n\r\n\treturn extraProps;\r\n}\r\n\r\naddFilter(\r\n\t'blocks.registerBlockType',\r\n\t'core/custom-class-name/attribute',\r\n\taddAttribute\r\n);\r\n\r\nexport default {\r\n\taddSaveProps,\r\n\tattributeKeys: [ 'className' ],\r\n\thasSupport( name ) {\r\n\t\treturn hasBlockSupport( name, 'customClassName', true );\r\n\t},\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;;AAEvB;AACA;AACA;AACA,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,eAAe,QAAQ,mBAAmB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAAEC,QAAQ,EAAG;EACxC,IAAKF,eAAe,CAAEE,QAAQ,EAAE,iBAAiB,EAAE,IAAK,CAAC,EAAG;IAC3D;IACAA,QAAQ,CAACC,UAAU,GAAG;MACrB,GAAGD,QAAQ,CAACC,UAAU;MACtBC,SAAS,EAAE;QACVC,IAAI,EAAE;MACP;IACD,CAAC;EACF;EAEA,OAAOH,QAAQ;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,YAAYA,CAAEC,UAAU,EAAEC,SAAS,EAAEL,UAAU,EAAG;EACjE,IACCH,eAAe,CAAEQ,SAAS,EAAE,iBAAiB,EAAE,IAAK,CAAC,IACrDL,UAAU,CAACC,SAAS,EACnB;IACDG,UAAU,CAACH,SAAS,GAAGN,IAAI,CAC1BS,UAAU,CAACH,SAAS,EACpBD,UAAU,CAACC,SACZ,CAAC;EACF;EAEA,OAAOG,UAAU;AAClB;AAEAR,SAAS,CACR,0BAA0B,EAC1B,kCAAkC,EAClCE,YACD,CAAC;AAED,eAAe;EACdK,YAAY;EACZG,aAAa,EAAE,CAAE,WAAW,CAAE;EAC9BC,UAAUA,CAAEC,IAAI,EAAG;IAClB,OAAOX,eAAe,CAAEW,IAAI,EAAE,iBAAiB,EAAE,IAAK,CAAC;EACxD;AACD,CAAC","ignoreList":[]}