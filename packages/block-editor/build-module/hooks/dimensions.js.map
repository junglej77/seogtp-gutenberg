{"version":3,"names":["clsx","Platform","useState","useEffect","useCallback","useDispatch","useSelect","getBlockSupport","deprecated","InspectorControls","DimensionsPanel","StylesDimensionsPanel","useHasDimensionsPanel","MarginVisualizer","PaddingVisualizer","store","blockEditorStore","unlock","cleanEmptyObject","shouldSkipSerialization","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","DIMENSIONS_SUPPORT_KEY","SPACING_SUPPORT_KEY","ALL_SIDES","AXIAL_SIDES","useVisualizer","property","setProperty","hideBlockInterface","showBlockInterface","DimensionsInspectorControl","children","resetAllFilter","attributesResetAllFilter","attributes","existingStyle","style","updatedStyle","group","clientId","name","setAttributes","settings","isEnabled","value","select","getBlockAttributes","visualizedProperty","setVisualizedProperty","onChange","newStyle","defaultDimensionsControls","defaultSpacingControls","defaultControls","as","panelId","onVisualize","spacing","padding","forceShow","margin","hasDimensionsSupport","blockName","feature","OS","support","aspectRatio","minHeight","useBlockProps","attributeKeys","hasSupport","className","dimensions","inlineStyleOverrides","useCustomSides","since","version"],"sources":["@wordpress/block-editor/src/hooks/dimensions.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { Platform, useState, useEffect, useCallback } from '@wordpress/element';\r\nimport { useDispatch, useSelect } from '@wordpress/data';\r\nimport { getBlockSupport } from '@wordpress/blocks';\r\nimport deprecated from '@wordpress/deprecated';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport InspectorControls from '../components/inspector-controls';\r\nimport {\r\n\tDimensionsPanel as StylesDimensionsPanel,\r\n\tuseHasDimensionsPanel,\r\n} from '../components/global-styles';\r\nimport { MarginVisualizer, PaddingVisualizer } from './spacing-visualizer';\r\nimport { store as blockEditorStore } from '../store';\r\nimport { unlock } from '../lock-unlock';\r\nimport { cleanEmptyObject, shouldSkipSerialization } from './utils';\r\n\r\nexport const DIMENSIONS_SUPPORT_KEY = 'dimensions';\r\nexport const SPACING_SUPPORT_KEY = 'spacing';\r\nexport const ALL_SIDES = [ 'top', 'right', 'bottom', 'left' ];\r\nexport const AXIAL_SIDES = [ 'vertical', 'horizontal' ];\r\n\r\nfunction useVisualizer() {\r\n\tconst [ property, setProperty ] = useState( false );\r\n\tconst { hideBlockInterface, showBlockInterface } = unlock(\r\n\t\tuseDispatch( blockEditorStore )\r\n\t);\r\n\tuseEffect( () => {\r\n\t\tif ( ! property ) {\r\n\t\t\tshowBlockInterface();\r\n\t\t} else {\r\n\t\t\thideBlockInterface();\r\n\t\t}\r\n\t}, [ property, showBlockInterface, hideBlockInterface ] );\r\n\r\n\treturn [ property, setProperty ];\r\n}\r\n\r\nfunction DimensionsInspectorControl( { children, resetAllFilter } ) {\r\n\tconst attributesResetAllFilter = useCallback(\r\n\t\t( attributes ) => {\r\n\t\t\tconst existingStyle = attributes.style;\r\n\t\t\tconst updatedStyle = resetAllFilter( existingStyle );\r\n\t\t\treturn {\r\n\t\t\t\t...attributes,\r\n\t\t\t\tstyle: updatedStyle,\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ resetAllFilter ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<InspectorControls\r\n\t\t\tgroup=\"dimensions\"\r\n\t\t\tresetAllFilter={ attributesResetAllFilter }\r\n\t\t>\r\n\t\t\t{ children }\r\n\t\t</InspectorControls>\r\n\t);\r\n}\r\n\r\nexport function DimensionsPanel( { clientId, name, setAttributes, settings } ) {\r\n\tconst isEnabled = useHasDimensionsPanel( settings );\r\n\tconst value = useSelect(\r\n\t\t( select ) =>\r\n\t\t\tselect( blockEditorStore ).getBlockAttributes( clientId )?.style,\r\n\t\t[ clientId ]\r\n\t);\r\n\tconst [ visualizedProperty, setVisualizedProperty ] = useVisualizer();\r\n\tconst onChange = ( newStyle ) => {\r\n\t\tsetAttributes( {\r\n\t\t\tstyle: cleanEmptyObject( newStyle ),\r\n\t\t} );\r\n\t};\r\n\r\n\tif ( ! isEnabled ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst defaultDimensionsControls = getBlockSupport( name, [\r\n\t\tDIMENSIONS_SUPPORT_KEY,\r\n\t\t'__experimentalDefaultControls',\r\n\t] );\r\n\tconst defaultSpacingControls = getBlockSupport( name, [\r\n\t\tSPACING_SUPPORT_KEY,\r\n\t\t'__experimentalDefaultControls',\r\n\t] );\r\n\tconst defaultControls = {\r\n\t\t...defaultDimensionsControls,\r\n\t\t...defaultSpacingControls,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<StylesDimensionsPanel\r\n\t\t\t\tas={ DimensionsInspectorControl }\r\n\t\t\t\tpanelId={ clientId }\r\n\t\t\t\tsettings={ settings }\r\n\t\t\t\tvalue={ value }\r\n\t\t\t\tonChange={ onChange }\r\n\t\t\t\tdefaultControls={ defaultControls }\r\n\t\t\t\tonVisualize={ setVisualizedProperty }\r\n\t\t\t/>\r\n\t\t\t{ !! settings?.spacing?.padding && (\r\n\t\t\t\t<PaddingVisualizer\r\n\t\t\t\t\tforceShow={ visualizedProperty === 'padding' }\r\n\t\t\t\t\tclientId={ clientId }\r\n\t\t\t\t\tvalue={ value }\r\n\t\t\t\t/>\r\n\t\t\t) }\r\n\t\t\t{ !! settings?.spacing?.margin && (\r\n\t\t\t\t<MarginVisualizer\r\n\t\t\t\t\tforceShow={ visualizedProperty === 'margin' }\r\n\t\t\t\t\tclientId={ clientId }\r\n\t\t\t\t\tvalue={ value }\r\n\t\t\t\t/>\r\n\t\t\t) }\r\n\t\t</>\r\n\t);\r\n}\r\n\r\n/**\r\n * Determine whether there is block support for dimensions.\r\n *\r\n * @param {string} blockName Block name.\r\n * @param {string} feature   Background image feature to check for.\r\n *\r\n * @return {boolean} Whether there is support.\r\n */\r\nexport function hasDimensionsSupport( blockName, feature = 'any' ) {\r\n\tif ( Platform.OS !== 'web' ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst support = getBlockSupport( blockName, DIMENSIONS_SUPPORT_KEY );\r\n\r\n\tif ( support === true ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif ( feature === 'any' ) {\r\n\t\treturn !! ( support?.aspectRatio || !! support?.minHeight );\r\n\t}\r\n\r\n\treturn !! support?.[ feature ];\r\n}\r\n\r\nexport default {\r\n\tuseBlockProps,\r\n\tattributeKeys: [ 'minHeight', 'style' ],\r\n\thasSupport( name ) {\r\n\t\treturn hasDimensionsSupport( name, 'aspectRatio' );\r\n\t},\r\n};\r\n\r\nfunction useBlockProps( { name, minHeight, style } ) {\r\n\tif (\r\n\t\t! hasDimensionsSupport( name, 'aspectRatio' ) ||\r\n\t\tshouldSkipSerialization( name, DIMENSIONS_SUPPORT_KEY, 'aspectRatio' )\r\n\t) {\r\n\t\treturn {};\r\n\t}\r\n\r\n\tconst className = clsx( {\r\n\t\t'has-aspect-ratio': !! style?.dimensions?.aspectRatio,\r\n\t} );\r\n\r\n\t// Allow dimensions-based inline style overrides to override any global styles rules that\r\n\t// might be set for the block, and therefore affect the display of the aspect ratio.\r\n\tconst inlineStyleOverrides = {};\r\n\r\n\t// Apply rules to unset incompatible styles.\r\n\t// Note that a set `aspectRatio` will win out if both an aspect ratio and a minHeight are set.\r\n\t// This is because the aspect ratio is a newer block support, so (in theory) any aspect ratio\r\n\t// that is set should be intentional and should override any existing minHeight. The Cover block\r\n\t// and dimensions controls have logic that will manually clear the aspect ratio if a minHeight\r\n\t// is set.\r\n\tif ( style?.dimensions?.aspectRatio ) {\r\n\t\t// To ensure the aspect ratio does not get overridden by `minHeight` unset any existing rule.\r\n\t\tinlineStyleOverrides.minHeight = 'unset';\r\n\t} else if ( minHeight || style?.dimensions?.minHeight ) {\r\n\t\t// To ensure the minHeight does not get overridden by `aspectRatio` unset any existing rule.\r\n\t\tinlineStyleOverrides.aspectRatio = 'unset';\r\n\t}\r\n\r\n\treturn { className, style: inlineStyleOverrides };\r\n}\r\n\r\n/**\r\n * @deprecated\r\n */\r\nexport function useCustomSides() {\r\n\tdeprecated( 'wp.blockEditor.__experimentalUseCustomSides', {\r\n\t\tsince: '6.3',\r\n\t\tversion: '6.4',\r\n\t} );\r\n}\r\n"],"mappings":"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","ignoreList":[]}