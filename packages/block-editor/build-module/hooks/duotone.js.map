{"version":3,"names":["extend","namesPlugin","getBlockSupport","getBlockType","hasBlockSupport","useInstanceId","addFilter","useMemo","useEffect","BlockControls","InspectorControls","__experimentalDuotoneControl","DuotoneControl","useSettings","getDuotoneFilter","getDuotoneStylesheet","getDuotoneUnsetStylesheet","getBlockCSSSelector","scopeSelector","useBlockSettings","usePrivateStyleOverride","default","StylesFiltersPanel","useBlockEditingMode","useBlockElement","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","EMPTY_ARRAY","isSafari","window","navigator","userAgent","includes","useMultiOriginPresets","presetSetting","defaultSetting","enableDefault","userPresets","themePresets","defaultPresets","getColorsFromDuotonePreset","duotone","duotonePalette","preset","find","slug","colors","undefined","getDuotonePresetFromColors","Array","isArray","duotonePreset","every","val","index","DuotonePanelPure","style","setAttributes","name","duotoneStyle","color","settings","blockEditingMode","colorPalette","enableCustomColors","enableCustomDuotone","disableCustomColors","disableCustomDuotone","length","duotonePresetOrColors","children","group","value","filter","onChange","newDuotone","newStyle","__experimentalShareWithChildBlocks","maybePreset","shareWithChildBlocks","edit","useBlockProps","attributeKeys","hasSupport","addDuotoneAttributes","attributes","Object","assign","type","useDuotoneStyles","clientId","id","filterId","selector","duotoneSelector","attribute","duotoneAttr","isCustom","isPreset","isCSS","selectors","split","selectorsScoped","map","selectorPart","trim","join","isValidFilter","css","__unstableType","assets","blockElement","display","offsetHeight","blockType","duotoneSupport","experimentalDuotone","rootSelector","fallback","filterClass","shouldRender","className"],"sources":["@wordpress/block-editor/src/hooks/duotone.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport { extend } from 'colord';\r\nimport namesPlugin from 'colord/plugins/names';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport {\r\n\tgetBlockSupport,\r\n\tgetBlockType,\r\n\thasBlockSupport,\r\n} from '@wordpress/blocks';\r\nimport { useInstanceId } from '@wordpress/compose';\r\nimport { addFilter } from '@wordpress/hooks';\r\nimport { useMemo, useEffect } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport {\r\n\tBlockControls,\r\n\tInspectorControls,\r\n\t__experimentalDuotoneControl as DuotoneControl,\r\n\tuseSettings,\r\n} from '../components';\r\nimport {\r\n\tgetDuotoneFilter,\r\n\tgetDuotoneStylesheet,\r\n\tgetDuotoneUnsetStylesheet,\r\n} from '../components/duotone/utils';\r\nimport { getBlockCSSSelector } from '../components/global-styles/get-block-css-selector';\r\nimport { scopeSelector } from '../components/global-styles/utils';\r\nimport { useBlockSettings, usePrivateStyleOverride } from './utils';\r\nimport { default as StylesFiltersPanel } from '../components/global-styles/filters-panel';\r\nimport { useBlockEditingMode } from '../components/block-editing-mode';\r\nimport { useBlockElement } from '../components/block-list/use-block-props/use-block-refs';\r\n\r\nconst EMPTY_ARRAY = [];\r\n\r\n// Safari does not always update the duotone filter when the duotone colors\r\n// are changed. This browser check is later used to force a re-render of the block\r\n// element to ensure the duotone filter is updated. The check is included at the\r\n// root of this file as it only needs to be run once per page load.\r\nconst isSafari =\r\n\twindow?.navigator.userAgent &&\r\n\twindow.navigator.userAgent.includes( 'Safari' ) &&\r\n\t! window.navigator.userAgent.includes( 'Chrome' ) &&\r\n\t! window.navigator.userAgent.includes( 'Chromium' );\r\n\r\nextend( [ namesPlugin ] );\r\n\r\nfunction useMultiOriginPresets( { presetSetting, defaultSetting } ) {\r\n\tconst [ enableDefault, userPresets, themePresets, defaultPresets ] =\r\n\t\tuseSettings(\r\n\t\t\tdefaultSetting,\r\n\t\t\t`${ presetSetting }.custom`,\r\n\t\t\t`${ presetSetting }.theme`,\r\n\t\t\t`${ presetSetting }.default`\r\n\t\t);\r\n\treturn useMemo(\r\n\t\t() => [\r\n\t\t\t...( userPresets || EMPTY_ARRAY ),\r\n\t\t\t...( themePresets || EMPTY_ARRAY ),\r\n\t\t\t...( ( enableDefault && defaultPresets ) || EMPTY_ARRAY ),\r\n\t\t],\r\n\t\t[ enableDefault, userPresets, themePresets, defaultPresets ]\r\n\t);\r\n}\r\n\r\nexport function getColorsFromDuotonePreset( duotone, duotonePalette ) {\r\n\tif ( ! duotone ) {\r\n\t\treturn;\r\n\t}\r\n\tconst preset = duotonePalette?.find( ( { slug } ) => {\r\n\t\treturn duotone === `var:preset|duotone|${ slug }`;\r\n\t} );\r\n\r\n\treturn preset ? preset.colors : undefined;\r\n}\r\n\r\nexport function getDuotonePresetFromColors( colors, duotonePalette ) {\r\n\tif ( ! colors || ! Array.isArray( colors ) ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst preset = duotonePalette?.find( ( duotonePreset ) => {\r\n\t\treturn duotonePreset?.colors?.every(\r\n\t\t\t( val, index ) => val === colors[ index ]\r\n\t\t);\r\n\t} );\r\n\r\n\treturn preset ? `var:preset|duotone|${ preset.slug }` : undefined;\r\n}\r\n\r\nfunction DuotonePanelPure( { style, setAttributes, name } ) {\r\n\tconst duotoneStyle = style?.color?.duotone;\r\n\tconst settings = useBlockSettings( name );\r\n\tconst blockEditingMode = useBlockEditingMode();\r\n\r\n\tconst duotonePalette = useMultiOriginPresets( {\r\n\t\tpresetSetting: 'color.duotone',\r\n\t\tdefaultSetting: 'color.defaultDuotone',\r\n\t} );\r\n\tconst colorPalette = useMultiOriginPresets( {\r\n\t\tpresetSetting: 'color.palette',\r\n\t\tdefaultSetting: 'color.defaultPalette',\r\n\t} );\r\n\tconst [ enableCustomColors, enableCustomDuotone ] = useSettings(\r\n\t\t'color.custom',\r\n\t\t'color.customDuotone'\r\n\t);\r\n\tconst disableCustomColors = ! enableCustomColors;\r\n\tconst disableCustomDuotone =\r\n\t\t! enableCustomDuotone ||\r\n\t\t( colorPalette?.length === 0 && disableCustomColors );\r\n\r\n\tif ( duotonePalette?.length === 0 && disableCustomDuotone ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tif ( blockEditingMode !== 'default' ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst duotonePresetOrColors = ! Array.isArray( duotoneStyle )\r\n\t\t? getColorsFromDuotonePreset( duotoneStyle, duotonePalette )\r\n\t\t: duotoneStyle;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<InspectorControls group=\"filter\">\r\n\t\t\t\t<StylesFiltersPanel\r\n\t\t\t\t\tvalue={ { filter: { duotone: duotonePresetOrColors } } }\r\n\t\t\t\t\tonChange={ ( newDuotone ) => {\r\n\t\t\t\t\t\tconst newStyle = {\r\n\t\t\t\t\t\t\t...style,\r\n\t\t\t\t\t\t\tcolor: {\r\n\t\t\t\t\t\t\t\t...newDuotone?.filter,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tsetAttributes( { style: newStyle } );\r\n\t\t\t\t\t} }\r\n\t\t\t\t\tsettings={ settings }\r\n\t\t\t\t/>\r\n\t\t\t</InspectorControls>\r\n\t\t\t<BlockControls group=\"block\" __experimentalShareWithChildBlocks>\r\n\t\t\t\t<DuotoneControl\r\n\t\t\t\t\tduotonePalette={ duotonePalette }\r\n\t\t\t\t\tcolorPalette={ colorPalette }\r\n\t\t\t\t\tdisableCustomDuotone={ disableCustomDuotone }\r\n\t\t\t\t\tdisableCustomColors={ disableCustomColors }\r\n\t\t\t\t\tvalue={ duotonePresetOrColors }\r\n\t\t\t\t\tonChange={ ( newDuotone ) => {\r\n\t\t\t\t\t\tconst maybePreset = getDuotonePresetFromColors(\r\n\t\t\t\t\t\t\tnewDuotone,\r\n\t\t\t\t\t\t\tduotonePalette\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tconst newStyle = {\r\n\t\t\t\t\t\t\t...style,\r\n\t\t\t\t\t\t\tcolor: {\r\n\t\t\t\t\t\t\t\t...style?.color,\r\n\t\t\t\t\t\t\t\tduotone: maybePreset ?? newDuotone, // use preset or fallback to custom colors.\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tsetAttributes( { style: newStyle } );\r\n\t\t\t\t\t} }\r\n\t\t\t\t\tsettings={ settings }\r\n\t\t\t\t/>\r\n\t\t\t</BlockControls>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default {\r\n\tshareWithChildBlocks: true,\r\n\tedit: DuotonePanelPure,\r\n\tuseBlockProps,\r\n\tattributeKeys: [ 'style' ],\r\n\thasSupport( name ) {\r\n\t\treturn hasBlockSupport( name, 'filter.duotone' );\r\n\t},\r\n};\r\n\r\n/**\r\n * Filters registered block settings, extending attributes to include\r\n * the `duotone` attribute.\r\n *\r\n * @param {Object} settings Original block settings.\r\n *\r\n * @return {Object} Filtered block settings.\r\n */\r\nfunction addDuotoneAttributes( settings ) {\r\n\t// Previous `color.__experimentalDuotone` support flag is migrated via\r\n\t// block_type_metadata_settings filter in `lib/block-supports/duotone.php`.\r\n\tif ( ! hasBlockSupport( settings, 'filter.duotone' ) ) {\r\n\t\treturn settings;\r\n\t}\r\n\r\n\t// Allow blocks to specify their own attribute definition with default\r\n\t// values if needed.\r\n\tif ( ! settings.attributes.style ) {\r\n\t\tObject.assign( settings.attributes, {\r\n\t\t\tstyle: {\r\n\t\t\t\ttype: 'object',\r\n\t\t\t},\r\n\t\t} );\r\n\t}\r\n\r\n\treturn settings;\r\n}\r\n\r\nfunction useDuotoneStyles( {\r\n\tclientId,\r\n\tid: filterId,\r\n\tselector: duotoneSelector,\r\n\tattribute: duotoneAttr,\r\n} ) {\r\n\tconst duotonePalette = useMultiOriginPresets( {\r\n\t\tpresetSetting: 'color.duotone',\r\n\t\tdefaultSetting: 'color.defaultDuotone',\r\n\t} );\r\n\r\n\t// Possible values for duotone attribute:\r\n\t// 1. Array of colors - e.g. ['#000000', '#ffffff'].\r\n\t// 2. Variable for an existing Duotone preset - e.g. 'var:preset|duotone|green-blue' or 'var(--wp--preset--duotone--green-blue)''\r\n\t// 3. A CSS string - e.g. 'unset' to remove globally applied duotone.\r\n\tconst isCustom = Array.isArray( duotoneAttr );\r\n\tconst duotonePreset = isCustom\r\n\t\t? undefined\r\n\t\t: getColorsFromDuotonePreset( duotoneAttr, duotonePalette );\r\n\tconst isPreset = typeof duotoneAttr === 'string' && duotonePreset;\r\n\tconst isCSS = typeof duotoneAttr === 'string' && ! isPreset;\r\n\r\n\t// Match the structure of WP_Duotone_Gutenberg::render_duotone_support() in PHP.\r\n\tlet colors = null;\r\n\tif ( isPreset ) {\r\n\t\t// Array of colors.\r\n\t\tcolors = duotonePreset;\r\n\t} else if ( isCSS ) {\r\n\t\t// CSS filter property string (e.g. 'unset').\r\n\t\tcolors = duotoneAttr;\r\n\t} else if ( isCustom ) {\r\n\t\t// Array of colors.\r\n\t\tcolors = duotoneAttr;\r\n\t}\r\n\r\n\t// Build the CSS selectors to which the filter will be applied.\r\n\tconst selectors = duotoneSelector.split( ',' );\r\n\r\n\tconst selectorsScoped = selectors.map( ( selectorPart ) => {\r\n\t\t// Assuming the selector part is a subclass selector (not a tag name)\r\n\t\t// so we can prepend the filter id class. If we want to support elements\r\n\t\t// such as `img` or namespaces, we'll need to add a case for that here.\r\n\t\treturn `.${ filterId }${ selectorPart.trim() }`;\r\n\t} );\r\n\r\n\tconst selector = selectorsScoped.join( ', ' );\r\n\r\n\tconst isValidFilter = Array.isArray( colors ) || colors === 'unset';\r\n\r\n\tusePrivateStyleOverride(\r\n\t\tisValidFilter\r\n\t\t\t? {\r\n\t\t\t\t\tcss:\r\n\t\t\t\t\t\tcolors !== 'unset'\r\n\t\t\t\t\t\t\t? getDuotoneStylesheet( selector, filterId )\r\n\t\t\t\t\t\t\t: getDuotoneUnsetStylesheet( selector ),\r\n\t\t\t\t\t__unstableType: 'presets',\r\n\t\t\t  }\r\n\t\t\t: undefined\r\n\t);\r\n\tusePrivateStyleOverride(\r\n\t\tisValidFilter\r\n\t\t\t? {\r\n\t\t\t\t\tassets:\r\n\t\t\t\t\t\tcolors !== 'unset'\r\n\t\t\t\t\t\t\t? getDuotoneFilter( filterId, colors )\r\n\t\t\t\t\t\t\t: '',\r\n\t\t\t\t\t__unstableType: 'svgs',\r\n\t\t\t  }\r\n\t\t\t: undefined\r\n\t);\r\n\r\n\tconst blockElement = useBlockElement( clientId );\r\n\r\n\tuseEffect( () => {\r\n\t\tif ( ! isValidFilter ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Safari does not always update the duotone filter when the duotone\r\n\t\t// colors are changed. When using Safari, force the block element to be\r\n\t\t// repainted by the browser to ensure any changes are reflected\r\n\t\t// visually. This logic matches that used on the site frontend in\r\n\t\t// `block-supports/duotone.php`.\r\n\t\tif ( blockElement && isSafari ) {\r\n\t\t\tconst display = blockElement.style.display;\r\n\t\t\t// Switch to `inline-block` to force a repaint. In the editor,\r\n\t\t\t// `inline-block` is used instead of `none` to ensure that scroll\r\n\t\t\t// position is not affected, as `none` results in the editor\r\n\t\t\t// scrolling to the top of the block.\r\n\t\t\tblockElement.style.display = 'inline-block';\r\n\t\t\t// Simply accessing el.offsetHeight flushes layout and style changes\r\n\t\t\t// in WebKit without having to wait for setTimeout.\r\n\t\t\t// eslint-disable-next-line no-unused-expressions\r\n\t\t\tblockElement.offsetHeight;\r\n\t\t\tblockElement.style.display = display;\r\n\t\t}\r\n\t\t// `colors` must be a dependency so this effect runs when the colors\r\n\t\t// change in Safari.\r\n\t}, [ isValidFilter, blockElement, colors ] );\r\n}\r\n\r\nfunction useBlockProps( { clientId, name, style } ) {\r\n\tconst id = useInstanceId( useBlockProps );\r\n\tconst selector = useMemo( () => {\r\n\t\tconst blockType = getBlockType( name );\r\n\r\n\t\tif ( blockType ) {\r\n\t\t\t// Backwards compatibility for `supports.color.__experimentalDuotone`\r\n\t\t\t// is provided via the `block_type_metadata_settings` filter. If\r\n\t\t\t// `supports.filter.duotone` has not been set and the\r\n\t\t\t// experimental property has been, the experimental property\r\n\t\t\t// value is copied into `supports.filter.duotone`.\r\n\t\t\tconst duotoneSupport = getBlockSupport(\r\n\t\t\t\tblockType,\r\n\t\t\t\t'filter.duotone',\r\n\t\t\t\tfalse\r\n\t\t\t);\r\n\t\t\tif ( ! duotoneSupport ) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\t// If the experimental duotone support was set, that value is\r\n\t\t\t// to be treated as a selector and requires scoping.\r\n\t\t\tconst experimentalDuotone = getBlockSupport(\r\n\t\t\t\tblockType,\r\n\t\t\t\t'color.__experimentalDuotone',\r\n\t\t\t\tfalse\r\n\t\t\t);\r\n\t\t\tif ( experimentalDuotone ) {\r\n\t\t\t\tconst rootSelector = getBlockCSSSelector( blockType );\r\n\t\t\t\treturn typeof experimentalDuotone === 'string'\r\n\t\t\t\t\t? scopeSelector( rootSelector, experimentalDuotone )\r\n\t\t\t\t\t: rootSelector;\r\n\t\t\t}\r\n\r\n\t\t\t// Regular filter.duotone support uses filter.duotone selectors with fallbacks.\r\n\t\t\treturn getBlockCSSSelector( blockType, 'filter.duotone', {\r\n\t\t\t\tfallback: true,\r\n\t\t\t} );\r\n\t\t}\r\n\t}, [ name ] );\r\n\r\n\tconst attribute = style?.color?.duotone;\r\n\r\n\tconst filterClass = `wp-duotone-${ id }`;\r\n\r\n\tconst shouldRender = selector && attribute;\r\n\r\n\tuseDuotoneStyles( {\r\n\t\tclientId,\r\n\t\tid: filterClass,\r\n\t\tselector,\r\n\t\tattribute,\r\n\t} );\r\n\r\n\treturn {\r\n\t\tclassName: shouldRender ? filterClass : '',\r\n\t};\r\n}\r\n\r\naddFilter(\r\n\t'blocks.registerBlockType',\r\n\t'core/editor/duotone/add-attributes',\r\n\taddDuotoneAttributes\r\n);\r\n"],"mappings":"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","ignoreList":[]}