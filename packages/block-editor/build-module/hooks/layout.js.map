{"version":3,"names":["clsx","createHigherOrderComponent","useInstanceId","addFilter","getBlockSupport","hasBlockSupport","useSelect","Button","ButtonGroup","ToggleControl","PanelBody","privateApis","componentsPrivateApis","__","store","blockEditorStore","InspectorControls","useSettings","getLayoutType","getLayoutTypes","useBlockEditingMode","LAYOUT_DEFINITIONS","useBlockSettings","useStyleOverride","unlock","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","layoutBlockSupportKey","kebabCase","hasLayoutBlockSupport","blockName","useLayoutClasses","blockAttributes","layout","default","defaultBlockLayout","usedLayout","inherit","contentSize","wideSize","type","layoutClassnames","className","baseClassName","splitBlockName","split","fullBlockName","pop","join","compoundClassName","push","hasGlobalPadding","select","getSettings","__experimentalFeatures","useRootPaddingAwareAlignments","orientation","justifyContent","flexWrap","useLayoutStyles","selector","style","fullLayoutType","blockGapSupport","hasBlockGapSupport","getLayoutStyle","LayoutPanelPure","setAttributes","name","clientId","settings","layoutSettings","themeSupportsLayout","supportsLayout","blockEditingMode","layoutBlockSupport","blockSupportAndThemeSettings","allowSwitching","allowEditing","allowInheriting","blockSupportAndLayout","defaultType","blockLayoutType","showInheritToggle","layoutType","constrainedType","displayControlsForLegacyLayouts","hasContentSizeOrLegacySettings","onChangeType","newType","onChangeLayout","newLayout","children","title","__nextHasNoMarginBottom","label","checked","onChange","help","LayoutTypeSwitcher","inspectorControls","toolBarControls","shareWithChildBlocks","edit","attributeKeys","hasSupport","map","__next40pxDefaultSize","isPressed","onClick","addAttribute","_settings$attributes$","attributes","BlockWithLayoutStyles","block","BlockListBlock","props","layoutClasses","id","selectorPrefix","css","layoutClassNames","__unstableLayoutClassNames","withLayoutStyles","blockSupportsLayout","extraProps","getBlockSettings","disableLayoutStyles","undefined"],"sources":["@wordpress/block-editor/src/hooks/layout.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { createHigherOrderComponent, useInstanceId } from '@wordpress/compose';\r\nimport { addFilter } from '@wordpress/hooks';\r\nimport { getBlockSupport, hasBlockSupport } from '@wordpress/blocks';\r\nimport { useSelect } from '@wordpress/data';\r\nimport {\r\n\tButton,\r\n\tButtonGroup,\r\n\tToggleControl,\r\n\tPanelBody,\r\n\tprivateApis as componentsPrivateApis,\r\n} from '@wordpress/components';\r\nimport { __ } from '@wordpress/i18n';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as blockEditorStore } from '../store';\r\nimport { InspectorControls } from '../components';\r\nimport { useSettings } from '../components/use-settings';\r\nimport { getLayoutType, getLayoutTypes } from '../layouts';\r\nimport { useBlockEditingMode } from '../components/block-editing-mode';\r\nimport { LAYOUT_DEFINITIONS } from '../layouts/definitions';\r\nimport { useBlockSettings, useStyleOverride } from './utils';\r\nimport { unlock } from '../lock-unlock';\r\n\r\nconst layoutBlockSupportKey = 'layout';\r\nconst { kebabCase } = unlock( componentsPrivateApis );\r\n\r\nfunction hasLayoutBlockSupport( blockName ) {\r\n\treturn (\r\n\t\thasBlockSupport( blockName, 'layout' ) ||\r\n\t\thasBlockSupport( blockName, '__experimentalLayout' )\r\n\t);\r\n}\r\n\r\n/**\r\n * Generates the utility classnames for the given block's layout attributes.\r\n *\r\n * @param { Object } blockAttributes Block attributes.\r\n * @param { string } blockName       Block name.\r\n *\r\n * @return { Array } Array of CSS classname strings.\r\n */\r\nexport function useLayoutClasses( blockAttributes = {}, blockName = '' ) {\r\n\tconst { layout } = blockAttributes;\r\n\tconst { default: defaultBlockLayout } =\r\n\t\tgetBlockSupport( blockName, layoutBlockSupportKey ) || {};\r\n\tconst usedLayout =\r\n\t\tlayout?.inherit || layout?.contentSize || layout?.wideSize\r\n\t\t\t? { ...layout, type: 'constrained' }\r\n\t\t\t: layout || defaultBlockLayout || {};\r\n\r\n\tconst layoutClassnames = [];\r\n\r\n\tif ( LAYOUT_DEFINITIONS[ usedLayout?.type || 'default' ]?.className ) {\r\n\t\tconst baseClassName =\r\n\t\t\tLAYOUT_DEFINITIONS[ usedLayout?.type || 'default' ]?.className;\r\n\t\tconst splitBlockName = blockName.split( '/' );\r\n\t\tconst fullBlockName =\r\n\t\t\tsplitBlockName[ 0 ] === 'core'\r\n\t\t\t\t? splitBlockName.pop()\r\n\t\t\t\t: splitBlockName.join( '-' );\r\n\t\tconst compoundClassName = `wp-block-${ fullBlockName }-${ baseClassName }`;\r\n\t\tlayoutClassnames.push( baseClassName, compoundClassName );\r\n\t}\r\n\r\n\tconst hasGlobalPadding = useSelect(\r\n\t\t( select ) => {\r\n\t\t\treturn (\r\n\t\t\t\t( usedLayout?.inherit ||\r\n\t\t\t\t\tusedLayout?.contentSize ||\r\n\t\t\t\t\tusedLayout?.type === 'constrained' ) &&\r\n\t\t\t\tselect( blockEditorStore ).getSettings().__experimentalFeatures\r\n\t\t\t\t\t?.useRootPaddingAwareAlignments\r\n\t\t\t);\r\n\t\t},\r\n\t\t[ usedLayout?.contentSize, usedLayout?.inherit, usedLayout?.type ]\r\n\t);\r\n\r\n\tif ( hasGlobalPadding ) {\r\n\t\tlayoutClassnames.push( 'has-global-padding' );\r\n\t}\r\n\r\n\tif ( usedLayout?.orientation ) {\r\n\t\tlayoutClassnames.push( `is-${ kebabCase( usedLayout.orientation ) }` );\r\n\t}\r\n\r\n\tif ( usedLayout?.justifyContent ) {\r\n\t\tlayoutClassnames.push(\r\n\t\t\t`is-content-justification-${ kebabCase(\r\n\t\t\t\tusedLayout.justifyContent\r\n\t\t\t) }`\r\n\t\t);\r\n\t}\r\n\r\n\tif ( usedLayout?.flexWrap && usedLayout.flexWrap === 'nowrap' ) {\r\n\t\tlayoutClassnames.push( 'is-nowrap' );\r\n\t}\r\n\r\n\treturn layoutClassnames;\r\n}\r\n\r\n/**\r\n * Generates a CSS rule with the given block's layout styles.\r\n *\r\n * @param { Object } blockAttributes Block attributes.\r\n * @param { string } blockName       Block name.\r\n * @param { string } selector        A selector to use in generating the CSS rule.\r\n *\r\n * @return { string } CSS rule.\r\n */\r\nexport function useLayoutStyles( blockAttributes = {}, blockName, selector ) {\r\n\tconst { layout = {}, style = {} } = blockAttributes;\r\n\t// Update type for blocks using legacy layouts.\r\n\tconst usedLayout =\r\n\t\tlayout?.inherit || layout?.contentSize || layout?.wideSize\r\n\t\t\t? { ...layout, type: 'constrained' }\r\n\t\t\t: layout || {};\r\n\tconst fullLayoutType = getLayoutType( usedLayout?.type || 'default' );\r\n\tconst [ blockGapSupport ] = useSettings( 'spacing.blockGap' );\r\n\tconst hasBlockGapSupport = blockGapSupport !== null;\r\n\treturn fullLayoutType?.getLayoutStyle?.( {\r\n\t\tblockName,\r\n\t\tselector,\r\n\t\tlayout,\r\n\t\tstyle,\r\n\t\thasBlockGapSupport,\r\n\t} );\r\n}\r\n\r\nfunction LayoutPanelPure( {\r\n\tlayout,\r\n\tsetAttributes,\r\n\tname: blockName,\r\n\tclientId,\r\n} ) {\r\n\tconst settings = useBlockSettings( blockName );\r\n\t// Block settings come from theme.json under settings.[blockName].\r\n\tconst { layout: layoutSettings } = settings;\r\n\tconst { themeSupportsLayout } = useSelect( ( select ) => {\r\n\t\tconst { getSettings } = select( blockEditorStore );\r\n\t\treturn {\r\n\t\t\tthemeSupportsLayout: getSettings().supportsLayout,\r\n\t\t};\r\n\t}, [] );\r\n\tconst blockEditingMode = useBlockEditingMode();\r\n\r\n\tif ( blockEditingMode !== 'default' ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Layout block support comes from the block's block.json.\r\n\tconst layoutBlockSupport = getBlockSupport(\r\n\t\tblockName,\r\n\t\tlayoutBlockSupportKey,\r\n\t\t{}\r\n\t);\r\n\tconst blockSupportAndThemeSettings = {\r\n\t\t...layoutSettings,\r\n\t\t...layoutBlockSupport,\r\n\t};\r\n\tconst {\r\n\t\tallowSwitching,\r\n\t\tallowEditing = true,\r\n\t\tallowInheriting = true,\r\n\t\tdefault: defaultBlockLayout,\r\n\t} = blockSupportAndThemeSettings;\r\n\r\n\tif ( ! allowEditing ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/*\r\n\t * Try to find the layout type from either the\r\n\t * block's layout settings or any saved layout config.\r\n\t */\r\n\tconst blockSupportAndLayout = {\r\n\t\t...layoutBlockSupport,\r\n\t\t...layout,\r\n\t};\r\n\tconst { type, default: { type: defaultType = 'default' } = {} } =\r\n\t\tblockSupportAndLayout;\r\n\tconst blockLayoutType = type || defaultType;\r\n\r\n\t// Only show the inherit toggle if it's supported,\r\n\t// and either the default / flow or the constrained layout type is in use, as the toggle switches from one to the other.\r\n\tconst showInheritToggle = !! (\r\n\t\tallowInheriting &&\r\n\t\t( ! blockLayoutType ||\r\n\t\t\tblockLayoutType === 'default' ||\r\n\t\t\tblockLayoutType === 'constrained' ||\r\n\t\t\tblockSupportAndLayout.inherit )\r\n\t);\r\n\r\n\tconst usedLayout = layout || defaultBlockLayout || {};\r\n\tconst { inherit = false, contentSize = null } = usedLayout;\r\n\t/**\r\n\t * `themeSupportsLayout` is only relevant to the `default/flow` or\r\n\t * `constrained` layouts and it should not be taken into account when other\r\n\t * `layout` types are used.\r\n\t */\r\n\tif (\r\n\t\t( blockLayoutType === 'default' ||\r\n\t\t\tblockLayoutType === 'constrained' ) &&\r\n\t\t! themeSupportsLayout\r\n\t) {\r\n\t\treturn null;\r\n\t}\r\n\tconst layoutType = getLayoutType( blockLayoutType );\r\n\tconst constrainedType = getLayoutType( 'constrained' );\r\n\tconst displayControlsForLegacyLayouts =\r\n\t\t! usedLayout.type && ( contentSize || inherit );\r\n\tconst hasContentSizeOrLegacySettings = !! inherit || !! contentSize;\r\n\r\n\tconst onChangeType = ( newType ) =>\r\n\t\tsetAttributes( { layout: { type: newType } } );\r\n\tconst onChangeLayout = ( newLayout ) =>\r\n\t\tsetAttributes( { layout: newLayout } );\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<InspectorControls>\r\n\t\t\t\t<PanelBody title={ __( 'Layout' ) }>\r\n\t\t\t\t\t{ showInheritToggle && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<ToggleControl\r\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\r\n\t\t\t\t\t\t\t\tclassName=\"block-editor-hooks__toggle-control\"\r\n\t\t\t\t\t\t\t\tlabel={ __( 'Inner blocks use content width' ) }\r\n\t\t\t\t\t\t\t\tchecked={\r\n\t\t\t\t\t\t\t\t\tlayoutType?.name === 'constrained' ||\r\n\t\t\t\t\t\t\t\t\thasContentSizeOrLegacySettings\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonChange={ () =>\r\n\t\t\t\t\t\t\t\t\tsetAttributes( {\r\n\t\t\t\t\t\t\t\t\t\tlayout: {\r\n\t\t\t\t\t\t\t\t\t\t\ttype:\r\n\t\t\t\t\t\t\t\t\t\t\t\tlayoutType?.name ===\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t'constrained' ||\r\n\t\t\t\t\t\t\t\t\t\t\t\thasContentSizeOrLegacySettings\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'default'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'constrained',\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\thelp={\r\n\t\t\t\t\t\t\t\t\tlayoutType?.name === 'constrained' ||\r\n\t\t\t\t\t\t\t\t\thasContentSizeOrLegacySettings\r\n\t\t\t\t\t\t\t\t\t\t? __(\r\n\t\t\t\t\t\t\t\t\t\t\t\t'Nested blocks use content width with options for full and wide widths.'\r\n\t\t\t\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t\t\t\t: __(\r\n\t\t\t\t\t\t\t\t\t\t\t\t'Nested blocks will fill the width of this container. Toggle to constrain.'\r\n\t\t\t\t\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) }\r\n\r\n\t\t\t\t\t{ ! inherit && allowSwitching && (\r\n\t\t\t\t\t\t<LayoutTypeSwitcher\r\n\t\t\t\t\t\t\ttype={ blockLayoutType }\r\n\t\t\t\t\t\t\tonChange={ onChangeType }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) }\r\n\r\n\t\t\t\t\t{ layoutType && layoutType.name !== 'default' && (\r\n\t\t\t\t\t\t<layoutType.inspectorControls\r\n\t\t\t\t\t\t\tlayout={ usedLayout }\r\n\t\t\t\t\t\t\tonChange={ onChangeLayout }\r\n\t\t\t\t\t\t\tlayoutBlockSupport={ blockSupportAndThemeSettings }\r\n\t\t\t\t\t\t\tname={ blockName }\r\n\t\t\t\t\t\t\tclientId={ clientId }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) }\r\n\t\t\t\t\t{ constrainedType && displayControlsForLegacyLayouts && (\r\n\t\t\t\t\t\t<constrainedType.inspectorControls\r\n\t\t\t\t\t\t\tlayout={ usedLayout }\r\n\t\t\t\t\t\t\tonChange={ onChangeLayout }\r\n\t\t\t\t\t\t\tlayoutBlockSupport={ blockSupportAndThemeSettings }\r\n\t\t\t\t\t\t\tname={ blockName }\r\n\t\t\t\t\t\t\tclientId={ clientId }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) }\r\n\t\t\t\t</PanelBody>\r\n\t\t\t</InspectorControls>\r\n\t\t\t{ ! inherit && layoutType && (\r\n\t\t\t\t<layoutType.toolBarControls\r\n\t\t\t\t\tlayout={ usedLayout }\r\n\t\t\t\t\tonChange={ onChangeLayout }\r\n\t\t\t\t\tlayoutBlockSupport={ layoutBlockSupport }\r\n\t\t\t\t\tname={ blockName }\r\n\t\t\t\t\tclientId={ clientId }\r\n\t\t\t\t/>\r\n\t\t\t) }\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default {\r\n\tshareWithChildBlocks: true,\r\n\tedit: LayoutPanelPure,\r\n\tattributeKeys: [ 'layout' ],\r\n\thasSupport( name ) {\r\n\t\treturn hasLayoutBlockSupport( name );\r\n\t},\r\n};\r\n\r\nfunction LayoutTypeSwitcher( { type, onChange } ) {\r\n\treturn (\r\n\t\t<ButtonGroup>\r\n\t\t\t{ getLayoutTypes().map( ( { name, label } ) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// TODO: Switch to `true` (40px size) if possible\r\n\t\t\t\t\t\t__next40pxDefaultSize={ false }\r\n\t\t\t\t\t\tkey={ name }\r\n\t\t\t\t\t\tisPressed={ type === name }\r\n\t\t\t\t\t\tonClick={ () => onChange( name ) }\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{ label }\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t);\r\n\t\t\t} ) }\r\n\t\t</ButtonGroup>\r\n\t);\r\n}\r\n\r\n/**\r\n * Filters registered block settings, extending attributes to include `layout`.\r\n *\r\n * @param {Object} settings Original block settings.\r\n *\r\n * @return {Object} Filtered block settings.\r\n */\r\nexport function addAttribute( settings ) {\r\n\tif ( 'type' in ( settings.attributes?.layout ?? {} ) ) {\r\n\t\treturn settings;\r\n\t}\r\n\tif ( hasLayoutBlockSupport( settings ) ) {\r\n\t\tsettings.attributes = {\r\n\t\t\t...settings.attributes,\r\n\t\t\tlayout: {\r\n\t\t\t\ttype: 'object',\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\treturn settings;\r\n}\r\n\r\nfunction BlockWithLayoutStyles( {\r\n\tblock: BlockListBlock,\r\n\tprops,\r\n\tblockGapSupport,\r\n\tlayoutClasses,\r\n} ) {\r\n\tconst { name, attributes } = props;\r\n\tconst id = useInstanceId( BlockListBlock );\r\n\tconst { layout } = attributes;\r\n\tconst { default: defaultBlockLayout } =\r\n\t\tgetBlockSupport( name, layoutBlockSupportKey ) || {};\r\n\tconst usedLayout =\r\n\t\tlayout?.inherit || layout?.contentSize || layout?.wideSize\r\n\t\t\t? { ...layout, type: 'constrained' }\r\n\t\t\t: layout || defaultBlockLayout || {};\r\n\r\n\tconst selectorPrefix = `wp-container-${ kebabCase( name ) }-is-layout-`;\r\n\t// Higher specificity to override defaults from theme.json.\r\n\tconst selector = `.${ selectorPrefix }${ id }`;\r\n\tconst hasBlockGapSupport = blockGapSupport !== null;\r\n\r\n\t// Get CSS string for the current layout type.\r\n\t// The CSS and `style` element is only output if it is not empty.\r\n\tconst fullLayoutType = getLayoutType( usedLayout?.type || 'default' );\r\n\tconst css = fullLayoutType?.getLayoutStyle?.( {\r\n\t\tblockName: name,\r\n\t\tselector,\r\n\t\tlayout: usedLayout,\r\n\t\tstyle: attributes?.style,\r\n\t\thasBlockGapSupport,\r\n\t} );\r\n\r\n\t// Attach a `wp-container-` id-based class name as well as a layout class name such as `is-layout-flex`.\r\n\tconst layoutClassNames = clsx(\r\n\t\t{\r\n\t\t\t[ `${ selectorPrefix }${ id }` ]: !! css, // Only attach a container class if there is generated CSS to be attached.\r\n\t\t},\r\n\t\tlayoutClasses\r\n\t);\r\n\r\n\tuseStyleOverride( { css } );\r\n\r\n\treturn (\r\n\t\t<BlockListBlock\r\n\t\t\t{ ...props }\r\n\t\t\t__unstableLayoutClassNames={ layoutClassNames }\r\n\t\t/>\r\n\t);\r\n}\r\n\r\n/**\r\n * Override the default block element to add the layout styles.\r\n *\r\n * @param {Function} BlockListBlock Original component.\r\n *\r\n * @return {Function} Wrapped component.\r\n */\r\nexport const withLayoutStyles = createHigherOrderComponent(\r\n\t( BlockListBlock ) => ( props ) => {\r\n\t\tconst { clientId, name, attributes } = props;\r\n\t\tconst blockSupportsLayout = hasLayoutBlockSupport( name );\r\n\t\tconst layoutClasses = useLayoutClasses( attributes, name );\r\n\t\tconst extraProps = useSelect(\r\n\t\t\t( select ) => {\r\n\t\t\t\t// The callback returns early to avoid block editor subscription.\r\n\t\t\t\tif ( ! blockSupportsLayout ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst { getSettings, getBlockSettings } = unlock(\r\n\t\t\t\t\tselect( blockEditorStore )\r\n\t\t\t\t);\r\n\t\t\t\tconst { disableLayoutStyles } = getSettings();\r\n\r\n\t\t\t\tif ( disableLayoutStyles ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst [ blockGapSupport ] = getBlockSettings(\r\n\t\t\t\t\tclientId,\r\n\t\t\t\t\t'spacing.blockGap'\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn { blockGapSupport };\r\n\t\t\t},\r\n\t\t\t[ blockSupportsLayout, clientId ]\r\n\t\t);\r\n\r\n\t\tif ( ! extraProps ) {\r\n\t\t\treturn (\r\n\t\t\t\t<BlockListBlock\r\n\t\t\t\t\t{ ...props }\r\n\t\t\t\t\t__unstableLayoutClassNames={\r\n\t\t\t\t\t\tblockSupportsLayout ? layoutClasses : undefined\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<BlockWithLayoutStyles\r\n\t\t\t\tblock={ BlockListBlock }\r\n\t\t\t\tprops={ props }\r\n\t\t\t\tlayoutClasses={ layoutClasses }\r\n\t\t\t\t{ ...extraProps }\r\n\t\t\t/>\r\n\t\t);\r\n\t},\r\n\t'withLayoutStyles'\r\n);\r\n\r\naddFilter(\r\n\t'blocks.registerBlockType',\r\n\t'core/layout/addAttribute',\r\n\taddAttribute\r\n);\r\naddFilter(\r\n\t'editor.BlockListBlock',\r\n\t'core/editor/layout/with-layout-styles',\r\n\twithLayoutStyles\r\n);\r\n"],"mappings":"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","ignoreList":[]}