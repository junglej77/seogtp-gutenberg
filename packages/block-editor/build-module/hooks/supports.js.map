{"version":3,"names":["getBlockSupport","hasBlockSupport","Platform","ALIGN_SUPPORT_KEY","ALIGN_WIDE_SUPPORT_KEY","BORDER_SUPPORT_KEY","COLOR_SUPPORT_KEY","CUSTOM_CLASS_NAME_SUPPORT_KEY","FONT_FAMILY_SUPPORT_KEY","FONT_SIZE_SUPPORT_KEY","LINE_HEIGHT_SUPPORT_KEY","FONT_STYLE_SUPPORT_KEY","FONT_WEIGHT_SUPPORT_KEY","TEXT_ALIGN_SUPPORT_KEY","TEXT_COLUMNS_SUPPORT_KEY","TEXT_DECORATION_SUPPORT_KEY","WRITING_MODE_SUPPORT_KEY","TEXT_TRANSFORM_SUPPORT_KEY","LETTER_SPACING_SUPPORT_KEY","LAYOUT_SUPPORT_KEY","TYPOGRAPHY_SUPPORT_KEYS","EFFECTS_SUPPORT_KEYS","SPACING_SUPPORT_KEY","styleSupportKeys","hasAlignSupport","nameOrType","getAlignSupport","hasAlignWideSupport","getAlignWideSupport","hasBorderSupport","feature","OS","support","color","radius","width","style","getBorderSupport","hasColorSupport","colorSupport","link","gradient","background","text","hasLinkColorSupport","hasGradientSupport","gradients","hasBackgroundColorSupport","hasTextAlignSupport","getTextAlignSupport","hasTextColorSupport","getColorSupport","hasCustomClassNameSupport","getCustomClassNameSupport","hasFontFamilySupport","getFontFamilySupport","hasFontSizeSupport","getFontSizeSupport","hasLayoutSupport","getLayoutSupport","hasStyleSupport","some","key"],"sources":["@wordpress/block-editor/src/hooks/supports.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { getBlockSupport, hasBlockSupport } from '@wordpress/blocks';\r\nimport { Platform } from '@wordpress/element';\r\n\r\nconst ALIGN_SUPPORT_KEY = 'align';\r\nconst ALIGN_WIDE_SUPPORT_KEY = 'alignWide';\r\nconst BORDER_SUPPORT_KEY = '__experimentalBorder';\r\nconst COLOR_SUPPORT_KEY = 'color';\r\nconst CUSTOM_CLASS_NAME_SUPPORT_KEY = 'customClassName';\r\nconst FONT_FAMILY_SUPPORT_KEY = 'typography.__experimentalFontFamily';\r\nconst FONT_SIZE_SUPPORT_KEY = 'typography.fontSize';\r\nconst LINE_HEIGHT_SUPPORT_KEY = 'typography.lineHeight';\r\n/**\r\n * Key within block settings' support array indicating support for font style.\r\n */\r\nconst FONT_STYLE_SUPPORT_KEY = 'typography.__experimentalFontStyle';\r\n/**\r\n * Key within block settings' support array indicating support for font weight.\r\n */\r\nconst FONT_WEIGHT_SUPPORT_KEY = 'typography.__experimentalFontWeight';\r\n/**\r\n * Key within block settings' supports array indicating support for text\r\n * align e.g. settings found in `block.json`.\r\n */\r\nconst TEXT_ALIGN_SUPPORT_KEY = 'typography.textAlign';\r\n/**\r\n * Key within block settings' supports array indicating support for text\r\n * columns e.g. settings found in `block.json`.\r\n */\r\nconst TEXT_COLUMNS_SUPPORT_KEY = 'typography.textColumns';\r\n/**\r\n * Key within block settings' supports array indicating support for text\r\n * decorations e.g. settings found in `block.json`.\r\n */\r\nconst TEXT_DECORATION_SUPPORT_KEY = 'typography.__experimentalTextDecoration';\r\n/**\r\n * Key within block settings' supports array indicating support for writing mode\r\n * e.g. settings found in `block.json`.\r\n */\r\nconst WRITING_MODE_SUPPORT_KEY = 'typography.__experimentalWritingMode';\r\n/**\r\n * Key within block settings' supports array indicating support for text\r\n * transforms e.g. settings found in `block.json`.\r\n */\r\nconst TEXT_TRANSFORM_SUPPORT_KEY = 'typography.__experimentalTextTransform';\r\n\r\n/**\r\n * Key within block settings' supports array indicating support for letter-spacing\r\n * e.g. settings found in `block.json`.\r\n */\r\nconst LETTER_SPACING_SUPPORT_KEY = 'typography.__experimentalLetterSpacing';\r\nconst LAYOUT_SUPPORT_KEY = 'layout';\r\nconst TYPOGRAPHY_SUPPORT_KEYS = [\r\n\tLINE_HEIGHT_SUPPORT_KEY,\r\n\tFONT_SIZE_SUPPORT_KEY,\r\n\tFONT_STYLE_SUPPORT_KEY,\r\n\tFONT_WEIGHT_SUPPORT_KEY,\r\n\tFONT_FAMILY_SUPPORT_KEY,\r\n\tTEXT_ALIGN_SUPPORT_KEY,\r\n\tTEXT_COLUMNS_SUPPORT_KEY,\r\n\tTEXT_DECORATION_SUPPORT_KEY,\r\n\tTEXT_TRANSFORM_SUPPORT_KEY,\r\n\tWRITING_MODE_SUPPORT_KEY,\r\n\tLETTER_SPACING_SUPPORT_KEY,\r\n];\r\nconst EFFECTS_SUPPORT_KEYS = [ 'shadow' ];\r\nconst SPACING_SUPPORT_KEY = 'spacing';\r\nconst styleSupportKeys = [\r\n\t...EFFECTS_SUPPORT_KEYS,\r\n\t...TYPOGRAPHY_SUPPORT_KEYS,\r\n\tBORDER_SUPPORT_KEY,\r\n\tCOLOR_SUPPORT_KEY,\r\n\tSPACING_SUPPORT_KEY,\r\n];\r\n\r\n/**\r\n * Returns true if the block defines support for align.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {boolean} Whether the block supports the feature.\r\n */\r\nexport const hasAlignSupport = ( nameOrType ) =>\r\n\thasBlockSupport( nameOrType, ALIGN_SUPPORT_KEY );\r\n\r\n/**\r\n * Returns the block support value for align, if defined.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {unknown} The block support value.\r\n */\r\nexport const getAlignSupport = ( nameOrType ) =>\r\n\tgetBlockSupport( nameOrType, ALIGN_SUPPORT_KEY );\r\n\r\n/**\r\n * Returns true if the block defines support for align wide.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {boolean} Whether the block supports the feature.\r\n */\r\nexport const hasAlignWideSupport = ( nameOrType ) =>\r\n\thasBlockSupport( nameOrType, ALIGN_WIDE_SUPPORT_KEY );\r\n\r\n/**\r\n * Returns the block support value for align wide, if defined.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {unknown} The block support value.\r\n */\r\nexport const getAlignWideSupport = ( nameOrType ) =>\r\n\tgetBlockSupport( nameOrType, ALIGN_WIDE_SUPPORT_KEY );\r\n\r\n/**\r\n * Determine whether there is block support for border properties.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @param {string}        feature    Border feature to check support for.\r\n *\r\n * @return {boolean} Whether there is support.\r\n */\r\nexport function hasBorderSupport( nameOrType, feature = 'any' ) {\r\n\tif ( Platform.OS !== 'web' ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst support = getBlockSupport( nameOrType, BORDER_SUPPORT_KEY );\r\n\r\n\tif ( support === true ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif ( feature === 'any' ) {\r\n\t\treturn !! (\r\n\t\t\tsupport?.color ||\r\n\t\t\tsupport?.radius ||\r\n\t\t\tsupport?.width ||\r\n\t\t\tsupport?.style\r\n\t\t);\r\n\t}\r\n\r\n\treturn !! support?.[ feature ];\r\n}\r\n\r\n/**\r\n * Get block support for border properties.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @param {string}        feature    Border feature to get.\r\n *\r\n * @return {unknown} The block support.\r\n */\r\nexport const getBorderSupport = ( nameOrType, feature ) =>\r\n\tgetBlockSupport( nameOrType, [ BORDER_SUPPORT_KEY, feature ] );\r\n\r\n/**\r\n * Returns true if the block defines support for color.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {boolean} Whether the block supports the feature.\r\n */\r\nexport const hasColorSupport = ( nameOrType ) => {\r\n\tconst colorSupport = getBlockSupport( nameOrType, COLOR_SUPPORT_KEY );\r\n\treturn (\r\n\t\tcolorSupport &&\r\n\t\t( colorSupport.link === true ||\r\n\t\t\tcolorSupport.gradient === true ||\r\n\t\t\tcolorSupport.background !== false ||\r\n\t\t\tcolorSupport.text !== false )\r\n\t);\r\n};\r\n\r\n/**\r\n * Returns true if the block defines support for link color.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {boolean} Whether the block supports the feature.\r\n */\r\nexport const hasLinkColorSupport = ( nameOrType ) => {\r\n\tif ( Platform.OS !== 'web' ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst colorSupport = getBlockSupport( nameOrType, COLOR_SUPPORT_KEY );\r\n\r\n\treturn (\r\n\t\tcolorSupport !== null &&\r\n\t\ttypeof colorSupport === 'object' &&\r\n\t\t!! colorSupport.link\r\n\t);\r\n};\r\n\r\n/**\r\n * Returns true if the block defines support for gradient color.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {boolean} Whether the block supports the feature.\r\n */\r\nexport const hasGradientSupport = ( nameOrType ) => {\r\n\tconst colorSupport = getBlockSupport( nameOrType, COLOR_SUPPORT_KEY );\r\n\r\n\treturn (\r\n\t\tcolorSupport !== null &&\r\n\t\ttypeof colorSupport === 'object' &&\r\n\t\t!! colorSupport.gradients\r\n\t);\r\n};\r\n\r\n/**\r\n * Returns true if the block defines support for background color.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {boolean} Whether the block supports the feature.\r\n */\r\nexport const hasBackgroundColorSupport = ( nameOrType ) => {\r\n\tconst colorSupport = getBlockSupport( nameOrType, COLOR_SUPPORT_KEY );\r\n\r\n\treturn colorSupport && colorSupport.background !== false;\r\n};\r\n\r\n/**\r\n * Returns true if the block defines support for text-align.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {boolean} Whether the block supports the feature.\r\n */\r\nexport const hasTextAlignSupport = ( nameOrType ) =>\r\n\thasBlockSupport( nameOrType, TEXT_ALIGN_SUPPORT_KEY );\r\n\r\n/**\r\n * Returns the block support value for text-align, if defined.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {unknown} The block support value.\r\n */\r\nexport const getTextAlignSupport = ( nameOrType ) =>\r\n\tgetBlockSupport( nameOrType, TEXT_ALIGN_SUPPORT_KEY );\r\n\r\n/**\r\n * Returns true if the block defines support for background color.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {boolean} Whether the block supports the feature.\r\n */\r\nexport const hasTextColorSupport = ( nameOrType ) => {\r\n\tconst colorSupport = getBlockSupport( nameOrType, COLOR_SUPPORT_KEY );\r\n\r\n\treturn colorSupport && colorSupport.text !== false;\r\n};\r\n\r\n/**\r\n * Get block support for color properties.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @param {string}        feature    Color feature to get.\r\n *\r\n * @return {unknown} The block support.\r\n */\r\nexport const getColorSupport = ( nameOrType, feature ) =>\r\n\tgetBlockSupport( nameOrType, [ COLOR_SUPPORT_KEY, feature ] );\r\n\r\n/**\r\n * Returns true if the block defines support for custom class name.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {boolean} Whether the block supports the feature.\r\n */\r\nexport const hasCustomClassNameSupport = ( nameOrType ) =>\r\n\thasBlockSupport( nameOrType, CUSTOM_CLASS_NAME_SUPPORT_KEY, true );\r\n\r\n/**\r\n * Returns the block support value for custom class name, if defined.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {unknown} The block support value.\r\n */\r\nexport const getCustomClassNameSupport = ( nameOrType ) =>\r\n\tgetBlockSupport( nameOrType, CUSTOM_CLASS_NAME_SUPPORT_KEY, true );\r\n\r\n/**\r\n * Returns true if the block defines support for font family.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {boolean} Whether the block supports the feature.\r\n */\r\nexport const hasFontFamilySupport = ( nameOrType ) =>\r\n\thasBlockSupport( nameOrType, FONT_FAMILY_SUPPORT_KEY );\r\n\r\n/**\r\n * Returns the block support value for font family, if defined.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {unknown} The block support value.\r\n */\r\nexport const getFontFamilySupport = ( nameOrType ) =>\r\n\tgetBlockSupport( nameOrType, FONT_FAMILY_SUPPORT_KEY );\r\n\r\n/**\r\n * Returns true if the block defines support for font size.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {boolean} Whether the block supports the feature.\r\n */\r\nexport const hasFontSizeSupport = ( nameOrType ) =>\r\n\thasBlockSupport( nameOrType, FONT_SIZE_SUPPORT_KEY );\r\n\r\n/**\r\n * Returns the block support value for font size, if defined.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {unknown} The block support value.\r\n */\r\nexport const getFontSizeSupport = ( nameOrType ) =>\r\n\tgetBlockSupport( nameOrType, FONT_SIZE_SUPPORT_KEY );\r\n\r\n/**\r\n * Returns true if the block defines support for layout.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {boolean} Whether the block supports the feature.\r\n */\r\nexport const hasLayoutSupport = ( nameOrType ) =>\r\n\thasBlockSupport( nameOrType, LAYOUT_SUPPORT_KEY );\r\n\r\n/**\r\n * Returns the block support value for layout, if defined.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {unknown} The block support value.\r\n */\r\nexport const getLayoutSupport = ( nameOrType ) =>\r\n\tgetBlockSupport( nameOrType, LAYOUT_SUPPORT_KEY );\r\n\r\n/**\r\n * Returns true if the block defines support for style.\r\n *\r\n * @param {string|Object} nameOrType Block name or type object.\r\n * @return {boolean} Whether the block supports the feature.\r\n */\r\nexport const hasStyleSupport = ( nameOrType ) =>\r\n\tstyleSupportKeys.some( ( key ) => hasBlockSupport( nameOrType, key ) );\r\n"],"mappings":"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","ignoreList":[]}