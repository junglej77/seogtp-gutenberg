{"version":3,"names":["useSelect","memo","PanelBody","__","InspectorControls","useHasTypographyPanel","store","blockEditorStore","LINE_HEIGHT_SUPPORT_KEY","LineHeightEdit","FONT_SIZE_SUPPORT_KEY","FontSizeEdit","jsx","_jsx","jsxs","_jsxs","TYPOGRAPHY_SUPPORT_KEY","TYPOGRAPHY_SUPPORT_KEYS","TypographyPanelPure","clientId","setAttributes","settings","selector","select","style","fontFamily","fontSize","getBlockAttributes","isEnabled","props","attributes","children","title","TypographyPanel"],"sources":["@wordpress/block-editor/src/hooks/typography.native.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useSelect } from '@wordpress/data';\r\nimport { memo } from '@wordpress/element';\r\nimport { PanelBody } from '@wordpress/components';\r\nimport { __ } from '@wordpress/i18n';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport InspectorControls from '../components/inspector-controls';\r\nimport { useHasTypographyPanel } from '../components/global-styles/typography-panel';\r\n\r\nimport { store as blockEditorStore } from '../store';\r\n\r\nimport { LINE_HEIGHT_SUPPORT_KEY, LineHeightEdit } from './line-height';\r\nimport { FONT_SIZE_SUPPORT_KEY, FontSizeEdit } from './font-size';\r\n\r\nexport const TYPOGRAPHY_SUPPORT_KEY = 'typography';\r\nexport const TYPOGRAPHY_SUPPORT_KEYS = [\r\n\tLINE_HEIGHT_SUPPORT_KEY,\r\n\tFONT_SIZE_SUPPORT_KEY,\r\n];\r\n\r\nfunction TypographyPanelPure( { clientId, setAttributes, settings } ) {\r\n\tfunction selector( select ) {\r\n\t\tconst { style, fontFamily, fontSize } =\r\n\t\t\tselect( blockEditorStore ).getBlockAttributes( clientId ) || {};\r\n\t\treturn { style, fontFamily, fontSize };\r\n\t}\r\n\tconst { style, fontSize } = useSelect( selector, [ clientId ] );\r\n\tconst isEnabled = useHasTypographyPanel( settings );\r\n\r\n\tif ( ! isEnabled ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst props = {\r\n\t\tattributes: {\r\n\t\t\tfontSize,\r\n\t\t\tstyle,\r\n\t\t},\r\n\t\tsetAttributes,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<InspectorControls>\r\n\t\t\t<PanelBody title={ __( 'Typography' ) }>\r\n\t\t\t\t<FontSizeEdit { ...props } />\r\n\t\t\t\t<LineHeightEdit { ...props } />\r\n\t\t\t</PanelBody>\r\n\t\t</InspectorControls>\r\n\t);\r\n}\r\n\r\n// We don't want block controls to re-render when typing inside a block. `pure`\r\n// will prevent re-renders unless props change, so only pass the needed props\r\n// and not the whole attributes object.\r\nexport const TypographyPanel = memo( TypographyPanelPure );\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,IAAI,QAAQ,oBAAoB;AACzC,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,EAAE,QAAQ,iBAAiB;;AAEpC;AACA;AACA;AACA,OAAOC,iBAAiB,MAAM,kCAAkC;AAChE,SAASC,qBAAqB,QAAQ,8CAA8C;AAEpF,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,UAAU;AAEpD,SAASC,uBAAuB,EAAEC,cAAc,QAAQ,eAAe;AACvE,SAASC,qBAAqB,EAAEC,YAAY,QAAQ,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElE,OAAO,MAAMC,sBAAsB,GAAG,YAAY;AAClD,OAAO,MAAMC,uBAAuB,GAAG,CACtCT,uBAAuB,EACvBE,qBAAqB,CACrB;AAED,SAASQ,mBAAmBA,CAAE;EAAEC,QAAQ;EAAEC,aAAa;EAAEC;AAAS,CAAC,EAAG;EACrE,SAASC,QAAQA,CAAEC,MAAM,EAAG;IAC3B,MAAM;MAAEC,KAAK;MAAEC,UAAU;MAAEC;IAAS,CAAC,GACpCH,MAAM,CAAEhB,gBAAiB,CAAC,CAACoB,kBAAkB,CAAER,QAAS,CAAC,IAAI,CAAC,CAAC;IAChE,OAAO;MAAEK,KAAK;MAAEC,UAAU;MAAEC;IAAS,CAAC;EACvC;EACA,MAAM;IAAEF,KAAK;IAAEE;EAAS,CAAC,GAAG1B,SAAS,CAAEsB,QAAQ,EAAE,CAAEH,QAAQ,CAAG,CAAC;EAC/D,MAAMS,SAAS,GAAGvB,qBAAqB,CAAEgB,QAAS,CAAC;EAEnD,IAAK,CAAEO,SAAS,EAAG;IAClB,OAAO,IAAI;EACZ;EAEA,MAAMC,KAAK,GAAG;IACbC,UAAU,EAAE;MACXJ,QAAQ;MACRF;IACD,CAAC;IACDJ;EACD,CAAC;EAED,oBACCP,IAAA,CAACT,iBAAiB;IAAA2B,QAAA,eACjBhB,KAAA,CAACb,SAAS;MAAC8B,KAAK,EAAG7B,EAAE,CAAE,YAAa,CAAG;MAAA4B,QAAA,gBACtClB,IAAA,CAACF,YAAY;QAAA,GAAMkB;MAAK,CAAI,CAAC,eAC7BhB,IAAA,CAACJ,cAAc;QAAA,GAAMoB;MAAK,CAAI,CAAC;IAAA,CACrB;EAAC,CACM,CAAC;AAEtB;;AAEA;AACA;AACA;AACA,OAAO,MAAMI,eAAe,GAAGhC,IAAI,CAAEiB,mBAAoB,CAAC","ignoreList":[]}