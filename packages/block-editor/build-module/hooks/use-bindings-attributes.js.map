{"version":3,"names":["store","blocksStore","createHigherOrderComponent","useRegistry","useSelect","useCallback","useMemo","useContext","addFilter","isURLLike","unlock","BlockContext","jsx","_jsx","Fragment","_Fragment","BLOCK_BINDINGS_ALLOWED_BLOCKS","DEFAULT_ATTRIBUTE","replacePatternOverrideDefaultBindings","blockName","bindings","source","supportedAttributes","bindingsWithDefaults","attributeName","bindingSource","canBindBlock","canBindAttribute","includes","getBindableAttributes","withBlockBindingSupport","BlockEdit","props","registry","blockContext","sources","select","getAllBlockBindingsSources","name","clientId","hasParentPattern","context","hasPatternOverridesDefaultBinding","attributes","metadata","blockBindings","boundAttributes","blockBindingsBySource","Map","binding","Object","entries","sourceName","args","sourceArgs","set","get","size","usesContext","length","key","values","getValues","keys","forEach","attr","label","value","setAttributes","_setAttributes","nextAttributes","batch","keptAttributes","newValue","setValues","caption","href","children","shimAttributeSource","settings","edit"],"sources":["@wordpress/block-editor/src/hooks/use-bindings-attributes.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { store as blocksStore } from '@wordpress/blocks';\r\nimport { createHigherOrderComponent } from '@wordpress/compose';\r\nimport { useRegistry, useSelect } from '@wordpress/data';\r\nimport { useCallback, useMemo, useContext } from '@wordpress/element';\r\nimport { addFilter } from '@wordpress/hooks';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport isURLLike from '../components/link-control/is-url-like';\r\nimport { unlock } from '../lock-unlock';\r\nimport BlockContext from '../components/block-context';\r\n\r\n/** @typedef {import('@wordpress/compose').WPHigherOrderComponent} WPHigherOrderComponent */\r\n/** @typedef {import('@wordpress/blocks').WPBlockSettings} WPBlockSettings */\r\n\r\n/**\r\n * Given a binding of block attributes, returns a higher order component that\r\n * overrides its `attributes` and `setAttributes` props to sync any changes needed.\r\n *\r\n * @return {WPHigherOrderComponent} Higher-order component.\r\n */\r\n\r\nconst BLOCK_BINDINGS_ALLOWED_BLOCKS = {\r\n\t'core/paragraph': [ 'content' ],\r\n\t'core/heading': [ 'content' ],\r\n\t'core/image': [ 'id', 'url', 'title', 'alt' ],\r\n\t'core/button': [ 'url', 'text', 'linkTarget', 'rel' ],\r\n};\r\n\r\nconst DEFAULT_ATTRIBUTE = '__default';\r\n\r\n/**\r\n * Returns the bindings with the `__default` binding for pattern overrides\r\n * replaced with the full-set of supported attributes. e.g.:\r\n *\r\n * bindings passed in: `{ __default: { source: 'core/pattern-overrides' } }`\r\n * bindings returned: `{ content: { source: 'core/pattern-overrides' } }`\r\n *\r\n * @param {string} blockName The block name (e.g. 'core/paragraph').\r\n * @param {Object} bindings  A block's bindings from the metadata attribute.\r\n *\r\n * @return {Object} The bindings with default replaced for pattern overrides.\r\n */\r\nfunction replacePatternOverrideDefaultBindings( blockName, bindings ) {\r\n\t// The `__default` binding currently only works for pattern overrides.\r\n\tif (\r\n\t\tbindings?.[ DEFAULT_ATTRIBUTE ]?.source === 'core/pattern-overrides'\r\n\t) {\r\n\t\tconst supportedAttributes = BLOCK_BINDINGS_ALLOWED_BLOCKS[ blockName ];\r\n\t\tconst bindingsWithDefaults = {};\r\n\t\tfor ( const attributeName of supportedAttributes ) {\r\n\t\t\t// If the block has mixed binding sources, retain any non pattern override bindings.\r\n\t\t\tconst bindingSource = bindings[ attributeName ]\r\n\t\t\t\t? bindings[ attributeName ]\r\n\t\t\t\t: { source: 'core/pattern-overrides' };\r\n\t\t\tbindingsWithDefaults[ attributeName ] = bindingSource;\r\n\t\t}\r\n\r\n\t\treturn bindingsWithDefaults;\r\n\t}\r\n\r\n\treturn bindings;\r\n}\r\n\r\n/**\r\n * Based on the given block name,\r\n * check if it is possible to bind the block.\r\n *\r\n * @param {string} blockName - The block name.\r\n * @return {boolean} Whether it is possible to bind the block to sources.\r\n */\r\nexport function canBindBlock( blockName ) {\r\n\treturn blockName in BLOCK_BINDINGS_ALLOWED_BLOCKS;\r\n}\r\n\r\n/**\r\n * Based on the given block name and attribute name,\r\n * check if it is possible to bind the block attribute.\r\n *\r\n * @param {string} blockName     - The block name.\r\n * @param {string} attributeName - The attribute name.\r\n * @return {boolean} Whether it is possible to bind the block attribute.\r\n */\r\nexport function canBindAttribute( blockName, attributeName ) {\r\n\treturn (\r\n\t\tcanBindBlock( blockName ) &&\r\n\t\tBLOCK_BINDINGS_ALLOWED_BLOCKS[ blockName ].includes( attributeName )\r\n\t);\r\n}\r\n\r\nexport function getBindableAttributes( blockName ) {\r\n\treturn BLOCK_BINDINGS_ALLOWED_BLOCKS[ blockName ];\r\n}\r\n\r\nexport const withBlockBindingSupport = createHigherOrderComponent(\r\n\t( BlockEdit ) => ( props ) => {\r\n\t\tconst registry = useRegistry();\r\n\t\tconst blockContext = useContext( BlockContext );\r\n\t\tconst sources = useSelect( ( select ) =>\r\n\t\t\tunlock( select( blocksStore ) ).getAllBlockBindingsSources()\r\n\t\t);\r\n\t\tconst { name, clientId } = props;\r\n\t\tconst hasParentPattern = !! props.context[ 'pattern/overrides' ];\r\n\t\tconst hasPatternOverridesDefaultBinding =\r\n\t\t\tprops.attributes.metadata?.bindings?.[ DEFAULT_ATTRIBUTE ]\r\n\t\t\t\t?.source === 'core/pattern-overrides';\r\n\t\tconst blockBindings = useMemo(\r\n\t\t\t() =>\r\n\t\t\t\treplacePatternOverrideDefaultBindings(\r\n\t\t\t\t\tname,\r\n\t\t\t\t\tprops.attributes.metadata?.bindings\r\n\t\t\t\t),\r\n\t\t\t[ props.attributes.metadata?.bindings, name ]\r\n\t\t);\r\n\r\n\t\t// While this hook doesn't directly call any selectors, `useSelect` is\r\n\t\t// used purposely here to ensure `boundAttributes` is updated whenever\r\n\t\t// there are attribute updates.\r\n\t\t// `source.getValues` may also call a selector via `registry.select`.\r\n\t\tconst boundAttributes = useSelect( () => {\r\n\t\t\tif ( ! blockBindings ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst attributes = {};\r\n\r\n\t\t\tconst blockBindingsBySource = new Map();\r\n\r\n\t\t\tfor ( const [ attributeName, binding ] of Object.entries(\r\n\t\t\t\tblockBindings\r\n\t\t\t) ) {\r\n\t\t\t\tconst { source: sourceName, args: sourceArgs } = binding;\r\n\t\t\t\tconst source = sources[ sourceName ];\r\n\t\t\t\tif ( ! source || ! canBindAttribute( name, attributeName ) ) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tblockBindingsBySource.set( source, {\r\n\t\t\t\t\t...blockBindingsBySource.get( source ),\r\n\t\t\t\t\t[ attributeName ]: {\r\n\t\t\t\t\t\targs: sourceArgs,\r\n\t\t\t\t\t},\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\tif ( blockBindingsBySource.size ) {\r\n\t\t\t\tfor ( const [ source, bindings ] of blockBindingsBySource ) {\r\n\t\t\t\t\t// Populate context.\r\n\t\t\t\t\tconst context = {};\r\n\r\n\t\t\t\t\tif ( source.usesContext?.length ) {\r\n\t\t\t\t\t\tfor ( const key of source.usesContext ) {\r\n\t\t\t\t\t\t\tcontext[ key ] = blockContext[ key ];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Get values in batch if the source supports it.\r\n\t\t\t\t\tlet values = {};\r\n\t\t\t\t\tif ( ! source.getValues ) {\r\n\t\t\t\t\t\tObject.keys( bindings ).forEach( ( attr ) => {\r\n\t\t\t\t\t\t\t// Default to the `key` or the source label when `getValues` doesn't exist\r\n\t\t\t\t\t\t\tvalues[ attr ] =\r\n\t\t\t\t\t\t\t\tbindings[ attr ].args?.key || source.label;\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvalues = source.getValues( {\r\n\t\t\t\t\t\t\tregistry,\r\n\t\t\t\t\t\t\tcontext,\r\n\t\t\t\t\t\t\tclientId,\r\n\t\t\t\t\t\t\tbindings,\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor ( const [ attributeName, value ] of Object.entries(\r\n\t\t\t\t\t\tvalues\r\n\t\t\t\t\t) ) {\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tattributeName === 'url' &&\r\n\t\t\t\t\t\t\t( ! value || ! isURLLike( value ) )\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t// Return null if value is not a valid URL.\r\n\t\t\t\t\t\t\tattributes[ attributeName ] = null;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tattributes[ attributeName ] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn attributes;\r\n\t\t}, [ blockBindings, name, clientId, blockContext, registry, sources ] );\r\n\r\n\t\tconst { setAttributes } = props;\r\n\r\n\t\tconst _setAttributes = useCallback(\r\n\t\t\t( nextAttributes ) => {\r\n\t\t\t\tregistry.batch( () => {\r\n\t\t\t\t\tif ( ! blockBindings ) {\r\n\t\t\t\t\t\tsetAttributes( nextAttributes );\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst keptAttributes = { ...nextAttributes };\r\n\t\t\t\t\tconst blockBindingsBySource = new Map();\r\n\r\n\t\t\t\t\t// Loop only over the updated attributes to avoid modifying the bound ones that haven't changed.\r\n\t\t\t\t\tfor ( const [ attributeName, newValue ] of Object.entries(\r\n\t\t\t\t\t\tkeptAttributes\r\n\t\t\t\t\t) ) {\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t! blockBindings[ attributeName ] ||\r\n\t\t\t\t\t\t\t! canBindAttribute( name, attributeName )\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst binding = blockBindings[ attributeName ];\r\n\t\t\t\t\t\tconst source = sources[ binding?.source ];\r\n\t\t\t\t\t\tif ( ! source?.setValues ) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tblockBindingsBySource.set( source, {\r\n\t\t\t\t\t\t\t...blockBindingsBySource.get( source ),\r\n\t\t\t\t\t\t\t[ attributeName ]: {\r\n\t\t\t\t\t\t\t\targs: binding.args,\r\n\t\t\t\t\t\t\t\tnewValue,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t\tdelete keptAttributes[ attributeName ];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( blockBindingsBySource.size ) {\r\n\t\t\t\t\t\tfor ( const [\r\n\t\t\t\t\t\t\tsource,\r\n\t\t\t\t\t\t\tbindings,\r\n\t\t\t\t\t\t] of blockBindingsBySource ) {\r\n\t\t\t\t\t\t\t// Populate context.\r\n\t\t\t\t\t\t\tconst context = {};\r\n\r\n\t\t\t\t\t\t\tif ( source.usesContext?.length ) {\r\n\t\t\t\t\t\t\t\tfor ( const key of source.usesContext ) {\r\n\t\t\t\t\t\t\t\t\tcontext[ key ] = blockContext[ key ];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tsource.setValues( {\r\n\t\t\t\t\t\t\t\tregistry,\r\n\t\t\t\t\t\t\t\tcontext,\r\n\t\t\t\t\t\t\t\tclientId,\r\n\t\t\t\t\t\t\t\tbindings,\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t// Don't update non-connected attributes if the block is using pattern overrides\r\n\t\t\t\t\t\t// and the editing is happening while overriding the pattern (not editing the original).\r\n\t\t\t\t\t\t! (\r\n\t\t\t\t\t\t\thasPatternOverridesDefaultBinding &&\r\n\t\t\t\t\t\t\thasParentPattern\r\n\t\t\t\t\t\t) &&\r\n\t\t\t\t\t\tObject.keys( keptAttributes ).length\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t// Don't update caption and href until they are supported.\r\n\t\t\t\t\t\tif ( hasPatternOverridesDefaultBinding ) {\r\n\t\t\t\t\t\t\tdelete keptAttributes?.caption;\r\n\t\t\t\t\t\t\tdelete keptAttributes?.href;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsetAttributes( keptAttributes );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t},\r\n\t\t\t[\r\n\t\t\t\tregistry,\r\n\t\t\t\tblockBindings,\r\n\t\t\t\tname,\r\n\t\t\t\tclientId,\r\n\t\t\t\tblockContext,\r\n\t\t\t\tsetAttributes,\r\n\t\t\t\tsources,\r\n\t\t\t\thasPatternOverridesDefaultBinding,\r\n\t\t\t\thasParentPattern,\r\n\t\t\t]\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<BlockEdit\r\n\t\t\t\t\t{ ...props }\r\n\t\t\t\t\tattributes={ { ...props.attributes, ...boundAttributes } }\r\n\t\t\t\t\tsetAttributes={ _setAttributes }\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t},\r\n\t'withBlockBindingSupport'\r\n);\r\n\r\n/**\r\n * Filters a registered block's settings to enhance a block's `edit` component\r\n * to upgrade bound attributes.\r\n *\r\n * @param {WPBlockSettings} settings - Registered block settings.\r\n * @param {string}          name     - Block name.\r\n * @return {WPBlockSettings} Filtered block settings.\r\n */\r\nfunction shimAttributeSource( settings, name ) {\r\n\tif ( ! canBindBlock( name ) ) {\r\n\t\treturn settings;\r\n\t}\r\n\r\n\treturn {\r\n\t\t...settings,\r\n\t\tedit: withBlockBindingSupport( settings.edit ),\r\n\t};\r\n}\r\n\r\naddFilter(\r\n\t'blocks.registerBlockType',\r\n\t'core/editor/custom-sources-backwards-compatibility/shim-attribute-source',\r\n\tshimAttributeSource\r\n);\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,KAAK,IAAIC,WAAW,QAAQ,mBAAmB;AACxD,SAASC,0BAA0B,QAAQ,oBAAoB;AAC/D,SAASC,WAAW,EAAEC,SAAS,QAAQ,iBAAiB;AACxD,SAASC,WAAW,EAAEC,OAAO,EAAEC,UAAU,QAAQ,oBAAoB;AACrE,SAASC,SAAS,QAAQ,kBAAkB;;AAE5C;AACA;AACA;AACA,OAAOC,SAAS,MAAM,wCAAwC;AAC9D,SAASC,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,YAAY,MAAM,6BAA6B;;AAEtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAOA,MAAMC,6BAA6B,GAAG;EACrC,gBAAgB,EAAE,CAAE,SAAS,CAAE;EAC/B,cAAc,EAAE,CAAE,SAAS,CAAE;EAC7B,YAAY,EAAE,CAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,CAAE;EAC7C,aAAa,EAAE,CAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK;AACpD,CAAC;AAED,MAAMC,iBAAiB,GAAG,WAAW;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,qCAAqCA,CAAEC,SAAS,EAAEC,QAAQ,EAAG;EACrE;EACA,IACCA,QAAQ,GAAIH,iBAAiB,CAAE,EAAEI,MAAM,KAAK,wBAAwB,EACnE;IACD,MAAMC,mBAAmB,GAAGN,6BAA6B,CAAEG,SAAS,CAAE;IACtE,MAAMI,oBAAoB,GAAG,CAAC,CAAC;IAC/B,KAAM,MAAMC,aAAa,IAAIF,mBAAmB,EAAG;MAClD;MACA,MAAMG,aAAa,GAAGL,QAAQ,CAAEI,aAAa,CAAE,GAC5CJ,QAAQ,CAAEI,aAAa,CAAE,GACzB;QAAEH,MAAM,EAAE;MAAyB,CAAC;MACvCE,oBAAoB,CAAEC,aAAa,CAAE,GAAGC,aAAa;IACtD;IAEA,OAAOF,oBAAoB;EAC5B;EAEA,OAAOH,QAAQ;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASM,YAAYA,CAAEP,SAAS,EAAG;EACzC,OAAOA,SAAS,IAAIH,6BAA6B;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASW,gBAAgBA,CAAER,SAAS,EAAEK,aAAa,EAAG;EAC5D,OACCE,YAAY,CAAEP,SAAU,CAAC,IACzBH,6BAA6B,CAAEG,SAAS,CAAE,CAACS,QAAQ,CAAEJ,aAAc,CAAC;AAEtE;AAEA,OAAO,SAASK,qBAAqBA,CAAEV,SAAS,EAAG;EAClD,OAAOH,6BAA6B,CAAEG,SAAS,CAAE;AAClD;AAEA,OAAO,MAAMW,uBAAuB,GAAG5B,0BAA0B,CAC9D6B,SAAS,IAAQC,KAAK,IAAM;EAC7B,MAAMC,QAAQ,GAAG9B,WAAW,CAAC,CAAC;EAC9B,MAAM+B,YAAY,GAAG3B,UAAU,CAAEI,YAAa,CAAC;EAC/C,MAAMwB,OAAO,GAAG/B,SAAS,CAAIgC,MAAM,IAClC1B,MAAM,CAAE0B,MAAM,CAAEnC,WAAY,CAAE,CAAC,CAACoC,0BAA0B,CAAC,CAC5D,CAAC;EACD,MAAM;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAGP,KAAK;EAChC,MAAMQ,gBAAgB,GAAG,CAAC,CAAER,KAAK,CAACS,OAAO,CAAE,mBAAmB,CAAE;EAChE,MAAMC,iCAAiC,GACtCV,KAAK,CAACW,UAAU,CAACC,QAAQ,EAAExB,QAAQ,GAAIH,iBAAiB,CAAE,EACvDI,MAAM,KAAK,wBAAwB;EACvC,MAAMwB,aAAa,GAAGvC,OAAO,CAC5B,MACCY,qCAAqC,CACpCoB,IAAI,EACJN,KAAK,CAACW,UAAU,CAACC,QAAQ,EAAExB,QAC5B,CAAC,EACF,CAAEY,KAAK,CAACW,UAAU,CAACC,QAAQ,EAAExB,QAAQ,EAAEkB,IAAI,CAC5C,CAAC;;EAED;EACA;EACA;EACA;EACA,MAAMQ,eAAe,GAAG1C,SAAS,CAAE,MAAM;IACxC,IAAK,CAAEyC,aAAa,EAAG;MACtB;IACD;IAEA,MAAMF,UAAU,GAAG,CAAC,CAAC;IAErB,MAAMI,qBAAqB,GAAG,IAAIC,GAAG,CAAC,CAAC;IAEvC,KAAM,MAAM,CAAExB,aAAa,EAAEyB,OAAO,CAAE,IAAIC,MAAM,CAACC,OAAO,CACvDN,aACD,CAAC,EAAG;MACH,MAAM;QAAExB,MAAM,EAAE+B,UAAU;QAAEC,IAAI,EAAEC;MAAW,CAAC,GAAGL,OAAO;MACxD,MAAM5B,MAAM,GAAGc,OAAO,CAAEiB,UAAU,CAAE;MACpC,IAAK,CAAE/B,MAAM,IAAI,CAAEM,gBAAgB,CAAEW,IAAI,EAAEd,aAAc,CAAC,EAAG;QAC5D;MACD;MAEAuB,qBAAqB,CAACQ,GAAG,CAAElC,MAAM,EAAE;QAClC,GAAG0B,qBAAqB,CAACS,GAAG,CAAEnC,MAAO,CAAC;QACtC,CAAEG,aAAa,GAAI;UAClB6B,IAAI,EAAEC;QACP;MACD,CAAE,CAAC;IACJ;IAEA,IAAKP,qBAAqB,CAACU,IAAI,EAAG;MACjC,KAAM,MAAM,CAAEpC,MAAM,EAAED,QAAQ,CAAE,IAAI2B,qBAAqB,EAAG;QAC3D;QACA,MAAMN,OAAO,GAAG,CAAC,CAAC;QAElB,IAAKpB,MAAM,CAACqC,WAAW,EAAEC,MAAM,EAAG;UACjC,KAAM,MAAMC,GAAG,IAAIvC,MAAM,CAACqC,WAAW,EAAG;YACvCjB,OAAO,CAAEmB,GAAG,CAAE,GAAG1B,YAAY,CAAE0B,GAAG,CAAE;UACrC;QACD;;QAEA;QACA,IAAIC,MAAM,GAAG,CAAC,CAAC;QACf,IAAK,CAAExC,MAAM,CAACyC,SAAS,EAAG;UACzBZ,MAAM,CAACa,IAAI,CAAE3C,QAAS,CAAC,CAAC4C,OAAO,CAAIC,IAAI,IAAM;YAC5C;YACAJ,MAAM,CAAEI,IAAI,CAAE,GACb7C,QAAQ,CAAE6C,IAAI,CAAE,CAACZ,IAAI,EAAEO,GAAG,IAAIvC,MAAM,CAAC6C,KAAK;UAC5C,CAAE,CAAC;QACJ,CAAC,MAAM;UACNL,MAAM,GAAGxC,MAAM,CAACyC,SAAS,CAAE;YAC1B7B,QAAQ;YACRQ,OAAO;YACPF,QAAQ;YACRnB;UACD,CAAE,CAAC;QACJ;QACA,KAAM,MAAM,CAAEI,aAAa,EAAE2C,KAAK,CAAE,IAAIjB,MAAM,CAACC,OAAO,CACrDU,MACD,CAAC,EAAG;UACH,IACCrC,aAAa,KAAK,KAAK,KACrB,CAAE2C,KAAK,IAAI,CAAE1D,SAAS,CAAE0D,KAAM,CAAC,CAAE,EAClC;YACD;YACAxB,UAAU,CAAEnB,aAAa,CAAE,GAAG,IAAI;UACnC,CAAC,MAAM;YACNmB,UAAU,CAAEnB,aAAa,CAAE,GAAG2C,KAAK;UACpC;QACD;MACD;IACD;IAEA,OAAOxB,UAAU;EAClB,CAAC,EAAE,CAAEE,aAAa,EAAEP,IAAI,EAAEC,QAAQ,EAAEL,YAAY,EAAED,QAAQ,EAAEE,OAAO,CAAG,CAAC;EAEvE,MAAM;IAAEiC;EAAc,CAAC,GAAGpC,KAAK;EAE/B,MAAMqC,cAAc,GAAGhE,WAAW,CAC/BiE,cAAc,IAAM;IACrBrC,QAAQ,CAACsC,KAAK,CAAE,MAAM;MACrB,IAAK,CAAE1B,aAAa,EAAG;QACtBuB,aAAa,CAAEE,cAAe,CAAC;QAC/B;MACD;MAEA,MAAME,cAAc,GAAG;QAAE,GAAGF;MAAe,CAAC;MAC5C,MAAMvB,qBAAqB,GAAG,IAAIC,GAAG,CAAC,CAAC;;MAEvC;MACA,KAAM,MAAM,CAAExB,aAAa,EAAEiD,QAAQ,CAAE,IAAIvB,MAAM,CAACC,OAAO,CACxDqB,cACD,CAAC,EAAG;QACH,IACC,CAAE3B,aAAa,CAAErB,aAAa,CAAE,IAChC,CAAEG,gBAAgB,CAAEW,IAAI,EAAEd,aAAc,CAAC,EACxC;UACD;QACD;QAEA,MAAMyB,OAAO,GAAGJ,aAAa,CAAErB,aAAa,CAAE;QAC9C,MAAMH,MAAM,GAAGc,OAAO,CAAEc,OAAO,EAAE5B,MAAM,CAAE;QACzC,IAAK,CAAEA,MAAM,EAAEqD,SAAS,EAAG;UAC1B;QACD;QACA3B,qBAAqB,CAACQ,GAAG,CAAElC,MAAM,EAAE;UAClC,GAAG0B,qBAAqB,CAACS,GAAG,CAAEnC,MAAO,CAAC;UACtC,CAAEG,aAAa,GAAI;YAClB6B,IAAI,EAAEJ,OAAO,CAACI,IAAI;YAClBoB;UACD;QACD,CAAE,CAAC;QACH,OAAOD,cAAc,CAAEhD,aAAa,CAAE;MACvC;MAEA,IAAKuB,qBAAqB,CAACU,IAAI,EAAG;QACjC,KAAM,MAAM,CACXpC,MAAM,EACND,QAAQ,CACR,IAAI2B,qBAAqB,EAAG;UAC5B;UACA,MAAMN,OAAO,GAAG,CAAC,CAAC;UAElB,IAAKpB,MAAM,CAACqC,WAAW,EAAEC,MAAM,EAAG;YACjC,KAAM,MAAMC,GAAG,IAAIvC,MAAM,CAACqC,WAAW,EAAG;cACvCjB,OAAO,CAAEmB,GAAG,CAAE,GAAG1B,YAAY,CAAE0B,GAAG,CAAE;YACrC;UACD;UAEAvC,MAAM,CAACqD,SAAS,CAAE;YACjBzC,QAAQ;YACRQ,OAAO;YACPF,QAAQ;YACRnB;UACD,CAAE,CAAC;QACJ;MACD;MAEA;MACC;MACA;MACA,EACCsB,iCAAiC,IACjCF,gBAAgB,CAChB,IACDU,MAAM,CAACa,IAAI,CAAES,cAAe,CAAC,CAACb,MAAM,EACnC;QACD;QACA,IAAKjB,iCAAiC,EAAG;UACxC,OAAO8B,cAAc,EAAEG,OAAO;UAC9B,OAAOH,cAAc,EAAEI,IAAI;QAC5B;QACAR,aAAa,CAAEI,cAAe,CAAC;MAChC;IACD,CAAE,CAAC;EACJ,CAAC,EACD,CACCvC,QAAQ,EACRY,aAAa,EACbP,IAAI,EACJC,QAAQ,EACRL,YAAY,EACZkC,aAAa,EACbjC,OAAO,EACPO,iCAAiC,EACjCF,gBAAgB,CAElB,CAAC;EAED,oBACC3B,IAAA,CAAAE,SAAA;IAAA8D,QAAA,eACChE,IAAA,CAACkB,SAAS;MAAA,GACJC,KAAK;MACVW,UAAU,EAAG;QAAE,GAAGX,KAAK,CAACW,UAAU;QAAE,GAAGG;MAAgB,CAAG;MAC1DsB,aAAa,EAAGC;IAAgB,CAChC;EAAC,CACD,CAAC;AAEL,CAAC,EACD,yBACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASS,mBAAmBA,CAAEC,QAAQ,EAAEzC,IAAI,EAAG;EAC9C,IAAK,CAAEZ,YAAY,CAAEY,IAAK,CAAC,EAAG;IAC7B,OAAOyC,QAAQ;EAChB;EAEA,OAAO;IACN,GAAGA,QAAQ;IACXC,IAAI,EAAElD,uBAAuB,CAAEiD,QAAQ,CAACC,IAAK;EAC9C,CAAC;AACF;AAEAxE,SAAS,CACR,0BAA0B,EAC1B,0EAA0E,EAC1EsE,mBACD,CAAC","ignoreList":[]}