{"version":3,"names":["clsx","useMemo","getInlineStyles","getColorClassName","getColorObjectByAttributeValues","__experimentalGetGradientClass","getGradientValueBySlug","useSettings","getColorClassesAndStyles","attributes","backgroundColor","textColor","gradient","style","backgroundClass","textClass","gradientClass","hasGradient","color","className","text","background","elements","link","colorStyles","styleProp","undefined","useColorProps","userPalette","themePalette","defaultPalette","userGradients","themeGradients","defaultGradients","colors","gradients","colorProps","backgroundColorObject","textColorObject"],"sources":["@wordpress/block-editor/src/hooks/use-color-props.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { useMemo } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { getInlineStyles } from './style';\r\nimport {\r\n\tgetColorClassName,\r\n\tgetColorObjectByAttributeValues,\r\n} from '../components/colors';\r\nimport {\r\n\t__experimentalGetGradientClass,\r\n\tgetGradientValueBySlug,\r\n} from '../components/gradients';\r\nimport { useSettings } from '../components/use-settings';\r\n\r\n// The code in this file has largely been lifted from the color block support\r\n// hook.\r\n//\r\n// This utility is intended to assist where the serialization of the colors\r\n// block support is being skipped for a block but the color related CSS classes\r\n// & styles still need to be generated so they can be applied to inner elements.\r\n\r\n/**\r\n * Provides the CSS class names and inline styles for a block's color support\r\n * attributes.\r\n *\r\n * @param {Object} attributes Block attributes.\r\n *\r\n * @return {Object} Color block support derived CSS classes & styles.\r\n */\r\nexport function getColorClassesAndStyles( attributes ) {\r\n\tconst { backgroundColor, textColor, gradient, style } = attributes;\r\n\r\n\t// Collect color CSS classes.\r\n\tconst backgroundClass = getColorClassName(\r\n\t\t'background-color',\r\n\t\tbackgroundColor\r\n\t);\r\n\tconst textClass = getColorClassName( 'color', textColor );\r\n\r\n\tconst gradientClass = __experimentalGetGradientClass( gradient );\r\n\tconst hasGradient = gradientClass || style?.color?.gradient;\r\n\r\n\t// Determine color CSS class name list.\r\n\tconst className = clsx( textClass, gradientClass, {\r\n\t\t// Don't apply the background class if there's a gradient.\r\n\t\t[ backgroundClass ]: ! hasGradient && !! backgroundClass,\r\n\t\t'has-text-color': textColor || style?.color?.text,\r\n\t\t'has-background':\r\n\t\t\tbackgroundColor ||\r\n\t\t\tstyle?.color?.background ||\r\n\t\t\tgradient ||\r\n\t\t\tstyle?.color?.gradient,\r\n\t\t'has-link-color': style?.elements?.link?.color,\r\n\t} );\r\n\r\n\t// Collect inline styles for colors.\r\n\tconst colorStyles = style?.color || {};\r\n\tconst styleProp = getInlineStyles( { color: colorStyles } );\r\n\r\n\treturn {\r\n\t\tclassName: className || undefined,\r\n\t\tstyle: styleProp,\r\n\t};\r\n}\r\n\r\n/**\r\n * Determines the color related props for a block derived from its color block\r\n * support attributes.\r\n *\r\n * Inline styles are forced for named colors to ensure these selections are\r\n * reflected when themes do not load their color stylesheets in the editor.\r\n *\r\n * @param {Object} attributes Block attributes.\r\n *\r\n * @return {Object} ClassName & style props from colors block support.\r\n */\r\nexport function useColorProps( attributes ) {\r\n\tconst { backgroundColor, textColor, gradient } = attributes;\r\n\r\n\tconst [\r\n\t\tuserPalette,\r\n\t\tthemePalette,\r\n\t\tdefaultPalette,\r\n\t\tuserGradients,\r\n\t\tthemeGradients,\r\n\t\tdefaultGradients,\r\n\t] = useSettings(\r\n\t\t'color.palette.custom',\r\n\t\t'color.palette.theme',\r\n\t\t'color.palette.default',\r\n\t\t'color.gradients.custom',\r\n\t\t'color.gradients.theme',\r\n\t\t'color.gradients.default'\r\n\t);\r\n\r\n\tconst colors = useMemo(\r\n\t\t() => [\r\n\t\t\t...( userPalette || [] ),\r\n\t\t\t...( themePalette || [] ),\r\n\t\t\t...( defaultPalette || [] ),\r\n\t\t],\r\n\t\t[ userPalette, themePalette, defaultPalette ]\r\n\t);\r\n\tconst gradients = useMemo(\r\n\t\t() => [\r\n\t\t\t...( userGradients || [] ),\r\n\t\t\t...( themeGradients || [] ),\r\n\t\t\t...( defaultGradients || [] ),\r\n\t\t],\r\n\t\t[ userGradients, themeGradients, defaultGradients ]\r\n\t);\r\n\r\n\tconst colorProps = getColorClassesAndStyles( attributes );\r\n\r\n\t// Force inline styles to apply colors when themes do not load their color\r\n\t// stylesheets in the editor.\r\n\tif ( backgroundColor ) {\r\n\t\tconst backgroundColorObject = getColorObjectByAttributeValues(\r\n\t\t\tcolors,\r\n\t\t\tbackgroundColor\r\n\t\t);\r\n\r\n\t\tcolorProps.style.backgroundColor = backgroundColorObject.color;\r\n\t}\r\n\r\n\tif ( gradient ) {\r\n\t\tcolorProps.style.background = getGradientValueBySlug(\r\n\t\t\tgradients,\r\n\t\t\tgradient\r\n\t\t);\r\n\t}\r\n\r\n\tif ( textColor ) {\r\n\t\tconst textColorObject = getColorObjectByAttributeValues(\r\n\t\t\tcolors,\r\n\t\t\ttextColor\r\n\t\t);\r\n\r\n\t\tcolorProps.style.color = textColorObject.color;\r\n\t}\r\n\r\n\treturn colorProps;\r\n}\r\n"],"mappings":"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","ignoreList":[]}