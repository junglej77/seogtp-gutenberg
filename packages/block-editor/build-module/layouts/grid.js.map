{"version":3,"names":["__","BaseControl","Flex","FlexItem","RangeControl","__experimentalNumberControl","NumberControl","__experimentalToggleGroupControl","ToggleGroupControl","__experimentalToggleGroupControlOption","ToggleGroupControlOption","__experimentalUnitControl","UnitControl","__experimentalParseQuantityAndUnitFromRawValue","parseQuantityAndUnitFromRawValue","useState","appendSelectors","getBlockGapCSS","getGapCSSValue","shouldSkipSerialization","LAYOUT_DEFINITIONS","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","RANGE_CONTROL_MAX_VALUES","px","vw","vh","em","rem","svw","lvw","dvw","svh","lvh","dvh","vi","svi","lvi","dvi","vb","svb","lvb","dvb","vmin","svmin","lvmin","dvmin","vmax","svmax","lvmax","dvmax","units","value","label","default","name","inspectorControls","GridLayoutInspectorControls","layout","onChange","layoutBlockSupport","allowSizingOnChildren","showColumnsControl","window","__experimentalEnableGridInteractivity","columnCount","showMinWidthControl","children","GridLayoutTypeControl","GridLayoutColumnsAndRowsControl","GridLayoutMinimumWidthControl","toolBarControls","GridLayoutToolbarControls","getLayoutStyle","selector","style","blockName","hasBlockGapSupport","layoutDefinitions","minimumColumnWidth","rowCount","process","env","NODE_ENV","Error","blockGapValue","spacing","blockGap","undefined","output","rules","maxValue","push","length","join","getOrientation","getAlignments","isManualPlacement","defaultValue","quantity","unit","handleSliderChange","next","handleUnitChange","newUnit","newValue","includes","toFixed","Math","round","VisualLabel","as","gap","isBlock","size","onUnitChange","min","hideLabelFromVision","__next40pxDefaultSize","__nextHasNoMarginBottom","max","withInputField","defaultColumnCount","defaultNewColumnCount","newColumnCount","parseInt","newRowCount","tempColumnCount","setTempColumnCount","tempRowCount","setTempRowCount","tempMinimumColumnWidth","setTempMinimumColumnWidth","gridPlacement","onChangeType","helpText","help"],"sources":["@wordpress/block-editor/src/layouts/grid.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\n\r\nimport {\r\n\tBaseControl,\r\n\tFlex,\r\n\tFlexItem,\r\n\tRangeControl,\r\n\t__experimentalNumberControl as NumberControl,\r\n\t__experimentalToggleGroupControl as ToggleGroupControl,\r\n\t__experimentalToggleGroupControlOption as ToggleGroupControlOption,\r\n\t__experimentalUnitControl as UnitControl,\r\n\t__experimentalParseQuantityAndUnitFromRawValue as parseQuantityAndUnitFromRawValue,\r\n} from '@wordpress/components';\r\nimport { useState } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { appendSelectors, getBlockGapCSS } from './utils';\r\nimport { getGapCSSValue } from '../hooks/gap';\r\nimport { shouldSkipSerialization } from '../hooks/utils';\r\nimport { LAYOUT_DEFINITIONS } from './definitions';\r\n\r\nconst RANGE_CONTROL_MAX_VALUES = {\r\n\tpx: 600,\r\n\t'%': 100,\r\n\tvw: 100,\r\n\tvh: 100,\r\n\tem: 38,\r\n\trem: 38,\r\n\tsvw: 100,\r\n\tlvw: 100,\r\n\tdvw: 100,\r\n\tsvh: 100,\r\n\tlvh: 100,\r\n\tdvh: 100,\r\n\tvi: 100,\r\n\tsvi: 100,\r\n\tlvi: 100,\r\n\tdvi: 100,\r\n\tvb: 100,\r\n\tsvb: 100,\r\n\tlvb: 100,\r\n\tdvb: 100,\r\n\tvmin: 100,\r\n\tsvmin: 100,\r\n\tlvmin: 100,\r\n\tdvmin: 100,\r\n\tvmax: 100,\r\n\tsvmax: 100,\r\n\tlvmax: 100,\r\n\tdvmax: 100,\r\n};\r\n\r\nconst units = [\r\n\t{ value: 'px', label: 'px', default: 0 },\r\n\t{ value: 'rem', label: 'rem', default: 0 },\r\n\t{ value: 'em', label: 'em', default: 0 },\r\n];\r\n\r\nexport default {\r\n\tname: 'grid',\r\n\tlabel: __( 'Grid' ),\r\n\tinspectorControls: function GridLayoutInspectorControls( {\r\n\t\tlayout = {},\r\n\t\tonChange,\r\n\t\tlayoutBlockSupport = {},\r\n\t} ) {\r\n\t\tconst { allowSizingOnChildren = false } = layoutBlockSupport;\r\n\r\n\t\t// In the experiment we want to also show column control in Auto mode, and\r\n\t\t// the minimum width control in Manual mode.\r\n\t\tconst showColumnsControl =\r\n\t\t\twindow.__experimentalEnableGridInteractivity || layout?.columnCount;\r\n\t\tconst showMinWidthControl =\r\n\t\t\twindow.__experimentalEnableGridInteractivity ||\r\n\t\t\t! layout?.columnCount;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<GridLayoutTypeControl\r\n\t\t\t\t\tlayout={ layout }\r\n\t\t\t\t\tonChange={ onChange }\r\n\t\t\t\t/>\r\n\t\t\t\t{ showColumnsControl && (\r\n\t\t\t\t\t<GridLayoutColumnsAndRowsControl\r\n\t\t\t\t\t\tlayout={ layout }\r\n\t\t\t\t\t\tonChange={ onChange }\r\n\t\t\t\t\t\tallowSizingOnChildren={ allowSizingOnChildren }\r\n\t\t\t\t\t/>\r\n\t\t\t\t) }\r\n\t\t\t\t{ showMinWidthControl && (\r\n\t\t\t\t\t<GridLayoutMinimumWidthControl\r\n\t\t\t\t\t\tlayout={ layout }\r\n\t\t\t\t\t\tonChange={ onChange }\r\n\t\t\t\t\t/>\r\n\t\t\t\t) }\r\n\t\t\t</>\r\n\t\t);\r\n\t},\r\n\ttoolBarControls: function GridLayoutToolbarControls() {\r\n\t\treturn null;\r\n\t},\r\n\tgetLayoutStyle: function getLayoutStyle( {\r\n\t\tselector,\r\n\t\tlayout,\r\n\t\tstyle,\r\n\t\tblockName,\r\n\t\thasBlockGapSupport,\r\n\t\tlayoutDefinitions = LAYOUT_DEFINITIONS,\r\n\t} ) {\r\n\t\tconst {\r\n\t\t\tminimumColumnWidth = null,\r\n\t\t\tcolumnCount = null,\r\n\t\t\trowCount = null,\r\n\t\t} = layout;\r\n\r\n\t\t// Check that the grid layout attributes are of the correct type, so that we don't accidentally\r\n\t\t// write code that stores a string attribute instead of a number.\r\n\t\tif ( process.env.NODE_ENV === 'development' ) {\r\n\t\t\tif (\r\n\t\t\t\tminimumColumnWidth &&\r\n\t\t\t\ttypeof minimumColumnWidth !== 'string'\r\n\t\t\t) {\r\n\t\t\t\tthrow new Error( 'minimumColumnWidth must be a string' );\r\n\t\t\t}\r\n\t\t\tif ( columnCount && typeof columnCount !== 'number' ) {\r\n\t\t\t\tthrow new Error( 'columnCount must be a number' );\r\n\t\t\t}\r\n\t\t\tif ( rowCount && typeof rowCount !== 'number' ) {\r\n\t\t\t\tthrow new Error( 'rowCount must be a number' );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If a block's block.json skips serialization for spacing or spacing.blockGap,\r\n\t\t// don't apply the user-defined value to the styles.\r\n\t\tconst blockGapValue =\r\n\t\t\tstyle?.spacing?.blockGap &&\r\n\t\t\t! shouldSkipSerialization( blockName, 'spacing', 'blockGap' )\r\n\t\t\t\t? getGapCSSValue( style?.spacing?.blockGap, '0.5em' )\r\n\t\t\t\t: undefined;\r\n\r\n\t\tlet output = '';\r\n\t\tconst rules = [];\r\n\r\n\t\tif ( minimumColumnWidth && columnCount > 0 ) {\r\n\t\t\tconst maxValue = `max(${ minimumColumnWidth }, ( 100% - (${\r\n\t\t\t\tblockGapValue || '1.2rem'\r\n\t\t\t}*${ columnCount - 1 }) ) / ${ columnCount })`;\r\n\t\t\trules.push(\r\n\t\t\t\t`grid-template-columns: repeat(auto-fill, minmax(${ maxValue }, 1fr))`,\r\n\t\t\t\t`container-type: inline-size`\r\n\t\t\t);\r\n\t\t\tif ( rowCount ) {\r\n\t\t\t\trules.push(\r\n\t\t\t\t\t`grid-template-rows: repeat(${ rowCount }, minmax(1rem, auto))`\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else if ( columnCount ) {\r\n\t\t\trules.push(\r\n\t\t\t\t`grid-template-columns: repeat(${ columnCount }, minmax(0, 1fr))`\r\n\t\t\t);\r\n\t\t\tif ( rowCount ) {\r\n\t\t\t\trules.push(\r\n\t\t\t\t\t`grid-template-rows: repeat(${ rowCount }, minmax(1rem, auto))`\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\trules.push(\r\n\t\t\t\t`grid-template-columns: repeat(auto-fill, minmax(min(${\r\n\t\t\t\t\tminimumColumnWidth || '12rem'\r\n\t\t\t\t}, 100%), 1fr))`,\r\n\t\t\t\t'container-type: inline-size'\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif ( rules.length ) {\r\n\t\t\t// Reason to disable: the extra line breaks added by prettier mess with the unit tests.\r\n\t\t\t// eslint-disable-next-line prettier/prettier\r\n\t\t\toutput = `${ appendSelectors( selector ) } { ${ rules.join(\r\n\t\t\t\t'; '\r\n\t\t\t) }; }`;\r\n\t\t}\r\n\r\n\t\t// Output blockGap styles based on rules contained in layout definitions in theme.json.\r\n\t\tif ( hasBlockGapSupport && blockGapValue ) {\r\n\t\t\toutput += getBlockGapCSS(\r\n\t\t\t\tselector,\r\n\t\t\t\tlayoutDefinitions,\r\n\t\t\t\t'grid',\r\n\t\t\t\tblockGapValue\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn output;\r\n\t},\r\n\tgetOrientation() {\r\n\t\treturn 'horizontal';\r\n\t},\r\n\tgetAlignments() {\r\n\t\treturn [];\r\n\t},\r\n};\r\n\r\n// Enables setting minimum width of grid items.\r\nfunction GridLayoutMinimumWidthControl( { layout, onChange } ) {\r\n\tconst { minimumColumnWidth, columnCount, isManualPlacement } = layout;\r\n\tconst defaultValue = isManualPlacement || columnCount ? null : '12rem';\r\n\tconst value = minimumColumnWidth || defaultValue;\r\n\tconst [ quantity, unit = 'rem' ] =\r\n\t\tparseQuantityAndUnitFromRawValue( value );\r\n\r\n\tconst handleSliderChange = ( next ) => {\r\n\t\tonChange( {\r\n\t\t\t...layout,\r\n\t\t\tminimumColumnWidth: [ next, unit ].join( '' ),\r\n\t\t} );\r\n\t};\r\n\r\n\t// Mostly copied from HeightControl.\r\n\tconst handleUnitChange = ( newUnit ) => {\r\n\t\t// Attempt to smooth over differences between currentUnit and newUnit.\r\n\t\t// This should slightly improve the experience of switching between unit types.\r\n\t\tlet newValue;\r\n\r\n\t\tif ( [ 'em', 'rem' ].includes( newUnit ) && unit === 'px' ) {\r\n\t\t\t// Convert pixel value to an approximate of the new unit, assuming a root size of 16px.\r\n\t\t\tnewValue = ( quantity / 16 ).toFixed( 2 ) + newUnit;\r\n\t\t} else if ( [ 'em', 'rem' ].includes( unit ) && newUnit === 'px' ) {\r\n\t\t\t// Convert to pixel value assuming a root size of 16px.\r\n\t\t\tnewValue = Math.round( quantity * 16 ) + newUnit;\r\n\t\t}\r\n\r\n\t\tonChange( {\r\n\t\t\t...layout,\r\n\t\t\tminimumColumnWidth: newValue,\r\n\t\t} );\r\n\t};\r\n\r\n\treturn (\r\n\t\t<fieldset>\r\n\t\t\t<BaseControl.VisualLabel as=\"legend\">\r\n\t\t\t\t{ __( 'Minimum column width' ) }\r\n\t\t\t</BaseControl.VisualLabel>\r\n\t\t\t<Flex gap={ 4 }>\r\n\t\t\t\t<FlexItem isBlock>\r\n\t\t\t\t\t<UnitControl\r\n\t\t\t\t\t\tsize=\"__unstable-large\"\r\n\t\t\t\t\t\tonChange={ ( newValue ) => {\r\n\t\t\t\t\t\t\tonChange( {\r\n\t\t\t\t\t\t\t\t...layout,\r\n\t\t\t\t\t\t\t\tminimumColumnWidth:\r\n\t\t\t\t\t\t\t\t\tnewValue === '' ? undefined : newValue,\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t\tonUnitChange={ handleUnitChange }\r\n\t\t\t\t\t\tvalue={ value }\r\n\t\t\t\t\t\tunits={ units }\r\n\t\t\t\t\t\tmin={ 0 }\r\n\t\t\t\t\t\tlabel={ __( 'Minimum column width' ) }\r\n\t\t\t\t\t\thideLabelFromVision\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FlexItem>\r\n\t\t\t\t<FlexItem isBlock>\r\n\t\t\t\t\t<RangeControl\r\n\t\t\t\t\t\t__next40pxDefaultSize\r\n\t\t\t\t\t\t__nextHasNoMarginBottom\r\n\t\t\t\t\t\tonChange={ handleSliderChange }\r\n\t\t\t\t\t\tvalue={ quantity || 0 }\r\n\t\t\t\t\t\tmin={ 0 }\r\n\t\t\t\t\t\tmax={ RANGE_CONTROL_MAX_VALUES[ unit ] || 600 }\r\n\t\t\t\t\t\twithInputField={ false }\r\n\t\t\t\t\t\tlabel={ __( 'Minimum column width' ) }\r\n\t\t\t\t\t\thideLabelFromVision\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FlexItem>\r\n\t\t\t</Flex>\r\n\t\t</fieldset>\r\n\t);\r\n}\r\n\r\n// Enables setting number of grid columns\r\nfunction GridLayoutColumnsAndRowsControl( {\r\n\tlayout,\r\n\tonChange,\r\n\tallowSizingOnChildren,\r\n} ) {\r\n\t// If the grid interactivity experiment is enabled, allow unsetting the column count.\r\n\tconst defaultColumnCount = window.__experimentalEnableGridInteractivity\r\n\t\t? undefined\r\n\t\t: 3;\r\n\tconst {\r\n\t\tcolumnCount = defaultColumnCount,\r\n\t\trowCount,\r\n\t\tisManualPlacement,\r\n\t} = layout;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<fieldset>\r\n\t\t\t\t{ ( ! window.__experimentalEnableGridInteractivity ||\r\n\t\t\t\t\t! isManualPlacement ) && (\r\n\t\t\t\t\t<BaseControl.VisualLabel as=\"legend\">\r\n\t\t\t\t\t\t{ __( 'Columns' ) }\r\n\t\t\t\t\t</BaseControl.VisualLabel>\r\n\t\t\t\t) }\r\n\t\t\t\t<Flex gap={ 4 }>\r\n\t\t\t\t\t<FlexItem isBlock>\r\n\t\t\t\t\t\t<NumberControl\r\n\t\t\t\t\t\t\tsize=\"__unstable-large\"\r\n\t\t\t\t\t\t\tonChange={ ( value ) => {\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\twindow.__experimentalEnableGridInteractivity\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t// Allow unsetting the column count when in auto mode.\r\n\t\t\t\t\t\t\t\t\tconst defaultNewColumnCount =\r\n\t\t\t\t\t\t\t\t\t\tisManualPlacement ? 1 : undefined;\r\n\t\t\t\t\t\t\t\t\tconst newColumnCount =\r\n\t\t\t\t\t\t\t\t\t\tvalue === ''\r\n\t\t\t\t\t\t\t\t\t\t\t? defaultNewColumnCount\r\n\t\t\t\t\t\t\t\t\t\t\t: parseInt( value, 10 );\r\n\t\t\t\t\t\t\t\t\tonChange( {\r\n\t\t\t\t\t\t\t\t\t\t...layout,\r\n\t\t\t\t\t\t\t\t\t\tcolumnCount: newColumnCount,\r\n\t\t\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Don't allow unsetting the column count.\r\n\t\t\t\t\t\t\t\t\tconst newColumnCount =\r\n\t\t\t\t\t\t\t\t\t\tvalue === ''\r\n\t\t\t\t\t\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t\t\t\t\t\t: parseInt( value, 10 );\r\n\t\t\t\t\t\t\t\t\tonChange( {\r\n\t\t\t\t\t\t\t\t\t\t...layout,\r\n\t\t\t\t\t\t\t\t\t\tcolumnCount: newColumnCount,\r\n\t\t\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t\tvalue={ columnCount }\r\n\t\t\t\t\t\t\tmin={ 0 }\r\n\t\t\t\t\t\t\tlabel={ __( 'Columns' ) }\r\n\t\t\t\t\t\t\thideLabelFromVision={\r\n\t\t\t\t\t\t\t\t! window.__experimentalEnableGridInteractivity ||\r\n\t\t\t\t\t\t\t\t! isManualPlacement\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</FlexItem>\r\n\r\n\t\t\t\t\t<FlexItem isBlock>\r\n\t\t\t\t\t\t{ window.__experimentalEnableGridInteractivity &&\r\n\t\t\t\t\t\tallowSizingOnChildren &&\r\n\t\t\t\t\t\tisManualPlacement ? (\r\n\t\t\t\t\t\t\t<NumberControl\r\n\t\t\t\t\t\t\t\tsize=\"__unstable-large\"\r\n\t\t\t\t\t\t\t\tonChange={ ( value ) => {\r\n\t\t\t\t\t\t\t\t\t// Don't allow unsetting the row count.\r\n\t\t\t\t\t\t\t\t\tconst newRowCount =\r\n\t\t\t\t\t\t\t\t\t\tvalue === ''\r\n\t\t\t\t\t\t\t\t\t\t\t? 1\r\n\t\t\t\t\t\t\t\t\t\t\t: parseInt( value, 10 );\r\n\t\t\t\t\t\t\t\t\tonChange( {\r\n\t\t\t\t\t\t\t\t\t\t...layout,\r\n\t\t\t\t\t\t\t\t\t\trowCount: newRowCount,\r\n\t\t\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t\t\tvalue={ rowCount }\r\n\t\t\t\t\t\t\t\tmin={ 0 }\r\n\t\t\t\t\t\t\t\tlabel={ __( 'Rows' ) }\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<RangeControl\r\n\t\t\t\t\t\t\t\t__next40pxDefaultSize\r\n\t\t\t\t\t\t\t\t__nextHasNoMarginBottom\r\n\t\t\t\t\t\t\t\tvalue={ columnCount ?? 0 }\r\n\t\t\t\t\t\t\t\tonChange={ ( value ) =>\r\n\t\t\t\t\t\t\t\t\tonChange( {\r\n\t\t\t\t\t\t\t\t\t\t...layout,\r\n\t\t\t\t\t\t\t\t\t\tcolumnCount: value,\r\n\t\t\t\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tmin={ 0 }\r\n\t\t\t\t\t\t\t\tmax={ 16 }\r\n\t\t\t\t\t\t\t\twithInputField={ false }\r\n\t\t\t\t\t\t\t\tlabel={ __( 'Columns' ) }\r\n\t\t\t\t\t\t\t\thideLabelFromVision\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) }\r\n\t\t\t\t\t</FlexItem>\r\n\t\t\t\t</Flex>\r\n\t\t\t</fieldset>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\n// Enables switching between grid types\r\nfunction GridLayoutTypeControl( { layout, onChange } ) {\r\n\tconst { columnCount, rowCount, minimumColumnWidth, isManualPlacement } =\r\n\t\tlayout;\r\n\r\n\t/**\r\n\t * When switching, temporarily save any custom values set on the\r\n\t * previous type so we can switch back without loss.\r\n\t */\r\n\tconst [ tempColumnCount, setTempColumnCount ] = useState(\r\n\t\tcolumnCount || 3\r\n\t);\r\n\tconst [ tempRowCount, setTempRowCount ] = useState( rowCount );\r\n\tconst [ tempMinimumColumnWidth, setTempMinimumColumnWidth ] = useState(\r\n\t\tminimumColumnWidth || '12rem'\r\n\t);\r\n\r\n\tconst gridPlacement =\r\n\t\tisManualPlacement ||\r\n\t\t( !! columnCount && ! window.__experimentalEnableGridInteractivity )\r\n\t\t\t? 'manual'\r\n\t\t\t: 'auto';\r\n\r\n\tconst onChangeType = ( value ) => {\r\n\t\tif ( value === 'manual' ) {\r\n\t\t\tsetTempMinimumColumnWidth( minimumColumnWidth || '12rem' );\r\n\t\t} else {\r\n\t\t\tsetTempColumnCount( columnCount || 3 );\r\n\t\t\tsetTempRowCount( rowCount );\r\n\t\t}\r\n\t\tonChange( {\r\n\t\t\t...layout,\r\n\t\t\tcolumnCount: value === 'manual' ? tempColumnCount : null,\r\n\t\t\trowCount:\r\n\t\t\t\tvalue === 'manual' &&\r\n\t\t\t\twindow.__experimentalEnableGridInteractivity\r\n\t\t\t\t\t? tempRowCount\r\n\t\t\t\t\t: undefined,\r\n\t\t\tisManualPlacement:\r\n\t\t\t\tvalue === 'manual' &&\r\n\t\t\t\twindow.__experimentalEnableGridInteractivity\r\n\t\t\t\t\t? true\r\n\t\t\t\t\t: undefined,\r\n\t\t\tminimumColumnWidth:\r\n\t\t\t\tvalue === 'auto' ? tempMinimumColumnWidth : null,\r\n\t\t} );\r\n\t};\r\n\r\n\tconst helpText =\r\n\t\tgridPlacement === 'manual'\r\n\t\t\t? __(\r\n\t\t\t\t\t'Grid items can be manually placed in any position on the grid.'\r\n\t\t\t  )\r\n\t\t\t: __(\r\n\t\t\t\t\t'Grid items are placed automatically depending on their order.'\r\n\t\t\t  );\r\n\r\n\treturn (\r\n\t\t<ToggleGroupControl\r\n\t\t\t__next40pxDefaultSize\r\n\t\t\t__nextHasNoMarginBottom\r\n\t\t\tlabel={ __( 'Grid item position' ) }\r\n\t\t\tvalue={ gridPlacement }\r\n\t\t\tonChange={ onChangeType }\r\n\t\t\tisBlock\r\n\t\t\thelp={\r\n\t\t\t\twindow.__experimentalEnableGridInteractivity\r\n\t\t\t\t\t? helpText\r\n\t\t\t\t\t: undefined\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<ToggleGroupControlOption\r\n\t\t\t\tkey=\"auto\"\r\n\t\t\t\tvalue=\"auto\"\r\n\t\t\t\tlabel={ __( 'Auto' ) }\r\n\t\t\t/>\r\n\t\t\t<ToggleGroupControlOption\r\n\t\t\t\tkey=\"manual\"\r\n\t\t\t\tvalue=\"manual\"\r\n\t\t\t\tlabel={ __( 'Manual' ) }\r\n\t\t\t/>\r\n\t\t</ToggleGroupControl>\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]}