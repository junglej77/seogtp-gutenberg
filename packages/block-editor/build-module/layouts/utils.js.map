{"version":3,"names":["__","sprintf","LAYOUT_DEFINITIONS","appendSelectors","selectors","append","split","map","subselector","join","getBlockGapCSS","selector","layoutDefinitions","layoutType","blockGapValue","output","spacingStyles","length","forEach","gapStyle","trim","Object","entries","rules","cssProperty","value","getAlignmentsInfo","layout","contentSize","wideSize","type","alignmentInfo","sizeRegex","test","none","wide"],"sources":["@wordpress/block-editor/src/layouts/utils.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { __, sprintf } from '@wordpress/i18n';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { LAYOUT_DEFINITIONS } from './definitions';\r\n\r\n/**\r\n * Utility to generate the proper CSS selector for layout styles.\r\n *\r\n * @param {string} selectors CSS selector, also supports multiple comma-separated selectors.\r\n * @param {string} append    The string to append.\r\n *\r\n * @return {string} - CSS selector.\r\n */\r\nexport function appendSelectors( selectors, append = '' ) {\r\n\treturn selectors\r\n\t\t.split( ',' )\r\n\t\t.map(\r\n\t\t\t( subselector ) =>\r\n\t\t\t\t`${ subselector }${ append ? ` ${ append }` : '' }`\r\n\t\t)\r\n\t\t.join( ',' );\r\n}\r\n\r\n/**\r\n * Get generated blockGap CSS rules based on layout definitions provided in theme.json\r\n * Falsy values in the layout definition's spacingStyles rules will be swapped out\r\n * with the provided `blockGapValue`.\r\n *\r\n * @param {string} selector          The CSS selector to target for the generated rules.\r\n * @param {Object} layoutDefinitions Layout definitions object.\r\n * @param {string} layoutType        The layout type (e.g. `default` or `flex`).\r\n * @param {string} blockGapValue     The current blockGap value to be applied.\r\n * @return {string} The generated CSS rules.\r\n */\r\nexport function getBlockGapCSS(\r\n\tselector,\r\n\tlayoutDefinitions = LAYOUT_DEFINITIONS,\r\n\tlayoutType,\r\n\tblockGapValue\r\n) {\r\n\tlet output = '';\r\n\tif (\r\n\t\tlayoutDefinitions?.[ layoutType ]?.spacingStyles?.length &&\r\n\t\tblockGapValue\r\n\t) {\r\n\t\tlayoutDefinitions[ layoutType ].spacingStyles.forEach( ( gapStyle ) => {\r\n\t\t\toutput += `${ appendSelectors(\r\n\t\t\t\tselector,\r\n\t\t\t\tgapStyle.selector.trim()\r\n\t\t\t) } { `;\r\n\t\t\toutput += Object.entries( gapStyle.rules )\r\n\t\t\t\t.map(\r\n\t\t\t\t\t( [ cssProperty, value ] ) =>\r\n\t\t\t\t\t\t`${ cssProperty }: ${ value ? value : blockGapValue }`\r\n\t\t\t\t)\r\n\t\t\t\t.join( '; ' );\r\n\t\t\toutput += '; }';\r\n\t\t} );\r\n\t}\r\n\treturn output;\r\n}\r\n\r\n/**\r\n * Helper method to assign contextual info to clarify\r\n * alignment settings.\r\n *\r\n * Besides checking if `contentSize` and `wideSize` have a\r\n * value, we now show this information only if their values\r\n * are not a `css var`. This needs to change when parsing\r\n * css variables land.\r\n *\r\n * @see https://github.com/WordPress/gutenberg/pull/34710#issuecomment-918000752\r\n *\r\n * @param {Object} layout The layout object.\r\n * @return {Object} An object with contextual info per alignment.\r\n */\r\nexport function getAlignmentsInfo( layout ) {\r\n\tconst { contentSize, wideSize, type = 'default' } = layout;\r\n\tconst alignmentInfo = {};\r\n\tconst sizeRegex =\r\n\t\t/^(?!0)\\d+(px|em|rem|vw|vh|%|svw|lvw|dvw|svh|lvh|dvh|vi|svi|lvi|dvi|vb|svb|lvb|dvb|vmin|svmin|lvmin|dvmin|vmax|svmax|lvmax|dvmax)?$/i;\r\n\tif ( sizeRegex.test( contentSize ) && type === 'constrained' ) {\r\n\t\t// translators: %s: container size (i.e. 600px etc)\r\n\t\talignmentInfo.none = sprintf( __( 'Max %s wide' ), contentSize );\r\n\t}\r\n\tif ( sizeRegex.test( wideSize ) ) {\r\n\t\t// translators: %s: container size (i.e. 600px etc)\r\n\t\talignmentInfo.wide = sprintf( __( 'Max %s wide' ), wideSize );\r\n\t}\r\n\treturn alignmentInfo;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,EAAE,EAAEC,OAAO,QAAQ,iBAAiB;;AAE7C;AACA;AACA;AACA,SAASC,kBAAkB,QAAQ,eAAe;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAAEC,SAAS,EAAEC,MAAM,GAAG,EAAE,EAAG;EACzD,OAAOD,SAAS,CACdE,KAAK,CAAE,GAAI,CAAC,CACZC,GAAG,CACDC,WAAW,IACX,GAAGA,WAAa,GAAGH,MAAM,GAAI,IAAIA,MAAQ,EAAC,GAAG,EAAI,EACpD,CAAC,CACAI,IAAI,CAAE,GAAI,CAAC;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAC7BC,QAAQ,EACRC,iBAAiB,GAAGV,kBAAkB,EACtCW,UAAU,EACVC,aAAa,EACZ;EACD,IAAIC,MAAM,GAAG,EAAE;EACf,IACCH,iBAAiB,GAAIC,UAAU,CAAE,EAAEG,aAAa,EAAEC,MAAM,IACxDH,aAAa,EACZ;IACDF,iBAAiB,CAAEC,UAAU,CAAE,CAACG,aAAa,CAACE,OAAO,CAAIC,QAAQ,IAAM;MACtEJ,MAAM,IAAK,GAAGZ,eAAe,CAC5BQ,QAAQ,EACRQ,QAAQ,CAACR,QAAQ,CAACS,IAAI,CAAC,CACxB,CAAG,KAAI;MACPL,MAAM,IAAIM,MAAM,CAACC,OAAO,CAAEH,QAAQ,CAACI,KAAM,CAAC,CACxChB,GAAG,CACH,CAAE,CAAEiB,WAAW,EAAEC,KAAK,CAAE,KACtB,GAAGD,WAAa,KAAKC,KAAK,GAAGA,KAAK,GAAGX,aAAe,EACvD,CAAC,CACAL,IAAI,CAAE,IAAK,CAAC;MACdM,MAAM,IAAI,KAAK;IAChB,CAAE,CAAC;EACJ;EACA,OAAOA,MAAM;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASW,iBAAiBA,CAAEC,MAAM,EAAG;EAC3C,MAAM;IAAEC,WAAW;IAAEC,QAAQ;IAAEC,IAAI,GAAG;EAAU,CAAC,GAAGH,MAAM;EAC1D,MAAMI,aAAa,GAAG,CAAC,CAAC;EACxB,MAAMC,SAAS,GACd,qIAAqI;EACtI,IAAKA,SAAS,CAACC,IAAI,CAAEL,WAAY,CAAC,IAAIE,IAAI,KAAK,aAAa,EAAG;IAC9D;IACAC,aAAa,CAACG,IAAI,GAAGjC,OAAO,CAAED,EAAE,CAAE,aAAc,CAAC,EAAE4B,WAAY,CAAC;EACjE;EACA,IAAKI,SAAS,CAACC,IAAI,CAAEJ,QAAS,CAAC,EAAG;IACjC;IACAE,aAAa,CAACI,IAAI,GAAGlC,OAAO,CAAED,EAAE,CAAE,aAAc,CAAC,EAAE6B,QAAS,CAAC;EAC9D;EACA,OAAOE,aAAa;AACrB","ignoreList":[]}