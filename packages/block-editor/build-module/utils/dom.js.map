{"version":3,"names":["BLOCK_SELECTOR","APPENDER_SELECTOR","BLOCK_APPENDER_CLASS","isInSameBlock","a","b","closest","isInsideRootBlock","blockElement","element","parentBlock","join","getBlockClientId","node","nodeType","ELEMENT_NODE","parentNode","elementNode","blockNode","id","slice","length","rectUnion","rect1","rect2","left","Math","min","right","max","bottom","top","window","DOMRectReadOnly","isElementVisible","viewport","ownerDocument","defaultView","classList","contains","bounds","getBoundingClientRect","width","height","checkVisibility","opacityProperty","contentVisibilityAuto","visibilityProperty","style","getComputedStyle","display","visibility","opacity","getVisibleElementBounds","stack","currentElement","pop","child","children","childBounds","push","innerWidth"],"sources":["@wordpress/block-editor/src/utils/dom.js"],"sourcesContent":["const BLOCK_SELECTOR = '.block-editor-block-list__block';\r\nconst APPENDER_SELECTOR = '.block-list-appender';\r\nconst BLOCK_APPENDER_CLASS = '.block-editor-button-block-appender';\r\n\r\n/**\r\n * Returns true if two elements are contained within the same block.\r\n *\r\n * @param {Element} a First element.\r\n * @param {Element} b Second element.\r\n *\r\n * @return {boolean} Whether elements are in the same block.\r\n */\r\nexport function isInSameBlock( a, b ) {\r\n\treturn a.closest( BLOCK_SELECTOR ) === b.closest( BLOCK_SELECTOR );\r\n}\r\n\r\n/**\r\n * Returns true if an element is considered part of the block and not its inner\r\n * blocks or appender.\r\n *\r\n * @param {Element} blockElement Block container element.\r\n * @param {Element} element      Element.\r\n *\r\n * @return {boolean} Whether an element is considered part of the block and not\r\n *                   its inner blocks or appender.\r\n */\r\nexport function isInsideRootBlock( blockElement, element ) {\r\n\tconst parentBlock = element.closest(\r\n\t\t[ BLOCK_SELECTOR, APPENDER_SELECTOR, BLOCK_APPENDER_CLASS ].join( ',' )\r\n\t);\r\n\treturn parentBlock === blockElement;\r\n}\r\n\r\n/**\r\n * Finds the block client ID given any DOM node inside the block.\r\n *\r\n * @param {Node?} node DOM node.\r\n *\r\n * @return {string|undefined} Client ID or undefined if the node is not part of\r\n *                            a block.\r\n */\r\nexport function getBlockClientId( node ) {\r\n\twhile ( node && node.nodeType !== node.ELEMENT_NODE ) {\r\n\t\tnode = node.parentNode;\r\n\t}\r\n\r\n\tif ( ! node ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst elementNode = /** @type {Element} */ ( node );\r\n\tconst blockNode = elementNode.closest( BLOCK_SELECTOR );\r\n\r\n\tif ( ! blockNode ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\treturn blockNode.id.slice( 'block-'.length );\r\n}\r\n\r\n/**\r\n * Calculates the union of two rectangles.\r\n *\r\n * @param {DOMRect} rect1 First rectangle.\r\n * @param {DOMRect} rect2 Second rectangle.\r\n * @return {DOMRect} Union of the two rectangles.\r\n */\r\nexport function rectUnion( rect1, rect2 ) {\r\n\tconst left = Math.min( rect1.left, rect2.left );\r\n\tconst right = Math.max( rect1.right, rect2.right );\r\n\tconst bottom = Math.max( rect1.bottom, rect2.bottom );\r\n\tconst top = Math.min( rect1.top, rect2.top );\r\n\r\n\treturn new window.DOMRectReadOnly( left, top, right - left, bottom - top );\r\n}\r\n\r\n/**\r\n * Returns whether an element is visible.\r\n *\r\n * @param {Element} element Element.\r\n * @return {boolean} Whether the element is visible.\r\n */\r\nfunction isElementVisible( element ) {\r\n\tconst viewport = element.ownerDocument.defaultView;\r\n\tif ( ! viewport ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Check for <VisuallyHidden> component.\r\n\tif ( element.classList.contains( 'components-visually-hidden' ) ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst bounds = element.getBoundingClientRect();\r\n\tif ( bounds.width === 0 || bounds.height === 0 ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Older browsers, e.g. Safari < 17.4 may not support the `checkVisibility` method.\r\n\tif ( element.checkVisibility ) {\r\n\t\treturn element.checkVisibility?.( {\r\n\t\t\topacityProperty: true,\r\n\t\t\tcontentVisibilityAuto: true,\r\n\t\t\tvisibilityProperty: true,\r\n\t\t} );\r\n\t}\r\n\r\n\tconst style = viewport.getComputedStyle( element );\r\n\r\n\tif (\r\n\t\tstyle.display === 'none' ||\r\n\t\tstyle.visibility === 'hidden' ||\r\n\t\tstyle.opacity === '0'\r\n\t) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\n/**\r\n * Returns the rect of the element including all visible nested elements.\r\n *\r\n * Visible nested elements, including elements that overflow the parent, are\r\n * taken into account.\r\n *\r\n * This function is useful for calculating the visible area of a block that\r\n * contains nested elements that overflow the block, e.g. the Navigation block,\r\n * which can contain overflowing Submenu blocks.\r\n *\r\n * The returned rect represents the full extent of the element and its visible\r\n * children, which may extend beyond the viewport.\r\n *\r\n * @param {Element} element Element.\r\n * @return {DOMRect} Bounding client rect of the element and its visible children.\r\n */\r\nexport function getVisibleElementBounds( element ) {\r\n\tconst viewport = element.ownerDocument.defaultView;\r\n\tif ( ! viewport ) {\r\n\t\treturn new window.DOMRectReadOnly();\r\n\t}\r\n\r\n\tlet bounds = element.getBoundingClientRect();\r\n\r\n\tconst stack = [ element ];\r\n\tlet currentElement;\r\n\r\n\twhile ( ( currentElement = stack.pop() ) ) {\r\n\t\tfor ( const child of currentElement.children ) {\r\n\t\t\tif ( isElementVisible( child ) ) {\r\n\t\t\t\tconst childBounds = child.getBoundingClientRect();\r\n\t\t\t\tbounds = rectUnion( bounds, childBounds );\r\n\t\t\t\tstack.push( child );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t * Take into account the outer horizontal limits of the container in which\r\n\t * an element is supposed to be \"visible\". For example, if an element is\r\n\t * positioned -10px to the left of the window x value (0), this function\r\n\t * discounts the negative overhang because it's not visible and therefore\r\n\t * not to be counted in the visibility calculations. Top and bottom values\r\n\t * are not accounted for to accommodate vertical scroll.\r\n\t */\r\n\tconst left = Math.max( bounds.left, 0 );\r\n\tconst right = Math.min( bounds.right, viewport.innerWidth );\r\n\tbounds = new window.DOMRectReadOnly(\r\n\t\tleft,\r\n\t\tbounds.top,\r\n\t\tright - left,\r\n\t\tbounds.height\r\n\t);\r\n\r\n\treturn bounds;\r\n}\r\n"],"mappings":"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","ignoreList":[]}