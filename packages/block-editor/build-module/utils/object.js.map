{"version":3,"names":["setImmutably","object","path","value","Array","isArray","leaf","pop","prev","key","lvl","getValueFromObjectPath","defaultValue","_value","arrayPath","split","forEach","fieldName","uniqByProperty","array","property","seen","Set","filter","item","has","add"],"sources":["@wordpress/block-editor/src/utils/object.js"],"sourcesContent":["/**\r\n * Immutably sets a value inside an object. Like `lodash#set`, but returning a\r\n * new object. Treats nullish initial values as empty objects. Clones any\r\n * nested objects. Supports arrays, too.\r\n *\r\n * @param {Object}              object Object to set a value in.\r\n * @param {number|string|Array} path   Path in the object to modify.\r\n * @param {*}                   value  New value to set.\r\n * @return {Object} Cloned object with the new value set.\r\n */\r\nexport function setImmutably( object, path, value ) {\r\n\t// Normalize path\r\n\tpath = Array.isArray( path ) ? [ ...path ] : [ path ];\r\n\r\n\t// Shallowly clone the base of the object\r\n\tobject = Array.isArray( object ) ? [ ...object ] : { ...object };\r\n\r\n\tconst leaf = path.pop();\r\n\r\n\t// Traverse object from root to leaf, shallowly cloning at each level\r\n\tlet prev = object;\r\n\tfor ( const key of path ) {\r\n\t\tconst lvl = prev[ key ];\r\n\t\tprev = prev[ key ] = Array.isArray( lvl ) ? [ ...lvl ] : { ...lvl };\r\n\t}\r\n\r\n\tprev[ leaf ] = value;\r\n\r\n\treturn object;\r\n}\r\n\r\n/**\r\n * Helper util to return a value from a certain path of the object.\r\n * Path is specified as either:\r\n * - a string of properties, separated by dots, for example: \"x.y\".\r\n * - an array of properties, for example `[ 'x', 'y' ]`.\r\n * You can also specify a default value in case the result is nullish.\r\n *\r\n * @param {Object}       object       Input object.\r\n * @param {string|Array} path         Path to the object property.\r\n * @param {*}            defaultValue Default value if the value at the specified path is nullish.\r\n * @return {*} Value of the object property at the specified path.\r\n */\r\nexport const getValueFromObjectPath = ( object, path, defaultValue ) => {\r\n\tconst arrayPath = Array.isArray( path ) ? path : path.split( '.' );\r\n\tlet value = object;\r\n\tarrayPath.forEach( ( fieldName ) => {\r\n\t\tvalue = value?.[ fieldName ];\r\n\t} );\r\n\treturn value ?? defaultValue;\r\n};\r\n\r\n/**\r\n * Helper util to filter out objects with duplicate values for a given property.\r\n *\r\n * @param {Object[]} array    Array of objects to filter.\r\n * @param {string}   property Property to filter unique values by.\r\n *\r\n * @return {Object[]} Array of objects with unique values for the specified property.\r\n */\r\nexport function uniqByProperty( array, property ) {\r\n\tconst seen = new Set();\r\n\treturn array.filter( ( item ) => {\r\n\t\tconst value = item[ property ];\r\n\t\treturn seen.has( value ) ? false : seen.add( value );\r\n\t} );\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,YAAYA,CAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAG;EACnD;EACAD,IAAI,GAAGE,KAAK,CAACC,OAAO,CAAEH,IAAK,CAAC,GAAG,CAAE,GAAGA,IAAI,CAAE,GAAG,CAAEA,IAAI,CAAE;;EAErD;EACAD,MAAM,GAAGG,KAAK,CAACC,OAAO,CAAEJ,MAAO,CAAC,GAAG,CAAE,GAAGA,MAAM,CAAE,GAAG;IAAE,GAAGA;EAAO,CAAC;EAEhE,MAAMK,IAAI,GAAGJ,IAAI,CAACK,GAAG,CAAC,CAAC;;EAEvB;EACA,IAAIC,IAAI,GAAGP,MAAM;EACjB,KAAM,MAAMQ,GAAG,IAAIP,IAAI,EAAG;IACzB,MAAMQ,GAAG,GAAGF,IAAI,CAAEC,GAAG,CAAE;IACvBD,IAAI,GAAGA,IAAI,CAAEC,GAAG,CAAE,GAAGL,KAAK,CAACC,OAAO,CAAEK,GAAI,CAAC,GAAG,CAAE,GAAGA,GAAG,CAAE,GAAG;MAAE,GAAGA;IAAI,CAAC;EACpE;EAEAF,IAAI,CAAEF,IAAI,CAAE,GAAGH,KAAK;EAEpB,OAAOF,MAAM;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMU,sBAAsB,GAAGA,CAAEV,MAAM,EAAEC,IAAI,EAAEU,YAAY,KAAM;EAAA,IAAAC,MAAA;EACvE,MAAMC,SAAS,GAAGV,KAAK,CAACC,OAAO,CAAEH,IAAK,CAAC,GAAGA,IAAI,GAAGA,IAAI,CAACa,KAAK,CAAE,GAAI,CAAC;EAClE,IAAIZ,KAAK,GAAGF,MAAM;EAClBa,SAAS,CAACE,OAAO,CAAIC,SAAS,IAAM;IACnCd,KAAK,GAAGA,KAAK,GAAIc,SAAS,CAAE;EAC7B,CAAE,CAAC;EACH,QAAAJ,MAAA,GAAOV,KAAK,cAAAU,MAAA,cAAAA,MAAA,GAAID,YAAY;AAC7B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASM,cAAcA,CAAEC,KAAK,EAAEC,QAAQ,EAAG;EACjD,MAAMC,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC;EACtB,OAAOH,KAAK,CAACI,MAAM,CAAIC,IAAI,IAAM;IAChC,MAAMrB,KAAK,GAAGqB,IAAI,CAAEJ,QAAQ,CAAE;IAC9B,OAAOC,IAAI,CAACI,GAAG,CAAEtB,KAAM,CAAC,GAAG,KAAK,GAAGkB,IAAI,CAACK,GAAG,CAAEvB,KAAM,CAAC;EACrD,CAAE,CAAC;AACJ","ignoreList":[]}