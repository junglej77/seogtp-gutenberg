{"version":3,"names":["NEW_TAB_REL","NEW_TAB_TARGET","NOFOLLOW_REL","prependHTTP","getUpdatedLinkAttributes","rel","url","opensInNewTab","nofollow","newLinkTarget","updatedRel","includes","relRegex","RegExp","replace","trim","linkTarget","undefined"],"sources":["D:/jungle/gutenberg/packages/block-library/src/button/get-updated-link-attributes.js"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport { NEW_TAB_REL, NEW_TAB_TARGET, NOFOLLOW_REL } from './constants';\r\n\r\n/**\r\n * prependHTTP：从 WordPress 的 @wordpress/url 模块中引入的一个函数，\r\n * 用于确保链接以 http:// 或 https:// 开头。如果链接没有协议前缀，该函数会自动添加 http://。\r\n */\r\nimport { prependHTTP } from '@wordpress/url';\r\nexport function getUpdatedLinkAttributes( {\r\n\trel = '',\r\n\turl = '',\r\n\topensInNewTab,\r\n\tnofollow,\r\n} ) {\r\n\tlet newLinkTarget; // 用来存储新链接的 target 属性值，初始化为 undefined。\r\n\tlet updatedRel = rel; // 对传入的 rel 属性进行操作，并将其存储到 updatedRel 变量中。\r\n\t/**\r\n\t * 如果 opensInNewTab 为 true：\r\n\r\n\t\t将 newLinkTarget 设置为 NEW_TAB_TARGET（通常为 _blank，表示在新标签页打开链接）。\r\n\t\t检查 updatedRel 中是否已经包含 NEW_TAB_REL（例如 noopener noreferrer）：\r\n\t\t如果已包含，保留原值。\r\n\t\t如果未包含，添加 NEW_TAB_REL 到 updatedRel 中。\r\n\r\n\t\t如果 opensInNewTab 为 false：\r\n\r\n\t\t使用正则表达式 relRegex 从 updatedRel 中移除 NEW_TAB_REL，并移除多余的空格。\r\n\t*/\r\n\tif ( opensInNewTab ) {\r\n\t\tnewLinkTarget = NEW_TAB_TARGET;\r\n\t\tupdatedRel = updatedRel?.includes( NEW_TAB_REL )\r\n\t\t\t? updatedRel\r\n\t\t\t: updatedRel + ` ${ NEW_TAB_REL }`;\r\n\t} else {\r\n\t\tconst relRegex = new RegExp( `\\\\b${ NEW_TAB_REL }\\\\s*`, 'g' );\r\n\t\tupdatedRel = updatedRel?.replace( relRegex, '' ).trim();\r\n\t}\r\n\t/**\r\n\t * 如果 nofollow 为 true：\r\n\r\n\t\t检查 updatedRel 中是否包含 nofollow 值 (NOFOLLOW_REL)：\r\n\t\t如果已包含，保持不变。\r\n\t\t如果未包含，添加 nofollow 到 updatedRel。\r\n\r\n\t\t如果 nofollow 为 false：\r\n\r\n\t\t使用正则表达式 relRegex 从 updatedRel 中移除 nofollow，并移除多余的空格。\r\n\t*/\r\n\tif ( nofollow ) {\r\n\t\tupdatedRel = updatedRel?.includes( NOFOLLOW_REL )\r\n\t\t\t? updatedRel\r\n\t\t\t: updatedRel + ` ${ NOFOLLOW_REL }`;\r\n\t} else {\r\n\t\tconst relRegex = new RegExp( `\\\\b${ NOFOLLOW_REL }\\\\s*`, 'g' );\r\n\t\tupdatedRel = updatedRel?.replace( relRegex, '' ).trim();\r\n\t}\r\n\r\n\treturn {\r\n\t\turl: prependHTTP( url ),\r\n\t\tlinkTarget: newLinkTarget,\r\n\t\trel: updatedRel || undefined,\r\n\t};\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,WAAW,EAAEC,cAAc,EAAEC,YAAY,QAAQ,aAAa;;AAEvE;AACA;AACA;AACA;AACA,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAO,SAASC,wBAAwBA,CAAE;EACzCC,GAAG,GAAG,EAAE;EACRC,GAAG,GAAG,EAAE;EACRC,aAAa;EACbC;AACD,CAAC,EAAG;EACH,IAAIC,aAAa,CAAC,CAAC;EACnB,IAAIC,UAAU,GAAGL,GAAG,CAAC,CAAC;EACtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,IAAKE,aAAa,EAAG;IACpBE,aAAa,GAAGR,cAAc;IAC9BS,UAAU,GAAGA,UAAU,EAAEC,QAAQ,CAAEX,WAAY,CAAC,GAC7CU,UAAU,GACVA,UAAU,GAAI,IAAIV,WAAa,EAAC;EACpC,CAAC,MAAM;IACN,MAAMY,QAAQ,GAAG,IAAIC,MAAM,CAAG,MAAMb,WAAa,MAAK,EAAE,GAAI,CAAC;IAC7DU,UAAU,GAAGA,UAAU,EAAEI,OAAO,CAAEF,QAAQ,EAAE,EAAG,CAAC,CAACG,IAAI,CAAC,CAAC;EACxD;EACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,IAAKP,QAAQ,EAAG;IACfE,UAAU,GAAGA,UAAU,EAAEC,QAAQ,CAAET,YAAa,CAAC,GAC9CQ,UAAU,GACVA,UAAU,GAAI,IAAIR,YAAc,EAAC;EACrC,CAAC,MAAM;IACN,MAAMU,QAAQ,GAAG,IAAIC,MAAM,CAAG,MAAMX,YAAc,MAAK,EAAE,GAAI,CAAC;IAC9DQ,UAAU,GAAGA,UAAU,EAAEI,OAAO,CAAEF,QAAQ,EAAE,EAAG,CAAC,CAACG,IAAI,CAAC,CAAC;EACxD;EAEA,OAAO;IACNT,GAAG,EAAEH,WAAW,CAAEG,GAAI,CAAC;IACvBU,UAAU,EAAEP,aAAa;IACzBJ,GAAG,EAAEK,UAAU,IAAIO;EACpB,CAAC;AACF","ignoreList":[]}