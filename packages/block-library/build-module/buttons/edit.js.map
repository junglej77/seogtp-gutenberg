{"version":3,"names":["clsx","useBlockProps","useInnerBlocksProps","useSelect","store","blocksStore","jsx","_jsx","DEFAULT_BLOCK","name","attributesToCopy","ButtonsEdit","attributes","className","_layout$orientation","fontSize","layout","style","blockProps","typography","hasButtonVariations","select","buttonVariations","getBlockVariations","length","innerBlocksProps","defaultBlock","directInsert","template","templateInsertUpdatesSelection","orientation"],"sources":["@wordpress/block-library/src/buttons/edit.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { useBlockProps, useInnerBlocksProps } from '@wordpress/block-editor';\r\nimport { useSelect } from '@wordpress/data';\r\nimport { store as blocksStore } from '@wordpress/blocks';\r\n\r\nconst DEFAULT_BLOCK = {\r\n\tname: 'core/button',\r\n\tattributesToCopy: [\r\n\t\t'backgroundColor',\r\n\t\t'border',\r\n\t\t'className',\r\n\t\t'fontFamily',\r\n\t\t'fontSize',\r\n\t\t'gradient',\r\n\t\t'style',\r\n\t\t'textColor',\r\n\t\t'width',\r\n\t],\r\n};\r\n\r\nfunction ButtonsEdit( { attributes, className } ) {\r\n\tconst { fontSize, layout, style } = attributes;\r\n\tconst blockProps = useBlockProps( {\r\n\t\tclassName: clsx( className, {\r\n\t\t\t'has-custom-font-size': fontSize || style?.typography?.fontSize,\r\n\t\t} ),\r\n\t} );\r\n\tconst { hasButtonVariations } = useSelect( ( select ) => {\r\n\t\tconst buttonVariations = select( blocksStore ).getBlockVariations(\r\n\t\t\t'core/button',\r\n\t\t\t'inserter'\r\n\t\t);\r\n\t\treturn {\r\n\t\t\thasButtonVariations: buttonVariations.length > 0,\r\n\t\t};\r\n\t}, [] );\r\n\r\n\tconst innerBlocksProps = useInnerBlocksProps( blockProps, {\r\n\t\tdefaultBlock: DEFAULT_BLOCK,\r\n\t\t// This check should be handled by the `Inserter` internally to be consistent across all blocks that use it.\r\n\t\tdirectInsert: ! hasButtonVariations,\r\n\t\ttemplate: [ [ 'core/button' ] ],\r\n\t\ttemplateInsertUpdatesSelection: true,\r\n\t\torientation: layout?.orientation ?? 'horizontal',\r\n\t} );\r\n\r\n\treturn <div { ...innerBlocksProps } />;\r\n}\r\n\r\nexport default ButtonsEdit;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;;AAEvB;AACA;AACA;AACA,SAASC,aAAa,EAAEC,mBAAmB,QAAQ,yBAAyB;AAC5E,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,KAAK,IAAIC,WAAW,QAAQ,mBAAmB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEzD,MAAMC,aAAa,GAAG;EACrBC,IAAI,EAAE,aAAa;EACnBC,gBAAgB,EAAE,CACjB,iBAAiB,EACjB,QAAQ,EACR,WAAW,EACX,YAAY,EACZ,UAAU,EACV,UAAU,EACV,OAAO,EACP,WAAW,EACX,OAAO;AAET,CAAC;AAED,SAASC,WAAWA,CAAE;EAAEC,UAAU;EAAEC;AAAU,CAAC,EAAG;EAAA,IAAAC,mBAAA;EACjD,MAAM;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGL,UAAU;EAC9C,MAAMM,UAAU,GAAGjB,aAAa,CAAE;IACjCY,SAAS,EAAEb,IAAI,CAAEa,SAAS,EAAE;MAC3B,sBAAsB,EAAEE,QAAQ,IAAIE,KAAK,EAAEE,UAAU,EAAEJ;IACxD,CAAE;EACH,CAAE,CAAC;EACH,MAAM;IAAEK;EAAoB,CAAC,GAAGjB,SAAS,CAAIkB,MAAM,IAAM;IACxD,MAAMC,gBAAgB,GAAGD,MAAM,CAAEhB,WAAY,CAAC,CAACkB,kBAAkB,CAChE,aAAa,EACb,UACD,CAAC;IACD,OAAO;MACNH,mBAAmB,EAAEE,gBAAgB,CAACE,MAAM,GAAG;IAChD,CAAC;EACF,CAAC,EAAE,EAAG,CAAC;EAEP,MAAMC,gBAAgB,GAAGvB,mBAAmB,CAAEgB,UAAU,EAAE;IACzDQ,YAAY,EAAElB,aAAa;IAC3B;IACAmB,YAAY,EAAE,CAAEP,mBAAmB;IACnCQ,QAAQ,EAAE,CAAE,CAAE,aAAa,CAAE,CAAE;IAC/BC,8BAA8B,EAAE,IAAI;IACpCC,WAAW,GAAAhB,mBAAA,GAAEE,MAAM,EAAEc,WAAW,cAAAhB,mBAAA,cAAAA,mBAAA,GAAI;EACrC,CAAE,CAAC;EAEH,oBAAOP,IAAA;IAAA,GAAUkB;EAAgB,CAAI,CAAC;AACvC;AAEA,eAAed,WAAW","ignoreList":[]}