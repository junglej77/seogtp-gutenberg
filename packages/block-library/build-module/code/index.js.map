{"version":3,"names":["__","code","icon","initBlock","edit","metadata","$schema","apiVersion","name","title","category","description","textdomain","attributes","content","type","source","selector","__unstablePreserveWhiteSpace","supports","align","anchor","typography","fontSize","lineHeight","__experimentalFontFamily","__experimentalFontWeight","__experimentalFontStyle","__experimentalTextTransform","__experimentalTextDecoration","__experimentalLetterSpacing","__experimentalDefaultControls","spacing","margin","padding","__experimentalBorder","radius","color","width","style","text","background","gradients","interactivity","clientNavigation","save","transforms","settings","example","merge","attributesToMerge","init"],"sources":["D:/jungle/gutenberg/packages/block-library/src/code/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\nimport { code as icon } from '@wordpress/icons';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport initBlock from '../utils/init-block';\r\nimport edit from './edit';\r\nimport metadata from './block.json';\r\nimport save from './save';\r\nimport transforms from './transforms';\r\n\r\nconst { name } = metadata;\r\n\r\nexport { metadata, name };\r\n\r\nexport const settings = {\r\n\ticon,\r\n\texample: {\r\n\t\tattributes: {\r\n\t\t\t/* eslint-disable @wordpress/i18n-no-collapsible-whitespace */\r\n\t\t\t// translators: Preserve \\n markers for line breaks\r\n\t\t\tcontent: __(\r\n\t\t\t\t'// A “block” is the abstract term used\\n// to describe units of markup that\\n// when composed together, form the\\n// content or layout of a page.\\nregisterBlockType( name, settings );'\r\n\t\t\t),\r\n\t\t\t/* eslint-enable @wordpress/i18n-no-collapsible-whitespace */\r\n\t\t},\r\n\t},\r\n\tmerge( attributes, attributesToMerge ) {\r\n\t\treturn {\r\n\t\t\tcontent: attributes.content + '\\n\\n' + attributesToMerge.content,\r\n\t\t};\r\n\t},\r\n\ttransforms,\r\n\tedit,\r\n\tsave,\r\n};\r\n\r\nexport const init = () => initBlock( { name, metadata, settings } );\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,EAAE,QAAQ,iBAAiB;AACpC,SAASC,IAAI,IAAIC,IAAI,QAAQ,kBAAkB;;AAE/C;AACA;AACA;AACA,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AAAC,MAAAC,QAAA;EAAAC,OAAA;EAAAC,UAAA;EAAAC,IAAA;EAAAC,KAAA;EAAAC,QAAA;EAAAC,WAAA;EAAAC,UAAA;EAAAC,UAAA;IAAAC,OAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA;MAAAC,4BAAA;IAAA;EAAA;EAAAC,QAAA;IAAAC,KAAA;IAAAC,MAAA;IAAAC,UAAA;MAAAC,QAAA;MAAAC,UAAA;MAAAC,wBAAA;MAAAC,wBAAA;MAAAC,uBAAA;MAAAC,2BAAA;MAAAC,4BAAA;MAAAC,2BAAA;MAAAC,6BAAA;QAAAR,QAAA;MAAA;IAAA;IAAAS,OAAA;MAAAC,MAAA;MAAAC,OAAA;MAAAH,6BAAA;QAAAE,MAAA;QAAAC,OAAA;MAAA;IAAA;IAAAC,oBAAA;MAAAC,MAAA;MAAAC,KAAA;MAAAC,KAAA;MAAAC,KAAA;MAAAR,6BAAA;QAAAO,KAAA;QAAAD,KAAA;MAAA;IAAA;IAAAA,KAAA;MAAAG,IAAA;MAAAC,UAAA;MAAAC,SAAA;MAAAX,6BAAA;QAAAU,UAAA;QAAAD,IAAA;MAAA;IAAA;IAAAG,aAAA;MAAAC,gBAAA;IAAA;EAAA;EAAAL,KAAA;AAAA;AAE1B,OAAOM,IAAI,MAAM,QAAQ;AACzB,OAAOC,UAAU,MAAM,cAAc;AAErC,MAAM;EAAEtC;AAAK,CAAC,GAAGH,QAAQ;AAEzB,SAASA,QAAQ,EAAEG,IAAI;AAEvB,OAAO,MAAMuC,QAAQ,GAAG;EACvB7C,IAAI;EACJ8C,OAAO,EAAE;IACRnC,UAAU,EAAE;MACX;MACA;MACAC,OAAO,EAAEd,EAAE,CACV,yLACD;MACA;IACD;EACD,CAAC;EACDiD,KAAKA,CAAEpC,UAAU,EAAEqC,iBAAiB,EAAG;IACtC,OAAO;MACNpC,OAAO,EAAED,UAAU,CAACC,OAAO,GAAG,MAAM,GAAGoC,iBAAiB,CAACpC;IAC1D,CAAC;EACF,CAAC;EACDgC,UAAU;EACV1C,IAAI;EACJyC;AACD,CAAC;AAED,OAAO,MAAMM,IAAI,GAAGA,CAAA,KAAMhD,SAAS,CAAE;EAAEK,IAAI;EAAEH,QAAQ;EAAE0C;AAAS,CAAE,CAAC","ignoreList":[]}