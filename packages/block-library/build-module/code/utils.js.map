{"version":3,"names":["pipe","escape","content","escapeOpeningSquareBrackets","escapeProtocolInIsolatedUrls","replace"],"sources":["@wordpress/block-library/src/code/utils.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { pipe } from '@wordpress/compose';\r\n\r\n/**\r\n * Escapes ampersands, shortcodes, and links.\r\n *\r\n * @param {string} content The content of a code block.\r\n * @return {string} The given content with some characters escaped.\r\n */\r\nexport function escape( content ) {\r\n\treturn pipe(\r\n\t\tescapeOpeningSquareBrackets,\r\n\t\tescapeProtocolInIsolatedUrls\r\n\t)( content || '' );\r\n}\r\n\r\n/**\r\n * Returns the given content with all opening shortcode characters converted\r\n * into their HTML entity counterpart (i.e. [ => &#91;). For instance, a\r\n * shortcode like [embed] becomes &#91;embed]\r\n *\r\n * This function replicates the escaping of HTML tags, where a tag like\r\n * <strong> becomes &lt;strong>.\r\n *\r\n * @param {string} content The content of a code block.\r\n * @return {string} The given content with its opening shortcode characters\r\n *                  converted into their HTML entity counterpart\r\n *                  (i.e. [ => &#91;)\r\n */\r\nfunction escapeOpeningSquareBrackets( content ) {\r\n\treturn content.replace( /\\[/g, '&#91;' );\r\n}\r\n\r\n/**\r\n * Converts the first two forward slashes of any isolated URL into their HTML\r\n * counterparts (i.e. // => &#47;&#47;). For instance, https://youtube.com/watch?x\r\n * becomes https:&#47;&#47;youtube.com/watch?x.\r\n *\r\n * An isolated URL is a URL that sits in its own line, surrounded only by spacing\r\n * characters.\r\n *\r\n * See https://github.com/WordPress/wordpress-develop/blob/5.1.1/src/wp-includes/class-wp-embed.php#L403\r\n *\r\n * @param {string} content The content of a code block.\r\n * @return {string} The given content with its ampersands converted into\r\n *                  their HTML entity counterpart (i.e. & => &amp;)\r\n */\r\nfunction escapeProtocolInIsolatedUrls( content ) {\r\n\treturn content.replace(\r\n\t\t/^(\\s*https?:)\\/\\/([^\\s<>\"]+\\s*)$/m,\r\n\t\t'$1&#47;&#47;$2'\r\n\t);\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,IAAI,QAAQ,oBAAoB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAAEC,OAAO,EAAG;EACjC,OAAOF,IAAI,CACVG,2BAA2B,EAC3BC,4BACD,CAAC,CAAEF,OAAO,IAAI,EAAG,CAAC;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,2BAA2BA,CAAED,OAAO,EAAG;EAC/C,OAAOA,OAAO,CAACG,OAAO,CAAE,KAAK,EAAE,OAAQ,CAAC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,4BAA4BA,CAAEF,OAAO,EAAG;EAChD,OAAOA,OAAO,CAACG,OAAO,CACrB,mCAAmC,EACnC,gBACD,CAAC;AACF","ignoreList":[]}