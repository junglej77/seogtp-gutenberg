{"version":3,"names":["View","Dimensions","__","sprintf","PanelBody","RangeControl","FooterMessageControl","UnitControl","getValueAndUnit","alignmentHelpers","__experimentalUseCustomUnits","useCustomUnits","InspectorControls","InnerBlocks","BlockControls","BlockVerticalAlignmentToolbar","BlockVariationPicker","useSettings","store","blockEditorStore","useGlobalStyles","withDispatch","useSelect","useEffect","useState","useMemo","useCallback","memo","useResizeObserver","createBlock","columns","variations","styles","hasExplicitPercentColumnWidths","getMappedColumnWidths","getRedistributedColumnWidths","toWidthPrecision","getWidths","getWidthWithUnit","isPercentageUnit","getColumnsInRow","calculateContainerWidth","getContentWidths","ColumnsPreview","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DEFAULT_COLUMNS_NUM","MIN_COLUMNS_NUM","isFullWidth","ColumnsEditContainer","attributes","updateAlignment","updateColumns","columnCount","isSelected","onDeleteBlock","innerWidths","updateInnerColumnWidth","editorSidebarOpened","resizeListener","sizes","columnsInRow","setColumnsInRow","screenWidth","Math","floor","get","width","globalStyles","verticalAlignment","align","availableUnits","units","newColumnCount","renderAppender","style","columnAppender","children","ButtonBlockAppender","onAddBlock","contentWidths","onChangeWidth","nextWidth","valueUnit","columnId","widthWithUnit","onChangeUnit","nextUnit","index","widthWithoutUnit","parseFloat","onChange","getColumnsSliders","map","column","label","settingLabel","min","max","undefined","value","clientId","onUnitChange","onComplete","unit","preview","columnWidths","selectedColumnIndex","length","onChangeColumnsNum","title","icon","type","innerBlocksSelected","orientation","horizontal","contentResizeMode","blockWidth","contentStyle","parentWidth","ColumnsEditContainerWrapper","dispatch","ownProps","registry","setAttributes","updateBlockAttributes","getBlockOrder","select","innerBlockClientIds","forEach","innerBlockClientId","previousColumns","newColumns","replaceInnerBlocks","getBlocks","getBlockAttributes","innerBlocks","hasExplicitWidths","isAddingColumn","newColumnWidth","widths","Array","from","slice","onAddNextColumn","selectBlock","insertedBlock","removeBlock","ColumnsEdit","props","isDefaultColumns","hasParents","parentBlockAlignment","getBlockCount","getBlockParents","isEditorSidebarOpened","innerBlocksList","isContentEmpty","every","innerBlock","parents","inn","isVisible","setIsVisible","revealTimeout","setTimeout","clearTimeout","onClose"],"sources":["@wordpress/block-library/src/columns/edit.native.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport { View, Dimensions } from 'react-native';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { __, sprintf } from '@wordpress/i18n';\r\nimport {\r\n\tPanelBody,\r\n\tRangeControl,\r\n\tFooterMessageControl,\r\n\tUnitControl,\r\n\tgetValueAndUnit,\r\n\talignmentHelpers,\r\n\t__experimentalUseCustomUnits as useCustomUnits,\r\n} from '@wordpress/components';\r\nimport {\r\n\tInspectorControls,\r\n\tInnerBlocks,\r\n\tBlockControls,\r\n\tBlockVerticalAlignmentToolbar,\r\n\tBlockVariationPicker,\r\n\tuseSettings,\r\n\tstore as blockEditorStore,\r\n\tuseGlobalStyles,\r\n} from '@wordpress/block-editor';\r\nimport { withDispatch, useSelect } from '@wordpress/data';\r\nimport {\r\n\tuseEffect,\r\n\tuseState,\r\n\tuseMemo,\r\n\tuseCallback,\r\n\tmemo,\r\n} from '@wordpress/element';\r\nimport { useResizeObserver } from '@wordpress/compose';\r\nimport { createBlock } from '@wordpress/blocks';\r\nimport { columns } from '@wordpress/icons';\r\n/**\r\n * Internal dependencies\r\n */\r\nimport variations from './variations';\r\nimport styles from './editor.scss';\r\nimport {\r\n\thasExplicitPercentColumnWidths,\r\n\tgetMappedColumnWidths,\r\n\tgetRedistributedColumnWidths,\r\n\ttoWidthPrecision,\r\n\tgetWidths,\r\n\tgetWidthWithUnit,\r\n\tisPercentageUnit,\r\n} from './utils';\r\nimport {\r\n\tgetColumnsInRow,\r\n\tcalculateContainerWidth,\r\n\tgetContentWidths,\r\n} from './columnCalculations.native';\r\nimport ColumnsPreview from '../column/column-preview';\r\n\r\n/**\r\n * Number of columns to assume for template in case the user opts to skip\r\n * template option selection.\r\n *\r\n * @type {number}\r\n */\r\nconst DEFAULT_COLUMNS_NUM = 2;\r\n\r\n/**\r\n * Minimum number of columns in a row\r\n *\r\n * @type {number}\r\n */\r\nconst MIN_COLUMNS_NUM = 1;\r\n\r\nconst { isFullWidth } = alignmentHelpers;\r\n\r\nfunction ColumnsEditContainer( {\r\n\tattributes,\r\n\tupdateAlignment,\r\n\tupdateColumns,\r\n\tcolumnCount,\r\n\tisSelected,\r\n\tonDeleteBlock,\r\n\tinnerWidths,\r\n\tupdateInnerColumnWidth,\r\n\teditorSidebarOpened,\r\n} ) {\r\n\tconst [ resizeListener, sizes ] = useResizeObserver();\r\n\tconst [ columnsInRow, setColumnsInRow ] = useState( MIN_COLUMNS_NUM );\r\n\tconst screenWidth = Math.floor( Dimensions.get( 'window' ).width );\r\n\tconst globalStyles = useGlobalStyles();\r\n\r\n\tconst { verticalAlignment, align } = attributes;\r\n\tconst { width } = sizes || {};\r\n\r\n\tconst [ availableUnits ] = useSettings( 'spacing.units' );\r\n\tconst units = useCustomUnits( {\r\n\t\tavailableUnits: availableUnits || [ '%', 'px', 'em', 'rem', 'vw' ],\r\n\t} );\r\n\r\n\tuseEffect( () => {\r\n\t\tif ( columnCount === 0 ) {\r\n\t\t\tconst newColumnCount = columnCount || DEFAULT_COLUMNS_NUM;\r\n\t\t\tupdateColumns( columnCount, newColumnCount );\r\n\t\t}\r\n\t}, [] );\r\n\r\n\tuseEffect( () => {\r\n\t\tif ( width ) {\r\n\t\t\tif ( getColumnsInRow( width, columnCount ) !== columnsInRow ) {\r\n\t\t\t\tsetColumnsInRow( getColumnsInRow( width, columnCount ) );\r\n\t\t\t}\r\n\t\t}\r\n\t}, [ width, columnCount ] );\r\n\r\n\tconst renderAppender = () => {\r\n\t\tif ( isSelected ) {\r\n\t\t\treturn (\r\n\t\t\t\t<View style={ isFullWidth( align ) && styles.columnAppender }>\r\n\t\t\t\t\t<InnerBlocks.ButtonBlockAppender\r\n\t\t\t\t\t\tonAddBlock={ onAddBlock }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</View>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn null;\r\n\t};\r\n\r\n\tconst contentWidths = useMemo(\r\n\t\t() =>\r\n\t\t\tgetContentWidths(\r\n\t\t\t\tcolumnsInRow,\r\n\t\t\t\twidth,\r\n\t\t\t\tcolumnCount,\r\n\t\t\t\tinnerWidths,\r\n\t\t\t\tglobalStyles\r\n\t\t\t),\r\n\t\t[ width, columnsInRow, columnCount, innerWidths, globalStyles ]\r\n\t);\r\n\r\n\tconst onAddBlock = useCallback( () => {\r\n\t\tupdateColumns( columnCount, columnCount + 1 );\r\n\t}, [ columnCount ] );\r\n\r\n\tconst onChangeWidth = ( nextWidth, valueUnit, columnId ) => {\r\n\t\tconst widthWithUnit = getWidthWithUnit( nextWidth, valueUnit );\r\n\r\n\t\tupdateInnerColumnWidth( widthWithUnit, columnId );\r\n\t};\r\n\r\n\tconst onChangeUnit = ( nextUnit, index, columnId ) => {\r\n\t\tconst widthWithoutUnit = parseFloat(\r\n\t\t\tgetWidths( innerWidths )[ index ]\r\n\t\t);\r\n\t\tconst widthWithUnit = getWidthWithUnit( widthWithoutUnit, nextUnit );\r\n\r\n\t\tupdateInnerColumnWidth( widthWithUnit, columnId );\r\n\t};\r\n\r\n\tconst onChange = ( nextWidth, valueUnit, columnId ) => {\r\n\t\tif ( isPercentageUnit( valueUnit ) || ! valueUnit ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tonChangeWidth( nextWidth, valueUnit, columnId );\r\n\t};\r\n\r\n\tconst getColumnsSliders = useMemo( () => {\r\n\t\tif ( ! editorSidebarOpened || ! isSelected ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn innerWidths.map( ( column, index ) => {\r\n\t\t\tconst { valueUnit = '%' } =\r\n\t\t\t\tgetValueAndUnit( column.attributes.width ) || {};\r\n\t\t\tconst label = sprintf(\r\n\t\t\t\t/* translators: %d: column index. */\r\n\t\t\t\t__( 'Column %d' ),\r\n\t\t\t\tindex + 1\r\n\t\t\t);\r\n\t\t\treturn (\r\n\t\t\t\t<UnitControl\r\n\t\t\t\t\tlabel={ label }\r\n\t\t\t\t\tsettingLabel={ __( 'Width' ) }\r\n\t\t\t\t\tkey={ `${ column.clientId }-${\r\n\t\t\t\t\t\tgetWidths( innerWidths ).length\r\n\t\t\t\t\t}` }\r\n\t\t\t\t\tmin={ 1 }\r\n\t\t\t\t\tmax={\r\n\t\t\t\t\t\tisPercentageUnit( valueUnit ) || ! valueUnit\r\n\t\t\t\t\t\t\t? 100\r\n\t\t\t\t\t\t\t: undefined\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalue={ getWidths( innerWidths )[ index ] }\r\n\t\t\t\t\tonChange={ ( nextWidth ) => {\r\n\t\t\t\t\t\tonChange( nextWidth, valueUnit, column.clientId );\r\n\t\t\t\t\t} }\r\n\t\t\t\t\tonUnitChange={ ( nextUnit ) =>\r\n\t\t\t\t\t\tonChangeUnit( nextUnit, index, column.clientId )\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonComplete={ ( nextWidth ) => {\r\n\t\t\t\t\t\tonChangeWidth( nextWidth, valueUnit, column.clientId );\r\n\t\t\t\t\t} }\r\n\t\t\t\t\tunit={ valueUnit }\r\n\t\t\t\t\tunits={ units }\r\n\t\t\t\t\tpreview={\r\n\t\t\t\t\t\t<ColumnsPreview\r\n\t\t\t\t\t\t\tcolumnWidths={ getWidths( innerWidths, false ) }\r\n\t\t\t\t\t\t\tselectedColumnIndex={ index }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t} );\r\n\t}, [ editorSidebarOpened, isSelected, innerWidths ] );\r\n\r\n\tconst onChangeColumnsNum = useCallback(\r\n\t\t( value ) => {\r\n\t\t\tupdateColumns( columnCount, value );\r\n\t\t},\r\n\t\t[ columnCount ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{ isSelected && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<InspectorControls>\r\n\t\t\t\t\t\t<PanelBody title={ __( 'Columns Settings' ) }>\r\n\t\t\t\t\t\t\t<RangeControl\r\n\t\t\t\t\t\t\t\tlabel={ __( 'Number of columns' ) }\r\n\t\t\t\t\t\t\t\ticon={ columns }\r\n\t\t\t\t\t\t\t\tvalue={ columnCount }\r\n\t\t\t\t\t\t\t\tonChange={ onChangeColumnsNum }\r\n\t\t\t\t\t\t\t\tmin={ MIN_COLUMNS_NUM }\r\n\t\t\t\t\t\t\t\tmax={ columnCount + 1 }\r\n\t\t\t\t\t\t\t\ttype=\"stepper\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{ getColumnsSliders }\r\n\t\t\t\t\t\t</PanelBody>\r\n\t\t\t\t\t\t<PanelBody>\r\n\t\t\t\t\t\t\t<FooterMessageControl\r\n\t\t\t\t\t\t\t\tlabel={ __(\r\n\t\t\t\t\t\t\t\t\t'Note: Column layout may vary between themes and screen sizes'\r\n\t\t\t\t\t\t\t\t) }\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</PanelBody>\r\n\t\t\t\t\t</InspectorControls>\r\n\t\t\t\t\t<BlockControls>\r\n\t\t\t\t\t\t<BlockVerticalAlignmentToolbar\r\n\t\t\t\t\t\t\tonChange={ updateAlignment }\r\n\t\t\t\t\t\t\tvalue={ verticalAlignment }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</BlockControls>\r\n\t\t\t\t</>\r\n\t\t\t) }\r\n\t\t\t<View style={ isSelected && styles.innerBlocksSelected }>\r\n\t\t\t\t{ resizeListener }\r\n\t\t\t\t{ width && (\r\n\t\t\t\t\t<InnerBlocks\r\n\t\t\t\t\t\trenderAppender={ renderAppender }\r\n\t\t\t\t\t\torientation={\r\n\t\t\t\t\t\t\tcolumnsInRow > 1 ? 'horizontal' : undefined\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\thorizontal={ columnsInRow > 1 }\r\n\t\t\t\t\t\tcontentResizeMode=\"stretch\"\r\n\t\t\t\t\t\tonAddBlock={ onAddBlock }\r\n\t\t\t\t\t\tonDeleteBlock={\r\n\t\t\t\t\t\t\tcolumnCount === 1 ? onDeleteBlock : undefined\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tblockWidth={ width }\r\n\t\t\t\t\t\tcontentStyle={ contentWidths }\r\n\t\t\t\t\t\tparentWidth={\r\n\t\t\t\t\t\t\tisFullWidth( align ) && columnCount === 0\r\n\t\t\t\t\t\t\t\t? screenWidth\r\n\t\t\t\t\t\t\t\t: calculateContainerWidth( width, columnsInRow )\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) }\r\n\t\t\t</View>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst ColumnsEditContainerWrapper = withDispatch(\r\n\t( dispatch, ownProps, registry ) => ( {\r\n\t\t/**\r\n\t\t * Update all child Column blocks with a new vertical alignment setting\r\n\t\t * based on whatever alignment is passed in. This allows change to parent\r\n\t\t * to overide anything set on a individual column basis.\r\n\t\t *\r\n\t\t * @param {string} verticalAlignment the vertical alignment setting\r\n\t\t */\r\n\t\tupdateAlignment( verticalAlignment ) {\r\n\t\t\tconst { clientId, setAttributes } = ownProps;\r\n\t\t\tconst { updateBlockAttributes } = dispatch( blockEditorStore );\r\n\t\t\tconst { getBlockOrder } = registry.select( blockEditorStore );\r\n\r\n\t\t\t// Update own alignment.\r\n\t\t\tsetAttributes( { verticalAlignment } );\r\n\r\n\t\t\t// Update all child Column Blocks to match.\r\n\t\t\tconst innerBlockClientIds = getBlockOrder( clientId );\r\n\t\t\tinnerBlockClientIds.forEach( ( innerBlockClientId ) => {\r\n\t\t\t\tupdateBlockAttributes( innerBlockClientId, {\r\n\t\t\t\t\tverticalAlignment,\r\n\t\t\t\t} );\r\n\t\t\t} );\r\n\t\t},\r\n\t\tupdateInnerColumnWidth( value, columnId ) {\r\n\t\t\tconst { updateBlockAttributes } = dispatch( blockEditorStore );\r\n\r\n\t\t\tupdateBlockAttributes( columnId, {\r\n\t\t\t\twidth: value,\r\n\t\t\t} );\r\n\t\t},\r\n\t\t/**\r\n\t\t * Updates the column columnCount, including necessary revisions to child Column\r\n\t\t * blocks to grant required or redistribute available space.\r\n\t\t *\r\n\t\t * @param {number} previousColumns Previous column columnCount.\r\n\t\t * @param {number} newColumns      New column columnCount.\r\n\t\t */\r\n\t\tupdateColumns( previousColumns, newColumns ) {\r\n\t\t\tconst { clientId } = ownProps;\r\n\t\t\tconst { replaceInnerBlocks } = dispatch( blockEditorStore );\r\n\t\t\tconst { getBlocks, getBlockAttributes } =\r\n\t\t\t\tregistry.select( blockEditorStore );\r\n\r\n\t\t\tlet innerBlocks = getBlocks( clientId );\r\n\t\t\tconst hasExplicitWidths =\r\n\t\t\t\thasExplicitPercentColumnWidths( innerBlocks );\r\n\r\n\t\t\t// Redistribute available width for existing inner blocks.\r\n\t\t\tconst isAddingColumn = newColumns > previousColumns;\r\n\r\n\t\t\t// Get verticalAlignment from Columns block to set the same to new Column.\r\n\t\t\tconst { verticalAlignment } = getBlockAttributes( clientId ) || {};\r\n\r\n\t\t\tif ( isAddingColumn && hasExplicitWidths ) {\r\n\t\t\t\t// If adding a new column, assign width to the new column equal to\r\n\t\t\t\t// as if it were `1 / columns` of the total available space.\r\n\t\t\t\tconst newColumnWidth = toWidthPrecision( 100 / newColumns );\r\n\r\n\t\t\t\t// Redistribute in consideration of pending block insertion as\r\n\t\t\t\t// constraining the available working width.\r\n\t\t\t\tconst widths = getRedistributedColumnWidths(\r\n\t\t\t\t\tinnerBlocks,\r\n\t\t\t\t\t100 - newColumnWidth\r\n\t\t\t\t);\r\n\r\n\t\t\t\tinnerBlocks = [\r\n\t\t\t\t\t...getMappedColumnWidths( innerBlocks, widths ),\r\n\t\t\t\t\t...Array.from( {\r\n\t\t\t\t\t\tlength: newColumns - previousColumns,\r\n\t\t\t\t\t} ).map( () => {\r\n\t\t\t\t\t\treturn createBlock( 'core/column', {\r\n\t\t\t\t\t\t\twidth: `${ newColumnWidth }%`,\r\n\t\t\t\t\t\t\tverticalAlignment,\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t} ),\r\n\t\t\t\t];\r\n\t\t\t} else if ( isAddingColumn ) {\r\n\t\t\t\tinnerBlocks = [\r\n\t\t\t\t\t...innerBlocks,\r\n\t\t\t\t\t...Array.from( {\r\n\t\t\t\t\t\tlength: newColumns - previousColumns,\r\n\t\t\t\t\t} ).map( () => {\r\n\t\t\t\t\t\treturn createBlock( 'core/column', {\r\n\t\t\t\t\t\t\tverticalAlignment,\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t} ),\r\n\t\t\t\t];\r\n\t\t\t} else {\r\n\t\t\t\t// The removed column will be the last of the inner blocks.\r\n\t\t\t\tinnerBlocks = innerBlocks.slice(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\t-( previousColumns - newColumns )\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif ( hasExplicitWidths ) {\r\n\t\t\t\t\t// Redistribute as if block is already removed.\r\n\t\t\t\t\tconst widths = getRedistributedColumnWidths(\r\n\t\t\t\t\t\tinnerBlocks,\r\n\t\t\t\t\t\t100\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tinnerBlocks = getMappedColumnWidths( innerBlocks, widths );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treplaceInnerBlocks( clientId, innerBlocks );\r\n\t\t},\r\n\t\tonAddNextColumn: () => {\r\n\t\t\tconst { clientId } = ownProps;\r\n\t\t\tconst { replaceInnerBlocks, selectBlock } =\r\n\t\t\t\tdispatch( blockEditorStore );\r\n\t\t\tconst { getBlocks, getBlockAttributes } =\r\n\t\t\t\tregistry.select( blockEditorStore );\r\n\r\n\t\t\t// Get verticalAlignment from Columns block to set the same to new Column.\r\n\t\t\tconst { verticalAlignment } = getBlockAttributes( clientId );\r\n\r\n\t\t\tconst innerBlocks = getBlocks( clientId );\r\n\r\n\t\t\tconst insertedBlock = createBlock( 'core/column', {\r\n\t\t\t\tverticalAlignment,\r\n\t\t\t} );\r\n\r\n\t\t\treplaceInnerBlocks(\r\n\t\t\t\tclientId,\r\n\t\t\t\t[ ...innerBlocks, insertedBlock ],\r\n\t\t\t\ttrue\r\n\t\t\t);\r\n\t\t\tselectBlock( insertedBlock.clientId );\r\n\t\t},\r\n\t\tonDeleteBlock: () => {\r\n\t\t\tconst { clientId } = ownProps;\r\n\t\t\tconst { removeBlock } = dispatch( blockEditorStore );\r\n\t\t\tremoveBlock( clientId );\r\n\t\t},\r\n\t} )\r\n)( memo( ColumnsEditContainer ) );\r\n\r\nconst ColumnsEdit = ( props ) => {\r\n\tconst { clientId, isSelected, style } = props;\r\n\tconst {\r\n\t\tcolumnCount,\r\n\t\tisDefaultColumns,\r\n\t\tinnerBlocks,\r\n\t\thasParents,\r\n\t\tparentBlockAlignment,\r\n\t\teditorSidebarOpened,\r\n\t} = useSelect(\r\n\t\t( select ) => {\r\n\t\t\tconst {\r\n\t\t\t\tgetBlockCount,\r\n\t\t\t\tgetBlocks,\r\n\t\t\t\tgetBlockParents,\r\n\t\t\t\tgetBlockAttributes,\r\n\t\t\t} = select( blockEditorStore );\r\n\t\t\tconst { isEditorSidebarOpened } = select( 'core/edit-post' );\r\n\r\n\t\t\tconst innerBlocksList = getBlocks( clientId );\r\n\r\n\t\t\tconst isContentEmpty = innerBlocksList.every(\r\n\t\t\t\t( innerBlock ) => innerBlock.innerBlocks.length === 0\r\n\t\t\t);\r\n\r\n\t\t\tconst parents = getBlockParents( clientId, true );\r\n\r\n\t\t\treturn {\r\n\t\t\t\tcolumnCount: getBlockCount( clientId ),\r\n\t\t\t\tisDefaultColumns: isContentEmpty,\r\n\t\t\t\tinnerBlocks: innerBlocksList,\r\n\t\t\t\thasParents: parents.length > 0,\r\n\t\t\t\tparentBlockAlignment: getBlockAttributes( parents[ 0 ] )?.align,\r\n\t\t\t\teditorSidebarOpened: isSelected && isEditorSidebarOpened(),\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ clientId, isSelected ]\r\n\t);\r\n\r\n\tconst innerWidths = useMemo(\r\n\t\t() =>\r\n\t\t\tinnerBlocks.map( ( inn ) => ( {\r\n\t\t\t\tclientId: inn.clientId,\r\n\t\t\t\tattributes: { width: inn.attributes.width },\r\n\t\t\t} ) ),\r\n\t\t[ innerBlocks ]\r\n\t);\r\n\r\n\tconst [ isVisible, setIsVisible ] = useState( false );\r\n\r\n\tuseEffect( () => {\r\n\t\tif ( isSelected && isDefaultColumns ) {\r\n\t\t\tconst revealTimeout = setTimeout( () => setIsVisible( true ), 100 );\r\n\r\n\t\t\treturn () => clearTimeout( revealTimeout );\r\n\t\t}\r\n\t}, [] );\r\n\r\n\tconst onClose = useCallback( () => {\r\n\t\tsetIsVisible( false );\r\n\t}, [] );\r\n\r\n\treturn (\r\n\t\t<View style={ style }>\r\n\t\t\t<ColumnsEditContainerWrapper\r\n\t\t\t\tcolumnCount={ columnCount }\r\n\t\t\t\tinnerWidths={ innerWidths }\r\n\t\t\t\thasParents={ hasParents }\r\n\t\t\t\tparentBlockAlignment={ parentBlockAlignment }\r\n\t\t\t\teditorSidebarOpened={ editorSidebarOpened }\r\n\t\t\t\t{ ...props }\r\n\t\t\t/>\r\n\t\t\t<BlockVariationPicker\r\n\t\t\t\tvariations={ variations }\r\n\t\t\t\tonClose={ onClose }\r\n\t\t\t\tclientId={ clientId }\r\n\t\t\t\tisVisible={ isVisible }\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nexport default ColumnsEdit;\r\n"],"mappings":"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","ignoreList":[]}