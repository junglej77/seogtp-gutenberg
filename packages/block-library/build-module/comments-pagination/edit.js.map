{"version":3,"names":["__","InspectorControls","useBlockProps","useInnerBlocksProps","store","blockEditorStore","Warning","useSelect","PanelBody","CommentsPaginationArrowControls","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","TEMPLATE","QueryPaginationEdit","attributes","paginationArrow","setAttributes","clientId","hasNextPreviousBlocks","select","getBlocks","innerBlocks","find","innerBlock","includes","name","blockProps","innerBlocksProps","template","pageComments","getSettings","__experimentalDiscussionSettings","children","title","value","onChange"],"sources":["@wordpress/block-library/src/comments-pagination/edit.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\nimport {\r\n\tInspectorControls,\r\n\tuseBlockProps,\r\n\tuseInnerBlocksProps,\r\n\tstore as blockEditorStore,\r\n\tWarning,\r\n} from '@wordpress/block-editor';\r\nimport { useSelect } from '@wordpress/data';\r\nimport { PanelBody } from '@wordpress/components';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { CommentsPaginationArrowControls } from './comments-pagination-arrow-controls';\r\n\r\nconst TEMPLATE = [\r\n\t[ 'core/comments-pagination-previous' ],\r\n\t[ 'core/comments-pagination-numbers' ],\r\n\t[ 'core/comments-pagination-next' ],\r\n];\r\n\r\nexport default function QueryPaginationEdit( {\r\n\tattributes: { paginationArrow },\r\n\tsetAttributes,\r\n\tclientId,\r\n} ) {\r\n\tconst hasNextPreviousBlocks = useSelect( ( select ) => {\r\n\t\tconst { getBlocks } = select( blockEditorStore );\r\n\t\tconst innerBlocks = getBlocks( clientId );\r\n\t\t/**\r\n\t\t * Show the `paginationArrow` control only if a\r\n\t\t * Comments Pagination Next or Comments Pagination Previous\r\n\t\t * block exists.\r\n\t\t */\r\n\t\treturn innerBlocks?.find( ( innerBlock ) => {\r\n\t\t\treturn [\r\n\t\t\t\t'core/comments-pagination-previous',\r\n\t\t\t\t'core/comments-pagination-next',\r\n\t\t\t].includes( innerBlock.name );\r\n\t\t} );\r\n\t}, [] );\r\n\r\n\tconst blockProps = useBlockProps();\r\n\tconst innerBlocksProps = useInnerBlocksProps( blockProps, {\r\n\t\ttemplate: TEMPLATE,\r\n\t} );\r\n\r\n\t// Get the Discussion settings\r\n\tconst pageComments = useSelect( ( select ) => {\r\n\t\tconst { getSettings } = select( blockEditorStore );\r\n\t\tconst { __experimentalDiscussionSettings } = getSettings();\r\n\t\treturn __experimentalDiscussionSettings?.pageComments;\r\n\t}, [] );\r\n\r\n\t// If paging comments is not enabled in the Discussion Settings then hide the pagination\r\n\t// controls. We don't want to remove them from the template so that when the user enables\r\n\t// paging comments, the controls will be visible.\r\n\tif ( ! pageComments ) {\r\n\t\treturn (\r\n\t\t\t<Warning>\r\n\t\t\t\t{ __(\r\n\t\t\t\t\t'Comments Pagination block: paging comments is disabled in the Discussion Settings'\r\n\t\t\t\t) }\r\n\t\t\t</Warning>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{ hasNextPreviousBlocks && (\r\n\t\t\t\t<InspectorControls>\r\n\t\t\t\t\t<PanelBody title={ __( 'Settings' ) }>\r\n\t\t\t\t\t\t<CommentsPaginationArrowControls\r\n\t\t\t\t\t\t\tvalue={ paginationArrow }\r\n\t\t\t\t\t\t\tonChange={ ( value ) => {\r\n\t\t\t\t\t\t\t\tsetAttributes( { paginationArrow: value } );\r\n\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</PanelBody>\r\n\t\t\t\t</InspectorControls>\r\n\t\t\t) }\r\n\t\t\t<div { ...innerBlocksProps } />\r\n\t\t</>\r\n\t);\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,EAAE,QAAQ,iBAAiB;AACpC,SACCC,iBAAiB,EACjBC,aAAa,EACbC,mBAAmB,EACnBC,KAAK,IAAIC,gBAAgB,EACzBC,OAAO,QACD,yBAAyB;AAChC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,SAAS,QAAQ,uBAAuB;;AAEjD;AACA;AACA;AACA,SAASC,+BAA+B,QAAQ,sCAAsC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEvF,MAAMC,QAAQ,GAAG,CAChB,CAAE,mCAAmC,CAAE,EACvC,CAAE,kCAAkC,CAAE,EACtC,CAAE,+BAA+B,CAAE,CACnC;AAED,eAAe,SAASC,mBAAmBA,CAAE;EAC5CC,UAAU,EAAE;IAAEC;EAAgB,CAAC;EAC/BC,aAAa;EACbC;AACD,CAAC,EAAG;EACH,MAAMC,qBAAqB,GAAGf,SAAS,CAAIgB,MAAM,IAAM;IACtD,MAAM;MAAEC;IAAU,CAAC,GAAGD,MAAM,CAAElB,gBAAiB,CAAC;IAChD,MAAMoB,WAAW,GAAGD,SAAS,CAAEH,QAAS,CAAC;IACzC;AACF;AACA;AACA;AACA;IACE,OAAOI,WAAW,EAAEC,IAAI,CAAIC,UAAU,IAAM;MAC3C,OAAO,CACN,mCAAmC,EACnC,+BAA+B,CAC/B,CAACC,QAAQ,CAAED,UAAU,CAACE,IAAK,CAAC;IAC9B,CAAE,CAAC;EACJ,CAAC,EAAE,EAAG,CAAC;EAEP,MAAMC,UAAU,GAAG5B,aAAa,CAAC,CAAC;EAClC,MAAM6B,gBAAgB,GAAG5B,mBAAmB,CAAE2B,UAAU,EAAE;IACzDE,QAAQ,EAAEhB;EACX,CAAE,CAAC;;EAEH;EACA,MAAMiB,YAAY,GAAG1B,SAAS,CAAIgB,MAAM,IAAM;IAC7C,MAAM;MAAEW;IAAY,CAAC,GAAGX,MAAM,CAAElB,gBAAiB,CAAC;IAClD,MAAM;MAAE8B;IAAiC,CAAC,GAAGD,WAAW,CAAC,CAAC;IAC1D,OAAOC,gCAAgC,EAAEF,YAAY;EACtD,CAAC,EAAE,EAAG,CAAC;;EAEP;EACA;EACA;EACA,IAAK,CAAEA,YAAY,EAAG;IACrB,oBACCtB,IAAA,CAACL,OAAO;MAAA8B,QAAA,EACLpC,EAAE,CACH,mFACD;IAAC,CACO,CAAC;EAEZ;EAEA,oBACCe,KAAA,CAAAF,SAAA;IAAAuB,QAAA,GACGd,qBAAqB,iBACtBX,IAAA,CAACV,iBAAiB;MAAAmC,QAAA,eACjBzB,IAAA,CAACH,SAAS;QAAC6B,KAAK,EAAGrC,EAAE,CAAE,UAAW,CAAG;QAAAoC,QAAA,eACpCzB,IAAA,CAACF,+BAA+B;UAC/B6B,KAAK,EAAGnB,eAAiB;UACzBoB,QAAQ,EAAKD,KAAK,IAAM;YACvBlB,aAAa,CAAE;cAAED,eAAe,EAAEmB;YAAM,CAAE,CAAC;UAC5C;QAAG,CACH;MAAC,CACQ;IAAC,CACM,CACnB,eACD3B,IAAA;MAAA,GAAUoB;IAAgB,CAAI,CAAC;EAAA,CAC9B,CAAC;AAEL","ignoreList":[]}