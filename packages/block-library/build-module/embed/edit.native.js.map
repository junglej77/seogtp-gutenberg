{"version":3,"names":["createUpgradedEmbedBlock","getClassNames","removeAspectRatioClasses","fallback","getEmbedInfoByProvider","getMergedAttributesWithPreview","EmbedControls","embedContentIcon","EmbedLoading","EmbedPlaceholder","EmbedPreview","EmbedLinkSettings","clsx","_x","useCallback","useState","useEffect","useDispatch","useSelect","useBlockProps","store","blockEditorStore","coreStore","View","getAuthority","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","PREVIEWABLE_PROVIDERS","NOT_PREVIEWABLE_WP_EMBED_PROVIDERS","WP_EMBED_TYPE","EmbedEdit","props","attributes","align","providerNameSlug","previewable","responsive","url","isSelected","onReplace","setAttributes","insertBlocksAfter","onFocus","clientId","defaultEmbedInfo","title","icon","embedInfoByProvider","wasBlockJustInserted","select","isEditingURL","setIsEditingURL","showEmbedBottomSheet","setShowEmbedBottomSheet","invalidateResolution","preview","fetching","themeSupportsResponsive","cannotEmbed","getEmbedPreview","hasFinishedResolution","isPreviewEmbedFallback","getThemeSupports","embedPreview","hasResolvedEmbedPreview","previewIsFallback","badEmbedProvider","html","type","undefined","wordpressCantEmbed","code","validPreview","getMergedAttributes","toggleResponsive","allowResponsive","className","newAllowResponsive","newURL","replace","URL","host","toString","mergedAttributes","upgradedBlock","onEditURL","value","blockClass","blockProps","children","showEmbedPlaceholder","classFromPreview","isProviderPreviewable","includes","linkLabel","label","onPress","event","tryAgain","openEmbedLinkSettings","blockSupportsResponsive","isDefaultEmbedInfo","autoFocus","isVisible","onClose","onSubmit","withBottomSheet"],"sources":["@wordpress/block-library/src/embed/edit.native.js"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport {\r\n\tcreateUpgradedEmbedBlock,\r\n\tgetClassNames,\r\n\tremoveAspectRatioClasses,\r\n\tfallback,\r\n\tgetEmbedInfoByProvider,\r\n\tgetMergedAttributesWithPreview,\r\n} from './util';\r\nimport EmbedControls from './embed-controls';\r\nimport { embedContentIcon } from './icons';\r\nimport EmbedLoading from './embed-loading';\r\nimport EmbedPlaceholder from './embed-placeholder';\r\nimport EmbedPreview from './embed-preview';\r\nimport EmbedLinkSettings from './embed-link-settings';\r\n\r\n/**\r\n * External dependencies\r\n */\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { _x } from '@wordpress/i18n';\r\nimport { useCallback, useState, useEffect } from '@wordpress/element';\r\nimport { useDispatch, useSelect } from '@wordpress/data';\r\nimport {\r\n\tuseBlockProps,\r\n\tstore as blockEditorStore,\r\n} from '@wordpress/block-editor';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\nimport { View } from '@wordpress/primitives';\r\nimport { getAuthority } from '@wordpress/url';\r\n\r\n// The inline preview feature will be released progressible, for this reason\r\n// the embed will only be considered previewable for the following providers list.\r\nconst PREVIEWABLE_PROVIDERS = [ 'youtube', 'twitter', 'instagram', 'vimeo' ];\r\n// Some providers are rendering the inline preview as a WordPress embed and\r\n// are not supported yet, so we need to disallow them with a fixed providers list.\r\nconst NOT_PREVIEWABLE_WP_EMBED_PROVIDERS = [ 'pinterest' ];\r\n\r\nconst WP_EMBED_TYPE = 'wp-embed';\r\n\r\nconst EmbedEdit = ( props ) => {\r\n\tconst {\r\n\t\tattributes: { align, providerNameSlug, previewable, responsive, url },\r\n\t\tattributes,\r\n\t\tisSelected,\r\n\t\tonReplace,\r\n\t\tsetAttributes,\r\n\t\tinsertBlocksAfter,\r\n\t\tonFocus,\r\n\t\tclientId,\r\n\t} = props;\r\n\r\n\tconst defaultEmbedInfo = {\r\n\t\ttitle: _x( 'Embed', 'block title' ),\r\n\t\ticon: embedContentIcon,\r\n\t};\r\n\tconst embedInfoByProvider = getEmbedInfoByProvider( providerNameSlug );\r\n\tconst { icon, title } = embedInfoByProvider || defaultEmbedInfo;\r\n\r\n\tconst { wasBlockJustInserted } = useSelect(\r\n\t\t( select ) => ( {\r\n\t\t\twasBlockJustInserted: select(\r\n\t\t\t\tblockEditorStore\r\n\t\t\t).wasBlockJustInserted( clientId, 'inserter_menu' ),\r\n\t\t} ),\r\n\t\t[ clientId ]\r\n\t);\r\n\tconst [ isEditingURL, setIsEditingURL ] = useState(\r\n\t\tisSelected && wasBlockJustInserted && ! url\r\n\t);\r\n\tconst [ showEmbedBottomSheet, setShowEmbedBottomSheet ] =\r\n\t\tuseState( isEditingURL );\r\n\tconst { invalidateResolution } = useDispatch( coreStore );\r\n\r\n\tconst { preview, fetching, themeSupportsResponsive, cannotEmbed } =\r\n\t\tuseSelect(\r\n\t\t\t( select ) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tgetEmbedPreview,\r\n\t\t\t\t\thasFinishedResolution,\r\n\t\t\t\t\tisPreviewEmbedFallback,\r\n\t\t\t\t\tgetThemeSupports,\r\n\t\t\t\t} = select( coreStore );\r\n\t\t\t\tif ( ! url ) {\r\n\t\t\t\t\treturn { fetching: false, cannotEmbed: false };\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst embedPreview = getEmbedPreview( url );\r\n\t\t\t\tconst hasResolvedEmbedPreview = hasFinishedResolution(\r\n\t\t\t\t\t'getEmbedPreview',\r\n\t\t\t\t\t[ url ]\r\n\t\t\t\t);\r\n\t\t\t\tconst previewIsFallback = isPreviewEmbedFallback( url );\r\n\r\n\t\t\t\t// The external oEmbed provider does not exist. We got no type info and no html.\r\n\t\t\t\tconst badEmbedProvider =\r\n\t\t\t\t\tembedPreview?.html === false &&\r\n\t\t\t\t\tembedPreview?.type === undefined;\r\n\t\t\t\t// Some WordPress URLs that can't be embedded will cause the API to return\r\n\t\t\t\t// a valid JSON response with no HTML and `code` set to 404, rather\r\n\t\t\t\t// than generating a fallback response as other embeds do.\r\n\t\t\t\tconst wordpressCantEmbed = embedPreview?.code === '404';\r\n\t\t\t\tconst validPreview =\r\n\t\t\t\t\t!! embedPreview &&\r\n\t\t\t\t\t! badEmbedProvider &&\r\n\t\t\t\t\t! wordpressCantEmbed;\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpreview: validPreview ? embedPreview : undefined,\r\n\t\t\t\t\tfetching: ! hasResolvedEmbedPreview,\r\n\t\t\t\t\tthemeSupportsResponsive:\r\n\t\t\t\t\t\tgetThemeSupports()[ 'responsive-embeds' ],\r\n\t\t\t\t\tcannotEmbed: ! validPreview || previewIsFallback,\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t[ url ]\r\n\t\t);\r\n\r\n\t/**\r\n\t * Returns the attributes derived from the preview, merged with the current attributes.\r\n\t *\r\n\t * @return {Object} Merged attributes.\r\n\t */\r\n\tconst getMergedAttributes = () =>\r\n\t\tgetMergedAttributesWithPreview(\r\n\t\t\tattributes,\r\n\t\t\tpreview,\r\n\t\t\ttitle,\r\n\t\t\tresponsive\r\n\t\t);\r\n\r\n\tconst toggleResponsive = () => {\r\n\t\tconst { allowResponsive, className } = attributes;\r\n\t\tconst { html } = preview;\r\n\t\tconst newAllowResponsive = ! allowResponsive;\r\n\r\n\t\tsetAttributes( {\r\n\t\t\tallowResponsive: newAllowResponsive,\r\n\t\t\tclassName: getClassNames(\r\n\t\t\t\thtml,\r\n\t\t\t\tclassName,\r\n\t\t\t\tresponsive && newAllowResponsive\r\n\t\t\t),\r\n\t\t} );\r\n\t};\r\n\r\n\tuseEffect( () => {\r\n\t\tif ( ! preview?.html || ! cannotEmbed || fetching ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// At this stage, we're not fetching the preview and know it can't be embedded,\r\n\t\t// so try removing any trailing slash, and resubmit.\r\n\t\tconst newURL = url.replace( /\\/$/, '' );\r\n\t\tsetIsEditingURL( false );\r\n\t\tsetAttributes( { url: newURL } );\r\n\t}, [ preview?.html, url, cannotEmbed, fetching ] );\r\n\r\n\t// Try a different provider in case the embed url is not supported.\r\n\tuseEffect( () => {\r\n\t\tif ( ! cannotEmbed || fetching || ! url ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Until X provider is supported in WordPress, as a workaround we use Twitter provider.\r\n\t\tif ( getAuthority( url ) === 'x.com' ) {\r\n\t\t\tconst newURL = new URL( url );\r\n\t\t\tnewURL.host = 'twitter.com';\r\n\t\t\tsetAttributes( { url: newURL.toString() } );\r\n\t\t}\r\n\t}, [ url, cannotEmbed, fetching, setAttributes ] );\r\n\r\n\t// Handle incoming preview.\r\n\tuseEffect( () => {\r\n\t\tif ( preview && ! isEditingURL ) {\r\n\t\t\t// When obtaining an incoming preview,\r\n\t\t\t// we set the attributes derived from the preview data.\r\n\t\t\tconst mergedAttributes = getMergedAttributes();\r\n\t\t\tsetAttributes( mergedAttributes );\r\n\r\n\t\t\tif ( onReplace ) {\r\n\t\t\t\tconst upgradedBlock = createUpgradedEmbedBlock(\r\n\t\t\t\t\tprops,\r\n\t\t\t\t\tmergedAttributes\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif ( upgradedBlock ) {\r\n\t\t\t\t\tonReplace( upgradedBlock );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, [ preview, isEditingURL ] );\r\n\r\n\tuseEffect(\r\n\t\t() => setShowEmbedBottomSheet( isEditingURL ),\r\n\t\t[ isEditingURL ]\r\n\t);\r\n\r\n\tconst onEditURL = useCallback(\r\n\t\t( value ) => {\r\n\t\t\t// If the embed URL was changed, we need to reset the aspect ratio class.\r\n\t\t\t// To do this we have to remove the existing ratio class so it can be recalculated.\r\n\t\t\tif ( attributes.url !== value ) {\r\n\t\t\t\tconst blockClass = removeAspectRatioClasses(\r\n\t\t\t\t\tattributes.className\r\n\t\t\t\t);\r\n\t\t\t\tsetAttributes( { className: blockClass } );\r\n\t\t\t}\r\n\r\n\t\t\t// The order of the following calls is important, we need to update the URL attribute before changing `isEditingURL`,\r\n\t\t\t// otherwise the side-effect that potentially replaces the block when updating the local state won't use the new URL\r\n\t\t\t// for creating the new block.\r\n\t\t\tsetAttributes( { url: value } );\r\n\t\t\tsetIsEditingURL( false );\r\n\t\t},\r\n\t\t[ attributes, setAttributes ]\r\n\t);\r\n\r\n\tconst blockProps = useBlockProps();\r\n\r\n\tif ( fetching ) {\r\n\t\treturn (\r\n\t\t\t<View { ...blockProps }>\r\n\t\t\t\t<EmbedLoading />\r\n\t\t\t</View>\r\n\t\t);\r\n\t}\r\n\r\n\tconst showEmbedPlaceholder = ! preview || cannotEmbed;\r\n\r\n\t// Even though we set attributes that get derived from the preview,\r\n\t// we don't access them directly because for the initial render,\r\n\t// the `setAttributes` call will not have taken effect. If we're\r\n\t// rendering responsive content, setting the responsive classes\r\n\t// after the preview has been rendered can result in unwanted\r\n\t// clipping or scrollbars. The `getAttributesFromPreview` function\r\n\t// that `getMergedAttributes` uses is memoized so that we're not\r\n\t// calculating them on every render.\r\n\tconst {\r\n\t\ttype,\r\n\t\tallowResponsive,\r\n\t\tclassName: classFromPreview,\r\n\t} = getMergedAttributes();\r\n\tconst className = clsx( classFromPreview, props.className );\r\n\r\n\tconst isProviderPreviewable =\r\n\t\tPREVIEWABLE_PROVIDERS.includes( providerNameSlug ) ||\r\n\t\t// For WordPress embeds, we enable the inline preview for all its providers\r\n\t\t// except the ones that are not supported yet.\r\n\t\t( WP_EMBED_TYPE === type &&\r\n\t\t\t! NOT_PREVIEWABLE_WP_EMBED_PROVIDERS.includes( providerNameSlug ) );\r\n\r\n\tconst linkLabel = WP_EMBED_TYPE === type ? 'WordPress' : title;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{ showEmbedPlaceholder ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<View { ...blockProps }>\r\n\t\t\t\t\t\t<EmbedPlaceholder\r\n\t\t\t\t\t\t\ticon={ icon }\r\n\t\t\t\t\t\t\tisSelected={ isSelected }\r\n\t\t\t\t\t\t\tlabel={ title }\r\n\t\t\t\t\t\t\tonPress={ ( event ) => {\r\n\t\t\t\t\t\t\t\tonFocus( event );\r\n\t\t\t\t\t\t\t\tsetIsEditingURL( true );\r\n\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t\tcannotEmbed={ cannotEmbed }\r\n\t\t\t\t\t\t\tfallback={ () => fallback( url, onReplace ) }\r\n\t\t\t\t\t\t\ttryAgain={ () => {\r\n\t\t\t\t\t\t\t\tinvalidateResolution( 'getEmbedPreview', [\r\n\t\t\t\t\t\t\t\t\turl,\r\n\t\t\t\t\t\t\t\t] );\r\n\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t\topenEmbedLinkSettings={ () =>\r\n\t\t\t\t\t\t\t\tsetShowEmbedBottomSheet( true )\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<EmbedControls\r\n\t\t\t\t\t\tthemeSupportsResponsive={ themeSupportsResponsive }\r\n\t\t\t\t\t\tblockSupportsResponsive={ responsive }\r\n\t\t\t\t\t\tallowResponsive={ allowResponsive }\r\n\t\t\t\t\t\ttoggleResponsive={ toggleResponsive }\r\n\t\t\t\t\t\turl={ url }\r\n\t\t\t\t\t\tlinkLabel={ linkLabel }\r\n\t\t\t\t\t\tonEditURL={ onEditURL }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<View { ...blockProps }>\r\n\t\t\t\t\t\t<EmbedPreview\r\n\t\t\t\t\t\t\talign={ align }\r\n\t\t\t\t\t\t\tclassName={ className }\r\n\t\t\t\t\t\t\tclientId={ clientId }\r\n\t\t\t\t\t\t\ticon={ icon }\r\n\t\t\t\t\t\t\tinsertBlocksAfter={ insertBlocksAfter }\r\n\t\t\t\t\t\t\tisSelected={ isSelected }\r\n\t\t\t\t\t\t\tlabel={ title }\r\n\t\t\t\t\t\t\tonFocus={ onFocus }\r\n\t\t\t\t\t\t\tpreview={ preview }\r\n\t\t\t\t\t\t\tisProviderPreviewable={ isProviderPreviewable }\r\n\t\t\t\t\t\t\tpreviewable={ previewable }\r\n\t\t\t\t\t\t\ttype={ type }\r\n\t\t\t\t\t\t\turl={ url }\r\n\t\t\t\t\t\t\tisDefaultEmbedInfo={ ! embedInfoByProvider }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</>\r\n\t\t\t) }\r\n\t\t\t<EmbedLinkSettings\r\n\t\t\t\t// eslint-disable-next-line jsx-a11y/no-autofocus\r\n\t\t\t\tautoFocus\r\n\t\t\t\tvalue={ url }\r\n\t\t\t\tlabel={ linkLabel }\r\n\t\t\t\tisVisible={ showEmbedBottomSheet }\r\n\t\t\t\tonClose={ () => setShowEmbedBottomSheet( false ) }\r\n\t\t\t\tonSubmit={ onEditURL }\r\n\t\t\t\twithBottomSheet\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default EmbedEdit;\r\n"],"mappings":"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","ignoreList":[]}