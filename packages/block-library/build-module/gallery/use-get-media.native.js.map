{"version":3,"names":["useSelect","store","coreStore","EMPTY_IMAGE_MEDIA","useGetMedia","innerBlockImages","select","_select$getMediaItems","imagesUploading","some","attributes","url","indexOf","imageIds","filter","id","undefined","map","imageBlock","length","getMediaItems","include","join","per_page","orderby"],"sources":["@wordpress/block-library/src/gallery/use-get-media.native.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useSelect } from '@wordpress/data';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\n\r\nconst EMPTY_IMAGE_MEDIA = [];\r\n\r\n/**\r\n * Retrieves the extended media info for each gallery image from the store. This is used to\r\n * determine which image size options are available for the current gallery.\r\n *\r\n * @param {Array} innerBlockImages An array of the innerBlock images currently in the gallery.\r\n *\r\n * @return {Array} An array of media info options for each gallery image.\r\n */\r\nexport default function useGetMedia( innerBlockImages = [] ) {\r\n\treturn useSelect(\r\n\t\t( select ) => {\r\n\t\t\tconst imagesUploading = innerBlockImages.some(\r\n\t\t\t\t( { attributes } ) => attributes?.url?.indexOf( 'file:' ) === 0\r\n\t\t\t);\r\n\t\t\tconst imageIds = innerBlockImages\r\n\t\t\t\t.filter( ( { attributes } ) => {\r\n\t\t\t\t\tconst { id, url } = attributes;\r\n\t\t\t\t\treturn id !== undefined && url?.indexOf( 'file:' ) !== 0;\r\n\t\t\t\t} )\r\n\t\t\t\t.map( ( imageBlock ) => imageBlock.attributes.id );\r\n\r\n\t\t\tif ( imageIds.length === 0 || imagesUploading ) {\r\n\t\t\t\treturn EMPTY_IMAGE_MEDIA;\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\tselect( coreStore ).getMediaItems( {\r\n\t\t\t\t\tinclude: imageIds.join( ',' ),\r\n\t\t\t\t\tper_page:\r\n\t\t\t\t\t\timageIds.length /* 'hard' limit necessary as unbounded queries aren't supported on native */,\r\n\t\t\t\t\torderby: 'include',\r\n\t\t\t\t} ) ?? EMPTY_IMAGE_MEDIA\r\n\t\t\t);\r\n\t\t},\r\n\t\t[ innerBlockImages ]\r\n\t);\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,KAAK,IAAIC,SAAS,QAAQ,sBAAsB;AAEzD,MAAMC,iBAAiB,GAAG,EAAE;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,WAAWA,CAAEC,gBAAgB,GAAG,EAAE,EAAG;EAC5D,OAAOL,SAAS,CACbM,MAAM,IAAM;IAAA,IAAAC,qBAAA;IACb,MAAMC,eAAe,GAAGH,gBAAgB,CAACI,IAAI,CAC5C,CAAE;MAAEC;IAAW,CAAC,KAAMA,UAAU,EAAEC,GAAG,EAAEC,OAAO,CAAE,OAAQ,CAAC,KAAK,CAC/D,CAAC;IACD,MAAMC,QAAQ,GAAGR,gBAAgB,CAC/BS,MAAM,CAAE,CAAE;MAAEJ;IAAW,CAAC,KAAM;MAC9B,MAAM;QAAEK,EAAE;QAAEJ;MAAI,CAAC,GAAGD,UAAU;MAC9B,OAAOK,EAAE,KAAKC,SAAS,IAAIL,GAAG,EAAEC,OAAO,CAAE,OAAQ,CAAC,KAAK,CAAC;IACzD,CAAE,CAAC,CACFK,GAAG,CAAIC,UAAU,IAAMA,UAAU,CAACR,UAAU,CAACK,EAAG,CAAC;IAEnD,IAAKF,QAAQ,CAACM,MAAM,KAAK,CAAC,IAAIX,eAAe,EAAG;MAC/C,OAAOL,iBAAiB;IACzB;IAEA,QAAAI,qBAAA,GACCD,MAAM,CAAEJ,SAAU,CAAC,CAACkB,aAAa,CAAE;MAClCC,OAAO,EAAER,QAAQ,CAACS,IAAI,CAAE,GAAI,CAAC;MAC7BC,QAAQ,EACPV,QAAQ,CAACM,MAAM,CAAC;MACjBK,OAAO,EAAE;IACV,CAAE,CAAC,cAAAjB,qBAAA,cAAAA,qBAAA,GAAIJ,iBAAiB;EAE1B,CAAC,EACD,CAAEE,gBAAgB,CACnB,CAAC;AACF","ignoreList":[]}