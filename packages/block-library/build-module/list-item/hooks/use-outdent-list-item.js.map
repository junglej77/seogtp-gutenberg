{"version":3,"names":["useCallback","useSelect","useDispatch","useRegistry","store","blockEditorStore","cloneBlock","useOutdentListItem","registry","moveBlocksToPosition","removeBlock","insertBlock","updateBlockListSettings","getBlockRootClientId","getBlockName","getBlockOrder","getBlockIndex","getSelectedBlockClientIds","getBlock","getBlockListSettings","getParentListItemId","id","listId","parentListItemId","clientIds","Array","isArray","length","firstClientId","parentListId","lastClientId","order","followingListItems","slice","batch","nestedListId","nestedListBlock","clientId","shouldSelectParent"],"sources":["@wordpress/block-library/src/list-item/hooks/use-outdent-list-item.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useCallback } from '@wordpress/element';\r\nimport { useSelect, useDispatch, useRegistry } from '@wordpress/data';\r\nimport { store as blockEditorStore } from '@wordpress/block-editor';\r\nimport { cloneBlock } from '@wordpress/blocks';\r\n\r\nexport default function useOutdentListItem() {\r\n\tconst registry = useRegistry();\r\n\tconst {\r\n\t\tmoveBlocksToPosition,\r\n\t\tremoveBlock,\r\n\t\tinsertBlock,\r\n\t\tupdateBlockListSettings,\r\n\t} = useDispatch( blockEditorStore );\r\n\tconst {\r\n\t\tgetBlockRootClientId,\r\n\t\tgetBlockName,\r\n\t\tgetBlockOrder,\r\n\t\tgetBlockIndex,\r\n\t\tgetSelectedBlockClientIds,\r\n\t\tgetBlock,\r\n\t\tgetBlockListSettings,\r\n\t} = useSelect( blockEditorStore );\r\n\r\n\tfunction getParentListItemId( id ) {\r\n\t\tconst listId = getBlockRootClientId( id );\r\n\t\tconst parentListItemId = getBlockRootClientId( listId );\r\n\t\tif ( ! parentListItemId ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( getBlockName( parentListItemId ) !== 'core/list-item' ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\treturn parentListItemId;\r\n\t}\r\n\r\n\treturn useCallback( ( clientIds = getSelectedBlockClientIds() ) => {\r\n\t\tif ( ! Array.isArray( clientIds ) ) {\r\n\t\t\tclientIds = [ clientIds ];\r\n\t\t}\r\n\r\n\t\tif ( ! clientIds.length ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst firstClientId = clientIds[ 0 ];\r\n\r\n\t\t// Can't outdent if it's not a list item.\r\n\t\tif ( getBlockName( firstClientId ) !== 'core/list-item' ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst parentListItemId = getParentListItemId( firstClientId );\r\n\r\n\t\t// Can't outdent if it's at the top level.\r\n\t\tif ( ! parentListItemId ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst parentListId = getBlockRootClientId( firstClientId );\r\n\t\tconst lastClientId = clientIds[ clientIds.length - 1 ];\r\n\t\tconst order = getBlockOrder( parentListId );\r\n\t\tconst followingListItems = order.slice(\r\n\t\t\tgetBlockIndex( lastClientId ) + 1\r\n\t\t);\r\n\r\n\t\tregistry.batch( () => {\r\n\t\t\tif ( followingListItems.length ) {\r\n\t\t\t\tlet nestedListId = getBlockOrder( firstClientId )[ 0 ];\r\n\r\n\t\t\t\tif ( ! nestedListId ) {\r\n\t\t\t\t\tconst nestedListBlock = cloneBlock(\r\n\t\t\t\t\t\tgetBlock( parentListId ),\r\n\t\t\t\t\t\t{},\r\n\t\t\t\t\t\t[]\r\n\t\t\t\t\t);\r\n\t\t\t\t\tnestedListId = nestedListBlock.clientId;\r\n\t\t\t\t\tinsertBlock( nestedListBlock, 0, firstClientId, false );\r\n\t\t\t\t\t// Immediately update the block list settings, otherwise\r\n\t\t\t\t\t// blocks can't be moved here due to canInsert checks.\r\n\t\t\t\t\tupdateBlockListSettings(\r\n\t\t\t\t\t\tnestedListId,\r\n\t\t\t\t\t\tgetBlockListSettings( parentListId )\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmoveBlocksToPosition(\r\n\t\t\t\t\tfollowingListItems,\r\n\t\t\t\t\tparentListId,\r\n\t\t\t\t\tnestedListId\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tmoveBlocksToPosition(\r\n\t\t\t\tclientIds,\r\n\t\t\t\tparentListId,\r\n\t\t\t\tgetBlockRootClientId( parentListItemId ),\r\n\t\t\t\tgetBlockIndex( parentListItemId ) + 1\r\n\t\t\t);\r\n\t\t\tif ( ! getBlockOrder( parentListId ).length ) {\r\n\t\t\t\tconst shouldSelectParent = false;\r\n\t\t\t\tremoveBlock( parentListId, shouldSelectParent );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\treturn true;\r\n\t}, [] );\r\n}\r\n"],"mappings":"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","ignoreList":[]}