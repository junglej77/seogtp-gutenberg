{"version":3,"names":["useRegistry","useDispatch","store","coreStore","useState","useCallback","__","sprintf","menuItemsToBlocks","CLASSIC_MENU_CONVERSION_SUCCESS","CLASSIC_MENU_CONVERSION_ERROR","CLASSIC_MENU_CONVERSION_PENDING","CLASSIC_MENU_CONVERSION_IDLE","classicMenuBeingConvertedId","useConvertClassicToBlockMenu","createNavigationMenu","throwOnError","registry","editEntityRecord","status","setStatus","error","setError","convertClassicMenuToBlockMenu","menuId","menuName","postStatus","navigationMenu","classicMenuItems","resolveSelect","getMenuItems","menus","per_page","context","err","Error","cause","innerBlocks","id","convert","then","catch","message"],"sources":["@wordpress/block-library/src/navigation/edit/use-convert-classic-menu-to-block-menu.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useRegistry, useDispatch } from '@wordpress/data';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\nimport { useState, useCallback } from '@wordpress/element';\r\nimport { __, sprintf } from '@wordpress/i18n';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport menuItemsToBlocks from '../menu-items-to-blocks';\r\n\r\nexport const CLASSIC_MENU_CONVERSION_SUCCESS = 'success';\r\nexport const CLASSIC_MENU_CONVERSION_ERROR = 'error';\r\nexport const CLASSIC_MENU_CONVERSION_PENDING = 'pending';\r\nexport const CLASSIC_MENU_CONVERSION_IDLE = 'idle';\r\n\r\n// This is needed to ensure that multiple components using this hook\r\n// do not import the same classic menu twice.\r\nlet classicMenuBeingConvertedId = null;\r\n\r\nfunction useConvertClassicToBlockMenu(\r\n\tcreateNavigationMenu,\r\n\t{ throwOnError = false } = {}\r\n) {\r\n\tconst registry = useRegistry();\r\n\tconst { editEntityRecord } = useDispatch( coreStore );\r\n\r\n\tconst [ status, setStatus ] = useState( CLASSIC_MENU_CONVERSION_IDLE );\r\n\tconst [ error, setError ] = useState( null );\r\n\r\n\tconst convertClassicMenuToBlockMenu = useCallback(\r\n\t\tasync ( menuId, menuName, postStatus = 'publish' ) => {\r\n\t\t\tlet navigationMenu;\r\n\t\t\tlet classicMenuItems;\r\n\r\n\t\t\t// 1. Fetch the classic Menu items.\r\n\t\t\ttry {\r\n\t\t\t\tclassicMenuItems = await registry\r\n\t\t\t\t\t.resolveSelect( coreStore )\r\n\t\t\t\t\t.getMenuItems( {\r\n\t\t\t\t\t\tmenus: menuId,\r\n\t\t\t\t\t\tper_page: -1,\r\n\t\t\t\t\t\tcontext: 'view',\r\n\t\t\t\t\t} );\r\n\t\t\t} catch ( err ) {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\tsprintf(\r\n\t\t\t\t\t\t// translators: %s: the name of a menu (e.g. Header navigation).\r\n\t\t\t\t\t\t__( `Unable to fetch classic menu \"%s\" from API.` ),\r\n\t\t\t\t\t\tmenuName\r\n\t\t\t\t\t),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcause: err,\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// Handle offline response which resolves to `null`.\r\n\t\t\tif ( classicMenuItems === null ) {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\tsprintf(\r\n\t\t\t\t\t\t// translators: %s: the name of a menu (e.g. Header navigation).\r\n\t\t\t\t\t\t__( `Unable to fetch classic menu \"%s\" from API.` ),\r\n\t\t\t\t\t\tmenuName\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// 2. Convert the classic items into blocks.\r\n\t\t\tconst { innerBlocks } = menuItemsToBlocks( classicMenuItems );\r\n\r\n\t\t\t// 3. Create the `wp_navigation` Post with the blocks.\r\n\t\t\ttry {\r\n\t\t\t\tnavigationMenu = await createNavigationMenu(\r\n\t\t\t\t\tmenuName,\r\n\t\t\t\t\tinnerBlocks,\r\n\t\t\t\t\tpostStatus\r\n\t\t\t\t);\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Immediately trigger editEntityRecord to change the wp_navigation post status to 'publish'.\r\n\t\t\t\t * This status change causes the menu to be displayed on the front of the site and sets the post state to be \"dirty\".\r\n\t\t\t\t * The problem being solved is if saveEditedEntityRecord was used here, the menu would be updated on the frontend and the editor _automatically_,\r\n\t\t\t\t * without user interaction.\r\n\t\t\t\t * If the user abandons the site editor without saving, there would still be a wp_navigation post created as draft.\r\n\t\t\t\t */\r\n\t\t\t\tawait editEntityRecord(\r\n\t\t\t\t\t'postType',\r\n\t\t\t\t\t'wp_navigation',\r\n\t\t\t\t\tnavigationMenu.id,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstatus: 'publish',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{ throwOnError: true }\r\n\t\t\t\t);\r\n\t\t\t} catch ( err ) {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\tsprintf(\r\n\t\t\t\t\t\t// translators: %s: the name of a menu (e.g. Header navigation).\r\n\t\t\t\t\t\t__( `Unable to create Navigation Menu \"%s\".` ),\r\n\t\t\t\t\t\tmenuName\r\n\t\t\t\t\t),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcause: err,\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\treturn navigationMenu;\r\n\t\t},\r\n\t\t[ createNavigationMenu, editEntityRecord, registry ]\r\n\t);\r\n\r\n\tconst convert = useCallback(\r\n\t\tasync ( menuId, menuName, postStatus ) => {\r\n\t\t\t// Check whether this classic menu is being imported already.\r\n\t\t\tif ( classicMenuBeingConvertedId === menuId ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Set the ID for the currently importing classic menu.\r\n\t\t\tclassicMenuBeingConvertedId = menuId;\r\n\r\n\t\t\tif ( ! menuId || ! menuName ) {\r\n\t\t\t\tsetError( 'Unable to convert menu. Missing menu details.' );\r\n\t\t\t\tsetStatus( CLASSIC_MENU_CONVERSION_ERROR );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tsetStatus( CLASSIC_MENU_CONVERSION_PENDING );\r\n\t\t\tsetError( null );\r\n\r\n\t\t\treturn await convertClassicMenuToBlockMenu(\r\n\t\t\t\tmenuId,\r\n\t\t\t\tmenuName,\r\n\t\t\t\tpostStatus\r\n\t\t\t)\r\n\t\t\t\t.then( ( navigationMenu ) => {\r\n\t\t\t\t\tsetStatus( CLASSIC_MENU_CONVERSION_SUCCESS );\r\n\t\t\t\t\t// Reset the ID for the currently importing classic menu.\r\n\t\t\t\t\tclassicMenuBeingConvertedId = null;\r\n\t\t\t\t\treturn navigationMenu;\r\n\t\t\t\t} )\r\n\t\t\t\t.catch( ( err ) => {\r\n\t\t\t\t\tsetError( err?.message );\r\n\t\t\t\t\t// Reset the ID for the currently importing classic menu.\r\n\t\t\t\t\tsetStatus( CLASSIC_MENU_CONVERSION_ERROR );\r\n\r\n\t\t\t\t\t// Reset the ID for the currently importing classic menu.\r\n\t\t\t\t\tclassicMenuBeingConvertedId = null;\r\n\r\n\t\t\t\t\t// Rethrow error for debugging.\r\n\t\t\t\t\tif ( throwOnError ) {\r\n\t\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\tsprintf(\r\n\t\t\t\t\t\t\t\t// translators: %s: the name of a menu (e.g. Header navigation).\r\n\t\t\t\t\t\t\t\t__( `Unable to create Navigation Menu \"%s\".` ),\r\n\t\t\t\t\t\t\t\tmenuName\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcause: err,\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t},\r\n\t\t[ convertClassicMenuToBlockMenu, throwOnError ]\r\n\t);\r\n\r\n\treturn {\r\n\t\tconvert,\r\n\t\tstatus,\r\n\t\terror,\r\n\t};\r\n}\r\n\r\nexport default useConvertClassicToBlockMenu;\r\n"],"mappings":"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","ignoreList":[]}