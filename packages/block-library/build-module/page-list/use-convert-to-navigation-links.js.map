{"version":3,"names":["createBlock","useDispatch","store","blockEditorStore","createNavigationLinks","pages","linkMap","navigationLinks","forEach","id","title","link","url","type","parent","_linkMap$id$innerBloc","innerBlocks","label","rendered","kind","push","parentLinkInnerBlocks","findNavigationLinkById","navigationLink","attributes","length","foundNavigationLink","convertToNavigationLinks","parentPageID","parentPage","transformSubmenus","listOfLinks","block","index","listOfLinksArray","transformedBlock","useConvertToNavigationLinks","clientId","parentClientId","replaceBlock","selectBlock"],"sources":["@wordpress/block-library/src/page-list/use-convert-to-navigation-links.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { createBlock } from '@wordpress/blocks';\r\nimport { useDispatch } from '@wordpress/data';\r\nimport { store as blockEditorStore } from '@wordpress/block-editor';\r\n\r\n/**\r\n * Converts an array of pages into a nested array of navigation link blocks.\r\n *\r\n * @param {Array} pages An array of pages.\r\n *\r\n * @return {Array} A nested array of navigation link blocks.\r\n */\r\nfunction createNavigationLinks( pages = [] ) {\r\n\tconst linkMap = {};\r\n\tconst navigationLinks = [];\r\n\tpages.forEach( ( { id, title, link: url, type, parent } ) => {\r\n\t\t// See if a placeholder exists. This is created if children appear before parents in list.\r\n\t\tconst innerBlocks = linkMap[ id ]?.innerBlocks ?? [];\r\n\t\tlinkMap[ id ] = createBlock(\r\n\t\t\t'core/navigation-link',\r\n\t\t\t{\r\n\t\t\t\tid,\r\n\t\t\t\tlabel: title.rendered,\r\n\t\t\t\turl,\r\n\t\t\t\ttype,\r\n\t\t\t\tkind: 'post-type',\r\n\t\t\t},\r\n\t\t\tinnerBlocks\r\n\t\t);\r\n\r\n\t\tif ( ! parent ) {\r\n\t\t\tnavigationLinks.push( linkMap[ id ] );\r\n\t\t} else {\r\n\t\t\tif ( ! linkMap[ parent ] ) {\r\n\t\t\t\t// Use a placeholder if the child appears before parent in list.\r\n\t\t\t\tlinkMap[ parent ] = { innerBlocks: [] };\r\n\t\t\t}\r\n\t\t\t// Although these variables are not referenced, they are needed to store the innerBlocks in memory.\r\n\t\t\tconst parentLinkInnerBlocks = linkMap[ parent ].innerBlocks;\r\n\t\t\tparentLinkInnerBlocks.push( linkMap[ id ] );\r\n\t\t}\r\n\t} );\r\n\r\n\treturn navigationLinks;\r\n}\r\n\r\n/**\r\n * Finds a navigation link block by id, recursively.\r\n * It might be possible to make this a more generic helper function.\r\n *\r\n * @param {Array}  navigationLinks An array of navigation link blocks.\r\n * @param {number} id              The id of the navigation link to find.\r\n *\r\n * @return {Object|null} The navigation link block with the given id.\r\n */\r\nfunction findNavigationLinkById( navigationLinks, id ) {\r\n\tfor ( const navigationLink of navigationLinks ) {\r\n\t\t// Is this the link we're looking for?\r\n\t\tif ( navigationLink.attributes.id === id ) {\r\n\t\t\treturn navigationLink;\r\n\t\t}\r\n\r\n\t\t// If not does it have innerBlocks?\r\n\t\tif ( navigationLink.innerBlocks && navigationLink.innerBlocks.length ) {\r\n\t\t\tconst foundNavigationLink = findNavigationLinkById(\r\n\t\t\t\tnavigationLink.innerBlocks,\r\n\t\t\t\tid\r\n\t\t\t);\r\n\r\n\t\t\tif ( foundNavigationLink ) {\r\n\t\t\t\treturn foundNavigationLink;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n\r\nexport function convertToNavigationLinks( pages = [], parentPageID = null ) {\r\n\tlet navigationLinks = createNavigationLinks( pages );\r\n\r\n\t// If a parent page ID is provided, only return the children of that page.\r\n\tif ( parentPageID ) {\r\n\t\tconst parentPage = findNavigationLinkById(\r\n\t\t\tnavigationLinks,\r\n\t\t\tparentPageID\r\n\t\t);\r\n\t\tif ( parentPage && parentPage.innerBlocks ) {\r\n\t\t\tnavigationLinks = parentPage.innerBlocks;\r\n\t\t}\r\n\t}\r\n\r\n\t// Transform all links with innerBlocks into Submenus. This can't be done\r\n\t// sooner because page objects have no information on their children.\r\n\tconst transformSubmenus = ( listOfLinks ) => {\r\n\t\tlistOfLinks.forEach( ( block, index, listOfLinksArray ) => {\r\n\t\t\tconst { attributes, innerBlocks } = block;\r\n\t\t\tif ( innerBlocks.length !== 0 ) {\r\n\t\t\t\ttransformSubmenus( innerBlocks );\r\n\t\t\t\tconst transformedBlock = createBlock(\r\n\t\t\t\t\t'core/navigation-submenu',\r\n\t\t\t\t\tattributes,\r\n\t\t\t\t\tinnerBlocks\r\n\t\t\t\t);\r\n\t\t\t\tlistOfLinksArray[ index ] = transformedBlock;\r\n\t\t\t}\r\n\t\t} );\r\n\t};\r\n\r\n\ttransformSubmenus( navigationLinks );\r\n\treturn navigationLinks;\r\n}\r\n\r\nexport function useConvertToNavigationLinks( {\r\n\tclientId,\r\n\tpages,\r\n\tparentClientId,\r\n\tparentPageID,\r\n} ) {\r\n\tconst { replaceBlock, selectBlock } = useDispatch( blockEditorStore );\r\n\r\n\treturn () => {\r\n\t\tconst navigationLinks = convertToNavigationLinks( pages, parentPageID );\r\n\r\n\t\t// Replace the Page List block with the Navigation Links.\r\n\t\treplaceBlock( clientId, navigationLinks );\r\n\r\n\t\t// Select the Navigation block to reveal the changes.\r\n\t\tselectBlock( parentClientId );\r\n\t};\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,yBAAyB;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,qBAAqBA,CAAEC,KAAK,GAAG,EAAE,EAAG;EAC5C,MAAMC,OAAO,GAAG,CAAC,CAAC;EAClB,MAAMC,eAAe,GAAG,EAAE;EAC1BF,KAAK,CAACG,OAAO,CAAE,CAAE;IAAEC,EAAE;IAAEC,KAAK;IAAEC,IAAI,EAAEC,GAAG;IAAEC,IAAI;IAAEC;EAAO,CAAC,KAAM;IAAA,IAAAC,qBAAA;IAC5D;IACA,MAAMC,WAAW,IAAAD,qBAAA,GAAGT,OAAO,CAAEG,EAAE,CAAE,EAAEO,WAAW,cAAAD,qBAAA,cAAAA,qBAAA,GAAI,EAAE;IACpDT,OAAO,CAAEG,EAAE,CAAE,GAAGT,WAAW,CAC1B,sBAAsB,EACtB;MACCS,EAAE;MACFQ,KAAK,EAAEP,KAAK,CAACQ,QAAQ;MACrBN,GAAG;MACHC,IAAI;MACJM,IAAI,EAAE;IACP,CAAC,EACDH,WACD,CAAC;IAED,IAAK,CAAEF,MAAM,EAAG;MACfP,eAAe,CAACa,IAAI,CAAEd,OAAO,CAAEG,EAAE,CAAG,CAAC;IACtC,CAAC,MAAM;MACN,IAAK,CAAEH,OAAO,CAAEQ,MAAM,CAAE,EAAG;QAC1B;QACAR,OAAO,CAAEQ,MAAM,CAAE,GAAG;UAAEE,WAAW,EAAE;QAAG,CAAC;MACxC;MACA;MACA,MAAMK,qBAAqB,GAAGf,OAAO,CAAEQ,MAAM,CAAE,CAACE,WAAW;MAC3DK,qBAAqB,CAACD,IAAI,CAAEd,OAAO,CAAEG,EAAE,CAAG,CAAC;IAC5C;EACD,CAAE,CAAC;EAEH,OAAOF,eAAe;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASe,sBAAsBA,CAAEf,eAAe,EAAEE,EAAE,EAAG;EACtD,KAAM,MAAMc,cAAc,IAAIhB,eAAe,EAAG;IAC/C;IACA,IAAKgB,cAAc,CAACC,UAAU,CAACf,EAAE,KAAKA,EAAE,EAAG;MAC1C,OAAOc,cAAc;IACtB;;IAEA;IACA,IAAKA,cAAc,CAACP,WAAW,IAAIO,cAAc,CAACP,WAAW,CAACS,MAAM,EAAG;MACtE,MAAMC,mBAAmB,GAAGJ,sBAAsB,CACjDC,cAAc,CAACP,WAAW,EAC1BP,EACD,CAAC;MAED,IAAKiB,mBAAmB,EAAG;QAC1B,OAAOA,mBAAmB;MAC3B;IACD;EACD;EAEA,OAAO,IAAI;AACZ;AAEA,OAAO,SAASC,wBAAwBA,CAAEtB,KAAK,GAAG,EAAE,EAAEuB,YAAY,GAAG,IAAI,EAAG;EAC3E,IAAIrB,eAAe,GAAGH,qBAAqB,CAAEC,KAAM,CAAC;;EAEpD;EACA,IAAKuB,YAAY,EAAG;IACnB,MAAMC,UAAU,GAAGP,sBAAsB,CACxCf,eAAe,EACfqB,YACD,CAAC;IACD,IAAKC,UAAU,IAAIA,UAAU,CAACb,WAAW,EAAG;MAC3CT,eAAe,GAAGsB,UAAU,CAACb,WAAW;IACzC;EACD;;EAEA;EACA;EACA,MAAMc,iBAAiB,GAAKC,WAAW,IAAM;IAC5CA,WAAW,CAACvB,OAAO,CAAE,CAAEwB,KAAK,EAAEC,KAAK,EAAEC,gBAAgB,KAAM;MAC1D,MAAM;QAAEV,UAAU;QAAER;MAAY,CAAC,GAAGgB,KAAK;MACzC,IAAKhB,WAAW,CAACS,MAAM,KAAK,CAAC,EAAG;QAC/BK,iBAAiB,CAAEd,WAAY,CAAC;QAChC,MAAMmB,gBAAgB,GAAGnC,WAAW,CACnC,yBAAyB,EACzBwB,UAAU,EACVR,WACD,CAAC;QACDkB,gBAAgB,CAAED,KAAK,CAAE,GAAGE,gBAAgB;MAC7C;IACD,CAAE,CAAC;EACJ,CAAC;EAEDL,iBAAiB,CAAEvB,eAAgB,CAAC;EACpC,OAAOA,eAAe;AACvB;AAEA,OAAO,SAAS6B,2BAA2BA,CAAE;EAC5CC,QAAQ;EACRhC,KAAK;EACLiC,cAAc;EACdV;AACD,CAAC,EAAG;EACH,MAAM;IAAEW,YAAY;IAAEC;EAAY,CAAC,GAAGvC,WAAW,CAAEE,gBAAiB,CAAC;EAErE,OAAO,MAAM;IACZ,MAAMI,eAAe,GAAGoB,wBAAwB,CAAEtB,KAAK,EAAEuB,YAAa,CAAC;;IAEvE;IACAW,YAAY,CAAEF,QAAQ,EAAE9B,eAAgB,CAAC;;IAEzC;IACAiC,WAAW,CAAEF,cAAe,CAAC;EAC9B,CAAC;AACF","ignoreList":[]}