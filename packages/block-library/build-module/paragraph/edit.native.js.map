{"version":3,"names":["__","createBlock","AlignmentControl","BlockControls","RichText","store","blockEditorStore","useCallback","useSelect","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","name","allowedParentBlockAlignments","ParagraphBlock","attributes","mergeBlocks","onReplace","setAttributes","style","clientId","parentBlockAlignment","isRTL","select","getSettings","align","content","placeholder","styles","baseColors","color","text","placeholderColor","linkColor","elements","link","onAlignmentChange","nextAlign","parentTextAlignment","includes","undefined","textAlignment","children","group","value","onChange","identifier","tagName","deleteEnter","nextContent","onSplit","isOriginal","newAttributes","block","onMerge","onRemove","textAlign","__unstableEmbedURLOnPaste"],"sources":["@wordpress/block-library/src/paragraph/edit.native.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\nimport { createBlock } from '@wordpress/blocks';\r\nimport {\r\n\tAlignmentControl,\r\n\tBlockControls,\r\n\tRichText,\r\n\tstore as blockEditorStore,\r\n} from '@wordpress/block-editor';\r\nimport { useCallback } from '@wordpress/element';\r\nimport { useSelect } from '@wordpress/data';\r\n\r\nconst name = 'core/paragraph';\r\n\r\nconst allowedParentBlockAlignments = [ 'left', 'center', 'right' ];\r\n\r\nfunction ParagraphBlock( {\r\n\tattributes,\r\n\tmergeBlocks,\r\n\tonReplace,\r\n\tsetAttributes,\r\n\tstyle,\r\n\tclientId,\r\n\tparentBlockAlignment,\r\n} ) {\r\n\tconst isRTL = useSelect( ( select ) => {\r\n\t\treturn !! select( blockEditorStore ).getSettings().isRTL;\r\n\t}, [] );\r\n\r\n\tconst { align, content, placeholder } = attributes;\r\n\r\n\tconst styles = {\r\n\t\t...( style?.baseColors && {\r\n\t\t\tcolor: style.baseColors?.color?.text,\r\n\t\t\tplaceholderColor: style.color || style.baseColors?.color?.text,\r\n\t\t\tlinkColor: style.baseColors?.elements?.link?.color?.text,\r\n\t\t} ),\r\n\t\t...style,\r\n\t};\r\n\r\n\tconst onAlignmentChange = useCallback( ( nextAlign ) => {\r\n\t\tsetAttributes( { align: nextAlign } );\r\n\t}, [] );\r\n\r\n\tconst parentTextAlignment = allowedParentBlockAlignments.includes(\r\n\t\tparentBlockAlignment\r\n\t)\r\n\t\t? parentBlockAlignment\r\n\t\t: undefined;\r\n\r\n\tconst textAlignment = align || parentTextAlignment;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<BlockControls group=\"block\">\r\n\t\t\t\t<AlignmentControl\r\n\t\t\t\t\tvalue={ align }\r\n\t\t\t\t\tisRTL={ isRTL }\r\n\t\t\t\t\tonChange={ onAlignmentChange }\r\n\t\t\t\t/>\r\n\t\t\t</BlockControls>\r\n\t\t\t<RichText\r\n\t\t\t\tidentifier=\"content\"\r\n\t\t\t\ttagName=\"p\"\r\n\t\t\t\tvalue={ content }\r\n\t\t\t\tdeleteEnter\r\n\t\t\t\tstyle={ styles }\r\n\t\t\t\tonChange={ ( nextContent ) => {\r\n\t\t\t\t\tsetAttributes( {\r\n\t\t\t\t\t\tcontent: nextContent,\r\n\t\t\t\t\t} );\r\n\t\t\t\t} }\r\n\t\t\t\tonSplit={ ( value, isOriginal ) => {\r\n\t\t\t\t\tlet newAttributes;\r\n\r\n\t\t\t\t\tif ( isOriginal || value ) {\r\n\t\t\t\t\t\tnewAttributes = {\r\n\t\t\t\t\t\t\t...attributes,\r\n\t\t\t\t\t\t\tcontent: value,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst block = createBlock( name, newAttributes );\r\n\r\n\t\t\t\t\tif ( isOriginal ) {\r\n\t\t\t\t\t\tblock.clientId = clientId;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn block;\r\n\t\t\t\t} }\r\n\t\t\t\tonMerge={ mergeBlocks }\r\n\t\t\t\tonReplace={ onReplace }\r\n\t\t\t\tonRemove={ onReplace ? () => onReplace( [] ) : undefined }\r\n\t\t\t\tplaceholder={ placeholder || __( 'Start writingâ€¦' ) }\r\n\t\t\t\ttextAlign={ textAlignment }\r\n\t\t\t\t__unstableEmbedURLOnPaste\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ParagraphBlock;\r\n"],"mappings":"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","ignoreList":[]}