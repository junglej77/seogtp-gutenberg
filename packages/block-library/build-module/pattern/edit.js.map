{"version":3,"names":["cloneBlock","useSelect","useDispatch","useRegistry","useState","useEffect","Warning","store","blockEditorStore","useBlockProps","coreStore","__","sprintf","useParsePatternDependencies","jsx","_jsx","PatternEdit","attributes","clientId","registry","selectedPattern","select","__experimentalGetParsedPattern","slug","currentThemeStylesheet","getCurrentTheme","stylesheet","replaceBlocks","setBlockEditingMode","__unstableMarkNextChangeAsNotPersistent","getBlockRootClientId","getBlockEditingMode","hasRecursionError","setHasRecursionError","parsePatternDependencies","injectThemeAttributeInBlockTemplateContent","block","innerBlocks","find","innerBlock","name","map","theme","undefined","blocks","error","window","queueMicrotask","rootClientId","clonedBlocks","length","categories","metadata","patternName","title","rootEditingMode","batch","props","children"],"sources":["@wordpress/block-library/src/pattern/edit.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { cloneBlock } from '@wordpress/blocks';\r\nimport { useSelect, useDispatch, useRegistry } from '@wordpress/data';\r\nimport { useState, useEffect } from '@wordpress/element';\r\nimport {\r\n\tWarning,\r\n\tstore as blockEditorStore,\r\n\tuseBlockProps,\r\n} from '@wordpress/block-editor';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\nimport { __, sprintf } from '@wordpress/i18n';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { useParsePatternDependencies } from './recursion-detector';\r\n\r\nconst PatternEdit = ( { attributes, clientId } ) => {\r\n\tconst registry = useRegistry();\r\n\tconst selectedPattern = useSelect(\r\n\t\t( select ) =>\r\n\t\t\tselect( blockEditorStore ).__experimentalGetParsedPattern(\r\n\t\t\t\tattributes.slug\r\n\t\t\t),\r\n\t\t[ attributes.slug ]\r\n\t);\r\n\r\n\tconst currentThemeStylesheet = useSelect(\r\n\t\t( select ) => select( coreStore ).getCurrentTheme()?.stylesheet,\r\n\t\t[]\r\n\t);\r\n\r\n\tconst {\r\n\t\treplaceBlocks,\r\n\t\tsetBlockEditingMode,\r\n\t\t__unstableMarkNextChangeAsNotPersistent,\r\n\t} = useDispatch( blockEditorStore );\r\n\tconst { getBlockRootClientId, getBlockEditingMode } =\r\n\t\tuseSelect( blockEditorStore );\r\n\r\n\tconst [ hasRecursionError, setHasRecursionError ] = useState( false );\r\n\tconst parsePatternDependencies = useParsePatternDependencies();\r\n\r\n\t// Duplicated in packages/editor/src/components/start-template-options/index.js.\r\n\tfunction injectThemeAttributeInBlockTemplateContent( block ) {\r\n\t\tif (\r\n\t\t\tblock.innerBlocks.find(\r\n\t\t\t\t( innerBlock ) => innerBlock.name === 'core/template-part'\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tblock.innerBlocks = block.innerBlocks.map( ( innerBlock ) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tinnerBlock.name === 'core/template-part' &&\r\n\t\t\t\t\tinnerBlock.attributes.theme === undefined\r\n\t\t\t\t) {\r\n\t\t\t\t\tinnerBlock.attributes.theme = currentThemeStylesheet;\r\n\t\t\t\t}\r\n\t\t\t\treturn innerBlock;\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tblock.name === 'core/template-part' &&\r\n\t\t\tblock.attributes.theme === undefined\r\n\t\t) {\r\n\t\t\tblock.attributes.theme = currentThemeStylesheet;\r\n\t\t}\r\n\t\treturn block;\r\n\t}\r\n\r\n\t// Run this effect when the component loads.\r\n\t// This adds the Pattern's contents to the post.\r\n\t// This change won't be saved.\r\n\t// It will continue to pull from the pattern file unless changes are made to its respective template part.\r\n\tuseEffect( () => {\r\n\t\tif ( ! hasRecursionError && selectedPattern?.blocks ) {\r\n\t\t\ttry {\r\n\t\t\t\tparsePatternDependencies( selectedPattern );\r\n\t\t\t} catch ( error ) {\r\n\t\t\t\tsetHasRecursionError( true );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// We batch updates to block list settings to avoid triggering cascading renders\r\n\t\t\t// for each container block included in a tree and optimize initial render.\r\n\t\t\t// Since the above uses microtasks, we need to use a microtask here as well,\r\n\t\t\t// because nested pattern blocks cannot be inserted if the parent block supports\r\n\t\t\t// inner blocks but doesn't have blockSettings in the state.\r\n\t\t\twindow.queueMicrotask( () => {\r\n\t\t\t\tconst rootClientId = getBlockRootClientId( clientId );\r\n\t\t\t\t// Clone blocks from the pattern before insertion to ensure they receive\r\n\t\t\t\t// distinct client ids. See https://github.com/WordPress/gutenberg/issues/50628.\r\n\t\t\t\tconst clonedBlocks = selectedPattern.blocks.map( ( block ) =>\r\n\t\t\t\t\tcloneBlock(\r\n\t\t\t\t\t\tinjectThemeAttributeInBlockTemplateContent( block )\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\t// If the pattern has a single block and categories, we should add the\r\n\t\t\t\t// categories of the pattern to the block's metadata.\r\n\t\t\t\tif (\r\n\t\t\t\t\tclonedBlocks.length === 1 &&\r\n\t\t\t\t\tselectedPattern.categories?.length > 0\r\n\t\t\t\t) {\r\n\t\t\t\t\tclonedBlocks[ 0 ].attributes = {\r\n\t\t\t\t\t\t...clonedBlocks[ 0 ].attributes,\r\n\t\t\t\t\t\tmetadata: {\r\n\t\t\t\t\t\t\t...clonedBlocks[ 0 ].attributes.metadata,\r\n\t\t\t\t\t\t\tcategories: selectedPattern.categories,\r\n\t\t\t\t\t\t\tpatternName: selectedPattern.name,\r\n\t\t\t\t\t\t\tname:\r\n\t\t\t\t\t\t\t\tclonedBlocks[ 0 ].attributes.metadata.name ||\r\n\t\t\t\t\t\t\t\tselectedPattern.title,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tconst rootEditingMode = getBlockEditingMode( rootClientId );\r\n\t\t\t\tregistry.batch( () => {\r\n\t\t\t\t\t// Temporarily set the root block to default mode to allow replacing the pattern.\r\n\t\t\t\t\t// This could happen when the page is disabling edits of non-content blocks.\r\n\t\t\t\t\t__unstableMarkNextChangeAsNotPersistent();\r\n\t\t\t\t\tsetBlockEditingMode( rootClientId, 'default' );\r\n\t\t\t\t\t__unstableMarkNextChangeAsNotPersistent();\r\n\t\t\t\t\treplaceBlocks( clientId, clonedBlocks );\r\n\t\t\t\t\t// Restore the root block's original mode.\r\n\t\t\t\t\t__unstableMarkNextChangeAsNotPersistent();\r\n\t\t\t\t\tsetBlockEditingMode( rootClientId, rootEditingMode );\r\n\t\t\t\t} );\r\n\t\t\t} );\r\n\t\t}\r\n\t}, [\r\n\t\tclientId,\r\n\t\thasRecursionError,\r\n\t\tselectedPattern,\r\n\t\t__unstableMarkNextChangeAsNotPersistent,\r\n\t\treplaceBlocks,\r\n\t\tgetBlockEditingMode,\r\n\t\tsetBlockEditingMode,\r\n\t\tgetBlockRootClientId,\r\n\t] );\r\n\r\n\tconst props = useBlockProps();\r\n\r\n\tif ( hasRecursionError ) {\r\n\t\treturn (\r\n\t\t\t<div { ...props }>\r\n\t\t\t\t<Warning>\r\n\t\t\t\t\t{ sprintf(\r\n\t\t\t\t\t\t// translators: A warning in which %s is the name of a pattern.\r\n\t\t\t\t\t\t__( 'Pattern \"%s\" cannot be rendered inside itself.' ),\r\n\t\t\t\t\t\tselectedPattern?.name\r\n\t\t\t\t\t) }\r\n\t\t\t\t</Warning>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn <div { ...props } />;\r\n};\r\n\r\nexport default PatternEdit;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,SAAS,EAAEC,WAAW,EAAEC,WAAW,QAAQ,iBAAiB;AACrE,SAASC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AACxD,SACCC,OAAO,EACPC,KAAK,IAAIC,gBAAgB,EACzBC,aAAa,QACP,yBAAyB;AAChC,SAASF,KAAK,IAAIG,SAAS,QAAQ,sBAAsB;AACzD,SAASC,EAAE,EAAEC,OAAO,QAAQ,iBAAiB;;AAE7C;AACA;AACA;AACA,SAASC,2BAA2B,QAAQ,sBAAsB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEnE,MAAMC,WAAW,GAAGA,CAAE;EAAEC,UAAU;EAAEC;AAAS,CAAC,KAAM;EACnD,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,eAAe,GAAGnB,SAAS,CAC9BoB,MAAM,IACPA,MAAM,CAAEb,gBAAiB,CAAC,CAACc,8BAA8B,CACxDL,UAAU,CAACM,IACZ,CAAC,EACF,CAAEN,UAAU,CAACM,IAAI,CAClB,CAAC;EAED,MAAMC,sBAAsB,GAAGvB,SAAS,CACrCoB,MAAM,IAAMA,MAAM,CAAEX,SAAU,CAAC,CAACe,eAAe,CAAC,CAAC,EAAEC,UAAU,EAC/D,EACD,CAAC;EAED,MAAM;IACLC,aAAa;IACbC,mBAAmB;IACnBC;EACD,CAAC,GAAG3B,WAAW,CAAEM,gBAAiB,CAAC;EACnC,MAAM;IAAEsB,oBAAoB;IAAEC;EAAoB,CAAC,GAClD9B,SAAS,CAAEO,gBAAiB,CAAC;EAE9B,MAAM,CAAEwB,iBAAiB,EAAEC,oBAAoB,CAAE,GAAG7B,QAAQ,CAAE,KAAM,CAAC;EACrE,MAAM8B,wBAAwB,GAAGrB,2BAA2B,CAAC,CAAC;;EAE9D;EACA,SAASsB,0CAA0CA,CAAEC,KAAK,EAAG;IAC5D,IACCA,KAAK,CAACC,WAAW,CAACC,IAAI,CACnBC,UAAU,IAAMA,UAAU,CAACC,IAAI,KAAK,oBACvC,CAAC,EACA;MACDJ,KAAK,CAACC,WAAW,GAAGD,KAAK,CAACC,WAAW,CAACI,GAAG,CAAIF,UAAU,IAAM;QAC5D,IACCA,UAAU,CAACC,IAAI,KAAK,oBAAoB,IACxCD,UAAU,CAACtB,UAAU,CAACyB,KAAK,KAAKC,SAAS,EACxC;UACDJ,UAAU,CAACtB,UAAU,CAACyB,KAAK,GAAGlB,sBAAsB;QACrD;QACA,OAAOe,UAAU;MAClB,CAAE,CAAC;IACJ;IAEA,IACCH,KAAK,CAACI,IAAI,KAAK,oBAAoB,IACnCJ,KAAK,CAACnB,UAAU,CAACyB,KAAK,KAAKC,SAAS,EACnC;MACDP,KAAK,CAACnB,UAAU,CAACyB,KAAK,GAAGlB,sBAAsB;IAChD;IACA,OAAOY,KAAK;EACb;;EAEA;EACA;EACA;EACA;EACA/B,SAAS,CAAE,MAAM;IAChB,IAAK,CAAE2B,iBAAiB,IAAIZ,eAAe,EAAEwB,MAAM,EAAG;MACrD,IAAI;QACHV,wBAAwB,CAAEd,eAAgB,CAAC;MAC5C,CAAC,CAAC,OAAQyB,KAAK,EAAG;QACjBZ,oBAAoB,CAAE,IAAK,CAAC;QAC5B;MACD;;MAEA;MACA;MACA;MACA;MACA;MACAa,MAAM,CAACC,cAAc,CAAE,MAAM;QAC5B,MAAMC,YAAY,GAAGlB,oBAAoB,CAAEZ,QAAS,CAAC;QACrD;QACA;QACA,MAAM+B,YAAY,GAAG7B,eAAe,CAACwB,MAAM,CAACH,GAAG,CAAIL,KAAK,IACvDpC,UAAU,CACTmC,0CAA0C,CAAEC,KAAM,CACnD,CACD,CAAC;QACD;QACA;QACA,IACCa,YAAY,CAACC,MAAM,KAAK,CAAC,IACzB9B,eAAe,CAAC+B,UAAU,EAAED,MAAM,GAAG,CAAC,EACrC;UACDD,YAAY,CAAE,CAAC,CAAE,CAAChC,UAAU,GAAG;YAC9B,GAAGgC,YAAY,CAAE,CAAC,CAAE,CAAChC,UAAU;YAC/BmC,QAAQ,EAAE;cACT,GAAGH,YAAY,CAAE,CAAC,CAAE,CAAChC,UAAU,CAACmC,QAAQ;cACxCD,UAAU,EAAE/B,eAAe,CAAC+B,UAAU;cACtCE,WAAW,EAAEjC,eAAe,CAACoB,IAAI;cACjCA,IAAI,EACHS,YAAY,CAAE,CAAC,CAAE,CAAChC,UAAU,CAACmC,QAAQ,CAACZ,IAAI,IAC1CpB,eAAe,CAACkC;YAClB;UACD,CAAC;QACF;QACA,MAAMC,eAAe,GAAGxB,mBAAmB,CAAEiB,YAAa,CAAC;QAC3D7B,QAAQ,CAACqC,KAAK,CAAE,MAAM;UACrB;UACA;UACA3B,uCAAuC,CAAC,CAAC;UACzCD,mBAAmB,CAAEoB,YAAY,EAAE,SAAU,CAAC;UAC9CnB,uCAAuC,CAAC,CAAC;UACzCF,aAAa,CAAET,QAAQ,EAAE+B,YAAa,CAAC;UACvC;UACApB,uCAAuC,CAAC,CAAC;UACzCD,mBAAmB,CAAEoB,YAAY,EAAEO,eAAgB,CAAC;QACrD,CAAE,CAAC;MACJ,CAAE,CAAC;IACJ;EACD,CAAC,EAAE,CACFrC,QAAQ,EACRc,iBAAiB,EACjBZ,eAAe,EACfS,uCAAuC,EACvCF,aAAa,EACbI,mBAAmB,EACnBH,mBAAmB,EACnBE,oBAAoB,CACnB,CAAC;EAEH,MAAM2B,KAAK,GAAGhD,aAAa,CAAC,CAAC;EAE7B,IAAKuB,iBAAiB,EAAG;IACxB,oBACCjB,IAAA;MAAA,GAAU0C,KAAK;MAAAC,QAAA,eACd3C,IAAA,CAACT,OAAO;QAAAoD,QAAA,EACL9C,OAAO;QACR;QACAD,EAAE,CAAE,gDAAiD,CAAC,EACtDS,eAAe,EAAEoB,IAClB;MAAC,CACO;IAAC,CACN,CAAC;EAER;EAEA,oBAAOzB,IAAA;IAAA,GAAU0C;EAAK,CAAI,CAAC;AAC5B,CAAC;AAED,eAAezC,WAAW","ignoreList":[]}