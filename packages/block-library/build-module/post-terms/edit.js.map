{"version":3,"names":["clsx","AlignmentToolbar","InspectorControls","BlockControls","useBlockProps","useBlockDisplayInformation","RichText","createBlock","getDefaultBlockName","Spinner","TextControl","useSelect","decodeEntities","__","store","coreStore","usePostTerms","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ALLOWED_FORMATS","PostTermsEdit","attributes","clientId","context","isSelected","setAttributes","insertBlocksAfter","term","textAlign","separator","prefix","suffix","postId","postType","selectedTerm","select","getTaxonomy","taxonomy","visibility","publicly_queryable","postTerms","hasPostTerms","isLoading","hasPost","blockInformation","blockProps","className","children","value","onChange","nextAlign","group","__next40pxDefaultSize","__nextHasNoMarginBottom","autoComplete","label","nextValue","help","identifier","allowedFormats","placeholder","tagName","title","map","postTerm","href","link","onClick","event","preventDefault","name","id","reduce","prev","curr","labels","no_terms","__unstableOnSplitAtEnd"],"sources":["@wordpress/block-library/src/post-terms/edit.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport {\r\n\tAlignmentToolbar,\r\n\tInspectorControls,\r\n\tBlockControls,\r\n\tuseBlockProps,\r\n\tuseBlockDisplayInformation,\r\n\tRichText,\r\n} from '@wordpress/block-editor';\r\nimport { createBlock, getDefaultBlockName } from '@wordpress/blocks';\r\nimport { Spinner, TextControl } from '@wordpress/components';\r\nimport { useSelect } from '@wordpress/data';\r\nimport { decodeEntities } from '@wordpress/html-entities';\r\nimport { __ } from '@wordpress/i18n';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport usePostTerms from './use-post-terms';\r\n\r\n// Allowed formats for the prefix and suffix fields.\r\nconst ALLOWED_FORMATS = [\r\n\t'core/bold',\r\n\t'core/image',\r\n\t'core/italic',\r\n\t'core/link',\r\n\t'core/strikethrough',\r\n\t'core/text-color',\r\n];\r\n\r\nexport default function PostTermsEdit( {\r\n\tattributes,\r\n\tclientId,\r\n\tcontext,\r\n\tisSelected,\r\n\tsetAttributes,\r\n\tinsertBlocksAfter,\r\n} ) {\r\n\tconst { term, textAlign, separator, prefix, suffix } = attributes;\r\n\tconst { postId, postType } = context;\r\n\r\n\tconst selectedTerm = useSelect(\r\n\t\t( select ) => {\r\n\t\t\tif ( ! term ) {\r\n\t\t\t\treturn {};\r\n\t\t\t}\r\n\t\t\tconst { getTaxonomy } = select( coreStore );\r\n\t\t\tconst taxonomy = getTaxonomy( term );\r\n\t\t\treturn taxonomy?.visibility?.publicly_queryable ? taxonomy : {};\r\n\t\t},\r\n\t\t[ term ]\r\n\t);\r\n\tconst { postTerms, hasPostTerms, isLoading } = usePostTerms( {\r\n\t\tpostId,\r\n\t\tterm: selectedTerm,\r\n\t} );\r\n\tconst hasPost = postId && postType;\r\n\tconst blockInformation = useBlockDisplayInformation( clientId );\r\n\tconst blockProps = useBlockProps( {\r\n\t\tclassName: clsx( {\r\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\r\n\t\t\t[ `taxonomy-${ term }` ]: term,\r\n\t\t} ),\r\n\t} );\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<BlockControls>\r\n\t\t\t\t<AlignmentToolbar\r\n\t\t\t\t\tvalue={ textAlign }\r\n\t\t\t\t\tonChange={ ( nextAlign ) => {\r\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\r\n\t\t\t\t\t} }\r\n\t\t\t\t/>\r\n\t\t\t</BlockControls>\r\n\t\t\t<InspectorControls group=\"advanced\">\r\n\t\t\t\t<TextControl\r\n\t\t\t\t\t__next40pxDefaultSize\r\n\t\t\t\t\t__nextHasNoMarginBottom\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tlabel={ __( 'Separator' ) }\r\n\t\t\t\t\tvalue={ separator || '' }\r\n\t\t\t\t\tonChange={ ( nextValue ) => {\r\n\t\t\t\t\t\tsetAttributes( { separator: nextValue } );\r\n\t\t\t\t\t} }\r\n\t\t\t\t\thelp={ __( 'Enter character(s) used to separate terms.' ) }\r\n\t\t\t\t/>\r\n\t\t\t</InspectorControls>\r\n\t\t\t<div { ...blockProps }>\r\n\t\t\t\t{ isLoading && hasPost && <Spinner /> }\r\n\t\t\t\t{ ! isLoading && ( isSelected || prefix ) && (\r\n\t\t\t\t\t<RichText\r\n\t\t\t\t\t\tidentifier=\"prefix\"\r\n\t\t\t\t\t\tallowedFormats={ ALLOWED_FORMATS }\r\n\t\t\t\t\t\tclassName=\"wp-block-post-terms__prefix\"\r\n\t\t\t\t\t\taria-label={ __( 'Prefix' ) }\r\n\t\t\t\t\t\tplaceholder={ __( 'Prefix' ) + ' ' }\r\n\t\t\t\t\t\tvalue={ prefix }\r\n\t\t\t\t\t\tonChange={ ( value ) =>\r\n\t\t\t\t\t\t\tsetAttributes( { prefix: value } )\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttagName=\"span\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t) }\r\n\t\t\t\t{ ( ! hasPost || ! term ) && (\r\n\t\t\t\t\t<span>{ blockInformation.title }</span>\r\n\t\t\t\t) }\r\n\t\t\t\t{ hasPost &&\r\n\t\t\t\t\t! isLoading &&\r\n\t\t\t\t\thasPostTerms &&\r\n\t\t\t\t\tpostTerms\r\n\t\t\t\t\t\t.map( ( postTerm ) => (\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\tkey={ postTerm.id }\r\n\t\t\t\t\t\t\t\thref={ postTerm.link }\r\n\t\t\t\t\t\t\t\tonClick={ ( event ) => event.preventDefault() }\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{ decodeEntities( postTerm.name ) }\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t) )\r\n\t\t\t\t\t\t.reduce( ( prev, curr ) => (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{ prev }\r\n\t\t\t\t\t\t\t\t<span className=\"wp-block-post-terms__separator\">\r\n\t\t\t\t\t\t\t\t\t{ separator || ' ' }\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t{ curr }\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) ) }\r\n\t\t\t\t{ hasPost &&\r\n\t\t\t\t\t! isLoading &&\r\n\t\t\t\t\t! hasPostTerms &&\r\n\t\t\t\t\t( selectedTerm?.labels?.no_terms ||\r\n\t\t\t\t\t\t__( 'Term items not found.' ) ) }\r\n\t\t\t\t{ ! isLoading && ( isSelected || suffix ) && (\r\n\t\t\t\t\t<RichText\r\n\t\t\t\t\t\tidentifier=\"suffix\"\r\n\t\t\t\t\t\tallowedFormats={ ALLOWED_FORMATS }\r\n\t\t\t\t\t\tclassName=\"wp-block-post-terms__suffix\"\r\n\t\t\t\t\t\taria-label={ __( 'Suffix' ) }\r\n\t\t\t\t\t\tplaceholder={ ' ' + __( 'Suffix' ) }\r\n\t\t\t\t\t\tvalue={ suffix }\r\n\t\t\t\t\t\tonChange={ ( value ) =>\r\n\t\t\t\t\t\t\tsetAttributes( { suffix: value } )\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttagName=\"span\"\r\n\t\t\t\t\t\t__unstableOnSplitAtEnd={ () =>\r\n\t\t\t\t\t\t\tinsertBlocksAfter(\r\n\t\t\t\t\t\t\t\tcreateBlock( getDefaultBlockName() )\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) }\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]}