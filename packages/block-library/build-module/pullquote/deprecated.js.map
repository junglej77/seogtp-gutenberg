{"version":3,"names":["clsx","getColorClassName","getColorObjectByAttributeValues","RichText","store","blockEditorStore","useBlockProps","select","SOLID_COLOR_CLASS","jsx","_jsx","jsxs","_jsxs","blockAttributes","value","type","source","selector","multiline","citation","default","mainColor","customMainColor","textColor","customTextColor","parseBorderColor","styleString","matches","match","multilineToInline","padded","values","split","shift","pop","join","v5","attributes","__experimentalRole","textAlign","save","shouldShowCitation","isEmpty","className","children","Content","tagName","migrate","v4","isSolidColorStyle","includes","figureClasses","figureStyles","backgroundClass","backgroundColor","undefined","borderColor","blockquoteTextColorClass","blockquoteClasses","blockquoteStyles","color","style","border","background","text","v3","figureStyle","attribute","v2","figureClass","_select$getSettings$c","colors","getSettings","colorObject","blockquoteStyle","v1","v0","align"],"sources":["@wordpress/block-library/src/pullquote/deprecated.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport {\r\n\tgetColorClassName,\r\n\tgetColorObjectByAttributeValues,\r\n\tRichText,\r\n\tstore as blockEditorStore,\r\n\tuseBlockProps,\r\n} from '@wordpress/block-editor';\r\nimport { select } from '@wordpress/data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { SOLID_COLOR_CLASS } from './shared';\r\n\r\nconst blockAttributes = {\r\n\tvalue: {\r\n\t\ttype: 'string',\r\n\t\tsource: 'html',\r\n\t\tselector: 'blockquote',\r\n\t\tmultiline: 'p',\r\n\t},\r\n\tcitation: {\r\n\t\ttype: 'string',\r\n\t\tsource: 'html',\r\n\t\tselector: 'cite',\r\n\t\tdefault: '',\r\n\t},\r\n\tmainColor: {\r\n\t\ttype: 'string',\r\n\t},\r\n\tcustomMainColor: {\r\n\t\ttype: 'string',\r\n\t},\r\n\ttextColor: {\r\n\t\ttype: 'string',\r\n\t},\r\n\tcustomTextColor: {\r\n\t\ttype: 'string',\r\n\t},\r\n};\r\n\r\nfunction parseBorderColor( styleString ) {\r\n\tif ( ! styleString ) {\r\n\t\treturn;\r\n\t}\r\n\tconst matches = styleString.match( /border-color:([^;]+)[;]?/ );\r\n\tif ( matches && matches[ 1 ] ) {\r\n\t\treturn matches[ 1 ];\r\n\t}\r\n}\r\n\r\nfunction multilineToInline( value ) {\r\n\tvalue = value || `<p></p>`;\r\n\tconst padded = `</p>${ value }<p>`;\r\n\tconst values = padded.split( `</p><p>` );\r\n\r\n\tvalues.shift();\r\n\tvalues.pop();\r\n\r\n\treturn values.join( '<br>' );\r\n}\r\n\r\nconst v5 = {\r\n\tattributes: {\r\n\t\tvalue: {\r\n\t\t\ttype: 'string',\r\n\t\t\tsource: 'html',\r\n\t\t\tselector: 'blockquote',\r\n\t\t\tmultiline: 'p',\r\n\t\t\t__experimentalRole: 'content',\r\n\t\t},\r\n\t\tcitation: {\r\n\t\t\ttype: 'string',\r\n\t\t\tsource: 'html',\r\n\t\t\tselector: 'cite',\r\n\t\t\tdefault: '',\r\n\t\t\t__experimentalRole: 'content',\r\n\t\t},\r\n\t\ttextAlign: {\r\n\t\t\ttype: 'string',\r\n\t\t},\r\n\t},\r\n\tsave( { attributes } ) {\r\n\t\tconst { textAlign, citation, value } = attributes;\r\n\t\tconst shouldShowCitation = ! RichText.isEmpty( citation );\r\n\r\n\t\treturn (\r\n\t\t\t<figure\r\n\t\t\t\t{ ...useBlockProps.save( {\r\n\t\t\t\t\tclassName: clsx( {\r\n\t\t\t\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\r\n\t\t\t\t\t} ),\r\n\t\t\t\t} ) }\r\n\t\t\t>\r\n\t\t\t\t<blockquote>\r\n\t\t\t\t\t<RichText.Content value={ value } multiline />\r\n\t\t\t\t\t{ shouldShowCitation && (\r\n\t\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\r\n\t\t\t\t\t) }\r\n\t\t\t\t</blockquote>\r\n\t\t\t</figure>\r\n\t\t);\r\n\t},\r\n\tmigrate( { value, ...attributes } ) {\r\n\t\treturn {\r\n\t\t\tvalue: multilineToInline( value ),\r\n\t\t\t...attributes,\r\n\t\t};\r\n\t},\r\n};\r\n\r\n// TODO: this is ripe for a bit of a clean up according to the example in https://developer.wordpress.org/block-editor/reference-guides/block-api/block-deprecation/#example\r\n\r\nconst v4 = {\r\n\tattributes: {\r\n\t\t...blockAttributes,\r\n\t},\r\n\tsave( { attributes } ) {\r\n\t\tconst {\r\n\t\t\tmainColor,\r\n\t\t\tcustomMainColor,\r\n\t\t\tcustomTextColor,\r\n\t\t\ttextColor,\r\n\t\t\tvalue,\r\n\t\t\tcitation,\r\n\t\t\tclassName,\r\n\t\t} = attributes;\r\n\r\n\t\tconst isSolidColorStyle = className?.includes( SOLID_COLOR_CLASS );\r\n\r\n\t\tlet figureClasses, figureStyles;\r\n\r\n\t\t// Is solid color style\r\n\t\tif ( isSolidColorStyle ) {\r\n\t\t\tconst backgroundClass = getColorClassName(\r\n\t\t\t\t'background-color',\r\n\t\t\t\tmainColor\r\n\t\t\t);\r\n\r\n\t\t\tfigureClasses = clsx( {\r\n\t\t\t\t'has-background': backgroundClass || customMainColor,\r\n\t\t\t\t[ backgroundClass ]: backgroundClass,\r\n\t\t\t} );\r\n\r\n\t\t\tfigureStyles = {\r\n\t\t\t\tbackgroundColor: backgroundClass ? undefined : customMainColor,\r\n\t\t\t};\r\n\t\t\t// Is normal style and a custom color is being used ( we can set a style directly with its value)\r\n\t\t} else if ( customMainColor ) {\r\n\t\t\tfigureStyles = {\r\n\t\t\t\tborderColor: customMainColor,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst blockquoteTextColorClass = getColorClassName(\r\n\t\t\t'color',\r\n\t\t\ttextColor\r\n\t\t);\r\n\t\tconst blockquoteClasses = clsx( {\r\n\t\t\t'has-text-color': textColor || customTextColor,\r\n\t\t\t[ blockquoteTextColorClass ]: blockquoteTextColorClass,\r\n\t\t} );\r\n\r\n\t\tconst blockquoteStyles = blockquoteTextColorClass\r\n\t\t\t? undefined\r\n\t\t\t: { color: customTextColor };\r\n\r\n\t\treturn (\r\n\t\t\t<figure\r\n\t\t\t\t{ ...useBlockProps.save( {\r\n\t\t\t\t\tclassName: figureClasses,\r\n\t\t\t\t\tstyle: figureStyles,\r\n\t\t\t\t} ) }\r\n\t\t\t>\r\n\t\t\t\t<blockquote\r\n\t\t\t\t\tclassName={ blockquoteClasses }\r\n\t\t\t\t\tstyle={ blockquoteStyles }\r\n\t\t\t\t>\r\n\t\t\t\t\t<RichText.Content value={ value } multiline />\r\n\t\t\t\t\t{ ! RichText.isEmpty( citation ) && (\r\n\t\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\r\n\t\t\t\t\t) }\r\n\t\t\t\t</blockquote>\r\n\t\t\t</figure>\r\n\t\t);\r\n\t},\r\n\tmigrate( {\r\n\t\tvalue,\r\n\t\tclassName,\r\n\t\tmainColor,\r\n\t\tcustomMainColor,\r\n\t\tcustomTextColor,\r\n\t\t...attributes\r\n\t} ) {\r\n\t\tconst isSolidColorStyle = className?.includes( SOLID_COLOR_CLASS );\r\n\t\tlet style;\r\n\r\n\t\tif ( customMainColor ) {\r\n\t\t\tif ( ! isSolidColorStyle ) {\r\n\t\t\t\t// Block supports: Set style.border.color if a deprecated block has a default style and a `customMainColor` attribute.\r\n\t\t\t\tstyle = {\r\n\t\t\t\t\tborder: {\r\n\t\t\t\t\t\tcolor: customMainColor,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\t// Block supports: Set style.color.background if a deprecated block has a solid style and a `customMainColor` attribute.\r\n\t\t\t\tstyle = {\r\n\t\t\t\t\tcolor: {\r\n\t\t\t\t\t\tbackground: customMainColor,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Block supports: Set style.color.text if a deprecated block has a `customTextColor` attribute.\r\n\t\tif ( customTextColor && style ) {\r\n\t\t\tstyle.color = {\r\n\t\t\t\t...style.color,\r\n\t\t\t\ttext: customTextColor,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tvalue: multilineToInline( value ),\r\n\t\t\tclassName,\r\n\t\t\tbackgroundColor: isSolidColorStyle ? mainColor : undefined,\r\n\t\t\tborderColor: isSolidColorStyle ? undefined : mainColor,\r\n\t\t\ttextAlign: isSolidColorStyle ? 'left' : undefined,\r\n\t\t\tstyle,\r\n\t\t\t...attributes,\r\n\t\t};\r\n\t},\r\n};\r\n\r\nconst v3 = {\r\n\tattributes: {\r\n\t\t...blockAttributes,\r\n\t\t// figureStyle is an attribute that never existed.\r\n\t\t// We are using it as a way to access the styles previously applied to the figure.\r\n\t\tfigureStyle: {\r\n\t\t\tsource: 'attribute',\r\n\t\t\tselector: 'figure',\r\n\t\t\tattribute: 'style',\r\n\t\t},\r\n\t},\r\n\tsave( { attributes } ) {\r\n\t\tconst {\r\n\t\t\tmainColor,\r\n\t\t\tcustomMainColor,\r\n\t\t\ttextColor,\r\n\t\t\tcustomTextColor,\r\n\t\t\tvalue,\r\n\t\t\tcitation,\r\n\t\t\tclassName,\r\n\t\t\tfigureStyle,\r\n\t\t} = attributes;\r\n\r\n\t\tconst isSolidColorStyle = className?.includes( SOLID_COLOR_CLASS );\r\n\r\n\t\tlet figureClasses, figureStyles;\r\n\r\n\t\t// Is solid color style\r\n\t\tif ( isSolidColorStyle ) {\r\n\t\t\tconst backgroundClass = getColorClassName(\r\n\t\t\t\t'background-color',\r\n\t\t\t\tmainColor\r\n\t\t\t);\r\n\r\n\t\t\tfigureClasses = clsx( {\r\n\t\t\t\t'has-background': backgroundClass || customMainColor,\r\n\t\t\t\t[ backgroundClass ]: backgroundClass,\r\n\t\t\t} );\r\n\r\n\t\t\tfigureStyles = {\r\n\t\t\t\tbackgroundColor: backgroundClass ? undefined : customMainColor,\r\n\t\t\t};\r\n\t\t\t// Is normal style and a custom color is being used ( we can set a style directly with its value)\r\n\t\t} else if ( customMainColor ) {\r\n\t\t\tfigureStyles = {\r\n\t\t\t\tborderColor: customMainColor,\r\n\t\t\t};\r\n\t\t\t// If normal style and a named color are being used, we need to retrieve the color value to set the style,\r\n\t\t\t// as there is no expectation that themes create classes that set border colors.\r\n\t\t} else if ( mainColor ) {\r\n\t\t\t// Previously here we queried the color settings to know the color value\r\n\t\t\t// of a named color. This made the save function impure and the block was refactored,\r\n\t\t\t// because meanwhile a change in the editor made it impossible to query color settings in the save function.\r\n\t\t\t// Here instead of querying the color settings to know the color value, we retrieve the value\r\n\t\t\t// directly from the style previously serialized.\r\n\t\t\tconst borderColor = parseBorderColor( figureStyle );\r\n\t\t\tfigureStyles = {\r\n\t\t\t\tborderColor,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst blockquoteTextColorClass = getColorClassName(\r\n\t\t\t'color',\r\n\t\t\ttextColor\r\n\t\t);\r\n\t\tconst blockquoteClasses =\r\n\t\t\t( textColor || customTextColor ) &&\r\n\t\t\tclsx( 'has-text-color', {\r\n\t\t\t\t[ blockquoteTextColorClass ]: blockquoteTextColorClass,\r\n\t\t\t} );\r\n\r\n\t\tconst blockquoteStyles = blockquoteTextColorClass\r\n\t\t\t? undefined\r\n\t\t\t: { color: customTextColor };\r\n\r\n\t\treturn (\r\n\t\t\t<figure className={ figureClasses } style={ figureStyles }>\r\n\t\t\t\t<blockquote\r\n\t\t\t\t\tclassName={ blockquoteClasses }\r\n\t\t\t\t\tstyle={ blockquoteStyles }\r\n\t\t\t\t>\r\n\t\t\t\t\t<RichText.Content value={ value } multiline />\r\n\t\t\t\t\t{ ! RichText.isEmpty( citation ) && (\r\n\t\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\r\n\t\t\t\t\t) }\r\n\t\t\t\t</blockquote>\r\n\t\t\t</figure>\r\n\t\t);\r\n\t},\r\n\tmigrate( {\r\n\t\tvalue,\r\n\t\tclassName,\r\n\t\tfigureStyle,\r\n\t\tmainColor,\r\n\t\tcustomMainColor,\r\n\t\tcustomTextColor,\r\n\t\t...attributes\r\n\t} ) {\r\n\t\tconst isSolidColorStyle = className?.includes( SOLID_COLOR_CLASS );\r\n\t\tlet style;\r\n\r\n\t\tif ( customMainColor ) {\r\n\t\t\tif ( ! isSolidColorStyle ) {\r\n\t\t\t\t// Block supports: Set style.border.color if a deprecated block has a default style and a `customMainColor` attribute.\r\n\t\t\t\tstyle = {\r\n\t\t\t\t\tborder: {\r\n\t\t\t\t\t\tcolor: customMainColor,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\t// Block supports: Set style.color.background if a deprecated block has a solid style and a `customMainColor` attribute.\r\n\t\t\t\tstyle = {\r\n\t\t\t\t\tcolor: {\r\n\t\t\t\t\t\tbackground: customMainColor,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Block supports: Set style.color.text if a deprecated block has a `customTextColor` attribute.\r\n\t\tif ( customTextColor && style ) {\r\n\t\t\tstyle.color = {\r\n\t\t\t\t...style.color,\r\n\t\t\t\ttext: customTextColor,\r\n\t\t\t};\r\n\t\t}\r\n\t\t// If is the default style, and a main color is set,\r\n\t\t// migrate the main color value into a custom border color.\r\n\t\t// The custom border color value is retrieved by parsing the figure styles.\r\n\t\tif ( ! isSolidColorStyle && mainColor && figureStyle ) {\r\n\t\t\tconst borderColor = parseBorderColor( figureStyle );\r\n\t\t\tif ( borderColor ) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: multilineToInline( value ),\r\n\t\t\t\t\t...attributes,\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t\t// Block supports: Set style.border.color if a deprecated block has `mainColor`, inline border CSS and is not a solid color style.\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tborder: {\r\n\t\t\t\t\t\t\tcolor: borderColor,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tvalue: multilineToInline( value ),\r\n\t\t\tclassName,\r\n\t\t\tbackgroundColor: isSolidColorStyle ? mainColor : undefined,\r\n\t\t\tborderColor: isSolidColorStyle ? undefined : mainColor,\r\n\t\t\ttextAlign: isSolidColorStyle ? 'left' : undefined,\r\n\t\t\tstyle,\r\n\t\t\t...attributes,\r\n\t\t};\r\n\t},\r\n};\r\n\r\nconst v2 = {\r\n\tattributes: blockAttributes,\r\n\tsave( { attributes } ) {\r\n\t\tconst {\r\n\t\t\tmainColor,\r\n\t\t\tcustomMainColor,\r\n\t\t\ttextColor,\r\n\t\t\tcustomTextColor,\r\n\t\t\tvalue,\r\n\t\t\tcitation,\r\n\t\t\tclassName,\r\n\t\t} = attributes;\r\n\t\tconst isSolidColorStyle = className?.includes( SOLID_COLOR_CLASS );\r\n\r\n\t\tlet figureClass, figureStyles;\r\n\t\t// Is solid color style\r\n\t\tif ( isSolidColorStyle ) {\r\n\t\t\tfigureClass = getColorClassName( 'background-color', mainColor );\r\n\t\t\tif ( ! figureClass ) {\r\n\t\t\t\tfigureStyles = {\r\n\t\t\t\t\tbackgroundColor: customMainColor,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t// Is normal style and a custom color is being used ( we can set a style directly with its value)\r\n\t\t} else if ( customMainColor ) {\r\n\t\t\tfigureStyles = {\r\n\t\t\t\tborderColor: customMainColor,\r\n\t\t\t};\r\n\t\t\t// Is normal style and a named color is being used, we need to retrieve the color value to set the style,\r\n\t\t\t// as there is no expectation that themes create classes that set border colors.\r\n\t\t} else if ( mainColor ) {\r\n\t\t\tconst colors =\r\n\t\t\t\tselect( blockEditorStore ).getSettings().colors ?? [];\r\n\t\t\tconst colorObject = getColorObjectByAttributeValues(\r\n\t\t\t\tcolors,\r\n\t\t\t\tmainColor\r\n\t\t\t);\r\n\t\t\tfigureStyles = {\r\n\t\t\t\tborderColor: colorObject.color,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst blockquoteTextColorClass = getColorClassName(\r\n\t\t\t'color',\r\n\t\t\ttextColor\r\n\t\t);\r\n\t\tconst blockquoteClasses =\r\n\t\t\ttextColor || customTextColor\r\n\t\t\t\t? clsx( 'has-text-color', {\r\n\t\t\t\t\t\t[ blockquoteTextColorClass ]: blockquoteTextColorClass,\r\n\t\t\t\t  } )\r\n\t\t\t\t: undefined;\r\n\t\tconst blockquoteStyle = blockquoteTextColorClass\r\n\t\t\t? undefined\r\n\t\t\t: { color: customTextColor };\r\n\t\treturn (\r\n\t\t\t<figure className={ figureClass } style={ figureStyles }>\r\n\t\t\t\t<blockquote\r\n\t\t\t\t\tclassName={ blockquoteClasses }\r\n\t\t\t\t\tstyle={ blockquoteStyle }\r\n\t\t\t\t>\r\n\t\t\t\t\t<RichText.Content value={ value } multiline />\r\n\t\t\t\t\t{ ! RichText.isEmpty( citation ) && (\r\n\t\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\r\n\t\t\t\t\t) }\r\n\t\t\t\t</blockquote>\r\n\t\t\t</figure>\r\n\t\t);\r\n\t},\r\n\tmigrate( {\r\n\t\tvalue,\r\n\t\tclassName,\r\n\t\tmainColor,\r\n\t\tcustomMainColor,\r\n\t\tcustomTextColor,\r\n\t\t...attributes\r\n\t} ) {\r\n\t\tconst isSolidColorStyle = className?.includes( SOLID_COLOR_CLASS );\r\n\t\tlet style = {};\r\n\r\n\t\tif ( customMainColor ) {\r\n\t\t\tif ( ! isSolidColorStyle ) {\r\n\t\t\t\t// Block supports: Set style.border.color if a deprecated block has a default style and a `customMainColor` attribute.\r\n\t\t\t\tstyle = {\r\n\t\t\t\t\tborder: {\r\n\t\t\t\t\t\tcolor: customMainColor,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\t// Block supports: Set style.color.background if a deprecated block has a solid style and a `customMainColor` attribute.\r\n\t\t\t\tstyle = {\r\n\t\t\t\t\tcolor: {\r\n\t\t\t\t\t\tbackground: customMainColor,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Block supports: Set style.color.text if a deprecated block has a `customTextColor` attribute.\r\n\t\tif ( customTextColor && style ) {\r\n\t\t\tstyle.color = {\r\n\t\t\t\t...style.color,\r\n\t\t\t\ttext: customTextColor,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tvalue: multilineToInline( value ),\r\n\t\t\tclassName,\r\n\t\t\tbackgroundColor: isSolidColorStyle ? mainColor : undefined,\r\n\t\t\tborderColor: isSolidColorStyle ? undefined : mainColor,\r\n\t\t\ttextAlign: isSolidColorStyle ? 'left' : undefined,\r\n\t\t\tstyle,\r\n\t\t\t...attributes,\r\n\t\t};\r\n\t},\r\n};\r\n\r\nconst v1 = {\r\n\tattributes: {\r\n\t\t...blockAttributes,\r\n\t},\r\n\tsave( { attributes } ) {\r\n\t\tconst { value, citation } = attributes;\r\n\t\treturn (\r\n\t\t\t<blockquote>\r\n\t\t\t\t<RichText.Content value={ value } multiline />\r\n\t\t\t\t{ ! RichText.isEmpty( citation ) && (\r\n\t\t\t\t\t<RichText.Content tagName=\"cite\" value={ citation } />\r\n\t\t\t\t) }\r\n\t\t\t</blockquote>\r\n\t\t);\r\n\t},\r\n\tmigrate( { value, ...attributes } ) {\r\n\t\treturn {\r\n\t\t\tvalue: multilineToInline( value ),\r\n\t\t\t...attributes,\r\n\t\t};\r\n\t},\r\n};\r\n\r\nconst v0 = {\r\n\tattributes: {\r\n\t\t...blockAttributes,\r\n\t\tcitation: {\r\n\t\t\ttype: 'string',\r\n\t\t\tsource: 'html',\r\n\t\t\tselector: 'footer',\r\n\t\t},\r\n\t\talign: {\r\n\t\t\ttype: 'string',\r\n\t\t\tdefault: 'none',\r\n\t\t},\r\n\t},\r\n\r\n\tsave( { attributes } ) {\r\n\t\tconst { value, citation, align } = attributes;\r\n\r\n\t\treturn (\r\n\t\t\t<blockquote className={ `align${ align }` }>\r\n\t\t\t\t<RichText.Content value={ value } multiline />\r\n\t\t\t\t{ ! RichText.isEmpty( citation ) && (\r\n\t\t\t\t\t<RichText.Content tagName=\"footer\" value={ citation } />\r\n\t\t\t\t) }\r\n\t\t\t</blockquote>\r\n\t\t);\r\n\t},\r\n\tmigrate( { value, ...attributes } ) {\r\n\t\treturn {\r\n\t\t\tvalue: multilineToInline( value ),\r\n\t\t\t...attributes,\r\n\t\t};\r\n\t},\r\n};\r\n\r\n/**\r\n * New deprecations need to be placed first\r\n * for them to have higher priority.\r\n *\r\n * Old deprecations may need to be updated as well.\r\n *\r\n * See block-deprecation.md\r\n */\r\nexport default [ v5, v4, v3, v2, v1, v0 ];\r\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;;AAEvB;AACA;AACA;AACA,SACCC,iBAAiB,EACjBC,+BAA+B,EAC/BC,QAAQ,EACRC,KAAK,IAAIC,gBAAgB,EACzBC,aAAa,QACP,yBAAyB;AAChC,SAASC,MAAM,QAAQ,iBAAiB;;AAExC;AACA;AACA;AACA,SAASC,iBAAiB,QAAQ,UAAU;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7C,MAAMC,eAAe,GAAG;EACvBC,KAAK,EAAE;IACNC,IAAI,EAAE,QAAQ;IACdC,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE,YAAY;IACtBC,SAAS,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACTJ,IAAI,EAAE,QAAQ;IACdC,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE,MAAM;IAChBG,OAAO,EAAE;EACV,CAAC;EACDC,SAAS,EAAE;IACVN,IAAI,EAAE;EACP,CAAC;EACDO,eAAe,EAAE;IAChBP,IAAI,EAAE;EACP,CAAC;EACDQ,SAAS,EAAE;IACVR,IAAI,EAAE;EACP,CAAC;EACDS,eAAe,EAAE;IAChBT,IAAI,EAAE;EACP;AACD,CAAC;AAED,SAASU,gBAAgBA,CAAEC,WAAW,EAAG;EACxC,IAAK,CAAEA,WAAW,EAAG;IACpB;EACD;EACA,MAAMC,OAAO,GAAGD,WAAW,CAACE,KAAK,CAAE,0BAA2B,CAAC;EAC/D,IAAKD,OAAO,IAAIA,OAAO,CAAE,CAAC,CAAE,EAAG;IAC9B,OAAOA,OAAO,CAAE,CAAC,CAAE;EACpB;AACD;AAEA,SAASE,iBAAiBA,CAAEf,KAAK,EAAG;EACnCA,KAAK,GAAGA,KAAK,IAAK,SAAQ;EAC1B,MAAMgB,MAAM,GAAI,OAAOhB,KAAO,KAAI;EAClC,MAAMiB,MAAM,GAAGD,MAAM,CAACE,KAAK,CAAG,SAAS,CAAC;EAExCD,MAAM,CAACE,KAAK,CAAC,CAAC;EACdF,MAAM,CAACG,GAAG,CAAC,CAAC;EAEZ,OAAOH,MAAM,CAACI,IAAI,CAAE,MAAO,CAAC;AAC7B;AAEA,MAAMC,EAAE,GAAG;EACVC,UAAU,EAAE;IACXvB,KAAK,EAAE;MACNC,IAAI,EAAE,QAAQ;MACdC,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE,YAAY;MACtBC,SAAS,EAAE,GAAG;MACdoB,kBAAkB,EAAE;IACrB,CAAC;IACDnB,QAAQ,EAAE;MACTJ,IAAI,EAAE,QAAQ;MACdC,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE,MAAM;MAChBG,OAAO,EAAE,EAAE;MACXkB,kBAAkB,EAAE;IACrB,CAAC;IACDC,SAAS,EAAE;MACVxB,IAAI,EAAE;IACP;EACD,CAAC;EACDyB,IAAIA,CAAE;IAAEH;EAAW,CAAC,EAAG;IACtB,MAAM;MAAEE,SAAS;MAAEpB,QAAQ;MAAEL;IAAM,CAAC,GAAGuB,UAAU;IACjD,MAAMI,kBAAkB,GAAG,CAAEtC,QAAQ,CAACuC,OAAO,CAAEvB,QAAS,CAAC;IAEzD,oBACCT,IAAA;MAAA,GACMJ,aAAa,CAACkC,IAAI,CAAE;QACxBG,SAAS,EAAE3C,IAAI,CAAE;UAChB,CAAG,kBAAkBuC,SAAW,EAAC,GAAIA;QACtC,CAAE;MACH,CAAE,CAAC;MAAAK,QAAA,eAEHhC,KAAA;QAAAgC,QAAA,gBACClC,IAAA,CAACP,QAAQ,CAAC0C,OAAO;UAAC/B,KAAK,EAAGA,KAAO;UAACI,SAAS;QAAA,CAAE,CAAC,EAC5CuB,kBAAkB,iBACnB/B,IAAA,CAACP,QAAQ,CAAC0C,OAAO;UAACC,OAAO,EAAC,MAAM;UAAChC,KAAK,EAAGK;QAAU,CAAE,CACrD;MAAA,CACU;IAAC,CACN,CAAC;EAEX,CAAC;EACD4B,OAAOA,CAAE;IAAEjC,KAAK;IAAE,GAAGuB;EAAW,CAAC,EAAG;IACnC,OAAO;MACNvB,KAAK,EAAEe,iBAAiB,CAAEf,KAAM,CAAC;MACjC,GAAGuB;IACJ,CAAC;EACF;AACD,CAAC;;AAED;;AAEA,MAAMW,EAAE,GAAG;EACVX,UAAU,EAAE;IACX,GAAGxB;EACJ,CAAC;EACD2B,IAAIA,CAAE;IAAEH;EAAW,CAAC,EAAG;IACtB,MAAM;MACLhB,SAAS;MACTC,eAAe;MACfE,eAAe;MACfD,SAAS;MACTT,KAAK;MACLK,QAAQ;MACRwB;IACD,CAAC,GAAGN,UAAU;IAEd,MAAMY,iBAAiB,GAAGN,SAAS,EAAEO,QAAQ,CAAE1C,iBAAkB,CAAC;IAElE,IAAI2C,aAAa,EAAEC,YAAY;;IAE/B;IACA,IAAKH,iBAAiB,EAAG;MACxB,MAAMI,eAAe,GAAGpD,iBAAiB,CACxC,kBAAkB,EAClBoB,SACD,CAAC;MAED8B,aAAa,GAAGnD,IAAI,CAAE;QACrB,gBAAgB,EAAEqD,eAAe,IAAI/B,eAAe;QACpD,CAAE+B,eAAe,GAAIA;MACtB,CAAE,CAAC;MAEHD,YAAY,GAAG;QACdE,eAAe,EAAED,eAAe,GAAGE,SAAS,GAAGjC;MAChD,CAAC;MACD;IACD,CAAC,MAAM,IAAKA,eAAe,EAAG;MAC7B8B,YAAY,GAAG;QACdI,WAAW,EAAElC;MACd,CAAC;IACF;IAEA,MAAMmC,wBAAwB,GAAGxD,iBAAiB,CACjD,OAAO,EACPsB,SACD,CAAC;IACD,MAAMmC,iBAAiB,GAAG1D,IAAI,CAAE;MAC/B,gBAAgB,EAAEuB,SAAS,IAAIC,eAAe;MAC9C,CAAEiC,wBAAwB,GAAIA;IAC/B,CAAE,CAAC;IAEH,MAAME,gBAAgB,GAAGF,wBAAwB,GAC9CF,SAAS,GACT;MAAEK,KAAK,EAAEpC;IAAgB,CAAC;IAE7B,oBACCd,IAAA;MAAA,GACMJ,aAAa,CAACkC,IAAI,CAAE;QACxBG,SAAS,EAAEQ,aAAa;QACxBU,KAAK,EAAET;MACR,CAAE,CAAC;MAAAR,QAAA,eAEHhC,KAAA;QACC+B,SAAS,EAAGe,iBAAmB;QAC/BG,KAAK,EAAGF,gBAAkB;QAAAf,QAAA,gBAE1BlC,IAAA,CAACP,QAAQ,CAAC0C,OAAO;UAAC/B,KAAK,EAAGA,KAAO;UAACI,SAAS;QAAA,CAAE,CAAC,EAC5C,CAAEf,QAAQ,CAACuC,OAAO,CAAEvB,QAAS,CAAC,iBAC/BT,IAAA,CAACP,QAAQ,CAAC0C,OAAO;UAACC,OAAO,EAAC,MAAM;UAAChC,KAAK,EAAGK;QAAU,CAAE,CACrD;MAAA,CACU;IAAC,CACN,CAAC;EAEX,CAAC;EACD4B,OAAOA,CAAE;IACRjC,KAAK;IACL6B,SAAS;IACTtB,SAAS;IACTC,eAAe;IACfE,eAAe;IACf,GAAGa;EACJ,CAAC,EAAG;IACH,MAAMY,iBAAiB,GAAGN,SAAS,EAAEO,QAAQ,CAAE1C,iBAAkB,CAAC;IAClE,IAAIqD,KAAK;IAET,IAAKvC,eAAe,EAAG;MACtB,IAAK,CAAE2B,iBAAiB,EAAG;QAC1B;QACAY,KAAK,GAAG;UACPC,MAAM,EAAE;YACPF,KAAK,EAAEtC;UACR;QACD,CAAC;MACF,CAAC,MAAM;QACN;QACAuC,KAAK,GAAG;UACPD,KAAK,EAAE;YACNG,UAAU,EAAEzC;UACb;QACD,CAAC;MACF;IACD;;IAEA;IACA,IAAKE,eAAe,IAAIqC,KAAK,EAAG;MAC/BA,KAAK,CAACD,KAAK,GAAG;QACb,GAAGC,KAAK,CAACD,KAAK;QACdI,IAAI,EAAExC;MACP,CAAC;IACF;IAEA,OAAO;MACNV,KAAK,EAAEe,iBAAiB,CAAEf,KAAM,CAAC;MACjC6B,SAAS;MACTW,eAAe,EAAEL,iBAAiB,GAAG5B,SAAS,GAAGkC,SAAS;MAC1DC,WAAW,EAAEP,iBAAiB,GAAGM,SAAS,GAAGlC,SAAS;MACtDkB,SAAS,EAAEU,iBAAiB,GAAG,MAAM,GAAGM,SAAS;MACjDM,KAAK;MACL,GAAGxB;IACJ,CAAC;EACF;AACD,CAAC;AAED,MAAM4B,EAAE,GAAG;EACV5B,UAAU,EAAE;IACX,GAAGxB,eAAe;IAClB;IACA;IACAqD,WAAW,EAAE;MACZlD,MAAM,EAAE,WAAW;MACnBC,QAAQ,EAAE,QAAQ;MAClBkD,SAAS,EAAE;IACZ;EACD,CAAC;EACD3B,IAAIA,CAAE;IAAEH;EAAW,CAAC,EAAG;IACtB,MAAM;MACLhB,SAAS;MACTC,eAAe;MACfC,SAAS;MACTC,eAAe;MACfV,KAAK;MACLK,QAAQ;MACRwB,SAAS;MACTuB;IACD,CAAC,GAAG7B,UAAU;IAEd,MAAMY,iBAAiB,GAAGN,SAAS,EAAEO,QAAQ,CAAE1C,iBAAkB,CAAC;IAElE,IAAI2C,aAAa,EAAEC,YAAY;;IAE/B;IACA,IAAKH,iBAAiB,EAAG;MACxB,MAAMI,eAAe,GAAGpD,iBAAiB,CACxC,kBAAkB,EAClBoB,SACD,CAAC;MAED8B,aAAa,GAAGnD,IAAI,CAAE;QACrB,gBAAgB,EAAEqD,eAAe,IAAI/B,eAAe;QACpD,CAAE+B,eAAe,GAAIA;MACtB,CAAE,CAAC;MAEHD,YAAY,GAAG;QACdE,eAAe,EAAED,eAAe,GAAGE,SAAS,GAAGjC;MAChD,CAAC;MACD;IACD,CAAC,MAAM,IAAKA,eAAe,EAAG;MAC7B8B,YAAY,GAAG;QACdI,WAAW,EAAElC;MACd,CAAC;MACD;MACA;IACD,CAAC,MAAM,IAAKD,SAAS,EAAG;MACvB;MACA;MACA;MACA;MACA;MACA,MAAMmC,WAAW,GAAG/B,gBAAgB,CAAEyC,WAAY,CAAC;MACnDd,YAAY,GAAG;QACdI;MACD,CAAC;IACF;IAEA,MAAMC,wBAAwB,GAAGxD,iBAAiB,CACjD,OAAO,EACPsB,SACD,CAAC;IACD,MAAMmC,iBAAiB,GACtB,CAAEnC,SAAS,IAAIC,eAAe,KAC9BxB,IAAI,CAAE,gBAAgB,EAAE;MACvB,CAAEyD,wBAAwB,GAAIA;IAC/B,CAAE,CAAC;IAEJ,MAAME,gBAAgB,GAAGF,wBAAwB,GAC9CF,SAAS,GACT;MAAEK,KAAK,EAAEpC;IAAgB,CAAC;IAE7B,oBACCd,IAAA;MAAQiC,SAAS,EAAGQ,aAAe;MAACU,KAAK,EAAGT,YAAc;MAAAR,QAAA,eACzDhC,KAAA;QACC+B,SAAS,EAAGe,iBAAmB;QAC/BG,KAAK,EAAGF,gBAAkB;QAAAf,QAAA,gBAE1BlC,IAAA,CAACP,QAAQ,CAAC0C,OAAO;UAAC/B,KAAK,EAAGA,KAAO;UAACI,SAAS;QAAA,CAAE,CAAC,EAC5C,CAAEf,QAAQ,CAACuC,OAAO,CAAEvB,QAAS,CAAC,iBAC/BT,IAAA,CAACP,QAAQ,CAAC0C,OAAO;UAACC,OAAO,EAAC,MAAM;UAAChC,KAAK,EAAGK;QAAU,CAAE,CACrD;MAAA,CACU;IAAC,CACN,CAAC;EAEX,CAAC;EACD4B,OAAOA,CAAE;IACRjC,KAAK;IACL6B,SAAS;IACTuB,WAAW;IACX7C,SAAS;IACTC,eAAe;IACfE,eAAe;IACf,GAAGa;EACJ,CAAC,EAAG;IACH,MAAMY,iBAAiB,GAAGN,SAAS,EAAEO,QAAQ,CAAE1C,iBAAkB,CAAC;IAClE,IAAIqD,KAAK;IAET,IAAKvC,eAAe,EAAG;MACtB,IAAK,CAAE2B,iBAAiB,EAAG;QAC1B;QACAY,KAAK,GAAG;UACPC,MAAM,EAAE;YACPF,KAAK,EAAEtC;UACR;QACD,CAAC;MACF,CAAC,MAAM;QACN;QACAuC,KAAK,GAAG;UACPD,KAAK,EAAE;YACNG,UAAU,EAAEzC;UACb;QACD,CAAC;MACF;IACD;;IAEA;IACA,IAAKE,eAAe,IAAIqC,KAAK,EAAG;MAC/BA,KAAK,CAACD,KAAK,GAAG;QACb,GAAGC,KAAK,CAACD,KAAK;QACdI,IAAI,EAAExC;MACP,CAAC;IACF;IACA;IACA;IACA;IACA,IAAK,CAAEyB,iBAAiB,IAAI5B,SAAS,IAAI6C,WAAW,EAAG;MACtD,MAAMV,WAAW,GAAG/B,gBAAgB,CAAEyC,WAAY,CAAC;MACnD,IAAKV,WAAW,EAAG;QAClB,OAAO;UACN1C,KAAK,EAAEe,iBAAiB,CAAEf,KAAM,CAAC;UACjC,GAAGuB,UAAU;UACbM,SAAS;UACT;UACAkB,KAAK,EAAE;YACNC,MAAM,EAAE;cACPF,KAAK,EAAEJ;YACR;UACD;QACD,CAAC;MACF;IACD;IACA,OAAO;MACN1C,KAAK,EAAEe,iBAAiB,CAAEf,KAAM,CAAC;MACjC6B,SAAS;MACTW,eAAe,EAAEL,iBAAiB,GAAG5B,SAAS,GAAGkC,SAAS;MAC1DC,WAAW,EAAEP,iBAAiB,GAAGM,SAAS,GAAGlC,SAAS;MACtDkB,SAAS,EAAEU,iBAAiB,GAAG,MAAM,GAAGM,SAAS;MACjDM,KAAK;MACL,GAAGxB;IACJ,CAAC;EACF;AACD,CAAC;AAED,MAAM+B,EAAE,GAAG;EACV/B,UAAU,EAAExB,eAAe;EAC3B2B,IAAIA,CAAE;IAAEH;EAAW,CAAC,EAAG;IACtB,MAAM;MACLhB,SAAS;MACTC,eAAe;MACfC,SAAS;MACTC,eAAe;MACfV,KAAK;MACLK,QAAQ;MACRwB;IACD,CAAC,GAAGN,UAAU;IACd,MAAMY,iBAAiB,GAAGN,SAAS,EAAEO,QAAQ,CAAE1C,iBAAkB,CAAC;IAElE,IAAI6D,WAAW,EAAEjB,YAAY;IAC7B;IACA,IAAKH,iBAAiB,EAAG;MACxBoB,WAAW,GAAGpE,iBAAiB,CAAE,kBAAkB,EAAEoB,SAAU,CAAC;MAChE,IAAK,CAAEgD,WAAW,EAAG;QACpBjB,YAAY,GAAG;UACdE,eAAe,EAAEhC;QAClB,CAAC;MACF;MACA;IACD,CAAC,MAAM,IAAKA,eAAe,EAAG;MAC7B8B,YAAY,GAAG;QACdI,WAAW,EAAElC;MACd,CAAC;MACD;MACA;IACD,CAAC,MAAM,IAAKD,SAAS,EAAG;MAAA,IAAAiD,qBAAA;MACvB,MAAMC,MAAM,IAAAD,qBAAA,GACX/D,MAAM,CAAEF,gBAAiB,CAAC,CAACmE,WAAW,CAAC,CAAC,CAACD,MAAM,cAAAD,qBAAA,cAAAA,qBAAA,GAAI,EAAE;MACtD,MAAMG,WAAW,GAAGvE,+BAA+B,CAClDqE,MAAM,EACNlD,SACD,CAAC;MACD+B,YAAY,GAAG;QACdI,WAAW,EAAEiB,WAAW,CAACb;MAC1B,CAAC;IACF;IAEA,MAAMH,wBAAwB,GAAGxD,iBAAiB,CACjD,OAAO,EACPsB,SACD,CAAC;IACD,MAAMmC,iBAAiB,GACtBnC,SAAS,IAAIC,eAAe,GACzBxB,IAAI,CAAE,gBAAgB,EAAE;MACxB,CAAEyD,wBAAwB,GAAIA;IAC9B,CAAE,CAAC,GACHF,SAAS;IACb,MAAMmB,eAAe,GAAGjB,wBAAwB,GAC7CF,SAAS,GACT;MAAEK,KAAK,EAAEpC;IAAgB,CAAC;IAC7B,oBACCd,IAAA;MAAQiC,SAAS,EAAG0B,WAAa;MAACR,KAAK,EAAGT,YAAc;MAAAR,QAAA,eACvDhC,KAAA;QACC+B,SAAS,EAAGe,iBAAmB;QAC/BG,KAAK,EAAGa,eAAiB;QAAA9B,QAAA,gBAEzBlC,IAAA,CAACP,QAAQ,CAAC0C,OAAO;UAAC/B,KAAK,EAAGA,KAAO;UAACI,SAAS;QAAA,CAAE,CAAC,EAC5C,CAAEf,QAAQ,CAACuC,OAAO,CAAEvB,QAAS,CAAC,iBAC/BT,IAAA,CAACP,QAAQ,CAAC0C,OAAO;UAACC,OAAO,EAAC,MAAM;UAAChC,KAAK,EAAGK;QAAU,CAAE,CACrD;MAAA,CACU;IAAC,CACN,CAAC;EAEX,CAAC;EACD4B,OAAOA,CAAE;IACRjC,KAAK;IACL6B,SAAS;IACTtB,SAAS;IACTC,eAAe;IACfE,eAAe;IACf,GAAGa;EACJ,CAAC,EAAG;IACH,MAAMY,iBAAiB,GAAGN,SAAS,EAAEO,QAAQ,CAAE1C,iBAAkB,CAAC;IAClE,IAAIqD,KAAK,GAAG,CAAC,CAAC;IAEd,IAAKvC,eAAe,EAAG;MACtB,IAAK,CAAE2B,iBAAiB,EAAG;QAC1B;QACAY,KAAK,GAAG;UACPC,MAAM,EAAE;YACPF,KAAK,EAAEtC;UACR;QACD,CAAC;MACF,CAAC,MAAM;QACN;QACAuC,KAAK,GAAG;UACPD,KAAK,EAAE;YACNG,UAAU,EAAEzC;UACb;QACD,CAAC;MACF;IACD;;IAEA;IACA,IAAKE,eAAe,IAAIqC,KAAK,EAAG;MAC/BA,KAAK,CAACD,KAAK,GAAG;QACb,GAAGC,KAAK,CAACD,KAAK;QACdI,IAAI,EAAExC;MACP,CAAC;IACF;IAEA,OAAO;MACNV,KAAK,EAAEe,iBAAiB,CAAEf,KAAM,CAAC;MACjC6B,SAAS;MACTW,eAAe,EAAEL,iBAAiB,GAAG5B,SAAS,GAAGkC,SAAS;MAC1DC,WAAW,EAAEP,iBAAiB,GAAGM,SAAS,GAAGlC,SAAS;MACtDkB,SAAS,EAAEU,iBAAiB,GAAG,MAAM,GAAGM,SAAS;MACjDM,KAAK;MACL,GAAGxB;IACJ,CAAC;EACF;AACD,CAAC;AAED,MAAMsC,EAAE,GAAG;EACVtC,UAAU,EAAE;IACX,GAAGxB;EACJ,CAAC;EACD2B,IAAIA,CAAE;IAAEH;EAAW,CAAC,EAAG;IACtB,MAAM;MAAEvB,KAAK;MAAEK;IAAS,CAAC,GAAGkB,UAAU;IACtC,oBACCzB,KAAA;MAAAgC,QAAA,gBACClC,IAAA,CAACP,QAAQ,CAAC0C,OAAO;QAAC/B,KAAK,EAAGA,KAAO;QAACI,SAAS;MAAA,CAAE,CAAC,EAC5C,CAAEf,QAAQ,CAACuC,OAAO,CAAEvB,QAAS,CAAC,iBAC/BT,IAAA,CAACP,QAAQ,CAAC0C,OAAO;QAACC,OAAO,EAAC,MAAM;QAAChC,KAAK,EAAGK;MAAU,CAAE,CACrD;IAAA,CACU,CAAC;EAEf,CAAC;EACD4B,OAAOA,CAAE;IAAEjC,KAAK;IAAE,GAAGuB;EAAW,CAAC,EAAG;IACnC,OAAO;MACNvB,KAAK,EAAEe,iBAAiB,CAAEf,KAAM,CAAC;MACjC,GAAGuB;IACJ,CAAC;EACF;AACD,CAAC;AAED,MAAMuC,EAAE,GAAG;EACVvC,UAAU,EAAE;IACX,GAAGxB,eAAe;IAClBM,QAAQ,EAAE;MACTJ,IAAI,EAAE,QAAQ;MACdC,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE;IACX,CAAC;IACD4D,KAAK,EAAE;MACN9D,IAAI,EAAE,QAAQ;MACdK,OAAO,EAAE;IACV;EACD,CAAC;EAEDoB,IAAIA,CAAE;IAAEH;EAAW,CAAC,EAAG;IACtB,MAAM;MAAEvB,KAAK;MAAEK,QAAQ;MAAE0D;IAAM,CAAC,GAAGxC,UAAU;IAE7C,oBACCzB,KAAA;MAAY+B,SAAS,EAAI,QAAQkC,KAAO,EAAG;MAAAjC,QAAA,gBAC1ClC,IAAA,CAACP,QAAQ,CAAC0C,OAAO;QAAC/B,KAAK,EAAGA,KAAO;QAACI,SAAS;MAAA,CAAE,CAAC,EAC5C,CAAEf,QAAQ,CAACuC,OAAO,CAAEvB,QAAS,CAAC,iBAC/BT,IAAA,CAACP,QAAQ,CAAC0C,OAAO;QAACC,OAAO,EAAC,QAAQ;QAAChC,KAAK,EAAGK;MAAU,CAAE,CACvD;IAAA,CACU,CAAC;EAEf,CAAC;EACD4B,OAAOA,CAAE;IAAEjC,KAAK;IAAE,GAAGuB;EAAW,CAAC,EAAG;IACnC,OAAO;MACNvB,KAAK,EAAEe,iBAAiB,CAAEf,KAAM,CAAC;MACjC,GAAGuB;IACJ,CAAC;EACF;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,CAAED,EAAE,EAAEY,EAAE,EAAEiB,EAAE,EAAEG,EAAE,EAAEO,EAAE,EAAEC,EAAE,CAAE","ignoreList":[]}