{"version":3,"names":["fastDeepEqual","useRegistry","__unstableStripHTML","stripHTML","useEffect","addQueryArgs","removeQueryArgs","store","blockEditorStore","getLatestHeadings","select","clientId","_select$getPermalink","_getBlockAttributes","getBlockAttributes","getBlockName","getClientIdsWithDescendants","getBlocksByName","permalink","getPermalink","isPaginated","length","onlyIncludeCurrentPage","allBlockClientIds","tocPage","tocIndex","indexOf","blockIndex","blockClientId","entries","latestHeadings","headingPage","headingPageLink","page","blockName","headingAttributes","canBeLinked","anchor","push","content","replace","level","link","observeCallback","dispatch","updateBlockAttributes","__unstableMarkNextChangeAsNotPersistent","attributes","headings","useObserveHeadings","registry","subscribe"],"sources":["@wordpress/block-library/src/table-of-contents/hooks.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport fastDeepEqual from 'fast-deep-equal/es6';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { useRegistry } from '@wordpress/data';\r\nimport { __unstableStripHTML as stripHTML } from '@wordpress/dom';\r\nimport { useEffect } from '@wordpress/element';\r\nimport { addQueryArgs, removeQueryArgs } from '@wordpress/url';\r\nimport { store as blockEditorStore } from '@wordpress/block-editor';\r\n\r\nfunction getLatestHeadings( select, clientId ) {\r\n\tconst {\r\n\t\tgetBlockAttributes,\r\n\t\tgetBlockName,\r\n\t\tgetClientIdsWithDescendants,\r\n\t\tgetBlocksByName,\r\n\t} = select( blockEditorStore );\r\n\r\n\t// FIXME: @wordpress/block-library should not depend on @wordpress/editor.\r\n\t// Blocks can be loaded into a *non-post* block editor, so to avoid\r\n\t// declaring @wordpress/editor as a dependency, we must access its\r\n\t// store by string. When the store is not available, editorSelectors\r\n\t// will be null, and the block's saved markup will lack permalinks.\r\n\t// eslint-disable-next-line @wordpress/data-no-store-string-literals\r\n\tconst permalink = select( 'core/editor' ).getPermalink() ?? null;\r\n\r\n\tconst isPaginated = getBlocksByName( 'core/nextpage' ).length !== 0;\r\n\tconst { onlyIncludeCurrentPage } = getBlockAttributes( clientId ) ?? {};\r\n\r\n\t// Get the client ids of all blocks in the editor.\r\n\tconst allBlockClientIds = getClientIdsWithDescendants();\r\n\r\n\t// If onlyIncludeCurrentPage is true, calculate the page (of a paginated post) this block is part of, so we know which headings to include; otherwise, skip the calculation.\r\n\tlet tocPage = 1;\r\n\r\n\tif ( isPaginated && onlyIncludeCurrentPage ) {\r\n\t\t// We can't use getBlockIndex because it only returns the index\r\n\t\t// relative to sibling blocks.\r\n\t\tconst tocIndex = allBlockClientIds.indexOf( clientId );\r\n\r\n\t\tfor ( const [\r\n\t\t\tblockIndex,\r\n\t\t\tblockClientId,\r\n\t\t] of allBlockClientIds.entries() ) {\r\n\t\t\t// If we've reached blocks after the Table of Contents, we've\r\n\t\t\t// finished calculating which page the block is on.\r\n\t\t\tif ( blockIndex >= tocIndex ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif ( getBlockName( blockClientId ) === 'core/nextpage' ) {\r\n\t\t\t\ttocPage++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst latestHeadings = [];\r\n\r\n\t/** The page (of a paginated post) a heading will be part of. */\r\n\tlet headingPage = 1;\r\n\tlet headingPageLink = null;\r\n\r\n\t// If the core/editor store is available, we can add permalinks to the\r\n\t// generated table of contents.\r\n\tif ( typeof permalink === 'string' ) {\r\n\t\theadingPageLink = isPaginated\r\n\t\t\t? addQueryArgs( permalink, { page: headingPage } )\r\n\t\t\t: permalink;\r\n\t}\r\n\r\n\tfor ( const blockClientId of allBlockClientIds ) {\r\n\t\tconst blockName = getBlockName( blockClientId );\r\n\t\tif ( blockName === 'core/nextpage' ) {\r\n\t\t\theadingPage++;\r\n\r\n\t\t\t// If we're only including headings from the current page (of\r\n\t\t\t// a paginated post), then exit the loop if we've reached the\r\n\t\t\t// pages after the one with the Table of Contents block.\r\n\t\t\tif ( onlyIncludeCurrentPage && headingPage > tocPage ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif ( typeof permalink === 'string' ) {\r\n\t\t\t\theadingPageLink = addQueryArgs(\r\n\t\t\t\t\tremoveQueryArgs( permalink, [ 'page' ] ),\r\n\t\t\t\t\t{ page: headingPage }\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// If we're including all headings or we've reached headings on\r\n\t\t// the same page as the Table of Contents block, add them to the\r\n\t\t// list.\r\n\t\telse if ( ! onlyIncludeCurrentPage || headingPage === tocPage ) {\r\n\t\t\tif ( blockName === 'core/heading' ) {\r\n\t\t\t\tconst headingAttributes = getBlockAttributes( blockClientId );\r\n\r\n\t\t\t\tconst canBeLinked =\r\n\t\t\t\t\ttypeof headingPageLink === 'string' &&\r\n\t\t\t\t\ttypeof headingAttributes.anchor === 'string' &&\r\n\t\t\t\t\theadingAttributes.anchor !== '';\r\n\r\n\t\t\t\tlatestHeadings.push( {\r\n\t\t\t\t\t// Convert line breaks to spaces, and get rid of HTML tags in the headings.\r\n\t\t\t\t\tcontent: stripHTML(\r\n\t\t\t\t\t\theadingAttributes.content.replace(\r\n\t\t\t\t\t\t\t/(<br *\\/?>)+/g,\r\n\t\t\t\t\t\t\t' '\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t),\r\n\t\t\t\t\tlevel: headingAttributes.level,\r\n\t\t\t\t\tlink: canBeLinked\r\n\t\t\t\t\t\t? `${ headingPageLink }#${ headingAttributes.anchor }`\r\n\t\t\t\t\t\t: null,\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn latestHeadings;\r\n}\r\n\r\nfunction observeCallback( select, dispatch, clientId ) {\r\n\tconst { getBlockAttributes } = select( blockEditorStore );\r\n\tconst { updateBlockAttributes, __unstableMarkNextChangeAsNotPersistent } =\r\n\t\tdispatch( blockEditorStore );\r\n\r\n\t/**\r\n\t * If the block no longer exists in the store, skip the update.\r\n\t * The \"undo\" action recreates the block and provides a new `clientId`.\r\n\t * The hook still might be observing the changes while the old block unmounts.\r\n\t */\r\n\tconst attributes = getBlockAttributes( clientId );\r\n\tif ( attributes === null ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst headings = getLatestHeadings( select, clientId );\r\n\tif ( ! fastDeepEqual( headings, attributes.headings ) ) {\r\n\t\t__unstableMarkNextChangeAsNotPersistent();\r\n\t\tupdateBlockAttributes( clientId, { headings } );\r\n\t}\r\n}\r\n\r\nexport function useObserveHeadings( clientId ) {\r\n\tconst registry = useRegistry();\r\n\tuseEffect( () => {\r\n\t\t// Todo: Limit subscription to block editor store when data no longer depends on `getPermalink`.\r\n\t\t// See: https://github.com/WordPress/gutenberg/pull/45513\r\n\t\treturn registry.subscribe( () =>\r\n\t\t\tobserveCallback( registry.select, registry.dispatch, clientId )\r\n\t\t);\r\n\t}, [ registry, clientId ] );\r\n}\r\n"],"mappings":"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","ignoreList":[]}