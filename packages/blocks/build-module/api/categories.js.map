{"version":3,"names":["dispatch","select","store","blocksStore","getCategories","setCategories","categories","updateCategory","slug","category"],"sources":["@wordpress/blocks/src/api/categories.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { dispatch, select } from '@wordpress/data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as blocksStore } from '../store';\r\n\r\n/** @typedef {import('../store/reducer').WPBlockCategory} WPBlockCategory */\r\n\r\n/**\r\n * Returns all the block categories.\r\n * Ignored from documentation as the recommended usage is via useSelect from @wordpress/data.\r\n *\r\n * @ignore\r\n *\r\n * @return {WPBlockCategory[]} Block categories.\r\n */\r\nexport function getCategories() {\r\n\treturn select( blocksStore ).getCategories();\r\n}\r\n\r\n/**\r\n * Sets the block categories.\r\n *\r\n * @param {WPBlockCategory[]} categories Block categories.\r\n *\r\n * @example\r\n * ```js\r\n * import { __ } from '@wordpress/i18n';\r\n * import { store as blocksStore, setCategories } from '@wordpress/blocks';\r\n * import { useSelect } from '@wordpress/data';\r\n * import { Button } from '@wordpress/components';\r\n *\r\n * const ExampleComponent = () => {\r\n *     // Retrieve the list of current categories.\r\n *     const blockCategories = useSelect(\r\n *         ( select ) => select( blocksStore ).getCategories(),\r\n *         []\r\n *     );\r\n *\r\n *     return (\r\n *         <Button\r\n *             onClick={ () => {\r\n *                 // Add a custom category to the existing list.\r\n *                 setCategories( [\r\n *                     ...blockCategories,\r\n *                     { title: 'Custom Category', slug: 'custom-category' },\r\n *                 ] );\r\n *             } }\r\n *         >\r\n *             { __( 'Add a new custom block category' ) }\r\n *         </Button>\r\n *     );\r\n * };\r\n * ```\r\n */\r\nexport function setCategories( categories ) {\r\n\tdispatch( blocksStore ).setCategories( categories );\r\n}\r\n\r\n/**\r\n * Updates a category.\r\n *\r\n * @param {string}          slug     Block category slug.\r\n * @param {WPBlockCategory} category Object containing the category properties\r\n *                                   that should be updated.\r\n *\r\n * @example\r\n * ```js\r\n * import { __ } from '@wordpress/i18n';\r\n * import { updateCategory } from '@wordpress/blocks';\r\n * import { Button } from '@wordpress/components';\r\n *\r\n * const ExampleComponent = () => {\r\n *     return (\r\n *         <Button\r\n *             onClick={ () => {\r\n *                 updateCategory( 'text', { title: __( 'Written Word' ) } );\r\n *             } }\r\n *         >\r\n *             { __( 'Update Text category title' ) }\r\n *         </Button>\r\n * )    ;\r\n * };\r\n * ```\r\n */\r\nexport function updateCategory( slug, category ) {\r\n\tdispatch( blocksStore ).updateCategory( slug, category );\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,iBAAiB;;AAElD;AACA;AACA;AACA,SAASC,KAAK,IAAIC,WAAW,QAAQ,UAAU;;AAE/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAAA,EAAG;EAC/B,OAAOH,MAAM,CAAEE,WAAY,CAAC,CAACC,aAAa,CAAC,CAAC;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAAEC,UAAU,EAAG;EAC3CN,QAAQ,CAAEG,WAAY,CAAC,CAACE,aAAa,CAAEC,UAAW,CAAC;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAAEC,IAAI,EAAEC,QAAQ,EAAG;EAChDT,QAAQ,CAAEG,WAAY,CAAC,CAACI,cAAc,CAAEC,IAAI,EAAEC,QAAS,CAAC;AACzD","ignoreList":[]}