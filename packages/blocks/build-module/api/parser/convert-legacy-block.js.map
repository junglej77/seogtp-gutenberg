{"version":3,"names":["convertLegacyBlockNameAndAttributes","name","attributes","newAttributes","indexOf","service","substring","providerSlug","deprecated","speaker","polldaddy","providerNameSlug","includes","responsive","className","join","legacy","layout","type","columnCount","parseInt","style","columnSpan","columnSpanNumber","isNaN","undefined","rowSpan","rowSpanNumber","globalThis","IS_GUTENBERG_PLUGIN","metadata","bindings","__default","source","hasPatternOverrides","forEach","binding"],"sources":["@wordpress/blocks/src/api/parser/convert-legacy-block.js"],"sourcesContent":["/**\r\n * Convert legacy blocks to their canonical form. This function is used\r\n * both in the parser level for previous content and to convert such blocks\r\n * used in Custom Post Types templates.\r\n *\r\n * @param {string} name       The block's name\r\n * @param {Object} attributes The block's attributes\r\n *\r\n * @return {[string, Object]} The block's name and attributes, changed accordingly if a match was found\r\n */\r\nexport function convertLegacyBlockNameAndAttributes( name, attributes ) {\r\n\tconst newAttributes = { ...attributes };\r\n\t// Convert 'core/cover-image' block in existing content to 'core/cover'.\r\n\tif ( 'core/cover-image' === name ) {\r\n\t\tname = 'core/cover';\r\n\t}\r\n\r\n\t// Convert 'core/text' blocks in existing content to 'core/paragraph'.\r\n\tif ( 'core/text' === name || 'core/cover-text' === name ) {\r\n\t\tname = 'core/paragraph';\r\n\t}\r\n\r\n\t// Convert derivative blocks such as 'core/social-link-wordpress' to the\r\n\t// canonical form 'core/social-link'.\r\n\tif ( name && name.indexOf( 'core/social-link-' ) === 0 ) {\r\n\t\t// Capture `social-link-wordpress` into `{\"service\":\"wordpress\"}`\r\n\t\tnewAttributes.service = name.substring( 17 );\r\n\t\tname = 'core/social-link';\r\n\t}\r\n\r\n\t// Convert derivative blocks such as 'core-embed/instagram' to the\r\n\t// canonical form 'core/embed'.\r\n\tif ( name && name.indexOf( 'core-embed/' ) === 0 ) {\r\n\t\t// Capture `core-embed/instagram` into `{\"providerNameSlug\":\"instagram\"}`\r\n\t\tconst providerSlug = name.substring( 11 );\r\n\t\tconst deprecated = {\r\n\t\t\tspeaker: 'speaker-deck',\r\n\t\t\tpolldaddy: 'crowdsignal',\r\n\t\t};\r\n\t\tnewAttributes.providerNameSlug =\r\n\t\t\tproviderSlug in deprecated\r\n\t\t\t\t? deprecated[ providerSlug ]\r\n\t\t\t\t: providerSlug;\r\n\t\t// This is needed as the `responsive` attribute was passed\r\n\t\t// in a different way before the refactoring to block variations.\r\n\t\tif ( ! [ 'amazon-kindle', 'wordpress' ].includes( providerSlug ) ) {\r\n\t\t\tnewAttributes.responsive = true;\r\n\t\t}\r\n\t\tname = 'core/embed';\r\n\t}\r\n\r\n\t// Convert Post Comment blocks in existing content to Comment blocks.\r\n\t// TODO: Remove these checks when WordPress 6.0 is released.\r\n\tif ( name === 'core/post-comment-author' ) {\r\n\t\tname = 'core/comment-author-name';\r\n\t}\r\n\tif ( name === 'core/post-comment-content' ) {\r\n\t\tname = 'core/comment-content';\r\n\t}\r\n\tif ( name === 'core/post-comment-date' ) {\r\n\t\tname = 'core/comment-date';\r\n\t}\r\n\tif ( name === 'core/comments-query-loop' ) {\r\n\t\tname = 'core/comments';\r\n\t\tconst { className = '' } = newAttributes;\r\n\t\tif ( ! className.includes( 'wp-block-comments-query-loop' ) ) {\r\n\t\t\tnewAttributes.className = [\r\n\t\t\t\t'wp-block-comments-query-loop',\r\n\t\t\t\tclassName,\r\n\t\t\t].join( ' ' );\r\n\t\t}\r\n\t\t// Note that we also had to add a deprecation to the block in order\r\n\t\t// for the ID change to work.\r\n\t}\r\n\tif ( name === 'core/post-comments' ) {\r\n\t\tname = 'core/comments';\r\n\t\tnewAttributes.legacy = true;\r\n\t}\r\n\r\n\t// Column count was stored as a string from WP 6.3-6.6. Convert it to a number.\r\n\tif (\r\n\t\tattributes.layout?.type === 'grid' &&\r\n\t\ttypeof attributes.layout?.columnCount === 'string'\r\n\t) {\r\n\t\tnewAttributes.layout = {\r\n\t\t\t...newAttributes.layout,\r\n\t\t\tcolumnCount: parseInt( attributes.layout.columnCount, 10 ),\r\n\t\t};\r\n\t}\r\n\r\n\t// Column span and row span were stored as strings in WP 6.6. Convert them to numbers.\r\n\tif ( typeof attributes.style?.layout?.columnSpan === 'string' ) {\r\n\t\tconst columnSpanNumber = parseInt(\r\n\t\t\tattributes.style.layout.columnSpan,\r\n\t\t\t10\r\n\t\t);\r\n\t\tnewAttributes.style = {\r\n\t\t\t...newAttributes.style,\r\n\t\t\tlayout: {\r\n\t\t\t\t...newAttributes.style.layout,\r\n\t\t\t\tcolumnSpan: isNaN( columnSpanNumber )\r\n\t\t\t\t\t? undefined\r\n\t\t\t\t\t: columnSpanNumber,\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\tif ( typeof attributes.style?.layout?.rowSpan === 'string' ) {\r\n\t\tconst rowSpanNumber = parseInt( attributes.style.layout.rowSpan, 10 );\r\n\t\tnewAttributes.style = {\r\n\t\t\t...newAttributes.style,\r\n\t\t\tlayout: {\r\n\t\t\t\t...newAttributes.style.layout,\r\n\t\t\t\trowSpan: isNaN( rowSpanNumber ) ? undefined : rowSpanNumber,\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\t// The following code is only relevant for the Gutenberg plugin.\r\n\t// It's a stand-alone if statement for dead-code elimination.\r\n\tif ( globalThis.IS_GUTENBERG_PLUGIN ) {\r\n\t\t// Convert pattern overrides added during experimental phase.\r\n\t\t// Only four blocks were supported initially.\r\n\t\t// These checks can be removed in WordPress 6.6.\r\n\t\tif (\r\n\t\t\tnewAttributes.metadata?.bindings &&\r\n\t\t\t( name === 'core/paragraph' ||\r\n\t\t\t\tname === 'core/heading' ||\r\n\t\t\t\tname === 'core/image' ||\r\n\t\t\t\tname === 'core/button' ) &&\r\n\t\t\tnewAttributes.metadata.bindings.__default?.source !==\r\n\t\t\t\t'core/pattern-overrides'\r\n\t\t) {\r\n\t\t\tconst bindings = [\r\n\t\t\t\t'content',\r\n\t\t\t\t'url',\r\n\t\t\t\t'title',\r\n\t\t\t\t'id',\r\n\t\t\t\t'alt',\r\n\t\t\t\t'text',\r\n\t\t\t\t'linkTarget',\r\n\t\t\t];\r\n\t\t\t// Delete any existing individual bindings and add a default binding.\r\n\t\t\t// It was only possible to add all the default attributes through the UI,\r\n\t\t\t// So as soon as we find an attribute, we can assume all default attributes are overridable.\r\n\t\t\tlet hasPatternOverrides = false;\r\n\t\t\tbindings.forEach( ( binding ) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tnewAttributes.metadata.bindings[ binding ]?.source ===\r\n\t\t\t\t\t'core/pattern-overrides'\r\n\t\t\t\t) {\r\n\t\t\t\t\thasPatternOverrides = true;\r\n\t\t\t\t\tnewAttributes.metadata = {\r\n\t\t\t\t\t\t...newAttributes.metadata,\r\n\t\t\t\t\t\tbindings: { ...newAttributes.metadata.bindings },\r\n\t\t\t\t\t};\r\n\t\t\t\t\tdelete newAttributes.metadata.bindings[ binding ];\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t\tif ( hasPatternOverrides ) {\r\n\t\t\t\tnewAttributes.metadata.bindings.__default = {\r\n\t\t\t\t\tsource: 'core/pattern-overrides',\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn [ name, newAttributes ];\r\n}\r\n"],"mappings":"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","ignoreList":[]}