{"version":3,"names":["isTextContent","isInline","node","contextTag","tag","nodeName","toLowerCase","inlineAllowedTagGroups","some","tagGroup","filter","t","includes","length","deepCheck","nodes","every","Array","from","children","isDoubleBR","previousSibling","isInlineContent","HTML","doc","document","implementation","createHTMLDocument","body","innerHTML"],"sources":["@wordpress/blocks/src/api/raw-handling/is-inline-content.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { isTextContent } from '@wordpress/dom';\r\n\r\n/**\r\n * Checks if the given node should be considered inline content, optionally\r\n * depending on a context tag.\r\n *\r\n * @param {Node}   node       Node name.\r\n * @param {string} contextTag Tag name.\r\n *\r\n * @return {boolean} True if the node is inline content, false if nohe.\r\n */\r\nfunction isInline( node, contextTag ) {\r\n\tif ( isTextContent( node ) ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif ( ! contextTag ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst tag = node.nodeName.toLowerCase();\r\n\tconst inlineAllowedTagGroups = [\r\n\t\t[ 'ul', 'li', 'ol' ],\r\n\t\t[ 'h1', 'h2', 'h3', 'h4', 'h5', 'h6' ],\r\n\t];\r\n\r\n\treturn inlineAllowedTagGroups.some(\r\n\t\t( tagGroup ) =>\r\n\t\t\t[ tag, contextTag ].filter( ( t ) => ! tagGroup.includes( t ) )\r\n\t\t\t\t.length === 0\r\n\t);\r\n}\r\n\r\nfunction deepCheck( nodes, contextTag ) {\r\n\treturn nodes.every(\r\n\t\t( node ) =>\r\n\t\t\tisInline( node, contextTag ) &&\r\n\t\t\tdeepCheck( Array.from( node.children ), contextTag )\r\n\t);\r\n}\r\n\r\nfunction isDoubleBR( node ) {\r\n\treturn (\r\n\t\tnode.nodeName === 'BR' &&\r\n\t\tnode.previousSibling &&\r\n\t\tnode.previousSibling.nodeName === 'BR'\r\n\t);\r\n}\r\n\r\nexport default function isInlineContent( HTML, contextTag ) {\r\n\tconst doc = document.implementation.createHTMLDocument( '' );\r\n\r\n\tdoc.body.innerHTML = HTML;\r\n\r\n\tconst nodes = Array.from( doc.body.children );\r\n\r\n\treturn ! nodes.some( isDoubleBR ) && deepCheck( nodes, contextTag );\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,gBAAgB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQA,CAAEC,IAAI,EAAEC,UAAU,EAAG;EACrC,IAAKH,aAAa,CAAEE,IAAK,CAAC,EAAG;IAC5B,OAAO,IAAI;EACZ;EAEA,IAAK,CAAEC,UAAU,EAAG;IACnB,OAAO,KAAK;EACb;EAEA,MAAMC,GAAG,GAAGF,IAAI,CAACG,QAAQ,CAACC,WAAW,CAAC,CAAC;EACvC,MAAMC,sBAAsB,GAAG,CAC9B,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,EACpB,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE,CACtC;EAED,OAAOA,sBAAsB,CAACC,IAAI,CAC/BC,QAAQ,IACT,CAAEL,GAAG,EAAED,UAAU,CAAE,CAACO,MAAM,CAAIC,CAAC,IAAM,CAAEF,QAAQ,CAACG,QAAQ,CAAED,CAAE,CAAE,CAAC,CAC7DE,MAAM,KAAK,CACf,CAAC;AACF;AAEA,SAASC,SAASA,CAAEC,KAAK,EAAEZ,UAAU,EAAG;EACvC,OAAOY,KAAK,CAACC,KAAK,CACfd,IAAI,IACLD,QAAQ,CAAEC,IAAI,EAAEC,UAAW,CAAC,IAC5BW,SAAS,CAAEG,KAAK,CAACC,IAAI,CAAEhB,IAAI,CAACiB,QAAS,CAAC,EAAEhB,UAAW,CACrD,CAAC;AACF;AAEA,SAASiB,UAAUA,CAAElB,IAAI,EAAG;EAC3B,OACCA,IAAI,CAACG,QAAQ,KAAK,IAAI,IACtBH,IAAI,CAACmB,eAAe,IACpBnB,IAAI,CAACmB,eAAe,CAAChB,QAAQ,KAAK,IAAI;AAExC;AAEA,eAAe,SAASiB,eAAeA,CAAEC,IAAI,EAAEpB,UAAU,EAAG;EAC3D,MAAMqB,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAACC,kBAAkB,CAAE,EAAG,CAAC;EAE5DH,GAAG,CAACI,IAAI,CAACC,SAAS,GAAGN,IAAI;EAEzB,MAAMR,KAAK,GAAGE,KAAK,CAACC,IAAI,CAAEM,GAAG,CAACI,IAAI,CAACT,QAAS,CAAC;EAE7C,OAAO,CAAEJ,KAAK,CAACP,IAAI,CAAEY,UAAW,CAAC,IAAIN,SAAS,CAAEC,KAAK,EAAEZ,UAAW,CAAC;AACpE","ignoreList":[]}