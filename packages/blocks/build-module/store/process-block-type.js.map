{"version":3,"names":["isPlainObject","isValidElementType","deprecated","applyFilters","warning","isValidIcon","normalizeIconObject","omit","BLOCK_ICON_DEFAULT","DEPRECATED_ENTRY_KEYS","LEGACY_CATEGORY_MAPPING","common","formatting","layout","mergeBlockVariations","bootstrappedVariations","clientVariations","result","forEach","clientVariation","index","findIndex","bootstrappedVariation","name","push","processBlockType","blockSettings","select","bootstrappedBlockType","getBootstrappedBlockType","blockType","icon","keywords","attributes","providesContext","usesContext","selectors","supports","styles","blockHooks","save","variations","Array","isArray","settings","description","since","map","deprecation","Object","fromEntries","entries","filter","key","includes","globalThis","SCRIPT_DEBUG","edit","hasOwnProperty","category","getCategories","some","slug","title","src"],"sources":["@wordpress/blocks/src/store/process-block-type.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport { isPlainObject } from 'is-plain-object';\r\nimport { isValidElementType } from 'react-is';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport deprecated from '@wordpress/deprecated';\r\nimport { applyFilters } from '@wordpress/hooks';\r\nimport warning from '@wordpress/warning';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { isValidIcon, normalizeIconObject, omit } from '../api/utils';\r\nimport { BLOCK_ICON_DEFAULT, DEPRECATED_ENTRY_KEYS } from '../api/constants';\r\n\r\n/** @typedef {import('../api/registration').WPBlockType} WPBlockType */\r\n\r\n/**\r\n * Mapping of legacy category slugs to their latest normal values, used to\r\n * accommodate updates of the default set of block categories.\r\n *\r\n * @type {Record<string,string>}\r\n */\r\nconst LEGACY_CATEGORY_MAPPING = {\r\n\tcommon: 'text',\r\n\tformatting: 'text',\r\n\tlayout: 'design',\r\n};\r\n\r\n/**\r\n * Merge block variations bootstrapped from the server and client.\r\n *\r\n * When a variation is registered in both places, its properties are merged.\r\n *\r\n * @param {Array} bootstrappedVariations - A block type variations from the server.\r\n * @param {Array} clientVariations       - A block type variations from the client.\r\n * @return {Array} The merged array of block variations.\r\n */\r\nfunction mergeBlockVariations(\r\n\tbootstrappedVariations = [],\r\n\tclientVariations = []\r\n) {\r\n\tconst result = [ ...bootstrappedVariations ];\r\n\r\n\tclientVariations.forEach( ( clientVariation ) => {\r\n\t\tconst index = result.findIndex(\r\n\t\t\t( bootstrappedVariation ) =>\r\n\t\t\t\tbootstrappedVariation.name === clientVariation.name\r\n\t\t);\r\n\r\n\t\tif ( index !== -1 ) {\r\n\t\t\tresult[ index ] = { ...result[ index ], ...clientVariation };\r\n\t\t} else {\r\n\t\t\tresult.push( clientVariation );\r\n\t\t}\r\n\t} );\r\n\r\n\treturn result;\r\n}\r\n\r\n/**\r\n * Takes the unprocessed block type settings, merges them with block type metadata\r\n * and applies all the existing filters for the registered block type.\r\n * Next, it validates all the settings and performs additional processing to the block type definition.\r\n *\r\n * @param {string}      name          Block name.\r\n * @param {WPBlockType} blockSettings Unprocessed block type settings.\r\n *\r\n * @return {WPBlockType | undefined} The block, if it has been processed and can be registered; otherwise `undefined`.\r\n */\r\nexport const processBlockType =\r\n\t( name, blockSettings ) =>\r\n\t( { select } ) => {\r\n\t\tconst bootstrappedBlockType = select.getBootstrappedBlockType( name );\r\n\r\n\t\tconst blockType = {\r\n\t\t\tname,\r\n\t\t\ticon: BLOCK_ICON_DEFAULT,\r\n\t\t\tkeywords: [],\r\n\t\t\tattributes: {},\r\n\t\t\tprovidesContext: {},\r\n\t\t\tusesContext: [],\r\n\t\t\tselectors: {},\r\n\t\t\tsupports: {},\r\n\t\t\tstyles: [],\r\n\t\t\tblockHooks: {},\r\n\t\t\tsave: () => null,\r\n\t\t\t...bootstrappedBlockType,\r\n\t\t\t...blockSettings,\r\n\t\t\t// blockType.variations can be defined as a filePath.\r\n\t\t\tvariations: mergeBlockVariations(\r\n\t\t\t\tArray.isArray( bootstrappedBlockType?.variations )\r\n\t\t\t\t\t? bootstrappedBlockType.variations\r\n\t\t\t\t\t: [],\r\n\t\t\t\tArray.isArray( blockSettings?.variations )\r\n\t\t\t\t\t? blockSettings.variations\r\n\t\t\t\t\t: []\r\n\t\t\t),\r\n\t\t};\r\n\r\n\t\tconst settings = applyFilters(\r\n\t\t\t'blocks.registerBlockType',\r\n\t\t\tblockType,\r\n\t\t\tname,\r\n\t\t\tnull\r\n\t\t);\r\n\r\n\t\tif (\r\n\t\t\tsettings.description &&\r\n\t\t\ttypeof settings.description !== 'string'\r\n\t\t) {\r\n\t\t\tdeprecated( 'Declaring non-string block descriptions', {\r\n\t\t\t\tsince: '6.2',\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( settings.deprecated ) {\r\n\t\t\tsettings.deprecated = settings.deprecated.map( ( deprecation ) =>\r\n\t\t\t\tObject.fromEntries(\r\n\t\t\t\t\tObject.entries(\r\n\t\t\t\t\t\t// Only keep valid deprecation keys.\r\n\t\t\t\t\t\tapplyFilters(\r\n\t\t\t\t\t\t\t'blocks.registerBlockType',\r\n\t\t\t\t\t\t\t// Merge deprecation keys with pre-filter settings\r\n\t\t\t\t\t\t\t// so that filters that depend on specific keys being\r\n\t\t\t\t\t\t\t// present don't fail.\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t// Omit deprecation keys here so that deprecations\r\n\t\t\t\t\t\t\t\t// can opt out of specific keys like \"supports\".\r\n\t\t\t\t\t\t\t\t...omit( blockType, DEPRECATED_ENTRY_KEYS ),\r\n\t\t\t\t\t\t\t\t...deprecation,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tblockType.name,\r\n\t\t\t\t\t\t\tdeprecation\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t).filter( ( [ key ] ) =>\r\n\t\t\t\t\t\tDEPRECATED_ENTRY_KEYS.includes( key )\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif ( ! isPlainObject( settings ) ) {\r\n\t\t\twarning( 'Block settings must be a valid object.' );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( typeof settings.save !== 'function' ) {\r\n\t\t\twarning( 'The \"save\" property must be a valid function.' );\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( 'edit' in settings && ! isValidElementType( settings.edit ) ) {\r\n\t\t\twarning( 'The \"edit\" property must be a valid component.' );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Canonicalize legacy categories to equivalent fallback.\r\n\t\tif ( LEGACY_CATEGORY_MAPPING.hasOwnProperty( settings.category ) ) {\r\n\t\t\tsettings.category = LEGACY_CATEGORY_MAPPING[ settings.category ];\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t'category' in settings &&\r\n\t\t\t! select\r\n\t\t\t\t.getCategories()\r\n\t\t\t\t.some( ( { slug } ) => slug === settings.category )\r\n\t\t) {\r\n\t\t\twarning(\r\n\t\t\t\t'The block \"' +\r\n\t\t\t\t\tname +\r\n\t\t\t\t\t'\" is registered with an invalid category \"' +\r\n\t\t\t\t\tsettings.category +\r\n\t\t\t\t\t'\".'\r\n\t\t\t);\r\n\t\t\tdelete settings.category;\r\n\t\t}\r\n\r\n\t\tif ( ! ( 'title' in settings ) || settings.title === '' ) {\r\n\t\t\twarning( 'The block \"' + name + '\" must have a title.' );\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( typeof settings.title !== 'string' ) {\r\n\t\t\twarning( 'Block titles must be strings.' );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsettings.icon = normalizeIconObject( settings.icon );\r\n\t\tif ( ! isValidIcon( settings.icon.src ) ) {\r\n\t\t\twarning(\r\n\t\t\t\t'The icon passed is invalid. ' +\r\n\t\t\t\t\t'The icon should be a string, an element, a function, or an object following the specifications documented in https://developer.wordpress.org/block-editor/developers/block-api/block-registration/#icon-optional'\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\treturn settings;\r\n\t};\r\n"],"mappings":"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","ignoreList":[]}