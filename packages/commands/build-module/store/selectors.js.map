{"version":3,"names":["createSelector","getCommands","state","contextual","Object","values","commands","filter","command","isContextual","context","getCommandLoaders","commandLoaders","loader","isOpen","getContext"],"sources":["@wordpress/commands/src/store/selectors.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { createSelector } from '@wordpress/data';\r\n\r\n/**\r\n * Returns the registered static commands.\r\n *\r\n * @param {Object}  state      State tree.\r\n * @param {boolean} contextual Whether to return only contextual commands.\r\n *\r\n * @return {import('./actions').WPCommandConfig[]} The list of registered commands.\r\n */\r\nexport const getCommands = createSelector(\r\n\t( state, contextual = false ) =>\r\n\t\tObject.values( state.commands ).filter( ( command ) => {\r\n\t\t\tconst isContextual =\r\n\t\t\t\tcommand.context && command.context === state.context;\r\n\t\t\treturn contextual ? isContextual : ! isContextual;\r\n\t\t} ),\r\n\t( state ) => [ state.commands, state.context ]\r\n);\r\n\r\n/**\r\n * Returns the registered command loaders.\r\n *\r\n * @param {Object}  state      State tree.\r\n * @param {boolean} contextual Whether to return only contextual command loaders.\r\n *\r\n * @return {import('./actions').WPCommandLoaderConfig[]} The list of registered command loaders.\r\n */\r\nexport const getCommandLoaders = createSelector(\r\n\t( state, contextual = false ) =>\r\n\t\tObject.values( state.commandLoaders ).filter( ( loader ) => {\r\n\t\t\tconst isContextual =\r\n\t\t\t\tloader.context && loader.context === state.context;\r\n\t\t\treturn contextual ? isContextual : ! isContextual;\r\n\t\t} ),\r\n\t( state ) => [ state.commandLoaders, state.context ]\r\n);\r\n\r\n/**\r\n * Returns whether the command palette is open.\r\n *\r\n * @param {Object} state State tree.\r\n *\r\n * @return {boolean} Returns whether the command palette is open.\r\n */\r\nexport function isOpen( state ) {\r\n\treturn state.isOpen;\r\n}\r\n\r\n/**\r\n * Returns whether the active context.\r\n *\r\n * @param {Object} state State tree.\r\n *\r\n * @return {string} Context.\r\n */\r\nexport function getContext( state ) {\r\n\treturn state.context;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,cAAc,QAAQ,iBAAiB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAGD,cAAc,CACxC,CAAEE,KAAK,EAAEC,UAAU,GAAG,KAAK,KAC1BC,MAAM,CAACC,MAAM,CAAEH,KAAK,CAACI,QAAS,CAAC,CAACC,MAAM,CAAIC,OAAO,IAAM;EACtD,MAAMC,YAAY,GACjBD,OAAO,CAACE,OAAO,IAAIF,OAAO,CAACE,OAAO,KAAKR,KAAK,CAACQ,OAAO;EACrD,OAAOP,UAAU,GAAGM,YAAY,GAAG,CAAEA,YAAY;AAClD,CAAE,CAAC,EACFP,KAAK,IAAM,CAAEA,KAAK,CAACI,QAAQ,EAAEJ,KAAK,CAACQ,OAAO,CAC7C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAGX,cAAc,CAC9C,CAAEE,KAAK,EAAEC,UAAU,GAAG,KAAK,KAC1BC,MAAM,CAACC,MAAM,CAAEH,KAAK,CAACU,cAAe,CAAC,CAACL,MAAM,CAAIM,MAAM,IAAM;EAC3D,MAAMJ,YAAY,GACjBI,MAAM,CAACH,OAAO,IAAIG,MAAM,CAACH,OAAO,KAAKR,KAAK,CAACQ,OAAO;EACnD,OAAOP,UAAU,GAAGM,YAAY,GAAG,CAAEA,YAAY;AAClD,CAAE,CAAC,EACFP,KAAK,IAAM,CAAEA,KAAK,CAACU,cAAc,EAAEV,KAAK,CAACQ,OAAO,CACnD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,MAAMA,CAAEZ,KAAK,EAAG;EAC/B,OAAOA,KAAK,CAACY,MAAM;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAAEb,KAAK,EAAG;EACnC,OAAOA,KAAK,CAACQ,OAAO;AACrB","ignoreList":[]}