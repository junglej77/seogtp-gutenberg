{"version":3,"names":["clsx","__","isRTL","useInstanceId","useCallback","Cell","Composite","GridContainer","GridRow","AlignmentMatrixControlIcon","GRID","getItemId","getItemValue","jsx","_jsx","UnforwardedAlignmentMatrixControl","className","id","label","defaultValue","value","onChange","width","props","baseId","setActiveId","nextActiveId","nextValue","classes","defaultActiveId","activeId","rtl","render","role","size","children","map","cells","index","Row","cell","AlignmentMatrixControl","Object","assign","Icon","displayName"],"sources":["@wordpress/components/src/alignment-matrix-control/index.tsx"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { __, isRTL } from '@wordpress/i18n';\r\nimport { useInstanceId } from '@wordpress/compose';\r\nimport { useCallback } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport Cell from './cell';\r\nimport { Composite } from '../composite';\r\nimport { GridContainer, GridRow } from './styles';\r\nimport AlignmentMatrixControlIcon from './icon';\r\nimport { GRID, getItemId, getItemValue } from './utils';\r\nimport type { WordPressComponentProps } from '../context';\r\nimport type { AlignmentMatrixControlProps } from './types';\r\n\r\nfunction UnforwardedAlignmentMatrixControl( {\r\n\tclassName,\r\n\tid,\r\n\tlabel = __( 'Alignment Matrix Control' ),\r\n\tdefaultValue = 'center center',\r\n\tvalue,\r\n\tonChange,\r\n\twidth = 92,\r\n\t...props\r\n}: WordPressComponentProps< AlignmentMatrixControlProps, 'div', false > ) {\r\n\tconst baseId = useInstanceId(\r\n\t\tUnforwardedAlignmentMatrixControl,\r\n\t\t'alignment-matrix-control',\r\n\t\tid\r\n\t);\r\n\r\n\tconst setActiveId = useCallback<\r\n\t\tNonNullable< React.ComponentProps< typeof Composite >[ 'setActiveId' ] >\r\n\t>(\r\n\t\t( nextActiveId ) => {\r\n\t\t\tconst nextValue = getItemValue( baseId, nextActiveId );\r\n\t\t\tif ( nextValue ) {\r\n\t\t\t\tonChange?.( nextValue );\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ baseId, onChange ]\r\n\t);\r\n\r\n\tconst classes = clsx( 'component-alignment-matrix-control', className );\r\n\r\n\treturn (\r\n\t\t<Composite\r\n\t\t\tdefaultActiveId={ getItemId( baseId, defaultValue ) }\r\n\t\t\tactiveId={ getItemId( baseId, value ) }\r\n\t\t\tsetActiveId={ setActiveId }\r\n\t\t\trtl={ isRTL() }\r\n\t\t\trender={\r\n\t\t\t\t<GridContainer\r\n\t\t\t\t\t{ ...props }\r\n\t\t\t\t\taria-label={ label }\r\n\t\t\t\t\tclassName={ classes }\r\n\t\t\t\t\tid={ baseId }\r\n\t\t\t\t\trole=\"grid\"\r\n\t\t\t\t\tsize={ width }\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{ GRID.map( ( cells, index ) => (\r\n\t\t\t\t<Composite.Row render={ <GridRow role=\"row\" /> } key={ index }>\r\n\t\t\t\t\t{ cells.map( ( cell ) => (\r\n\t\t\t\t\t\t<Cell\r\n\t\t\t\t\t\t\tid={ getItemId( baseId, cell ) }\r\n\t\t\t\t\t\t\tkey={ cell }\r\n\t\t\t\t\t\t\tvalue={ cell }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) ) }\r\n\t\t\t\t</Composite.Row>\r\n\t\t\t) ) }\r\n\t\t</Composite>\r\n\t);\r\n}\r\n\r\n/**\r\n * AlignmentMatrixControl components enable adjustments to horizontal and vertical alignments for UI.\r\n *\r\n * ```jsx\r\n * import { AlignmentMatrixControl } from '@wordpress/components';\r\n * import { useState } from '@wordpress/element';\r\n *\r\n * const Example = () => {\r\n * \tconst [ alignment, setAlignment ] = useState( 'center center' );\r\n *\r\n * \treturn (\r\n * \t\t<AlignmentMatrixControl\r\n * \t\t\tvalue={ alignment }\r\n * \t\t\tonChange={ setAlignment }\r\n * \t\t/>\r\n * \t);\r\n * };\r\n * ```\r\n */\r\nexport const AlignmentMatrixControl = Object.assign(\r\n\tUnforwardedAlignmentMatrixControl,\r\n\t{\r\n\t\t/**\r\n\t\t * Render an alignment matrix as an icon.\r\n\t\t *\r\n\t\t * ```jsx\r\n\t\t * import { AlignmentMatrixControl } from '@wordpress/components';\r\n\t\t *\r\n\t\t * <Icon icon={<AlignmentMatrixControl.Icon value=\"top left\" />} />\r\n\t\t * ```\r\n\t\t */\r\n\t\tIcon: Object.assign( AlignmentMatrixControlIcon, {\r\n\t\t\tdisplayName: 'AlignmentMatrixControl.Icon',\r\n\t\t} ),\r\n\t}\r\n);\r\n\r\nexport default AlignmentMatrixControl;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,IAAI,MAAM,MAAM;;AAEvB;AACA;AACA;AACA,SAASC,EAAE,EAAEC,KAAK,QAAQ,iBAAiB;AAC3C,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,WAAW,QAAQ,oBAAoB;;AAEhD;AACA;AACA;AACA,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,aAAa,EAAEC,OAAO,QAAQ,UAAU;AACjD,OAAOC,0BAA0B,MAAM,QAAQ;AAC/C,SAASC,IAAI,EAAEC,SAAS,EAAEC,YAAY,QAAQ,SAAS;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAIxD,SAASC,iCAAiCA,CAAE;EAC3CC,SAAS;EACTC,EAAE;EACFC,KAAK,GAAGjB,EAAE,CAAE,0BAA2B,CAAC;EACxCkB,YAAY,GAAG,eAAe;EAC9BC,KAAK;EACLC,QAAQ;EACRC,KAAK,GAAG,EAAE;EACV,GAAGC;AACkE,CAAC,EAAG;EACzE,MAAMC,MAAM,GAAGrB,aAAa,CAC3BY,iCAAiC,EACjC,0BAA0B,EAC1BE,EACD,CAAC;EAED,MAAMQ,WAAW,GAAGrB,WAAW,CAG5BsB,YAAY,IAAM;IACnB,MAAMC,SAAS,GAAGf,YAAY,CAAEY,MAAM,EAAEE,YAAa,CAAC;IACtD,IAAKC,SAAS,EAAG;MAChBN,QAAQ,GAAIM,SAAU,CAAC;IACxB;EACD,CAAC,EACD,CAAEH,MAAM,EAAEH,QAAQ,CACnB,CAAC;EAED,MAAMO,OAAO,GAAG5B,IAAI,CAAE,oCAAoC,EAAEgB,SAAU,CAAC;EAEvE,oBACCF,IAAA,CAACR,SAAS;IACTuB,eAAe,EAAGlB,SAAS,CAAEa,MAAM,EAAEL,YAAa,CAAG;IACrDW,QAAQ,EAAGnB,SAAS,CAAEa,MAAM,EAAEJ,KAAM,CAAG;IACvCK,WAAW,EAAGA,WAAa;IAC3BM,GAAG,EAAG7B,KAAK,CAAC,CAAG;IACf8B,MAAM,eACLlB,IAAA,CAACP,aAAa;MAAA,GACRgB,KAAK;MACV,cAAaL,KAAO;MACpBF,SAAS,EAAGY,OAAS;MACrBX,EAAE,EAAGO,MAAQ;MACbS,IAAI,EAAC,MAAM;MACXC,IAAI,EAAGZ;IAAO,CACd,CACD;IAAAa,QAAA,EAECzB,IAAI,CAAC0B,GAAG,CAAE,CAAEC,KAAK,EAAEC,KAAK,kBACzBxB,IAAA,CAACR,SAAS,CAACiC,GAAG;MAACP,MAAM,eAAGlB,IAAA,CAACN,OAAO;QAACyB,IAAI,EAAC;MAAK,CAAE,CAAG;MAAAE,QAAA,EAC7CE,KAAK,CAACD,GAAG,CAAII,IAAI,iBAClB1B,IAAA,CAACT,IAAI;QACJY,EAAE,EAAGN,SAAS,CAAEa,MAAM,EAAEgB,IAAK,CAAG;QAEhCpB,KAAK,EAAGoB;MAAM,GADRA,IAEN,CACA;IAAC,GAPmDF,KAQxC,CACd;EAAC,CACO,CAAC;AAEd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,sBAAsB,GAAGC,MAAM,CAACC,MAAM,CAClD5B,iCAAiC,EACjC;EACC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE6B,IAAI,EAAEF,MAAM,CAACC,MAAM,CAAElC,0BAA0B,EAAE;IAChDoC,WAAW,EAAE;EACd,CAAE;AACH,CACD,CAAC;AAED,eAAeJ,sBAAsB","ignoreList":[]}