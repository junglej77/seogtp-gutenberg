{"version":3,"names":["removeAccents","renderToString","useEffect","useState","useRef","useMemo","useInstanceId","useMergeRefs","useRefEffect","create","slice","insert","isCollapsed","getTextContent","speak","isAppleOS","getAutoCompleterUI","escapeRegExp","withIgnoreIMEEvents","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","getNodeText","node","toString","Array","map","join","props","children","EMPTY_FILTERED_OPTIONS","useAutocomplete","record","onChange","onReplace","completers","contentRef","instanceId","selectedIndex","setSelectedIndex","filteredOptions","setFilteredOptions","filterValue","setFilterValue","autocompleter","setAutocompleter","AutocompleterUI","setAutocompleterUI","backspacing","insertCompletion","replacement","end","start","triggerPrefix","length","toInsert","html","select","option","getOptionCompletion","isDisabled","completion","value","isCompletionObject","obj","action","undefined","completionObject","reset","onChangeOptions","options","handleKeyDown","event","current","key","defaultPrevented","newIndex","label","preventDefault","textContent","completer","reduce","lastTrigger","currentCompleter","triggerIndex","lastIndexOf","lastTriggerIndex","allowContext","textWithoutTrigger","tooDistantFromTrigger","mismatch","wordsFromTrigger","split","hasOneTriggerWord","matchingWhileBackspacing","textAfterSelection","test","safeTrigger","text","match","RegExp","query","selectedKey","className","isExpanded","listBoxId","activeId","hasSelection","onKeyDown","popover","onSelect","useLastDifferentValue","history","Set","add","size","delete","from","useAutocompleteProps","ref","onKeyDownRef","previousRecord","mergedRefs","element","_onKeyDown","addEventListener","removeEventListener","didUserInput","Autocomplete","isSelected"],"sources":["@wordpress/components/src/autocomplete/index.tsx"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport removeAccents from 'remove-accents';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport {\r\n\trenderToString,\r\n\tuseEffect,\r\n\tuseState,\r\n\tuseRef,\r\n\tuseMemo,\r\n} from '@wordpress/element';\r\nimport { useInstanceId, useMergeRefs, useRefEffect } from '@wordpress/compose';\r\nimport {\r\n\tcreate,\r\n\tslice,\r\n\tinsert,\r\n\tisCollapsed,\r\n\tgetTextContent,\r\n} from '@wordpress/rich-text';\r\nimport { speak } from '@wordpress/a11y';\r\nimport { isAppleOS } from '@wordpress/keycodes';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { getAutoCompleterUI } from './autocompleter-ui';\r\nimport { escapeRegExp } from '../utils/strings';\r\nimport { withIgnoreIMEEvents } from '../utils/with-ignore-ime-events';\r\nimport type {\r\n\tAutocompleteProps,\r\n\tAutocompleterUIProps,\r\n\tInsertOption,\r\n\tKeyedOption,\r\n\tOptionCompletion,\r\n\tReplaceOption,\r\n\tUseAutocompleteProps,\r\n\tWPCompleter,\r\n} from './types';\r\n\r\nconst getNodeText = ( node: React.ReactNode ): string => {\r\n\tif ( node === null ) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\tswitch ( typeof node ) {\r\n\t\tcase 'string':\r\n\t\tcase 'number':\r\n\t\t\treturn node.toString();\r\n\t\t\tbreak;\r\n\t\tcase 'boolean':\r\n\t\t\treturn '';\r\n\t\t\tbreak;\r\n\t\tcase 'object': {\r\n\t\t\tif ( node instanceof Array ) {\r\n\t\t\t\treturn node.map( getNodeText ).join( '' );\r\n\t\t\t}\r\n\t\t\tif ( 'props' in node ) {\r\n\t\t\t\treturn getNodeText( node.props.children );\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn '';\r\n\t}\r\n\r\n\treturn '';\r\n};\r\n\r\nconst EMPTY_FILTERED_OPTIONS: KeyedOption[] = [];\r\n\r\nexport function useAutocomplete( {\r\n\trecord,\r\n\tonChange,\r\n\tonReplace,\r\n\tcompleters,\r\n\tcontentRef,\r\n}: UseAutocompleteProps ) {\r\n\tconst instanceId = useInstanceId( useAutocomplete );\r\n\tconst [ selectedIndex, setSelectedIndex ] = useState( 0 );\r\n\r\n\tconst [ filteredOptions, setFilteredOptions ] = useState<\r\n\t\tArray< KeyedOption >\r\n\t>( EMPTY_FILTERED_OPTIONS );\r\n\tconst [ filterValue, setFilterValue ] =\r\n\t\tuseState< AutocompleterUIProps[ 'filterValue' ] >( '' );\r\n\tconst [ autocompleter, setAutocompleter ] = useState< WPCompleter | null >(\r\n\t\tnull\r\n\t);\r\n\tconst [ AutocompleterUI, setAutocompleterUI ] = useState<\r\n\t\t( ( props: AutocompleterUIProps ) => JSX.Element | null ) | null\r\n\t>( null );\r\n\r\n\tconst backspacing = useRef( false );\r\n\r\n\tfunction insertCompletion( replacement: React.ReactNode ) {\r\n\t\tif ( autocompleter === null ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst end = record.start;\r\n\t\tconst start =\r\n\t\t\tend - autocompleter.triggerPrefix.length - filterValue.length;\r\n\t\tconst toInsert = create( { html: renderToString( replacement ) } );\r\n\r\n\t\tonChange( insert( record, toInsert, start, end ) );\r\n\t}\r\n\r\n\tfunction select( option: KeyedOption ) {\r\n\t\tconst { getOptionCompletion } = autocompleter || {};\r\n\r\n\t\tif ( option.isDisabled ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( getOptionCompletion ) {\r\n\t\t\tconst completion = getOptionCompletion( option.value, filterValue );\r\n\r\n\t\t\tconst isCompletionObject = (\r\n\t\t\t\tobj: OptionCompletion\r\n\t\t\t): obj is InsertOption | ReplaceOption => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\tobj !== null &&\r\n\t\t\t\t\ttypeof obj === 'object' &&\r\n\t\t\t\t\t'action' in obj &&\r\n\t\t\t\t\tobj.action !== undefined &&\r\n\t\t\t\t\t'value' in obj &&\r\n\t\t\t\t\tobj.value !== undefined\r\n\t\t\t\t);\r\n\t\t\t};\r\n\r\n\t\t\tconst completionObject = isCompletionObject( completion )\r\n\t\t\t\t? completion\r\n\t\t\t\t: ( {\r\n\t\t\t\t\t\taction: 'insert-at-caret',\r\n\t\t\t\t\t\tvalue: completion,\r\n\t\t\t\t  } as InsertOption );\r\n\r\n\t\t\tif ( 'replace' === completionObject.action ) {\r\n\t\t\t\tonReplace( [ completionObject.value ] );\r\n\t\t\t\t// When replacing, the component will unmount, so don't reset\r\n\t\t\t\t// state (below) on an unmounted component.\r\n\t\t\t\treturn;\r\n\t\t\t} else if ( 'insert-at-caret' === completionObject.action ) {\r\n\t\t\t\tinsertCompletion( completionObject.value );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Reset autocomplete state after insertion rather than before\r\n\t\t// so insertion events don't cause the completion menu to redisplay.\r\n\t\treset();\r\n\t}\r\n\r\n\tfunction reset() {\r\n\t\tsetSelectedIndex( 0 );\r\n\t\tsetFilteredOptions( EMPTY_FILTERED_OPTIONS );\r\n\t\tsetFilterValue( '' );\r\n\t\tsetAutocompleter( null );\r\n\t\tsetAutocompleterUI( null );\r\n\t}\r\n\r\n\t/**\r\n\t * Load options for an autocompleter.\r\n\t *\r\n\t * @param {Array} options\r\n\t */\r\n\tfunction onChangeOptions( options: Array< KeyedOption > ) {\r\n\t\tsetSelectedIndex(\r\n\t\t\toptions.length === filteredOptions.length ? selectedIndex : 0\r\n\t\t);\r\n\t\tsetFilteredOptions( options );\r\n\t}\r\n\r\n\tfunction handleKeyDown( event: KeyboardEvent ) {\r\n\t\tbackspacing.current = event.key === 'Backspace';\r\n\r\n\t\tif ( ! autocompleter ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( filteredOptions.length === 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( event.defaultPrevented ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tswitch ( event.key ) {\r\n\t\t\tcase 'ArrowUp': {\r\n\t\t\t\tconst newIndex =\r\n\t\t\t\t\t( selectedIndex === 0\r\n\t\t\t\t\t\t? filteredOptions.length\r\n\t\t\t\t\t\t: selectedIndex ) - 1;\r\n\t\t\t\tsetSelectedIndex( newIndex );\r\n\t\t\t\t// See the related PR as to why this is necessary: https://github.com/WordPress/gutenberg/pull/54902.\r\n\t\t\t\tif ( isAppleOS() ) {\r\n\t\t\t\t\tspeak(\r\n\t\t\t\t\t\tgetNodeText( filteredOptions[ newIndex ].label ),\r\n\t\t\t\t\t\t'assertive'\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase 'ArrowDown': {\r\n\t\t\t\tconst newIndex = ( selectedIndex + 1 ) % filteredOptions.length;\r\n\t\t\t\tsetSelectedIndex( newIndex );\r\n\t\t\t\tif ( isAppleOS() ) {\r\n\t\t\t\t\tspeak(\r\n\t\t\t\t\t\tgetNodeText( filteredOptions[ newIndex ].label ),\r\n\t\t\t\t\t\t'assertive'\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcase 'Escape':\r\n\t\t\t\tsetAutocompleter( null );\r\n\t\t\t\tsetAutocompleterUI( null );\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Enter':\r\n\t\t\t\tselect( filteredOptions[ selectedIndex ] );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowLeft':\r\n\t\t\tcase 'ArrowRight':\r\n\t\t\t\treset();\r\n\t\t\t\treturn;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Any handled key should prevent original behavior. This relies on\r\n\t\t// the early return in the default case.\r\n\t\tevent.preventDefault();\r\n\t}\r\n\r\n\t// textContent is a primitive (string), memoizing is not strictly necessary\r\n\t// but this is a preemptive performance improvement, since the autocompleter\r\n\t// is a potential bottleneck for the editor type metric.\r\n\tconst textContent = useMemo( () => {\r\n\t\tif ( isCollapsed( record ) ) {\r\n\t\t\treturn getTextContent( slice( record, 0 ) );\r\n\t\t}\r\n\t\treturn '';\r\n\t}, [ record ] );\r\n\r\n\tuseEffect( () => {\r\n\t\tif ( ! textContent ) {\r\n\t\t\tif ( autocompleter ) {\r\n\t\t\t\treset();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Find the completer with the highest triggerPrefix index in the\r\n\t\t// textContent.\r\n\t\tconst completer = completers.reduce< WPCompleter | null >(\r\n\t\t\t( lastTrigger, currentCompleter ) => {\r\n\t\t\t\tconst triggerIndex = textContent.lastIndexOf(\r\n\t\t\t\t\tcurrentCompleter.triggerPrefix\r\n\t\t\t\t);\r\n\t\t\t\tconst lastTriggerIndex =\r\n\t\t\t\t\tlastTrigger !== null\r\n\t\t\t\t\t\t? textContent.lastIndexOf( lastTrigger.triggerPrefix )\r\n\t\t\t\t\t\t: -1;\r\n\r\n\t\t\t\treturn triggerIndex > lastTriggerIndex\r\n\t\t\t\t\t? currentCompleter\r\n\t\t\t\t\t: lastTrigger;\r\n\t\t\t},\r\n\t\t\tnull\r\n\t\t);\r\n\r\n\t\tif ( ! completer ) {\r\n\t\t\tif ( autocompleter ) {\r\n\t\t\t\treset();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst { allowContext, triggerPrefix } = completer;\r\n\t\tconst triggerIndex = textContent.lastIndexOf( triggerPrefix );\r\n\t\tconst textWithoutTrigger = textContent.slice(\r\n\t\t\ttriggerIndex + triggerPrefix.length\r\n\t\t);\r\n\r\n\t\tconst tooDistantFromTrigger = textWithoutTrigger.length > 50; // 50 chars seems to be a good limit.\r\n\t\t// This is a final barrier to prevent the effect from completing with\r\n\t\t// an extremely long string, which causes the editor to slow-down\r\n\t\t// significantly. This could happen, for example, if `matchingWhileBackspacing`\r\n\t\t// is true and one of the \"words\" end up being too long. If that's the case,\r\n\t\t// it will be caught by this guard.\r\n\t\tif ( tooDistantFromTrigger ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst mismatch = filteredOptions.length === 0;\r\n\t\tconst wordsFromTrigger = textWithoutTrigger.split( /\\s/ );\r\n\t\t// We need to allow the effect to run when not backspacing and if there\r\n\t\t// was a mismatch. i.e when typing a trigger + the match string or when\r\n\t\t// clicking in an existing trigger word on the page. We do that if we\r\n\t\t// detect that we have one word from trigger in the current textual context.\r\n\t\t//\r\n\t\t// Ex.: \"Some text @a\" <-- \"@a\" will be detected as the trigger word and\r\n\t\t// allow the effect to run. It will run until there's a mismatch.\r\n\t\tconst hasOneTriggerWord = wordsFromTrigger.length === 1;\r\n\t\t// This is used to allow the effect to run when backspacing and if\r\n\t\t// \"touching\" a word that \"belongs\" to a trigger. We consider a \"trigger\r\n\t\t// word\" any word up to the limit of 3 from the trigger character.\r\n\t\t// Anything beyond that is ignored if there's a mismatch. This allows\r\n\t\t// us to \"escape\" a mismatch when backspacing, but still imposing some\r\n\t\t// sane limits.\r\n\t\t//\r\n\t\t// Ex: \"Some text @marcelo sekkkk\" <--- \"kkkk\" caused a mismatch, but\r\n\t\t// if the user presses backspace here, it will show the completion popup again.\r\n\t\tconst matchingWhileBackspacing =\r\n\t\t\tbackspacing.current && wordsFromTrigger.length <= 3;\r\n\r\n\t\tif ( mismatch && ! ( matchingWhileBackspacing || hasOneTriggerWord ) ) {\r\n\t\t\tif ( autocompleter ) {\r\n\t\t\t\treset();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst textAfterSelection = getTextContent(\r\n\t\t\tslice( record, undefined, getTextContent( record ).length )\r\n\t\t);\r\n\r\n\t\tif (\r\n\t\t\tallowContext &&\r\n\t\t\t! allowContext(\r\n\t\t\t\ttextContent.slice( 0, triggerIndex ),\r\n\t\t\t\ttextAfterSelection\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tif ( autocompleter ) {\r\n\t\t\t\treset();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t/^\\s/.test( textWithoutTrigger ) ||\r\n\t\t\t/\\s\\s+$/.test( textWithoutTrigger )\r\n\t\t) {\r\n\t\t\tif ( autocompleter ) {\r\n\t\t\t\treset();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( ! /[\\u0000-\\uFFFF]*$/.test( textWithoutTrigger ) ) {\r\n\t\t\tif ( autocompleter ) {\r\n\t\t\t\treset();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst safeTrigger = escapeRegExp( completer.triggerPrefix );\r\n\t\tconst text = removeAccents( textContent );\r\n\t\tconst match = text\r\n\t\t\t.slice( text.lastIndexOf( completer.triggerPrefix ) )\r\n\t\t\t.match( new RegExp( `${ safeTrigger }([\\u0000-\\uFFFF]*)$` ) );\r\n\t\tconst query = match && match[ 1 ];\r\n\r\n\t\tsetAutocompleter( completer );\r\n\t\tsetAutocompleterUI( () =>\r\n\t\t\tcompleter !== autocompleter\r\n\t\t\t\t? getAutoCompleterUI( completer )\r\n\t\t\t\t: AutocompleterUI\r\n\t\t);\r\n\t\tsetFilterValue( query === null ? '' : query );\r\n\t\t// Temporarily disabling exhaustive-deps to avoid introducing unexpected side effecst.\r\n\t\t// See https://github.com/WordPress/gutenberg/pull/41820\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [ textContent ] );\r\n\r\n\tconst { key: selectedKey = '' } = filteredOptions[ selectedIndex ] || {};\r\n\tconst { className } = autocompleter || {};\r\n\tconst isExpanded = !! autocompleter && filteredOptions.length > 0;\r\n\tconst listBoxId = isExpanded\r\n\t\t? `components-autocomplete-listbox-${ instanceId }`\r\n\t\t: undefined;\r\n\tconst activeId = isExpanded\r\n\t\t? `components-autocomplete-item-${ instanceId }-${ selectedKey }`\r\n\t\t: null;\r\n\tconst hasSelection = record.start !== undefined;\r\n\r\n\treturn {\r\n\t\tlistBoxId,\r\n\t\tactiveId,\r\n\t\tonKeyDown: withIgnoreIMEEvents( handleKeyDown ),\r\n\t\tpopover: hasSelection && AutocompleterUI && (\r\n\t\t\t<AutocompleterUI\r\n\t\t\t\tclassName={ className }\r\n\t\t\t\tfilterValue={ filterValue }\r\n\t\t\t\tinstanceId={ instanceId }\r\n\t\t\t\tlistBoxId={ listBoxId }\r\n\t\t\t\tselectedIndex={ selectedIndex }\r\n\t\t\t\tonChangeOptions={ onChangeOptions }\r\n\t\t\t\tonSelect={ select }\r\n\t\t\t\tvalue={ record }\r\n\t\t\t\tcontentRef={ contentRef }\r\n\t\t\t\treset={ reset }\r\n\t\t\t/>\r\n\t\t),\r\n\t};\r\n}\r\n\r\nfunction useLastDifferentValue( value: UseAutocompleteProps[ 'record' ] ) {\r\n\tconst history = useRef< Set< typeof value > >( new Set() );\r\n\r\n\thistory.current.add( value );\r\n\r\n\t// Keep the history size to 2.\r\n\tif ( history.current.size > 2 ) {\r\n\t\thistory.current.delete( Array.from( history.current )[ 0 ] );\r\n\t}\r\n\r\n\treturn Array.from( history.current )[ 0 ];\r\n}\r\n\r\nexport function useAutocompleteProps( options: UseAutocompleteProps ) {\r\n\tconst ref = useRef< HTMLElement >( null );\r\n\tconst onKeyDownRef = useRef< ( event: KeyboardEvent ) => void >();\r\n\tconst { record } = options;\r\n\tconst previousRecord = useLastDifferentValue( record );\r\n\tconst { popover, listBoxId, activeId, onKeyDown } = useAutocomplete( {\r\n\t\t...options,\r\n\t\tcontentRef: ref,\r\n\t} );\r\n\tonKeyDownRef.current = onKeyDown;\r\n\r\n\tconst mergedRefs = useMergeRefs( [\r\n\t\tref,\r\n\t\tuseRefEffect( ( element: HTMLElement ) => {\r\n\t\t\tfunction _onKeyDown( event: KeyboardEvent ) {\r\n\t\t\t\tonKeyDownRef.current?.( event );\r\n\t\t\t}\r\n\t\t\telement.addEventListener( 'keydown', _onKeyDown );\r\n\t\t\treturn () => {\r\n\t\t\t\telement.removeEventListener( 'keydown', _onKeyDown );\r\n\t\t\t};\r\n\t\t}, [] ),\r\n\t] );\r\n\r\n\t// We only want to show the popover if the user has typed something.\r\n\tconst didUserInput = record.text !== previousRecord?.text;\r\n\r\n\tif ( ! didUserInput ) {\r\n\t\treturn { ref: mergedRefs };\r\n\t}\r\n\r\n\treturn {\r\n\t\tref: mergedRefs,\r\n\t\tchildren: popover,\r\n\t\t'aria-autocomplete': listBoxId ? 'list' : undefined,\r\n\t\t'aria-owns': listBoxId,\r\n\t\t'aria-activedescendant': activeId,\r\n\t};\r\n}\r\n\r\nexport default function Autocomplete( {\r\n\tchildren,\r\n\tisSelected,\r\n\t...options\r\n}: AutocompleteProps ) {\r\n\tconst { popover, ...props } = useAutocomplete( options );\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{ children( props ) }\r\n\t\t\t{ isSelected && popover }\r\n\t\t</>\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]}