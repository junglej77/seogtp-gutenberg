{"version":3,"names":[],"sources":["@wordpress/components/src/border-box-control/types.ts"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport type {\r\n\tBorder,\r\n\tColorProps,\r\n\tLabelProps,\r\n\tBorderControlProps,\r\n} from '../border-control/types';\r\nimport type { PopoverProps } from '../popover/types';\r\n\r\nexport type Borders = {\r\n\ttop?: Border;\r\n\tright?: Border;\r\n\tbottom?: Border;\r\n\tleft?: Border;\r\n};\r\n\r\nexport type AnyBorder = Border | Borders | undefined;\r\nexport type BorderProp = keyof Border;\r\nexport type BorderSide = keyof Borders;\r\n\r\nexport type BorderBoxControlProps = ColorProps &\r\n\tLabelProps &\r\n\tPick< BorderControlProps, 'enableStyle' | 'size' > & {\r\n\t\t/**\r\n\t\t * A callback function invoked when any border value is changed. The value\r\n\t\t * received may be a \"flat\" border object, one that has properties defining\r\n\t\t * individual side borders, or `undefined`.\r\n\t\t */\r\n\t\tonChange: ( value: AnyBorder ) => void;\r\n\t\t/**\r\n\t\t * The position of the color popovers compared to the control wrapper.\r\n\t\t */\r\n\t\tpopoverPlacement?: PopoverProps[ 'placement' ];\r\n\t\t/**\r\n\t\t * The space between the popover and the control wrapper.\r\n\t\t */\r\n\t\tpopoverOffset?: PopoverProps[ 'offset' ];\r\n\t\t/**\r\n\t\t * An object representing the current border configuration.\r\n\t\t *\r\n\t\t * This may be a \"flat\" border where the object has `color`, `style`, and\r\n\t\t * `width` properties or a \"split\" border which defines the previous\r\n\t\t * properties but for each side; `top`, `right`, `bottom`, and `left`.\r\n\t\t */\r\n\t\tvalue: AnyBorder;\r\n\t\t/**\r\n\t\t * Start opting into the larger default height that will become the default size in a future version.\r\n\t\t *\r\n\t\t * @default false\r\n\t\t */\r\n\t\t__next40pxDefaultSize?: boolean;\r\n\t};\r\n\r\nexport type LinkedButtonProps = Pick< BorderBoxControlProps, 'size' > & {\r\n\t/**\r\n\t * This prop allows the `LinkedButton` to reflect whether the parent\r\n\t * `BorderBoxControl` is currently displaying \"linked\" or \"unlinked\"\r\n\t * border controls.\r\n\t */\r\n\tisLinked: boolean;\r\n\t/**\r\n\t * A callback invoked when this `LinkedButton` is clicked. It is used to\r\n\t * toggle display between linked or split border controls within the parent\r\n\t * `BorderBoxControl`.\r\n\t */\r\n\tonClick: () => void;\r\n};\r\n\r\nexport type VisualizerProps = Pick< BorderBoxControlProps, 'size' > & {\r\n\t/**\r\n\t * An object representing the current border configuration. It contains\r\n\t * properties for each side, with each side an object reflecting the border\r\n\t * color, style, and width.\r\n\t */\r\n\tvalue?: Borders;\r\n};\r\n\r\nexport type SplitControlsProps = ColorProps &\r\n\tPick< BorderBoxControlProps, 'enableStyle' | 'size' > & {\r\n\t\t/**\r\n\t\t * A callback that is invoked whenever an individual side's border has\r\n\t\t * changed.\r\n\t\t */\r\n\t\tonChange: ( value: Border | undefined, side: BorderSide ) => void;\r\n\t\t/**\r\n\t\t * The position of the color popovers compared to the control wrapper.\r\n\t\t */\r\n\t\tpopoverPlacement?: PopoverProps[ 'placement' ];\r\n\t\t/**\r\n\t\t * The space between the popover and the control wrapper.\r\n\t\t */\r\n\t\tpopoverOffset?: PopoverProps[ 'offset' ];\r\n\t\t/**\r\n\t\t * An object representing the current border configuration. It contains\r\n\t\t * properties for each side, with each side an object reflecting the border\r\n\t\t * color, style, and width.\r\n\t\t */\r\n\t\tvalue?: Borders;\r\n\t};\r\n"],"mappings":"","ignoreList":[]}