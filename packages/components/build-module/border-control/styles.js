/**
 * External dependencies
 */
import { css } from '@emotion/react';

/**
 * Internal dependencies
 */
import { COLORS, CONFIG, boxSizingReset, rtl } from '../utils';
import { space } from '../utils/space';
import { StyledLabel } from '../base-control/styles/base-control-styles';
import { ValueInput as UnitControlWrapper, UnitSelect } from '../unit-control/styles/unit-control-styles';
const focusBoxShadow = /*#__PURE__*/css("box-shadow:inset ", CONFIG.controlBoxShadowFocus, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:focusBoxShadow;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtCMEIiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XHJcblxyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIENPTkZJRywgYm94U2l6aW5nUmVzZXQsIHJ0bCB9IGZyb20gJy4uL3V0aWxzJztcclxuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91dGlscy9zcGFjZSc7XHJcbmltcG9ydCB7IFN0eWxlZExhYmVsIH0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcclxuaW1wb3J0IHtcclxuXHRWYWx1ZUlucHV0IGFzIFVuaXRDb250cm9sV3JhcHBlcixcclxuXHRVbml0U2VsZWN0LFxyXG59IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XHJcblxyXG5pbXBvcnQgdHlwZSB7IEJvcmRlciB9IGZyb20gJy4vdHlwZXMnO1xyXG5cclxuY29uc3QgZm9jdXNCb3hTaGFkb3cgPSBjc3NgXHJcblx0Ym94LXNoYWRvdzogaW5zZXQgJHsgQ09ORklHLmNvbnRyb2xCb3hTaGFkb3dGb2N1cyB9O1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXHJcblx0Ym9yZGVyOiAwO1xyXG5cdHBhZGRpbmc6IDA7XHJcblx0bWFyZ2luOiAwO1xyXG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0ZmxleDogMSAxIDQwJTtcclxuXHR9XHJcblx0JiYgJHsgVW5pdFNlbGVjdCB9IHtcclxuXHRcdC8qIFByZXZlbnQgdW5pdCBzZWxlY3QgZm9yY2luZyBtaW4gaGVpZ2h0IGxhcmdlciB0aGFuIGl0cyBVbml0Q29udHJvbCAqL1xyXG5cdFx0bWluLWhlaWdodDogMDtcclxuXHR9XHJcbmA7XHJcblxyXG4vKlxyXG4gKiBUaGlzIHN0eWxlIGlzIG9ubHkgYXBwbGllZCB0byB0aGUgVW5pdENvbnRyb2wgd3JhcHBlciB3aGVuIHRoZSBib3JkZXIgd2lkdGhcclxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxyXG4gKiBSYW5nZUNvbnRyb2wgdG8gc2hhcmUgdGhlIGF2YWlsYWJsZSB3aWR0aCBpbiBhIDQwLzYwIHNwbGl0IHJlc3BlY3RpdmVseS5cclxuICovXHJcbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0LyogRm9yY2UgdGhlIFVuaXRDb250cm9sJ3Mgc2V0IHdpZHRoLiAqL1xyXG5cdFx0ZmxleDogMCAwIGF1dG87XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIHNpemU/OiAnZGVmYXVsdCcgfCAnX191bnN0YWJsZS1sYXJnZScgKSA9PiB7XHJcblx0cmV0dXJuIGNzc2BcclxuXHRcdGhlaWdodDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzQwcHgnIDogJzMwcHgnIH07XHJcblx0YDtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSBjc3NgXHJcblx0YmFja2dyb3VuZDogI2ZmZjtcclxuXHJcblx0JiYgPiBidXR0b24ge1xyXG5cdFx0YXNwZWN0LXJhdGlvOiAxO1xyXG5cdFx0cGFkZGluZzogMDtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0XHQkeyBydGwoXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMnB4IDAgMCAycHhgIH0sXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cclxuXHRcdCkoKSB9XHJcblx0XHRib3JkZXI6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy51aS5ib3JkZXIgfTtcclxuXHJcblx0XHQmOmZvY3VzLFxyXG5cdFx0Jjpob3Zlcjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxyXG5cdFx0XHRib3JkZXItY29sb3I6ICR7IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHR6LWluZGV4OiAxO1xyXG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0XHR9XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yQm9yZGVyID0gKCBib3JkZXI/OiBCb3JkZXIgKSA9PiB7XHJcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcclxuXHJcblx0Y29uc3QgZmFsbGJhY2tDb2xvciA9XHJcblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xyXG5cclxuXHRyZXR1cm4gY3NzYFxyXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XHJcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcclxuXHRgO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yV3JhcHBlciA9IChcclxuXHRib3JkZXI/OiBCb3JkZXIsXHJcblx0c2l6ZT86ICdkZWZhdWx0JyB8ICdfX3Vuc3RhYmxlLWxhcmdlJ1xyXG4pID0+IHtcclxuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XHJcblxyXG5cdHJldHVybiBjc3NgXHJcblx0XHRib3JkZXItcmFkaXVzOiAkeyBDT05GSUcucmFkaXVzRnVsbCB9O1xyXG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHQkeyBzdHlsZSA/IGNvbG9ySW5kaWNhdG9yQm9yZGVyKCBib3JkZXIgKSA6IHVuZGVmaW5lZCB9XHJcblx0XHR3aWR0aDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzI0cHgnIDogJzIycHgnIH07XHJcblx0XHRoZWlnaHQ6ICR7IHNpemUgPT09ICdfX3Vuc3RhYmxlLWxhcmdlJyA/ICcyNHB4JyA6ICcyMnB4JyB9O1xyXG5cdFx0cGFkZGluZzogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzJweCcgOiAnMXB4JyB9O1xyXG5cclxuXHRcdC8qXHJcblx0XHQgKiBDb2xvckluZGljYXRvclxyXG5cdFx0ICpcclxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3JcclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxyXG5cdFx0ICovXHJcblx0XHQmID4gc3BhbiB7XHJcblx0XHRcdGhlaWdodDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHR3aWR0aDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXHJcblx0XHRcdFx0LTQ1ZGVnLFxyXG5cdFx0XHRcdHRyYW5zcGFyZW50IDQ4JSxcclxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxyXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXHJcblx0XHRcdFx0dHJhbnNwYXJlbnQgNTIlXHJcblx0XHRcdCk7XHJcblx0XHR9XHJcblx0YDtcclxufTtcclxuXHJcbi8vIE11c3QgZXF1YWwgJGNvbG9yLXBhbGV0dGUtY2lyY2xlLXNpemUgZnJvbTpcclxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcclxuY29uc3Qgc3dhdGNoU2l6ZSA9IDI4O1xyXG5jb25zdCBzd2F0Y2hHYXAgPSAxMjtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRyb2xzID0gY3NzYFxyXG5cdHdpZHRoOiAkeyBzd2F0Y2hTaXplICogNiArIHN3YXRjaEdhcCAqIDUgfXB4O1xyXG5cclxuXHQ+IGRpdjpmaXJzdC1vZi10eXBlID4gJHsgU3R5bGVkTGFiZWwgfSB7XHJcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xyXG5cdH1cclxuXHJcblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcclxuXHRcdG1pbi13aWR0aDogMjRweDtcclxuXHRcdHBhZGRpbmc6IDA7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xyXG5leHBvcnQgY29uc3QgYm9yZGVyQ29sb3JJbmRpY2F0b3IgPSBjc3NgYDtcclxuXHJcbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2BcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHR3aWR0aDogMTAwJTtcclxuXHJcblx0LyogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBzdHlsaW5nICovXHJcblx0JiYge1xyXG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDQwMCBdIH07XHJcblx0XHRib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xyXG5cdFx0Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XHJcblx0XHRoZWlnaHQ6IDQwcHg7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2BcclxuXHRmbGV4OiAxIDEgNjAlO1xyXG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XHJcbmA7XHJcbiJdfQ== */");
export const borderControl = /*#__PURE__*/css("border:0;padding:0;margin:0;", boxSizingReset, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:borderControl;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNCZ0MiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XHJcblxyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIENPTkZJRywgYm94U2l6aW5nUmVzZXQsIHJ0bCB9IGZyb20gJy4uL3V0aWxzJztcclxuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91dGlscy9zcGFjZSc7XHJcbmltcG9ydCB7IFN0eWxlZExhYmVsIH0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcclxuaW1wb3J0IHtcclxuXHRWYWx1ZUlucHV0IGFzIFVuaXRDb250cm9sV3JhcHBlcixcclxuXHRVbml0U2VsZWN0LFxyXG59IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XHJcblxyXG5pbXBvcnQgdHlwZSB7IEJvcmRlciB9IGZyb20gJy4vdHlwZXMnO1xyXG5cclxuY29uc3QgZm9jdXNCb3hTaGFkb3cgPSBjc3NgXHJcblx0Ym94LXNoYWRvdzogaW5zZXQgJHsgQ09ORklHLmNvbnRyb2xCb3hTaGFkb3dGb2N1cyB9O1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXHJcblx0Ym9yZGVyOiAwO1xyXG5cdHBhZGRpbmc6IDA7XHJcblx0bWFyZ2luOiAwO1xyXG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0ZmxleDogMSAxIDQwJTtcclxuXHR9XHJcblx0JiYgJHsgVW5pdFNlbGVjdCB9IHtcclxuXHRcdC8qIFByZXZlbnQgdW5pdCBzZWxlY3QgZm9yY2luZyBtaW4gaGVpZ2h0IGxhcmdlciB0aGFuIGl0cyBVbml0Q29udHJvbCAqL1xyXG5cdFx0bWluLWhlaWdodDogMDtcclxuXHR9XHJcbmA7XHJcblxyXG4vKlxyXG4gKiBUaGlzIHN0eWxlIGlzIG9ubHkgYXBwbGllZCB0byB0aGUgVW5pdENvbnRyb2wgd3JhcHBlciB3aGVuIHRoZSBib3JkZXIgd2lkdGhcclxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxyXG4gKiBSYW5nZUNvbnRyb2wgdG8gc2hhcmUgdGhlIGF2YWlsYWJsZSB3aWR0aCBpbiBhIDQwLzYwIHNwbGl0IHJlc3BlY3RpdmVseS5cclxuICovXHJcbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0LyogRm9yY2UgdGhlIFVuaXRDb250cm9sJ3Mgc2V0IHdpZHRoLiAqL1xyXG5cdFx0ZmxleDogMCAwIGF1dG87XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIHNpemU/OiAnZGVmYXVsdCcgfCAnX191bnN0YWJsZS1sYXJnZScgKSA9PiB7XHJcblx0cmV0dXJuIGNzc2BcclxuXHRcdGhlaWdodDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzQwcHgnIDogJzMwcHgnIH07XHJcblx0YDtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSBjc3NgXHJcblx0YmFja2dyb3VuZDogI2ZmZjtcclxuXHJcblx0JiYgPiBidXR0b24ge1xyXG5cdFx0YXNwZWN0LXJhdGlvOiAxO1xyXG5cdFx0cGFkZGluZzogMDtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0XHQkeyBydGwoXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMnB4IDAgMCAycHhgIH0sXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cclxuXHRcdCkoKSB9XHJcblx0XHRib3JkZXI6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy51aS5ib3JkZXIgfTtcclxuXHJcblx0XHQmOmZvY3VzLFxyXG5cdFx0Jjpob3Zlcjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxyXG5cdFx0XHRib3JkZXItY29sb3I6ICR7IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHR6LWluZGV4OiAxO1xyXG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0XHR9XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yQm9yZGVyID0gKCBib3JkZXI/OiBCb3JkZXIgKSA9PiB7XHJcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcclxuXHJcblx0Y29uc3QgZmFsbGJhY2tDb2xvciA9XHJcblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xyXG5cclxuXHRyZXR1cm4gY3NzYFxyXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XHJcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcclxuXHRgO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yV3JhcHBlciA9IChcclxuXHRib3JkZXI/OiBCb3JkZXIsXHJcblx0c2l6ZT86ICdkZWZhdWx0JyB8ICdfX3Vuc3RhYmxlLWxhcmdlJ1xyXG4pID0+IHtcclxuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XHJcblxyXG5cdHJldHVybiBjc3NgXHJcblx0XHRib3JkZXItcmFkaXVzOiAkeyBDT05GSUcucmFkaXVzRnVsbCB9O1xyXG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHQkeyBzdHlsZSA/IGNvbG9ySW5kaWNhdG9yQm9yZGVyKCBib3JkZXIgKSA6IHVuZGVmaW5lZCB9XHJcblx0XHR3aWR0aDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzI0cHgnIDogJzIycHgnIH07XHJcblx0XHRoZWlnaHQ6ICR7IHNpemUgPT09ICdfX3Vuc3RhYmxlLWxhcmdlJyA/ICcyNHB4JyA6ICcyMnB4JyB9O1xyXG5cdFx0cGFkZGluZzogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzJweCcgOiAnMXB4JyB9O1xyXG5cclxuXHRcdC8qXHJcblx0XHQgKiBDb2xvckluZGljYXRvclxyXG5cdFx0ICpcclxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3JcclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxyXG5cdFx0ICovXHJcblx0XHQmID4gc3BhbiB7XHJcblx0XHRcdGhlaWdodDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHR3aWR0aDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXHJcblx0XHRcdFx0LTQ1ZGVnLFxyXG5cdFx0XHRcdHRyYW5zcGFyZW50IDQ4JSxcclxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxyXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXHJcblx0XHRcdFx0dHJhbnNwYXJlbnQgNTIlXHJcblx0XHRcdCk7XHJcblx0XHR9XHJcblx0YDtcclxufTtcclxuXHJcbi8vIE11c3QgZXF1YWwgJGNvbG9yLXBhbGV0dGUtY2lyY2xlLXNpemUgZnJvbTpcclxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcclxuY29uc3Qgc3dhdGNoU2l6ZSA9IDI4O1xyXG5jb25zdCBzd2F0Y2hHYXAgPSAxMjtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRyb2xzID0gY3NzYFxyXG5cdHdpZHRoOiAkeyBzd2F0Y2hTaXplICogNiArIHN3YXRjaEdhcCAqIDUgfXB4O1xyXG5cclxuXHQ+IGRpdjpmaXJzdC1vZi10eXBlID4gJHsgU3R5bGVkTGFiZWwgfSB7XHJcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xyXG5cdH1cclxuXHJcblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcclxuXHRcdG1pbi13aWR0aDogMjRweDtcclxuXHRcdHBhZGRpbmc6IDA7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xyXG5leHBvcnQgY29uc3QgYm9yZGVyQ29sb3JJbmRpY2F0b3IgPSBjc3NgYDtcclxuXHJcbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2BcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHR3aWR0aDogMTAwJTtcclxuXHJcblx0LyogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBzdHlsaW5nICovXHJcblx0JiYge1xyXG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDQwMCBdIH07XHJcblx0XHRib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xyXG5cdFx0Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XHJcblx0XHRoZWlnaHQ6IDQwcHg7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2BcclxuXHRmbGV4OiAxIDEgNjAlO1xyXG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XHJcbmA7XHJcbiJdfQ== */");
export const innerWrapper = () => /*#__PURE__*/css(UnitControlWrapper, "{flex:1 1 40%;}&& ", UnitSelect, "{min-height:0;}" + (process.env.NODE_ENV === "production" ? "" : ";label:innerWrapper;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZCcUMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XHJcblxyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIENPTkZJRywgYm94U2l6aW5nUmVzZXQsIHJ0bCB9IGZyb20gJy4uL3V0aWxzJztcclxuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91dGlscy9zcGFjZSc7XHJcbmltcG9ydCB7IFN0eWxlZExhYmVsIH0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcclxuaW1wb3J0IHtcclxuXHRWYWx1ZUlucHV0IGFzIFVuaXRDb250cm9sV3JhcHBlcixcclxuXHRVbml0U2VsZWN0LFxyXG59IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XHJcblxyXG5pbXBvcnQgdHlwZSB7IEJvcmRlciB9IGZyb20gJy4vdHlwZXMnO1xyXG5cclxuY29uc3QgZm9jdXNCb3hTaGFkb3cgPSBjc3NgXHJcblx0Ym94LXNoYWRvdzogaW5zZXQgJHsgQ09ORklHLmNvbnRyb2xCb3hTaGFkb3dGb2N1cyB9O1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXHJcblx0Ym9yZGVyOiAwO1xyXG5cdHBhZGRpbmc6IDA7XHJcblx0bWFyZ2luOiAwO1xyXG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0ZmxleDogMSAxIDQwJTtcclxuXHR9XHJcblx0JiYgJHsgVW5pdFNlbGVjdCB9IHtcclxuXHRcdC8qIFByZXZlbnQgdW5pdCBzZWxlY3QgZm9yY2luZyBtaW4gaGVpZ2h0IGxhcmdlciB0aGFuIGl0cyBVbml0Q29udHJvbCAqL1xyXG5cdFx0bWluLWhlaWdodDogMDtcclxuXHR9XHJcbmA7XHJcblxyXG4vKlxyXG4gKiBUaGlzIHN0eWxlIGlzIG9ubHkgYXBwbGllZCB0byB0aGUgVW5pdENvbnRyb2wgd3JhcHBlciB3aGVuIHRoZSBib3JkZXIgd2lkdGhcclxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxyXG4gKiBSYW5nZUNvbnRyb2wgdG8gc2hhcmUgdGhlIGF2YWlsYWJsZSB3aWR0aCBpbiBhIDQwLzYwIHNwbGl0IHJlc3BlY3RpdmVseS5cclxuICovXHJcbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0LyogRm9yY2UgdGhlIFVuaXRDb250cm9sJ3Mgc2V0IHdpZHRoLiAqL1xyXG5cdFx0ZmxleDogMCAwIGF1dG87XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIHNpemU/OiAnZGVmYXVsdCcgfCAnX191bnN0YWJsZS1sYXJnZScgKSA9PiB7XHJcblx0cmV0dXJuIGNzc2BcclxuXHRcdGhlaWdodDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzQwcHgnIDogJzMwcHgnIH07XHJcblx0YDtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSBjc3NgXHJcblx0YmFja2dyb3VuZDogI2ZmZjtcclxuXHJcblx0JiYgPiBidXR0b24ge1xyXG5cdFx0YXNwZWN0LXJhdGlvOiAxO1xyXG5cdFx0cGFkZGluZzogMDtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0XHQkeyBydGwoXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMnB4IDAgMCAycHhgIH0sXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cclxuXHRcdCkoKSB9XHJcblx0XHRib3JkZXI6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy51aS5ib3JkZXIgfTtcclxuXHJcblx0XHQmOmZvY3VzLFxyXG5cdFx0Jjpob3Zlcjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxyXG5cdFx0XHRib3JkZXItY29sb3I6ICR7IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHR6LWluZGV4OiAxO1xyXG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0XHR9XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yQm9yZGVyID0gKCBib3JkZXI/OiBCb3JkZXIgKSA9PiB7XHJcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcclxuXHJcblx0Y29uc3QgZmFsbGJhY2tDb2xvciA9XHJcblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xyXG5cclxuXHRyZXR1cm4gY3NzYFxyXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XHJcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcclxuXHRgO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yV3JhcHBlciA9IChcclxuXHRib3JkZXI/OiBCb3JkZXIsXHJcblx0c2l6ZT86ICdkZWZhdWx0JyB8ICdfX3Vuc3RhYmxlLWxhcmdlJ1xyXG4pID0+IHtcclxuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XHJcblxyXG5cdHJldHVybiBjc3NgXHJcblx0XHRib3JkZXItcmFkaXVzOiAkeyBDT05GSUcucmFkaXVzRnVsbCB9O1xyXG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHQkeyBzdHlsZSA/IGNvbG9ySW5kaWNhdG9yQm9yZGVyKCBib3JkZXIgKSA6IHVuZGVmaW5lZCB9XHJcblx0XHR3aWR0aDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzI0cHgnIDogJzIycHgnIH07XHJcblx0XHRoZWlnaHQ6ICR7IHNpemUgPT09ICdfX3Vuc3RhYmxlLWxhcmdlJyA/ICcyNHB4JyA6ICcyMnB4JyB9O1xyXG5cdFx0cGFkZGluZzogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzJweCcgOiAnMXB4JyB9O1xyXG5cclxuXHRcdC8qXHJcblx0XHQgKiBDb2xvckluZGljYXRvclxyXG5cdFx0ICpcclxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3JcclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxyXG5cdFx0ICovXHJcblx0XHQmID4gc3BhbiB7XHJcblx0XHRcdGhlaWdodDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHR3aWR0aDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXHJcblx0XHRcdFx0LTQ1ZGVnLFxyXG5cdFx0XHRcdHRyYW5zcGFyZW50IDQ4JSxcclxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxyXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXHJcblx0XHRcdFx0dHJhbnNwYXJlbnQgNTIlXHJcblx0XHRcdCk7XHJcblx0XHR9XHJcblx0YDtcclxufTtcclxuXHJcbi8vIE11c3QgZXF1YWwgJGNvbG9yLXBhbGV0dGUtY2lyY2xlLXNpemUgZnJvbTpcclxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcclxuY29uc3Qgc3dhdGNoU2l6ZSA9IDI4O1xyXG5jb25zdCBzd2F0Y2hHYXAgPSAxMjtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRyb2xzID0gY3NzYFxyXG5cdHdpZHRoOiAkeyBzd2F0Y2hTaXplICogNiArIHN3YXRjaEdhcCAqIDUgfXB4O1xyXG5cclxuXHQ+IGRpdjpmaXJzdC1vZi10eXBlID4gJHsgU3R5bGVkTGFiZWwgfSB7XHJcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xyXG5cdH1cclxuXHJcblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcclxuXHRcdG1pbi13aWR0aDogMjRweDtcclxuXHRcdHBhZGRpbmc6IDA7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xyXG5leHBvcnQgY29uc3QgYm9yZGVyQ29sb3JJbmRpY2F0b3IgPSBjc3NgYDtcclxuXHJcbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2BcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHR3aWR0aDogMTAwJTtcclxuXHJcblx0LyogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBzdHlsaW5nICovXHJcblx0JiYge1xyXG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDQwMCBdIH07XHJcblx0XHRib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xyXG5cdFx0Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XHJcblx0XHRoZWlnaHQ6IDQwcHg7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2BcclxuXHRmbGV4OiAxIDEgNjAlO1xyXG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XHJcbmA7XHJcbiJdfQ== */");

/*
 * This style is only applied to the UnitControl wrapper when the border width
 * field should be a set width. Omitting this allows the UnitControl &
 * RangeControl to share the available width in a 40/60 split respectively.
 */
export const wrapperWidth = /*#__PURE__*/css(UnitControlWrapper, "{flex:0 0 auto;}" + (process.env.NODE_ENV === "production" ? "" : ";label:wrapperWidth;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRDK0IiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XHJcblxyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIENPTkZJRywgYm94U2l6aW5nUmVzZXQsIHJ0bCB9IGZyb20gJy4uL3V0aWxzJztcclxuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91dGlscy9zcGFjZSc7XHJcbmltcG9ydCB7IFN0eWxlZExhYmVsIH0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcclxuaW1wb3J0IHtcclxuXHRWYWx1ZUlucHV0IGFzIFVuaXRDb250cm9sV3JhcHBlcixcclxuXHRVbml0U2VsZWN0LFxyXG59IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XHJcblxyXG5pbXBvcnQgdHlwZSB7IEJvcmRlciB9IGZyb20gJy4vdHlwZXMnO1xyXG5cclxuY29uc3QgZm9jdXNCb3hTaGFkb3cgPSBjc3NgXHJcblx0Ym94LXNoYWRvdzogaW5zZXQgJHsgQ09ORklHLmNvbnRyb2xCb3hTaGFkb3dGb2N1cyB9O1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXHJcblx0Ym9yZGVyOiAwO1xyXG5cdHBhZGRpbmc6IDA7XHJcblx0bWFyZ2luOiAwO1xyXG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0ZmxleDogMSAxIDQwJTtcclxuXHR9XHJcblx0JiYgJHsgVW5pdFNlbGVjdCB9IHtcclxuXHRcdC8qIFByZXZlbnQgdW5pdCBzZWxlY3QgZm9yY2luZyBtaW4gaGVpZ2h0IGxhcmdlciB0aGFuIGl0cyBVbml0Q29udHJvbCAqL1xyXG5cdFx0bWluLWhlaWdodDogMDtcclxuXHR9XHJcbmA7XHJcblxyXG4vKlxyXG4gKiBUaGlzIHN0eWxlIGlzIG9ubHkgYXBwbGllZCB0byB0aGUgVW5pdENvbnRyb2wgd3JhcHBlciB3aGVuIHRoZSBib3JkZXIgd2lkdGhcclxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxyXG4gKiBSYW5nZUNvbnRyb2wgdG8gc2hhcmUgdGhlIGF2YWlsYWJsZSB3aWR0aCBpbiBhIDQwLzYwIHNwbGl0IHJlc3BlY3RpdmVseS5cclxuICovXHJcbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0LyogRm9yY2UgdGhlIFVuaXRDb250cm9sJ3Mgc2V0IHdpZHRoLiAqL1xyXG5cdFx0ZmxleDogMCAwIGF1dG87XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIHNpemU/OiAnZGVmYXVsdCcgfCAnX191bnN0YWJsZS1sYXJnZScgKSA9PiB7XHJcblx0cmV0dXJuIGNzc2BcclxuXHRcdGhlaWdodDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzQwcHgnIDogJzMwcHgnIH07XHJcblx0YDtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSBjc3NgXHJcblx0YmFja2dyb3VuZDogI2ZmZjtcclxuXHJcblx0JiYgPiBidXR0b24ge1xyXG5cdFx0YXNwZWN0LXJhdGlvOiAxO1xyXG5cdFx0cGFkZGluZzogMDtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0XHQkeyBydGwoXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMnB4IDAgMCAycHhgIH0sXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cclxuXHRcdCkoKSB9XHJcblx0XHRib3JkZXI6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy51aS5ib3JkZXIgfTtcclxuXHJcblx0XHQmOmZvY3VzLFxyXG5cdFx0Jjpob3Zlcjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxyXG5cdFx0XHRib3JkZXItY29sb3I6ICR7IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHR6LWluZGV4OiAxO1xyXG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0XHR9XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yQm9yZGVyID0gKCBib3JkZXI/OiBCb3JkZXIgKSA9PiB7XHJcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcclxuXHJcblx0Y29uc3QgZmFsbGJhY2tDb2xvciA9XHJcblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xyXG5cclxuXHRyZXR1cm4gY3NzYFxyXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XHJcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcclxuXHRgO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yV3JhcHBlciA9IChcclxuXHRib3JkZXI/OiBCb3JkZXIsXHJcblx0c2l6ZT86ICdkZWZhdWx0JyB8ICdfX3Vuc3RhYmxlLWxhcmdlJ1xyXG4pID0+IHtcclxuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XHJcblxyXG5cdHJldHVybiBjc3NgXHJcblx0XHRib3JkZXItcmFkaXVzOiAkeyBDT05GSUcucmFkaXVzRnVsbCB9O1xyXG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHQkeyBzdHlsZSA/IGNvbG9ySW5kaWNhdG9yQm9yZGVyKCBib3JkZXIgKSA6IHVuZGVmaW5lZCB9XHJcblx0XHR3aWR0aDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzI0cHgnIDogJzIycHgnIH07XHJcblx0XHRoZWlnaHQ6ICR7IHNpemUgPT09ICdfX3Vuc3RhYmxlLWxhcmdlJyA/ICcyNHB4JyA6ICcyMnB4JyB9O1xyXG5cdFx0cGFkZGluZzogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzJweCcgOiAnMXB4JyB9O1xyXG5cclxuXHRcdC8qXHJcblx0XHQgKiBDb2xvckluZGljYXRvclxyXG5cdFx0ICpcclxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3JcclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxyXG5cdFx0ICovXHJcblx0XHQmID4gc3BhbiB7XHJcblx0XHRcdGhlaWdodDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHR3aWR0aDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXHJcblx0XHRcdFx0LTQ1ZGVnLFxyXG5cdFx0XHRcdHRyYW5zcGFyZW50IDQ4JSxcclxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxyXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXHJcblx0XHRcdFx0dHJhbnNwYXJlbnQgNTIlXHJcblx0XHRcdCk7XHJcblx0XHR9XHJcblx0YDtcclxufTtcclxuXHJcbi8vIE11c3QgZXF1YWwgJGNvbG9yLXBhbGV0dGUtY2lyY2xlLXNpemUgZnJvbTpcclxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcclxuY29uc3Qgc3dhdGNoU2l6ZSA9IDI4O1xyXG5jb25zdCBzd2F0Y2hHYXAgPSAxMjtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRyb2xzID0gY3NzYFxyXG5cdHdpZHRoOiAkeyBzd2F0Y2hTaXplICogNiArIHN3YXRjaEdhcCAqIDUgfXB4O1xyXG5cclxuXHQ+IGRpdjpmaXJzdC1vZi10eXBlID4gJHsgU3R5bGVkTGFiZWwgfSB7XHJcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xyXG5cdH1cclxuXHJcblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcclxuXHRcdG1pbi13aWR0aDogMjRweDtcclxuXHRcdHBhZGRpbmc6IDA7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xyXG5leHBvcnQgY29uc3QgYm9yZGVyQ29sb3JJbmRpY2F0b3IgPSBjc3NgYDtcclxuXHJcbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2BcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHR3aWR0aDogMTAwJTtcclxuXHJcblx0LyogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBzdHlsaW5nICovXHJcblx0JiYge1xyXG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDQwMCBdIH07XHJcblx0XHRib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xyXG5cdFx0Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XHJcblx0XHRoZWlnaHQ6IDQwcHg7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2BcclxuXHRmbGV4OiAxIDEgNjAlO1xyXG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XHJcbmA7XHJcbiJdfQ== */");
export const wrapperHeight = size => {
  return /*#__PURE__*/css("height:", size === '__unstable-large' ? '40px' : '30px', ";" + (process.env.NODE_ENV === "production" ? "" : ";label:wrapperHeight;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9EVyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2JvcmRlci1jb250cm9sL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcclxuICovXHJcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcclxuXHJcbi8qKlxyXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcclxuICovXHJcbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBib3hTaXppbmdSZXNldCwgcnRsIH0gZnJvbSAnLi4vdXRpbHMnO1xyXG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3V0aWxzL3NwYWNlJztcclxuaW1wb3J0IHsgU3R5bGVkTGFiZWwgfSBmcm9tICcuLi9iYXNlLWNvbnRyb2wvc3R5bGVzL2Jhc2UtY29udHJvbC1zdHlsZXMnO1xyXG5pbXBvcnQge1xyXG5cdFZhbHVlSW5wdXQgYXMgVW5pdENvbnRyb2xXcmFwcGVyLFxyXG5cdFVuaXRTZWxlY3QsXHJcbn0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcclxuXHJcbmltcG9ydCB0eXBlIHsgQm9yZGVyIH0gZnJvbSAnLi90eXBlcyc7XHJcblxyXG5jb25zdCBmb2N1c0JveFNoYWRvdyA9IGNzc2BcclxuXHRib3gtc2hhZG93OiBpbnNldCAkeyBDT05GSUcuY29udHJvbEJveFNoYWRvd0ZvY3VzIH07XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2BcclxuXHRib3JkZXI6IDA7XHJcblx0cGFkZGluZzogMDtcclxuXHRtYXJnaW46IDA7XHJcblx0JHsgYm94U2l6aW5nUmVzZXQgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGlubmVyV3JhcHBlciA9ICgpID0+IGNzc2BcclxuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XHJcblx0XHRmbGV4OiAxIDEgNDAlO1xyXG5cdH1cclxuXHQmJiAkeyBVbml0U2VsZWN0IH0ge1xyXG5cdFx0LyogUHJldmVudCB1bml0IHNlbGVjdCBmb3JjaW5nIG1pbiBoZWlnaHQgbGFyZ2VyIHRoYW4gaXRzIFVuaXRDb250cm9sICovXHJcblx0XHRtaW4taGVpZ2h0OiAwO1xyXG5cdH1cclxuYDtcclxuXHJcbi8qXHJcbiAqIFRoaXMgc3R5bGUgaXMgb25seSBhcHBsaWVkIHRvIHRoZSBVbml0Q29udHJvbCB3cmFwcGVyIHdoZW4gdGhlIGJvcmRlciB3aWR0aFxyXG4gKiBmaWVsZCBzaG91bGQgYmUgYSBzZXQgd2lkdGguIE9taXR0aW5nIHRoaXMgYWxsb3dzIHRoZSBVbml0Q29udHJvbCAmXHJcbiAqIFJhbmdlQ29udHJvbCB0byBzaGFyZSB0aGUgYXZhaWxhYmxlIHdpZHRoIGluIGEgNDAvNjAgc3BsaXQgcmVzcGVjdGl2ZWx5LlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IHdyYXBwZXJXaWR0aCA9IGNzc2BcclxuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XHJcblx0XHQvKiBGb3JjZSB0aGUgVW5pdENvbnRyb2wncyBzZXQgd2lkdGguICovXHJcblx0XHRmbGV4OiAwIDAgYXV0bztcclxuXHR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3Qgd3JhcHBlckhlaWdodCA9ICggc2l6ZT86ICdkZWZhdWx0JyB8ICdfX3Vuc3RhYmxlLWxhcmdlJyApID0+IHtcclxuXHRyZXR1cm4gY3NzYFxyXG5cdFx0aGVpZ2h0OiAkeyBzaXplID09PSAnX191bnN0YWJsZS1sYXJnZScgPyAnNDBweCcgOiAnMzBweCcgfTtcclxuXHRgO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xEcm9wZG93biA9IGNzc2BcclxuXHRiYWNrZ3JvdW5kOiAjZmZmO1xyXG5cclxuXHQmJiA+IGJ1dHRvbiB7XHJcblx0XHRhc3BlY3QtcmF0aW86IDE7XHJcblx0XHRwYWRkaW5nOiAwO1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHRcdCR7IHJ0bChcclxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAycHggMCAwIDJweGAgfSxcclxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAwIDJweCAycHggMGAgfVxyXG5cdFx0KSgpIH1cclxuXHRcdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLnVpLmJvcmRlciB9O1xyXG5cclxuXHRcdCY6Zm9jdXMsXHJcblx0XHQmOmhvdmVyOm5vdCggOmRpc2FibGVkICkge1xyXG5cdFx0XHQkeyBmb2N1c0JveFNoYWRvdyB9XHJcblx0XHRcdGJvcmRlci1jb2xvcjogJHsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XHJcblx0XHRcdHotaW5kZXg6IDE7XHJcblx0XHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRcdH1cclxuXHR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JCb3JkZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcclxuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xyXG5cclxuXHRjb25zdCBmYWxsYmFja0NvbG9yID1cclxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XHJcblxyXG5cdHJldHVybiBjc3NgXHJcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcclxuXHRcdGJvcmRlci1jb2xvcjogJHsgY29sb3IgfHwgZmFsbGJhY2tDb2xvciB9O1xyXG5cdGA7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JXcmFwcGVyID0gKFxyXG5cdGJvcmRlcj86IEJvcmRlcixcclxuXHRzaXplPzogJ2RlZmF1bHQnIHwgJ19fdW5zdGFibGUtbGFyZ2UnXHJcbikgPT4ge1xyXG5cdGNvbnN0IHsgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcclxuXHJcblx0cmV0dXJuIGNzc2BcclxuXHRcdGJvcmRlci1yYWRpdXM6ICR7IENPTkZJRy5yYWRpdXNGdWxsIH07XHJcblx0XHRib3JkZXI6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuXHRcdCR7IHN0eWxlID8gY29sb3JJbmRpY2F0b3JCb3JkZXIoIGJvcmRlciApIDogdW5kZWZpbmVkIH1cclxuXHRcdHdpZHRoOiAkeyBzaXplID09PSAnX191bnN0YWJsZS1sYXJnZScgPyAnMjRweCcgOiAnMjJweCcgfTtcclxuXHRcdGhlaWdodDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzI0cHgnIDogJzIycHgnIH07XHJcblx0XHRwYWRkaW5nOiAkeyBzaXplID09PSAnX191bnN0YWJsZS1sYXJnZScgPyAnMnB4JyA6ICcxcHgnIH07XHJcblxyXG5cdFx0LypcclxuXHRcdCAqIENvbG9ySW5kaWNhdG9yXHJcblx0XHQgKlxyXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxyXG5cdFx0ICogb3ZlciB0aGUgYWN0aXZlIHN0YXRlIG9mIHRoZSBib3JkZXIgY29udHJvbCBkcm9wZG93bidzIHRvZ2dsZSBidXR0b24uXHJcblx0XHQgKi9cclxuXHRcdCYgPiBzcGFuIHtcclxuXHRcdFx0aGVpZ2h0OiAkeyBzcGFjZSggNCApIH07XHJcblx0XHRcdHdpZHRoOiAkeyBzcGFjZSggNCApIH07XHJcblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcclxuXHRcdFx0XHQtNDVkZWcsXHJcblx0XHRcdFx0dHJhbnNwYXJlbnQgNDglLFxyXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXHJcblx0XHRcdFx0cmdiKCAwIDAgMCAvIDIwJSApIDUyJSxcclxuXHRcdFx0XHR0cmFuc3BhcmVudCA1MiVcclxuXHRcdFx0KTtcclxuXHRcdH1cclxuXHRgO1xyXG59O1xyXG5cclxuLy8gTXVzdCBlcXVhbCAkY29sb3ItcGFsZXR0ZS1jaXJjbGUtc2l6ZSBmcm9tOlxyXG4vLyBAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2NpcmN1bGFyLW9wdGlvbi1waWNrZXIvc3R5bGUuc2Nzc1xyXG5jb25zdCBzd2F0Y2hTaXplID0gMjg7XHJcbmNvbnN0IHN3YXRjaEdhcCA9IDEyO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udHJvbHMgPSBjc3NgXHJcblx0d2lkdGg6ICR7IHN3YXRjaFNpemUgKiA2ICsgc3dhdGNoR2FwICogNSB9cHg7XHJcblxyXG5cdD4gZGl2OmZpcnN0LW9mLXR5cGUgPiAkeyBTdHlsZWRMYWJlbCB9IHtcclxuXHRcdG1hcmdpbi1ib3R0b206IDA7XHJcblx0fVxyXG5cclxuXHQmJiAkeyBTdHlsZWRMYWJlbCB9ICsgYnV0dG9uOm5vdCggLmhhcy10ZXh0ICkge1xyXG5cdFx0bWluLXdpZHRoOiAyNHB4O1xyXG5cdFx0cGFkZGluZzogMDtcclxuXHR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250ZW50ID0gY3NzYGA7XHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb2xvckluZGljYXRvciA9IGNzc2BgO1xyXG5cclxuZXhwb3J0IGNvbnN0IHJlc2V0QnV0dG9uID0gY3NzYFxyXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cclxuXHQvKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IHN0eWxpbmcgKi9cclxuXHQmJiB7XHJcblx0XHRib3JkZXItdG9wOiAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgNDAwIF0gfTtcclxuXHRcdGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7XHJcblx0XHRib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcclxuXHRcdGhlaWdodDogNDBweDtcclxuXHR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgYm9yZGVyU2xpZGVyID0gKCkgPT4gY3NzYFxyXG5cdGZsZXg6IDEgMSA2MCU7XHJcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cclxuYDtcclxuIl19 */");
};
export const borderControlDropdown = /*#__PURE__*/css("background:#fff;&&>button{aspect-ratio:1;padding:0;display:flex;align-items:center;justify-content:center;", rtl({
  borderRadius: `2px 0 0 2px`
}, {
  borderRadius: `0 2px 2px 0`
})(), " border:", CONFIG.borderWidth, " solid ", COLORS.ui.border, ";&:focus,&:hover:not( :disabled ){", focusBoxShadow, " border-color:", COLORS.ui.borderFocus, ";z-index:1;position:relative;}}" + (process.env.NODE_ENV === "production" ? "" : ";label:borderControlDropdown;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlEd0MiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XHJcblxyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIENPTkZJRywgYm94U2l6aW5nUmVzZXQsIHJ0bCB9IGZyb20gJy4uL3V0aWxzJztcclxuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91dGlscy9zcGFjZSc7XHJcbmltcG9ydCB7IFN0eWxlZExhYmVsIH0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcclxuaW1wb3J0IHtcclxuXHRWYWx1ZUlucHV0IGFzIFVuaXRDb250cm9sV3JhcHBlcixcclxuXHRVbml0U2VsZWN0LFxyXG59IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XHJcblxyXG5pbXBvcnQgdHlwZSB7IEJvcmRlciB9IGZyb20gJy4vdHlwZXMnO1xyXG5cclxuY29uc3QgZm9jdXNCb3hTaGFkb3cgPSBjc3NgXHJcblx0Ym94LXNoYWRvdzogaW5zZXQgJHsgQ09ORklHLmNvbnRyb2xCb3hTaGFkb3dGb2N1cyB9O1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXHJcblx0Ym9yZGVyOiAwO1xyXG5cdHBhZGRpbmc6IDA7XHJcblx0bWFyZ2luOiAwO1xyXG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0ZmxleDogMSAxIDQwJTtcclxuXHR9XHJcblx0JiYgJHsgVW5pdFNlbGVjdCB9IHtcclxuXHRcdC8qIFByZXZlbnQgdW5pdCBzZWxlY3QgZm9yY2luZyBtaW4gaGVpZ2h0IGxhcmdlciB0aGFuIGl0cyBVbml0Q29udHJvbCAqL1xyXG5cdFx0bWluLWhlaWdodDogMDtcclxuXHR9XHJcbmA7XHJcblxyXG4vKlxyXG4gKiBUaGlzIHN0eWxlIGlzIG9ubHkgYXBwbGllZCB0byB0aGUgVW5pdENvbnRyb2wgd3JhcHBlciB3aGVuIHRoZSBib3JkZXIgd2lkdGhcclxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxyXG4gKiBSYW5nZUNvbnRyb2wgdG8gc2hhcmUgdGhlIGF2YWlsYWJsZSB3aWR0aCBpbiBhIDQwLzYwIHNwbGl0IHJlc3BlY3RpdmVseS5cclxuICovXHJcbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0LyogRm9yY2UgdGhlIFVuaXRDb250cm9sJ3Mgc2V0IHdpZHRoLiAqL1xyXG5cdFx0ZmxleDogMCAwIGF1dG87XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIHNpemU/OiAnZGVmYXVsdCcgfCAnX191bnN0YWJsZS1sYXJnZScgKSA9PiB7XHJcblx0cmV0dXJuIGNzc2BcclxuXHRcdGhlaWdodDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzQwcHgnIDogJzMwcHgnIH07XHJcblx0YDtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSBjc3NgXHJcblx0YmFja2dyb3VuZDogI2ZmZjtcclxuXHJcblx0JiYgPiBidXR0b24ge1xyXG5cdFx0YXNwZWN0LXJhdGlvOiAxO1xyXG5cdFx0cGFkZGluZzogMDtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0XHQkeyBydGwoXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMnB4IDAgMCAycHhgIH0sXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cclxuXHRcdCkoKSB9XHJcblx0XHRib3JkZXI6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy51aS5ib3JkZXIgfTtcclxuXHJcblx0XHQmOmZvY3VzLFxyXG5cdFx0Jjpob3Zlcjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxyXG5cdFx0XHRib3JkZXItY29sb3I6ICR7IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHR6LWluZGV4OiAxO1xyXG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0XHR9XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yQm9yZGVyID0gKCBib3JkZXI/OiBCb3JkZXIgKSA9PiB7XHJcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcclxuXHJcblx0Y29uc3QgZmFsbGJhY2tDb2xvciA9XHJcblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xyXG5cclxuXHRyZXR1cm4gY3NzYFxyXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XHJcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcclxuXHRgO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yV3JhcHBlciA9IChcclxuXHRib3JkZXI/OiBCb3JkZXIsXHJcblx0c2l6ZT86ICdkZWZhdWx0JyB8ICdfX3Vuc3RhYmxlLWxhcmdlJ1xyXG4pID0+IHtcclxuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XHJcblxyXG5cdHJldHVybiBjc3NgXHJcblx0XHRib3JkZXItcmFkaXVzOiAkeyBDT05GSUcucmFkaXVzRnVsbCB9O1xyXG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHQkeyBzdHlsZSA/IGNvbG9ySW5kaWNhdG9yQm9yZGVyKCBib3JkZXIgKSA6IHVuZGVmaW5lZCB9XHJcblx0XHR3aWR0aDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzI0cHgnIDogJzIycHgnIH07XHJcblx0XHRoZWlnaHQ6ICR7IHNpemUgPT09ICdfX3Vuc3RhYmxlLWxhcmdlJyA/ICcyNHB4JyA6ICcyMnB4JyB9O1xyXG5cdFx0cGFkZGluZzogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzJweCcgOiAnMXB4JyB9O1xyXG5cclxuXHRcdC8qXHJcblx0XHQgKiBDb2xvckluZGljYXRvclxyXG5cdFx0ICpcclxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3JcclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxyXG5cdFx0ICovXHJcblx0XHQmID4gc3BhbiB7XHJcblx0XHRcdGhlaWdodDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHR3aWR0aDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXHJcblx0XHRcdFx0LTQ1ZGVnLFxyXG5cdFx0XHRcdHRyYW5zcGFyZW50IDQ4JSxcclxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxyXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXHJcblx0XHRcdFx0dHJhbnNwYXJlbnQgNTIlXHJcblx0XHRcdCk7XHJcblx0XHR9XHJcblx0YDtcclxufTtcclxuXHJcbi8vIE11c3QgZXF1YWwgJGNvbG9yLXBhbGV0dGUtY2lyY2xlLXNpemUgZnJvbTpcclxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcclxuY29uc3Qgc3dhdGNoU2l6ZSA9IDI4O1xyXG5jb25zdCBzd2F0Y2hHYXAgPSAxMjtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRyb2xzID0gY3NzYFxyXG5cdHdpZHRoOiAkeyBzd2F0Y2hTaXplICogNiArIHN3YXRjaEdhcCAqIDUgfXB4O1xyXG5cclxuXHQ+IGRpdjpmaXJzdC1vZi10eXBlID4gJHsgU3R5bGVkTGFiZWwgfSB7XHJcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xyXG5cdH1cclxuXHJcblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcclxuXHRcdG1pbi13aWR0aDogMjRweDtcclxuXHRcdHBhZGRpbmc6IDA7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xyXG5leHBvcnQgY29uc3QgYm9yZGVyQ29sb3JJbmRpY2F0b3IgPSBjc3NgYDtcclxuXHJcbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2BcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHR3aWR0aDogMTAwJTtcclxuXHJcblx0LyogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBzdHlsaW5nICovXHJcblx0JiYge1xyXG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDQwMCBdIH07XHJcblx0XHRib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xyXG5cdFx0Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XHJcblx0XHRoZWlnaHQ6IDQwcHg7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2BcclxuXHRmbGV4OiAxIDEgNjAlO1xyXG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XHJcbmA7XHJcbiJdfQ== */");
export const colorIndicatorBorder = border => {
  const {
    color,
    style
  } = border || {};
  const fallbackColor = !!style && style !== 'none' ? COLORS.gray[300] : undefined;
  return /*#__PURE__*/css("border-style:", style === 'none' ? 'solid' : style, ";border-color:", color || fallbackColor, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:colorIndicatorBorder;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXdGVyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2JvcmRlci1jb250cm9sL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcclxuICovXHJcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcclxuXHJcbi8qKlxyXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcclxuICovXHJcbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBib3hTaXppbmdSZXNldCwgcnRsIH0gZnJvbSAnLi4vdXRpbHMnO1xyXG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3V0aWxzL3NwYWNlJztcclxuaW1wb3J0IHsgU3R5bGVkTGFiZWwgfSBmcm9tICcuLi9iYXNlLWNvbnRyb2wvc3R5bGVzL2Jhc2UtY29udHJvbC1zdHlsZXMnO1xyXG5pbXBvcnQge1xyXG5cdFZhbHVlSW5wdXQgYXMgVW5pdENvbnRyb2xXcmFwcGVyLFxyXG5cdFVuaXRTZWxlY3QsXHJcbn0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcclxuXHJcbmltcG9ydCB0eXBlIHsgQm9yZGVyIH0gZnJvbSAnLi90eXBlcyc7XHJcblxyXG5jb25zdCBmb2N1c0JveFNoYWRvdyA9IGNzc2BcclxuXHRib3gtc2hhZG93OiBpbnNldCAkeyBDT05GSUcuY29udHJvbEJveFNoYWRvd0ZvY3VzIH07XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2BcclxuXHRib3JkZXI6IDA7XHJcblx0cGFkZGluZzogMDtcclxuXHRtYXJnaW46IDA7XHJcblx0JHsgYm94U2l6aW5nUmVzZXQgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGlubmVyV3JhcHBlciA9ICgpID0+IGNzc2BcclxuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XHJcblx0XHRmbGV4OiAxIDEgNDAlO1xyXG5cdH1cclxuXHQmJiAkeyBVbml0U2VsZWN0IH0ge1xyXG5cdFx0LyogUHJldmVudCB1bml0IHNlbGVjdCBmb3JjaW5nIG1pbiBoZWlnaHQgbGFyZ2VyIHRoYW4gaXRzIFVuaXRDb250cm9sICovXHJcblx0XHRtaW4taGVpZ2h0OiAwO1xyXG5cdH1cclxuYDtcclxuXHJcbi8qXHJcbiAqIFRoaXMgc3R5bGUgaXMgb25seSBhcHBsaWVkIHRvIHRoZSBVbml0Q29udHJvbCB3cmFwcGVyIHdoZW4gdGhlIGJvcmRlciB3aWR0aFxyXG4gKiBmaWVsZCBzaG91bGQgYmUgYSBzZXQgd2lkdGguIE9taXR0aW5nIHRoaXMgYWxsb3dzIHRoZSBVbml0Q29udHJvbCAmXHJcbiAqIFJhbmdlQ29udHJvbCB0byBzaGFyZSB0aGUgYXZhaWxhYmxlIHdpZHRoIGluIGEgNDAvNjAgc3BsaXQgcmVzcGVjdGl2ZWx5LlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IHdyYXBwZXJXaWR0aCA9IGNzc2BcclxuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XHJcblx0XHQvKiBGb3JjZSB0aGUgVW5pdENvbnRyb2wncyBzZXQgd2lkdGguICovXHJcblx0XHRmbGV4OiAwIDAgYXV0bztcclxuXHR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3Qgd3JhcHBlckhlaWdodCA9ICggc2l6ZT86ICdkZWZhdWx0JyB8ICdfX3Vuc3RhYmxlLWxhcmdlJyApID0+IHtcclxuXHRyZXR1cm4gY3NzYFxyXG5cdFx0aGVpZ2h0OiAkeyBzaXplID09PSAnX191bnN0YWJsZS1sYXJnZScgPyAnNDBweCcgOiAnMzBweCcgfTtcclxuXHRgO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xEcm9wZG93biA9IGNzc2BcclxuXHRiYWNrZ3JvdW5kOiAjZmZmO1xyXG5cclxuXHQmJiA+IGJ1dHRvbiB7XHJcblx0XHRhc3BlY3QtcmF0aW86IDE7XHJcblx0XHRwYWRkaW5nOiAwO1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHRcdCR7IHJ0bChcclxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAycHggMCAwIDJweGAgfSxcclxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAwIDJweCAycHggMGAgfVxyXG5cdFx0KSgpIH1cclxuXHRcdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLnVpLmJvcmRlciB9O1xyXG5cclxuXHRcdCY6Zm9jdXMsXHJcblx0XHQmOmhvdmVyOm5vdCggOmRpc2FibGVkICkge1xyXG5cdFx0XHQkeyBmb2N1c0JveFNoYWRvdyB9XHJcblx0XHRcdGJvcmRlci1jb2xvcjogJHsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XHJcblx0XHRcdHotaW5kZXg6IDE7XHJcblx0XHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRcdH1cclxuXHR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JCb3JkZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcclxuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xyXG5cclxuXHRjb25zdCBmYWxsYmFja0NvbG9yID1cclxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XHJcblxyXG5cdHJldHVybiBjc3NgXHJcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcclxuXHRcdGJvcmRlci1jb2xvcjogJHsgY29sb3IgfHwgZmFsbGJhY2tDb2xvciB9O1xyXG5cdGA7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JXcmFwcGVyID0gKFxyXG5cdGJvcmRlcj86IEJvcmRlcixcclxuXHRzaXplPzogJ2RlZmF1bHQnIHwgJ19fdW5zdGFibGUtbGFyZ2UnXHJcbikgPT4ge1xyXG5cdGNvbnN0IHsgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcclxuXHJcblx0cmV0dXJuIGNzc2BcclxuXHRcdGJvcmRlci1yYWRpdXM6ICR7IENPTkZJRy5yYWRpdXNGdWxsIH07XHJcblx0XHRib3JkZXI6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuXHRcdCR7IHN0eWxlID8gY29sb3JJbmRpY2F0b3JCb3JkZXIoIGJvcmRlciApIDogdW5kZWZpbmVkIH1cclxuXHRcdHdpZHRoOiAkeyBzaXplID09PSAnX191bnN0YWJsZS1sYXJnZScgPyAnMjRweCcgOiAnMjJweCcgfTtcclxuXHRcdGhlaWdodDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzI0cHgnIDogJzIycHgnIH07XHJcblx0XHRwYWRkaW5nOiAkeyBzaXplID09PSAnX191bnN0YWJsZS1sYXJnZScgPyAnMnB4JyA6ICcxcHgnIH07XHJcblxyXG5cdFx0LypcclxuXHRcdCAqIENvbG9ySW5kaWNhdG9yXHJcblx0XHQgKlxyXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxyXG5cdFx0ICogb3ZlciB0aGUgYWN0aXZlIHN0YXRlIG9mIHRoZSBib3JkZXIgY29udHJvbCBkcm9wZG93bidzIHRvZ2dsZSBidXR0b24uXHJcblx0XHQgKi9cclxuXHRcdCYgPiBzcGFuIHtcclxuXHRcdFx0aGVpZ2h0OiAkeyBzcGFjZSggNCApIH07XHJcblx0XHRcdHdpZHRoOiAkeyBzcGFjZSggNCApIH07XHJcblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcclxuXHRcdFx0XHQtNDVkZWcsXHJcblx0XHRcdFx0dHJhbnNwYXJlbnQgNDglLFxyXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXHJcblx0XHRcdFx0cmdiKCAwIDAgMCAvIDIwJSApIDUyJSxcclxuXHRcdFx0XHR0cmFuc3BhcmVudCA1MiVcclxuXHRcdFx0KTtcclxuXHRcdH1cclxuXHRgO1xyXG59O1xyXG5cclxuLy8gTXVzdCBlcXVhbCAkY29sb3ItcGFsZXR0ZS1jaXJjbGUtc2l6ZSBmcm9tOlxyXG4vLyBAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2NpcmN1bGFyLW9wdGlvbi1waWNrZXIvc3R5bGUuc2Nzc1xyXG5jb25zdCBzd2F0Y2hTaXplID0gMjg7XHJcbmNvbnN0IHN3YXRjaEdhcCA9IDEyO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udHJvbHMgPSBjc3NgXHJcblx0d2lkdGg6ICR7IHN3YXRjaFNpemUgKiA2ICsgc3dhdGNoR2FwICogNSB9cHg7XHJcblxyXG5cdD4gZGl2OmZpcnN0LW9mLXR5cGUgPiAkeyBTdHlsZWRMYWJlbCB9IHtcclxuXHRcdG1hcmdpbi1ib3R0b206IDA7XHJcblx0fVxyXG5cclxuXHQmJiAkeyBTdHlsZWRMYWJlbCB9ICsgYnV0dG9uOm5vdCggLmhhcy10ZXh0ICkge1xyXG5cdFx0bWluLXdpZHRoOiAyNHB4O1xyXG5cdFx0cGFkZGluZzogMDtcclxuXHR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250ZW50ID0gY3NzYGA7XHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb2xvckluZGljYXRvciA9IGNzc2BgO1xyXG5cclxuZXhwb3J0IGNvbnN0IHJlc2V0QnV0dG9uID0gY3NzYFxyXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cclxuXHQvKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IHN0eWxpbmcgKi9cclxuXHQmJiB7XHJcblx0XHRib3JkZXItdG9wOiAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgNDAwIF0gfTtcclxuXHRcdGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7XHJcblx0XHRib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcclxuXHRcdGhlaWdodDogNDBweDtcclxuXHR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgYm9yZGVyU2xpZGVyID0gKCkgPT4gY3NzYFxyXG5cdGZsZXg6IDEgMSA2MCU7XHJcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cclxuYDtcclxuIl19 */");
};
export const colorIndicatorWrapper = (border, size) => {
  const {
    style
  } = border || {};
  return /*#__PURE__*/css("border-radius:", CONFIG.radiusFull, ";border:2px solid transparent;", style ? colorIndicatorBorder(border) : undefined, " width:", size === '__unstable-large' ? '24px' : '22px', ";height:", size === '__unstable-large' ? '24px' : '22px', ";padding:", size === '__unstable-large' ? '2px' : '1px', ";&>span{height:", space(4), ";width:", space(4), ";background:linear-gradient(\n\t\t\t\t-45deg,\n\t\t\t\ttransparent 48%,\n\t\t\t\trgb( 0 0 0 / 20% ) 48%,\n\t\t\t\trgb( 0 0 0 / 20% ) 52%,\n\t\t\t\ttransparent 52%\n\t\t\t);}" + (process.env.NODE_ENV === "production" ? "" : ";label:colorIndicatorWrapper;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9HVyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2JvcmRlci1jb250cm9sL3N0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcclxuICovXHJcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcclxuXHJcbi8qKlxyXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcclxuICovXHJcbmltcG9ydCB7IENPTE9SUywgQ09ORklHLCBib3hTaXppbmdSZXNldCwgcnRsIH0gZnJvbSAnLi4vdXRpbHMnO1xyXG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uL3V0aWxzL3NwYWNlJztcclxuaW1wb3J0IHsgU3R5bGVkTGFiZWwgfSBmcm9tICcuLi9iYXNlLWNvbnRyb2wvc3R5bGVzL2Jhc2UtY29udHJvbC1zdHlsZXMnO1xyXG5pbXBvcnQge1xyXG5cdFZhbHVlSW5wdXQgYXMgVW5pdENvbnRyb2xXcmFwcGVyLFxyXG5cdFVuaXRTZWxlY3QsXHJcbn0gZnJvbSAnLi4vdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzJztcclxuXHJcbmltcG9ydCB0eXBlIHsgQm9yZGVyIH0gZnJvbSAnLi90eXBlcyc7XHJcblxyXG5jb25zdCBmb2N1c0JveFNoYWRvdyA9IGNzc2BcclxuXHRib3gtc2hhZG93OiBpbnNldCAkeyBDT05GSUcuY29udHJvbEJveFNoYWRvd0ZvY3VzIH07XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbCA9IGNzc2BcclxuXHRib3JkZXI6IDA7XHJcblx0cGFkZGluZzogMDtcclxuXHRtYXJnaW46IDA7XHJcblx0JHsgYm94U2l6aW5nUmVzZXQgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGlubmVyV3JhcHBlciA9ICgpID0+IGNzc2BcclxuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XHJcblx0XHRmbGV4OiAxIDEgNDAlO1xyXG5cdH1cclxuXHQmJiAkeyBVbml0U2VsZWN0IH0ge1xyXG5cdFx0LyogUHJldmVudCB1bml0IHNlbGVjdCBmb3JjaW5nIG1pbiBoZWlnaHQgbGFyZ2VyIHRoYW4gaXRzIFVuaXRDb250cm9sICovXHJcblx0XHRtaW4taGVpZ2h0OiAwO1xyXG5cdH1cclxuYDtcclxuXHJcbi8qXHJcbiAqIFRoaXMgc3R5bGUgaXMgb25seSBhcHBsaWVkIHRvIHRoZSBVbml0Q29udHJvbCB3cmFwcGVyIHdoZW4gdGhlIGJvcmRlciB3aWR0aFxyXG4gKiBmaWVsZCBzaG91bGQgYmUgYSBzZXQgd2lkdGguIE9taXR0aW5nIHRoaXMgYWxsb3dzIHRoZSBVbml0Q29udHJvbCAmXHJcbiAqIFJhbmdlQ29udHJvbCB0byBzaGFyZSB0aGUgYXZhaWxhYmxlIHdpZHRoIGluIGEgNDAvNjAgc3BsaXQgcmVzcGVjdGl2ZWx5LlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IHdyYXBwZXJXaWR0aCA9IGNzc2BcclxuXHQkeyBVbml0Q29udHJvbFdyYXBwZXIgfSB7XHJcblx0XHQvKiBGb3JjZSB0aGUgVW5pdENvbnRyb2wncyBzZXQgd2lkdGguICovXHJcblx0XHRmbGV4OiAwIDAgYXV0bztcclxuXHR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3Qgd3JhcHBlckhlaWdodCA9ICggc2l6ZT86ICdkZWZhdWx0JyB8ICdfX3Vuc3RhYmxlLWxhcmdlJyApID0+IHtcclxuXHRyZXR1cm4gY3NzYFxyXG5cdFx0aGVpZ2h0OiAkeyBzaXplID09PSAnX191bnN0YWJsZS1sYXJnZScgPyAnNDBweCcgOiAnMzBweCcgfTtcclxuXHRgO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xEcm9wZG93biA9IGNzc2BcclxuXHRiYWNrZ3JvdW5kOiAjZmZmO1xyXG5cclxuXHQmJiA+IGJ1dHRvbiB7XHJcblx0XHRhc3BlY3QtcmF0aW86IDE7XHJcblx0XHRwYWRkaW5nOiAwO1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0XHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHRcdCR7IHJ0bChcclxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAycHggMCAwIDJweGAgfSxcclxuXHRcdFx0eyBib3JkZXJSYWRpdXM6IGAwIDJweCAycHggMGAgfVxyXG5cdFx0KSgpIH1cclxuXHRcdGJvcmRlcjogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLnVpLmJvcmRlciB9O1xyXG5cclxuXHRcdCY6Zm9jdXMsXHJcblx0XHQmOmhvdmVyOm5vdCggOmRpc2FibGVkICkge1xyXG5cdFx0XHQkeyBmb2N1c0JveFNoYWRvdyB9XHJcblx0XHRcdGJvcmRlci1jb2xvcjogJHsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XHJcblx0XHRcdHotaW5kZXg6IDE7XHJcblx0XHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHRcdH1cclxuXHR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JCb3JkZXIgPSAoIGJvcmRlcj86IEJvcmRlciApID0+IHtcclxuXHRjb25zdCB7IGNvbG9yLCBzdHlsZSB9ID0gYm9yZGVyIHx8IHt9O1xyXG5cclxuXHRjb25zdCBmYWxsYmFja0NvbG9yID1cclxuXHRcdCEhIHN0eWxlICYmIHN0eWxlICE9PSAnbm9uZScgPyBDT0xPUlMuZ3JheVsgMzAwIF0gOiB1bmRlZmluZWQ7XHJcblxyXG5cdHJldHVybiBjc3NgXHJcblx0XHRib3JkZXItc3R5bGU6ICR7IHN0eWxlID09PSAnbm9uZScgPyAnc29saWQnIDogc3R5bGUgfTtcclxuXHRcdGJvcmRlci1jb2xvcjogJHsgY29sb3IgfHwgZmFsbGJhY2tDb2xvciB9O1xyXG5cdGA7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgY29sb3JJbmRpY2F0b3JXcmFwcGVyID0gKFxyXG5cdGJvcmRlcj86IEJvcmRlcixcclxuXHRzaXplPzogJ2RlZmF1bHQnIHwgJ19fdW5zdGFibGUtbGFyZ2UnXHJcbikgPT4ge1xyXG5cdGNvbnN0IHsgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcclxuXHJcblx0cmV0dXJuIGNzc2BcclxuXHRcdGJvcmRlci1yYWRpdXM6ICR7IENPTkZJRy5yYWRpdXNGdWxsIH07XHJcblx0XHRib3JkZXI6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuXHRcdCR7IHN0eWxlID8gY29sb3JJbmRpY2F0b3JCb3JkZXIoIGJvcmRlciApIDogdW5kZWZpbmVkIH1cclxuXHRcdHdpZHRoOiAkeyBzaXplID09PSAnX191bnN0YWJsZS1sYXJnZScgPyAnMjRweCcgOiAnMjJweCcgfTtcclxuXHRcdGhlaWdodDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzI0cHgnIDogJzIycHgnIH07XHJcblx0XHRwYWRkaW5nOiAkeyBzaXplID09PSAnX191bnN0YWJsZS1sYXJnZScgPyAnMnB4JyA6ICcxcHgnIH07XHJcblxyXG5cdFx0LypcclxuXHRcdCAqIENvbG9ySW5kaWNhdG9yXHJcblx0XHQgKlxyXG5cdFx0ICogVGhlIHRyYW5zcGFyZW50IGNvbG9ycyB1c2VkIGhlcmUgZW5zdXJlIHZpc2liaWxpdHkgb2YgdGhlIGluZGljYXRvclxyXG5cdFx0ICogb3ZlciB0aGUgYWN0aXZlIHN0YXRlIG9mIHRoZSBib3JkZXIgY29udHJvbCBkcm9wZG93bidzIHRvZ2dsZSBidXR0b24uXHJcblx0XHQgKi9cclxuXHRcdCYgPiBzcGFuIHtcclxuXHRcdFx0aGVpZ2h0OiAkeyBzcGFjZSggNCApIH07XHJcblx0XHRcdHdpZHRoOiAkeyBzcGFjZSggNCApIH07XHJcblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcclxuXHRcdFx0XHQtNDVkZWcsXHJcblx0XHRcdFx0dHJhbnNwYXJlbnQgNDglLFxyXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA0OCUsXHJcblx0XHRcdFx0cmdiKCAwIDAgMCAvIDIwJSApIDUyJSxcclxuXHRcdFx0XHR0cmFuc3BhcmVudCA1MiVcclxuXHRcdFx0KTtcclxuXHRcdH1cclxuXHRgO1xyXG59O1xyXG5cclxuLy8gTXVzdCBlcXVhbCAkY29sb3ItcGFsZXR0ZS1jaXJjbGUtc2l6ZSBmcm9tOlxyXG4vLyBAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2NpcmN1bGFyLW9wdGlvbi1waWNrZXIvc3R5bGUuc2Nzc1xyXG5jb25zdCBzd2F0Y2hTaXplID0gMjg7XHJcbmNvbnN0IHN3YXRjaEdhcCA9IDEyO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udHJvbHMgPSBjc3NgXHJcblx0d2lkdGg6ICR7IHN3YXRjaFNpemUgKiA2ICsgc3dhdGNoR2FwICogNSB9cHg7XHJcblxyXG5cdD4gZGl2OmZpcnN0LW9mLXR5cGUgPiAkeyBTdHlsZWRMYWJlbCB9IHtcclxuXHRcdG1hcmdpbi1ib3R0b206IDA7XHJcblx0fVxyXG5cclxuXHQmJiAkeyBTdHlsZWRMYWJlbCB9ICsgYnV0dG9uOm5vdCggLmhhcy10ZXh0ICkge1xyXG5cdFx0bWluLXdpZHRoOiAyNHB4O1xyXG5cdFx0cGFkZGluZzogMDtcclxuXHR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgYm9yZGVyQ29udHJvbFBvcG92ZXJDb250ZW50ID0gY3NzYGA7XHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb2xvckluZGljYXRvciA9IGNzc2BgO1xyXG5cclxuZXhwb3J0IGNvbnN0IHJlc2V0QnV0dG9uID0gY3NzYFxyXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cclxuXHQvKiBPdmVycmlkZSBidXR0b24gY29tcG9uZW50IHN0eWxpbmcgKi9cclxuXHQmJiB7XHJcblx0XHRib3JkZXItdG9wOiAkeyBDT05GSUcuYm9yZGVyV2lkdGggfSBzb2xpZCAkeyBDT0xPUlMuZ3JheVsgNDAwIF0gfTtcclxuXHRcdGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7XHJcblx0XHRib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcclxuXHRcdGhlaWdodDogNDBweDtcclxuXHR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgYm9yZGVyU2xpZGVyID0gKCkgPT4gY3NzYFxyXG5cdGZsZXg6IDEgMSA2MCU7XHJcblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiBzcGFjZSggMyApIH0gKSgpIH1cclxuYDtcclxuIl19 */");
};

// Must equal $color-palette-circle-size from:
// @wordpress/components/src/circular-option-picker/style.scss
const swatchSize = 28;
const swatchGap = 12;
export const borderControlPopoverControls = /*#__PURE__*/css("width:", swatchSize * 6 + swatchGap * 5, "px;>div:first-of-type>", StyledLabel, "{margin-bottom:0;}&& ", StyledLabel, "+button:not( .has-text ){min-width:24px;padding:0;}" + (process.env.NODE_ENV === "production" ? "" : ";label:borderControlPopoverControls;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFJK0MiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XHJcblxyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIENPTkZJRywgYm94U2l6aW5nUmVzZXQsIHJ0bCB9IGZyb20gJy4uL3V0aWxzJztcclxuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91dGlscy9zcGFjZSc7XHJcbmltcG9ydCB7IFN0eWxlZExhYmVsIH0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcclxuaW1wb3J0IHtcclxuXHRWYWx1ZUlucHV0IGFzIFVuaXRDb250cm9sV3JhcHBlcixcclxuXHRVbml0U2VsZWN0LFxyXG59IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XHJcblxyXG5pbXBvcnQgdHlwZSB7IEJvcmRlciB9IGZyb20gJy4vdHlwZXMnO1xyXG5cclxuY29uc3QgZm9jdXNCb3hTaGFkb3cgPSBjc3NgXHJcblx0Ym94LXNoYWRvdzogaW5zZXQgJHsgQ09ORklHLmNvbnRyb2xCb3hTaGFkb3dGb2N1cyB9O1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXHJcblx0Ym9yZGVyOiAwO1xyXG5cdHBhZGRpbmc6IDA7XHJcblx0bWFyZ2luOiAwO1xyXG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0ZmxleDogMSAxIDQwJTtcclxuXHR9XHJcblx0JiYgJHsgVW5pdFNlbGVjdCB9IHtcclxuXHRcdC8qIFByZXZlbnQgdW5pdCBzZWxlY3QgZm9yY2luZyBtaW4gaGVpZ2h0IGxhcmdlciB0aGFuIGl0cyBVbml0Q29udHJvbCAqL1xyXG5cdFx0bWluLWhlaWdodDogMDtcclxuXHR9XHJcbmA7XHJcblxyXG4vKlxyXG4gKiBUaGlzIHN0eWxlIGlzIG9ubHkgYXBwbGllZCB0byB0aGUgVW5pdENvbnRyb2wgd3JhcHBlciB3aGVuIHRoZSBib3JkZXIgd2lkdGhcclxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxyXG4gKiBSYW5nZUNvbnRyb2wgdG8gc2hhcmUgdGhlIGF2YWlsYWJsZSB3aWR0aCBpbiBhIDQwLzYwIHNwbGl0IHJlc3BlY3RpdmVseS5cclxuICovXHJcbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0LyogRm9yY2UgdGhlIFVuaXRDb250cm9sJ3Mgc2V0IHdpZHRoLiAqL1xyXG5cdFx0ZmxleDogMCAwIGF1dG87XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIHNpemU/OiAnZGVmYXVsdCcgfCAnX191bnN0YWJsZS1sYXJnZScgKSA9PiB7XHJcblx0cmV0dXJuIGNzc2BcclxuXHRcdGhlaWdodDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzQwcHgnIDogJzMwcHgnIH07XHJcblx0YDtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSBjc3NgXHJcblx0YmFja2dyb3VuZDogI2ZmZjtcclxuXHJcblx0JiYgPiBidXR0b24ge1xyXG5cdFx0YXNwZWN0LXJhdGlvOiAxO1xyXG5cdFx0cGFkZGluZzogMDtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0XHQkeyBydGwoXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMnB4IDAgMCAycHhgIH0sXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cclxuXHRcdCkoKSB9XHJcblx0XHRib3JkZXI6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy51aS5ib3JkZXIgfTtcclxuXHJcblx0XHQmOmZvY3VzLFxyXG5cdFx0Jjpob3Zlcjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxyXG5cdFx0XHRib3JkZXItY29sb3I6ICR7IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHR6LWluZGV4OiAxO1xyXG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0XHR9XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yQm9yZGVyID0gKCBib3JkZXI/OiBCb3JkZXIgKSA9PiB7XHJcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcclxuXHJcblx0Y29uc3QgZmFsbGJhY2tDb2xvciA9XHJcblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xyXG5cclxuXHRyZXR1cm4gY3NzYFxyXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XHJcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcclxuXHRgO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yV3JhcHBlciA9IChcclxuXHRib3JkZXI/OiBCb3JkZXIsXHJcblx0c2l6ZT86ICdkZWZhdWx0JyB8ICdfX3Vuc3RhYmxlLWxhcmdlJ1xyXG4pID0+IHtcclxuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XHJcblxyXG5cdHJldHVybiBjc3NgXHJcblx0XHRib3JkZXItcmFkaXVzOiAkeyBDT05GSUcucmFkaXVzRnVsbCB9O1xyXG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHQkeyBzdHlsZSA/IGNvbG9ySW5kaWNhdG9yQm9yZGVyKCBib3JkZXIgKSA6IHVuZGVmaW5lZCB9XHJcblx0XHR3aWR0aDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzI0cHgnIDogJzIycHgnIH07XHJcblx0XHRoZWlnaHQ6ICR7IHNpemUgPT09ICdfX3Vuc3RhYmxlLWxhcmdlJyA/ICcyNHB4JyA6ICcyMnB4JyB9O1xyXG5cdFx0cGFkZGluZzogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzJweCcgOiAnMXB4JyB9O1xyXG5cclxuXHRcdC8qXHJcblx0XHQgKiBDb2xvckluZGljYXRvclxyXG5cdFx0ICpcclxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3JcclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxyXG5cdFx0ICovXHJcblx0XHQmID4gc3BhbiB7XHJcblx0XHRcdGhlaWdodDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHR3aWR0aDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXHJcblx0XHRcdFx0LTQ1ZGVnLFxyXG5cdFx0XHRcdHRyYW5zcGFyZW50IDQ4JSxcclxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxyXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXHJcblx0XHRcdFx0dHJhbnNwYXJlbnQgNTIlXHJcblx0XHRcdCk7XHJcblx0XHR9XHJcblx0YDtcclxufTtcclxuXHJcbi8vIE11c3QgZXF1YWwgJGNvbG9yLXBhbGV0dGUtY2lyY2xlLXNpemUgZnJvbTpcclxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcclxuY29uc3Qgc3dhdGNoU2l6ZSA9IDI4O1xyXG5jb25zdCBzd2F0Y2hHYXAgPSAxMjtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRyb2xzID0gY3NzYFxyXG5cdHdpZHRoOiAkeyBzd2F0Y2hTaXplICogNiArIHN3YXRjaEdhcCAqIDUgfXB4O1xyXG5cclxuXHQ+IGRpdjpmaXJzdC1vZi10eXBlID4gJHsgU3R5bGVkTGFiZWwgfSB7XHJcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xyXG5cdH1cclxuXHJcblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcclxuXHRcdG1pbi13aWR0aDogMjRweDtcclxuXHRcdHBhZGRpbmc6IDA7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xyXG5leHBvcnQgY29uc3QgYm9yZGVyQ29sb3JJbmRpY2F0b3IgPSBjc3NgYDtcclxuXHJcbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2BcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHR3aWR0aDogMTAwJTtcclxuXHJcblx0LyogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBzdHlsaW5nICovXHJcblx0JiYge1xyXG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDQwMCBdIH07XHJcblx0XHRib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xyXG5cdFx0Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XHJcblx0XHRoZWlnaHQ6IDQwcHg7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2BcclxuXHRmbGV4OiAxIDEgNjAlO1xyXG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XHJcbmA7XHJcbiJdfQ== */");
export const borderControlPopoverContent = /*#__PURE__*/css(process.env.NODE_ENV === "production" ? "" : ";label:borderControlPopoverContent;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtKOEMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XHJcblxyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIENPTkZJRywgYm94U2l6aW5nUmVzZXQsIHJ0bCB9IGZyb20gJy4uL3V0aWxzJztcclxuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91dGlscy9zcGFjZSc7XHJcbmltcG9ydCB7IFN0eWxlZExhYmVsIH0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcclxuaW1wb3J0IHtcclxuXHRWYWx1ZUlucHV0IGFzIFVuaXRDb250cm9sV3JhcHBlcixcclxuXHRVbml0U2VsZWN0LFxyXG59IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XHJcblxyXG5pbXBvcnQgdHlwZSB7IEJvcmRlciB9IGZyb20gJy4vdHlwZXMnO1xyXG5cclxuY29uc3QgZm9jdXNCb3hTaGFkb3cgPSBjc3NgXHJcblx0Ym94LXNoYWRvdzogaW5zZXQgJHsgQ09ORklHLmNvbnRyb2xCb3hTaGFkb3dGb2N1cyB9O1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXHJcblx0Ym9yZGVyOiAwO1xyXG5cdHBhZGRpbmc6IDA7XHJcblx0bWFyZ2luOiAwO1xyXG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0ZmxleDogMSAxIDQwJTtcclxuXHR9XHJcblx0JiYgJHsgVW5pdFNlbGVjdCB9IHtcclxuXHRcdC8qIFByZXZlbnQgdW5pdCBzZWxlY3QgZm9yY2luZyBtaW4gaGVpZ2h0IGxhcmdlciB0aGFuIGl0cyBVbml0Q29udHJvbCAqL1xyXG5cdFx0bWluLWhlaWdodDogMDtcclxuXHR9XHJcbmA7XHJcblxyXG4vKlxyXG4gKiBUaGlzIHN0eWxlIGlzIG9ubHkgYXBwbGllZCB0byB0aGUgVW5pdENvbnRyb2wgd3JhcHBlciB3aGVuIHRoZSBib3JkZXIgd2lkdGhcclxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxyXG4gKiBSYW5nZUNvbnRyb2wgdG8gc2hhcmUgdGhlIGF2YWlsYWJsZSB3aWR0aCBpbiBhIDQwLzYwIHNwbGl0IHJlc3BlY3RpdmVseS5cclxuICovXHJcbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0LyogRm9yY2UgdGhlIFVuaXRDb250cm9sJ3Mgc2V0IHdpZHRoLiAqL1xyXG5cdFx0ZmxleDogMCAwIGF1dG87XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIHNpemU/OiAnZGVmYXVsdCcgfCAnX191bnN0YWJsZS1sYXJnZScgKSA9PiB7XHJcblx0cmV0dXJuIGNzc2BcclxuXHRcdGhlaWdodDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzQwcHgnIDogJzMwcHgnIH07XHJcblx0YDtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSBjc3NgXHJcblx0YmFja2dyb3VuZDogI2ZmZjtcclxuXHJcblx0JiYgPiBidXR0b24ge1xyXG5cdFx0YXNwZWN0LXJhdGlvOiAxO1xyXG5cdFx0cGFkZGluZzogMDtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0XHQkeyBydGwoXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMnB4IDAgMCAycHhgIH0sXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cclxuXHRcdCkoKSB9XHJcblx0XHRib3JkZXI6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy51aS5ib3JkZXIgfTtcclxuXHJcblx0XHQmOmZvY3VzLFxyXG5cdFx0Jjpob3Zlcjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxyXG5cdFx0XHRib3JkZXItY29sb3I6ICR7IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHR6LWluZGV4OiAxO1xyXG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0XHR9XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yQm9yZGVyID0gKCBib3JkZXI/OiBCb3JkZXIgKSA9PiB7XHJcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcclxuXHJcblx0Y29uc3QgZmFsbGJhY2tDb2xvciA9XHJcblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xyXG5cclxuXHRyZXR1cm4gY3NzYFxyXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XHJcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcclxuXHRgO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yV3JhcHBlciA9IChcclxuXHRib3JkZXI/OiBCb3JkZXIsXHJcblx0c2l6ZT86ICdkZWZhdWx0JyB8ICdfX3Vuc3RhYmxlLWxhcmdlJ1xyXG4pID0+IHtcclxuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XHJcblxyXG5cdHJldHVybiBjc3NgXHJcblx0XHRib3JkZXItcmFkaXVzOiAkeyBDT05GSUcucmFkaXVzRnVsbCB9O1xyXG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHQkeyBzdHlsZSA/IGNvbG9ySW5kaWNhdG9yQm9yZGVyKCBib3JkZXIgKSA6IHVuZGVmaW5lZCB9XHJcblx0XHR3aWR0aDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzI0cHgnIDogJzIycHgnIH07XHJcblx0XHRoZWlnaHQ6ICR7IHNpemUgPT09ICdfX3Vuc3RhYmxlLWxhcmdlJyA/ICcyNHB4JyA6ICcyMnB4JyB9O1xyXG5cdFx0cGFkZGluZzogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzJweCcgOiAnMXB4JyB9O1xyXG5cclxuXHRcdC8qXHJcblx0XHQgKiBDb2xvckluZGljYXRvclxyXG5cdFx0ICpcclxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3JcclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxyXG5cdFx0ICovXHJcblx0XHQmID4gc3BhbiB7XHJcblx0XHRcdGhlaWdodDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHR3aWR0aDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXHJcblx0XHRcdFx0LTQ1ZGVnLFxyXG5cdFx0XHRcdHRyYW5zcGFyZW50IDQ4JSxcclxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxyXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXHJcblx0XHRcdFx0dHJhbnNwYXJlbnQgNTIlXHJcblx0XHRcdCk7XHJcblx0XHR9XHJcblx0YDtcclxufTtcclxuXHJcbi8vIE11c3QgZXF1YWwgJGNvbG9yLXBhbGV0dGUtY2lyY2xlLXNpemUgZnJvbTpcclxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcclxuY29uc3Qgc3dhdGNoU2l6ZSA9IDI4O1xyXG5jb25zdCBzd2F0Y2hHYXAgPSAxMjtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRyb2xzID0gY3NzYFxyXG5cdHdpZHRoOiAkeyBzd2F0Y2hTaXplICogNiArIHN3YXRjaEdhcCAqIDUgfXB4O1xyXG5cclxuXHQ+IGRpdjpmaXJzdC1vZi10eXBlID4gJHsgU3R5bGVkTGFiZWwgfSB7XHJcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xyXG5cdH1cclxuXHJcblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcclxuXHRcdG1pbi13aWR0aDogMjRweDtcclxuXHRcdHBhZGRpbmc6IDA7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xyXG5leHBvcnQgY29uc3QgYm9yZGVyQ29sb3JJbmRpY2F0b3IgPSBjc3NgYDtcclxuXHJcbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2BcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHR3aWR0aDogMTAwJTtcclxuXHJcblx0LyogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBzdHlsaW5nICovXHJcblx0JiYge1xyXG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDQwMCBdIH07XHJcblx0XHRib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xyXG5cdFx0Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XHJcblx0XHRoZWlnaHQ6IDQwcHg7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2BcclxuXHRmbGV4OiAxIDEgNjAlO1xyXG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XHJcbmA7XHJcbiJdfQ== */");
export const borderColorIndicator = /*#__PURE__*/css(process.env.NODE_ENV === "production" ? "" : ";label:borderColorIndicator;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1KdUMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XHJcblxyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIENPTkZJRywgYm94U2l6aW5nUmVzZXQsIHJ0bCB9IGZyb20gJy4uL3V0aWxzJztcclxuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91dGlscy9zcGFjZSc7XHJcbmltcG9ydCB7IFN0eWxlZExhYmVsIH0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcclxuaW1wb3J0IHtcclxuXHRWYWx1ZUlucHV0IGFzIFVuaXRDb250cm9sV3JhcHBlcixcclxuXHRVbml0U2VsZWN0LFxyXG59IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XHJcblxyXG5pbXBvcnQgdHlwZSB7IEJvcmRlciB9IGZyb20gJy4vdHlwZXMnO1xyXG5cclxuY29uc3QgZm9jdXNCb3hTaGFkb3cgPSBjc3NgXHJcblx0Ym94LXNoYWRvdzogaW5zZXQgJHsgQ09ORklHLmNvbnRyb2xCb3hTaGFkb3dGb2N1cyB9O1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXHJcblx0Ym9yZGVyOiAwO1xyXG5cdHBhZGRpbmc6IDA7XHJcblx0bWFyZ2luOiAwO1xyXG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0ZmxleDogMSAxIDQwJTtcclxuXHR9XHJcblx0JiYgJHsgVW5pdFNlbGVjdCB9IHtcclxuXHRcdC8qIFByZXZlbnQgdW5pdCBzZWxlY3QgZm9yY2luZyBtaW4gaGVpZ2h0IGxhcmdlciB0aGFuIGl0cyBVbml0Q29udHJvbCAqL1xyXG5cdFx0bWluLWhlaWdodDogMDtcclxuXHR9XHJcbmA7XHJcblxyXG4vKlxyXG4gKiBUaGlzIHN0eWxlIGlzIG9ubHkgYXBwbGllZCB0byB0aGUgVW5pdENvbnRyb2wgd3JhcHBlciB3aGVuIHRoZSBib3JkZXIgd2lkdGhcclxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxyXG4gKiBSYW5nZUNvbnRyb2wgdG8gc2hhcmUgdGhlIGF2YWlsYWJsZSB3aWR0aCBpbiBhIDQwLzYwIHNwbGl0IHJlc3BlY3RpdmVseS5cclxuICovXHJcbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0LyogRm9yY2UgdGhlIFVuaXRDb250cm9sJ3Mgc2V0IHdpZHRoLiAqL1xyXG5cdFx0ZmxleDogMCAwIGF1dG87XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIHNpemU/OiAnZGVmYXVsdCcgfCAnX191bnN0YWJsZS1sYXJnZScgKSA9PiB7XHJcblx0cmV0dXJuIGNzc2BcclxuXHRcdGhlaWdodDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzQwcHgnIDogJzMwcHgnIH07XHJcblx0YDtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSBjc3NgXHJcblx0YmFja2dyb3VuZDogI2ZmZjtcclxuXHJcblx0JiYgPiBidXR0b24ge1xyXG5cdFx0YXNwZWN0LXJhdGlvOiAxO1xyXG5cdFx0cGFkZGluZzogMDtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0XHQkeyBydGwoXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMnB4IDAgMCAycHhgIH0sXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cclxuXHRcdCkoKSB9XHJcblx0XHRib3JkZXI6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy51aS5ib3JkZXIgfTtcclxuXHJcblx0XHQmOmZvY3VzLFxyXG5cdFx0Jjpob3Zlcjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxyXG5cdFx0XHRib3JkZXItY29sb3I6ICR7IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHR6LWluZGV4OiAxO1xyXG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0XHR9XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yQm9yZGVyID0gKCBib3JkZXI/OiBCb3JkZXIgKSA9PiB7XHJcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcclxuXHJcblx0Y29uc3QgZmFsbGJhY2tDb2xvciA9XHJcblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xyXG5cclxuXHRyZXR1cm4gY3NzYFxyXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XHJcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcclxuXHRgO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yV3JhcHBlciA9IChcclxuXHRib3JkZXI/OiBCb3JkZXIsXHJcblx0c2l6ZT86ICdkZWZhdWx0JyB8ICdfX3Vuc3RhYmxlLWxhcmdlJ1xyXG4pID0+IHtcclxuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XHJcblxyXG5cdHJldHVybiBjc3NgXHJcblx0XHRib3JkZXItcmFkaXVzOiAkeyBDT05GSUcucmFkaXVzRnVsbCB9O1xyXG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHQkeyBzdHlsZSA/IGNvbG9ySW5kaWNhdG9yQm9yZGVyKCBib3JkZXIgKSA6IHVuZGVmaW5lZCB9XHJcblx0XHR3aWR0aDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzI0cHgnIDogJzIycHgnIH07XHJcblx0XHRoZWlnaHQ6ICR7IHNpemUgPT09ICdfX3Vuc3RhYmxlLWxhcmdlJyA/ICcyNHB4JyA6ICcyMnB4JyB9O1xyXG5cdFx0cGFkZGluZzogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzJweCcgOiAnMXB4JyB9O1xyXG5cclxuXHRcdC8qXHJcblx0XHQgKiBDb2xvckluZGljYXRvclxyXG5cdFx0ICpcclxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3JcclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxyXG5cdFx0ICovXHJcblx0XHQmID4gc3BhbiB7XHJcblx0XHRcdGhlaWdodDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHR3aWR0aDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXHJcblx0XHRcdFx0LTQ1ZGVnLFxyXG5cdFx0XHRcdHRyYW5zcGFyZW50IDQ4JSxcclxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxyXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXHJcblx0XHRcdFx0dHJhbnNwYXJlbnQgNTIlXHJcblx0XHRcdCk7XHJcblx0XHR9XHJcblx0YDtcclxufTtcclxuXHJcbi8vIE11c3QgZXF1YWwgJGNvbG9yLXBhbGV0dGUtY2lyY2xlLXNpemUgZnJvbTpcclxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcclxuY29uc3Qgc3dhdGNoU2l6ZSA9IDI4O1xyXG5jb25zdCBzd2F0Y2hHYXAgPSAxMjtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRyb2xzID0gY3NzYFxyXG5cdHdpZHRoOiAkeyBzd2F0Y2hTaXplICogNiArIHN3YXRjaEdhcCAqIDUgfXB4O1xyXG5cclxuXHQ+IGRpdjpmaXJzdC1vZi10eXBlID4gJHsgU3R5bGVkTGFiZWwgfSB7XHJcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xyXG5cdH1cclxuXHJcblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcclxuXHRcdG1pbi13aWR0aDogMjRweDtcclxuXHRcdHBhZGRpbmc6IDA7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xyXG5leHBvcnQgY29uc3QgYm9yZGVyQ29sb3JJbmRpY2F0b3IgPSBjc3NgYDtcclxuXHJcbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2BcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHR3aWR0aDogMTAwJTtcclxuXHJcblx0LyogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBzdHlsaW5nICovXHJcblx0JiYge1xyXG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDQwMCBdIH07XHJcblx0XHRib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xyXG5cdFx0Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XHJcblx0XHRoZWlnaHQ6IDQwcHg7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2BcclxuXHRmbGV4OiAxIDEgNjAlO1xyXG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XHJcbmA7XHJcbiJdfQ== */");
export const resetButton = /*#__PURE__*/css("justify-content:center;width:100%;&&{border-top:", CONFIG.borderWidth, " solid ", COLORS.gray[400], ";border-top-left-radius:0;border-top-right-radius:0;height:40px;}" + (process.env.NODE_ENV === "production" ? "" : ";label:resetButton;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFKOEIiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XHJcblxyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIENPTkZJRywgYm94U2l6aW5nUmVzZXQsIHJ0bCB9IGZyb20gJy4uL3V0aWxzJztcclxuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91dGlscy9zcGFjZSc7XHJcbmltcG9ydCB7IFN0eWxlZExhYmVsIH0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcclxuaW1wb3J0IHtcclxuXHRWYWx1ZUlucHV0IGFzIFVuaXRDb250cm9sV3JhcHBlcixcclxuXHRVbml0U2VsZWN0LFxyXG59IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XHJcblxyXG5pbXBvcnQgdHlwZSB7IEJvcmRlciB9IGZyb20gJy4vdHlwZXMnO1xyXG5cclxuY29uc3QgZm9jdXNCb3hTaGFkb3cgPSBjc3NgXHJcblx0Ym94LXNoYWRvdzogaW5zZXQgJHsgQ09ORklHLmNvbnRyb2xCb3hTaGFkb3dGb2N1cyB9O1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXHJcblx0Ym9yZGVyOiAwO1xyXG5cdHBhZGRpbmc6IDA7XHJcblx0bWFyZ2luOiAwO1xyXG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0ZmxleDogMSAxIDQwJTtcclxuXHR9XHJcblx0JiYgJHsgVW5pdFNlbGVjdCB9IHtcclxuXHRcdC8qIFByZXZlbnQgdW5pdCBzZWxlY3QgZm9yY2luZyBtaW4gaGVpZ2h0IGxhcmdlciB0aGFuIGl0cyBVbml0Q29udHJvbCAqL1xyXG5cdFx0bWluLWhlaWdodDogMDtcclxuXHR9XHJcbmA7XHJcblxyXG4vKlxyXG4gKiBUaGlzIHN0eWxlIGlzIG9ubHkgYXBwbGllZCB0byB0aGUgVW5pdENvbnRyb2wgd3JhcHBlciB3aGVuIHRoZSBib3JkZXIgd2lkdGhcclxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxyXG4gKiBSYW5nZUNvbnRyb2wgdG8gc2hhcmUgdGhlIGF2YWlsYWJsZSB3aWR0aCBpbiBhIDQwLzYwIHNwbGl0IHJlc3BlY3RpdmVseS5cclxuICovXHJcbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0LyogRm9yY2UgdGhlIFVuaXRDb250cm9sJ3Mgc2V0IHdpZHRoLiAqL1xyXG5cdFx0ZmxleDogMCAwIGF1dG87XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIHNpemU/OiAnZGVmYXVsdCcgfCAnX191bnN0YWJsZS1sYXJnZScgKSA9PiB7XHJcblx0cmV0dXJuIGNzc2BcclxuXHRcdGhlaWdodDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzQwcHgnIDogJzMwcHgnIH07XHJcblx0YDtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSBjc3NgXHJcblx0YmFja2dyb3VuZDogI2ZmZjtcclxuXHJcblx0JiYgPiBidXR0b24ge1xyXG5cdFx0YXNwZWN0LXJhdGlvOiAxO1xyXG5cdFx0cGFkZGluZzogMDtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0XHQkeyBydGwoXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMnB4IDAgMCAycHhgIH0sXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cclxuXHRcdCkoKSB9XHJcblx0XHRib3JkZXI6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy51aS5ib3JkZXIgfTtcclxuXHJcblx0XHQmOmZvY3VzLFxyXG5cdFx0Jjpob3Zlcjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxyXG5cdFx0XHRib3JkZXItY29sb3I6ICR7IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHR6LWluZGV4OiAxO1xyXG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0XHR9XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yQm9yZGVyID0gKCBib3JkZXI/OiBCb3JkZXIgKSA9PiB7XHJcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcclxuXHJcblx0Y29uc3QgZmFsbGJhY2tDb2xvciA9XHJcblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xyXG5cclxuXHRyZXR1cm4gY3NzYFxyXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XHJcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcclxuXHRgO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yV3JhcHBlciA9IChcclxuXHRib3JkZXI/OiBCb3JkZXIsXHJcblx0c2l6ZT86ICdkZWZhdWx0JyB8ICdfX3Vuc3RhYmxlLWxhcmdlJ1xyXG4pID0+IHtcclxuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XHJcblxyXG5cdHJldHVybiBjc3NgXHJcblx0XHRib3JkZXItcmFkaXVzOiAkeyBDT05GSUcucmFkaXVzRnVsbCB9O1xyXG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHQkeyBzdHlsZSA/IGNvbG9ySW5kaWNhdG9yQm9yZGVyKCBib3JkZXIgKSA6IHVuZGVmaW5lZCB9XHJcblx0XHR3aWR0aDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzI0cHgnIDogJzIycHgnIH07XHJcblx0XHRoZWlnaHQ6ICR7IHNpemUgPT09ICdfX3Vuc3RhYmxlLWxhcmdlJyA/ICcyNHB4JyA6ICcyMnB4JyB9O1xyXG5cdFx0cGFkZGluZzogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzJweCcgOiAnMXB4JyB9O1xyXG5cclxuXHRcdC8qXHJcblx0XHQgKiBDb2xvckluZGljYXRvclxyXG5cdFx0ICpcclxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3JcclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxyXG5cdFx0ICovXHJcblx0XHQmID4gc3BhbiB7XHJcblx0XHRcdGhlaWdodDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHR3aWR0aDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXHJcblx0XHRcdFx0LTQ1ZGVnLFxyXG5cdFx0XHRcdHRyYW5zcGFyZW50IDQ4JSxcclxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxyXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXHJcblx0XHRcdFx0dHJhbnNwYXJlbnQgNTIlXHJcblx0XHRcdCk7XHJcblx0XHR9XHJcblx0YDtcclxufTtcclxuXHJcbi8vIE11c3QgZXF1YWwgJGNvbG9yLXBhbGV0dGUtY2lyY2xlLXNpemUgZnJvbTpcclxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcclxuY29uc3Qgc3dhdGNoU2l6ZSA9IDI4O1xyXG5jb25zdCBzd2F0Y2hHYXAgPSAxMjtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRyb2xzID0gY3NzYFxyXG5cdHdpZHRoOiAkeyBzd2F0Y2hTaXplICogNiArIHN3YXRjaEdhcCAqIDUgfXB4O1xyXG5cclxuXHQ+IGRpdjpmaXJzdC1vZi10eXBlID4gJHsgU3R5bGVkTGFiZWwgfSB7XHJcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xyXG5cdH1cclxuXHJcblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcclxuXHRcdG1pbi13aWR0aDogMjRweDtcclxuXHRcdHBhZGRpbmc6IDA7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xyXG5leHBvcnQgY29uc3QgYm9yZGVyQ29sb3JJbmRpY2F0b3IgPSBjc3NgYDtcclxuXHJcbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2BcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHR3aWR0aDogMTAwJTtcclxuXHJcblx0LyogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBzdHlsaW5nICovXHJcblx0JiYge1xyXG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDQwMCBdIH07XHJcblx0XHRib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xyXG5cdFx0Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XHJcblx0XHRoZWlnaHQ6IDQwcHg7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2BcclxuXHRmbGV4OiAxIDEgNjAlO1xyXG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XHJcbmA7XHJcbiJdfQ== */");
export const borderSlider = () => /*#__PURE__*/css("flex:1 1 60%;", rtl({
  marginRight: space(3)
})(), ";" + (process.env.NODE_ENV === "production" ? "" : ";label:borderSlider;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvYm9yZGVyLWNvbnRyb2wvc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtLcUMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9ib3JkZXItY29udHJvbC9zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XHJcblxyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIENPTkZJRywgYm94U2l6aW5nUmVzZXQsIHJ0bCB9IGZyb20gJy4uL3V0aWxzJztcclxuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi91dGlscy9zcGFjZSc7XHJcbmltcG9ydCB7IFN0eWxlZExhYmVsIH0gZnJvbSAnLi4vYmFzZS1jb250cm9sL3N0eWxlcy9iYXNlLWNvbnRyb2wtc3R5bGVzJztcclxuaW1wb3J0IHtcclxuXHRWYWx1ZUlucHV0IGFzIFVuaXRDb250cm9sV3JhcHBlcixcclxuXHRVbml0U2VsZWN0LFxyXG59IGZyb20gJy4uL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcyc7XHJcblxyXG5pbXBvcnQgdHlwZSB7IEJvcmRlciB9IGZyb20gJy4vdHlwZXMnO1xyXG5cclxuY29uc3QgZm9jdXNCb3hTaGFkb3cgPSBjc3NgXHJcblx0Ym94LXNoYWRvdzogaW5zZXQgJHsgQ09ORklHLmNvbnRyb2xCb3hTaGFkb3dGb2N1cyB9O1xyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2wgPSBjc3NgXHJcblx0Ym9yZGVyOiAwO1xyXG5cdHBhZGRpbmc6IDA7XHJcblx0bWFyZ2luOiAwO1xyXG5cdCR7IGJveFNpemluZ1Jlc2V0IH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBpbm5lcldyYXBwZXIgPSAoKSA9PiBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0ZmxleDogMSAxIDQwJTtcclxuXHR9XHJcblx0JiYgJHsgVW5pdFNlbGVjdCB9IHtcclxuXHRcdC8qIFByZXZlbnQgdW5pdCBzZWxlY3QgZm9yY2luZyBtaW4gaGVpZ2h0IGxhcmdlciB0aGFuIGl0cyBVbml0Q29udHJvbCAqL1xyXG5cdFx0bWluLWhlaWdodDogMDtcclxuXHR9XHJcbmA7XHJcblxyXG4vKlxyXG4gKiBUaGlzIHN0eWxlIGlzIG9ubHkgYXBwbGllZCB0byB0aGUgVW5pdENvbnRyb2wgd3JhcHBlciB3aGVuIHRoZSBib3JkZXIgd2lkdGhcclxuICogZmllbGQgc2hvdWxkIGJlIGEgc2V0IHdpZHRoLiBPbWl0dGluZyB0aGlzIGFsbG93cyB0aGUgVW5pdENvbnRyb2wgJlxyXG4gKiBSYW5nZUNvbnRyb2wgdG8gc2hhcmUgdGhlIGF2YWlsYWJsZSB3aWR0aCBpbiBhIDQwLzYwIHNwbGl0IHJlc3BlY3RpdmVseS5cclxuICovXHJcbmV4cG9ydCBjb25zdCB3cmFwcGVyV2lkdGggPSBjc3NgXHJcblx0JHsgVW5pdENvbnRyb2xXcmFwcGVyIH0ge1xyXG5cdFx0LyogRm9yY2UgdGhlIFVuaXRDb250cm9sJ3Mgc2V0IHdpZHRoLiAqL1xyXG5cdFx0ZmxleDogMCAwIGF1dG87XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IHdyYXBwZXJIZWlnaHQgPSAoIHNpemU/OiAnZGVmYXVsdCcgfCAnX191bnN0YWJsZS1sYXJnZScgKSA9PiB7XHJcblx0cmV0dXJuIGNzc2BcclxuXHRcdGhlaWdodDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzQwcHgnIDogJzMwcHgnIH07XHJcblx0YDtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sRHJvcGRvd24gPSBjc3NgXHJcblx0YmFja2dyb3VuZDogI2ZmZjtcclxuXHJcblx0JiYgPiBidXR0b24ge1xyXG5cdFx0YXNwZWN0LXJhdGlvOiAxO1xyXG5cdFx0cGFkZGluZzogMDtcclxuXHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0XHQkeyBydGwoXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMnB4IDAgMCAycHhgIH0sXHJcblx0XHRcdHsgYm9yZGVyUmFkaXVzOiBgMCAycHggMnB4IDBgIH1cclxuXHRcdCkoKSB9XHJcblx0XHRib3JkZXI6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkICR7IENPTE9SUy51aS5ib3JkZXIgfTtcclxuXHJcblx0XHQmOmZvY3VzLFxyXG5cdFx0Jjpob3Zlcjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0JHsgZm9jdXNCb3hTaGFkb3cgfVxyXG5cdFx0XHRib3JkZXItY29sb3I6ICR7IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHR6LWluZGV4OiAxO1xyXG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0XHR9XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yQm9yZGVyID0gKCBib3JkZXI/OiBCb3JkZXIgKSA9PiB7XHJcblx0Y29uc3QgeyBjb2xvciwgc3R5bGUgfSA9IGJvcmRlciB8fCB7fTtcclxuXHJcblx0Y29uc3QgZmFsbGJhY2tDb2xvciA9XHJcblx0XHQhISBzdHlsZSAmJiBzdHlsZSAhPT0gJ25vbmUnID8gQ09MT1JTLmdyYXlbIDMwMCBdIDogdW5kZWZpbmVkO1xyXG5cclxuXHRyZXR1cm4gY3NzYFxyXG5cdFx0Ym9yZGVyLXN0eWxlOiAkeyBzdHlsZSA9PT0gJ25vbmUnID8gJ3NvbGlkJyA6IHN0eWxlIH07XHJcblx0XHRib3JkZXItY29sb3I6ICR7IGNvbG9yIHx8IGZhbGxiYWNrQ29sb3IgfTtcclxuXHRgO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbG9ySW5kaWNhdG9yV3JhcHBlciA9IChcclxuXHRib3JkZXI/OiBCb3JkZXIsXHJcblx0c2l6ZT86ICdkZWZhdWx0JyB8ICdfX3Vuc3RhYmxlLWxhcmdlJ1xyXG4pID0+IHtcclxuXHRjb25zdCB7IHN0eWxlIH0gPSBib3JkZXIgfHwge307XHJcblxyXG5cdHJldHVybiBjc3NgXHJcblx0XHRib3JkZXItcmFkaXVzOiAkeyBDT05GSUcucmFkaXVzRnVsbCB9O1xyXG5cdFx0Ym9yZGVyOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHQkeyBzdHlsZSA/IGNvbG9ySW5kaWNhdG9yQm9yZGVyKCBib3JkZXIgKSA6IHVuZGVmaW5lZCB9XHJcblx0XHR3aWR0aDogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzI0cHgnIDogJzIycHgnIH07XHJcblx0XHRoZWlnaHQ6ICR7IHNpemUgPT09ICdfX3Vuc3RhYmxlLWxhcmdlJyA/ICcyNHB4JyA6ICcyMnB4JyB9O1xyXG5cdFx0cGFkZGluZzogJHsgc2l6ZSA9PT0gJ19fdW5zdGFibGUtbGFyZ2UnID8gJzJweCcgOiAnMXB4JyB9O1xyXG5cclxuXHRcdC8qXHJcblx0XHQgKiBDb2xvckluZGljYXRvclxyXG5cdFx0ICpcclxuXHRcdCAqIFRoZSB0cmFuc3BhcmVudCBjb2xvcnMgdXNlZCBoZXJlIGVuc3VyZSB2aXNpYmlsaXR5IG9mIHRoZSBpbmRpY2F0b3JcclxuXHRcdCAqIG92ZXIgdGhlIGFjdGl2ZSBzdGF0ZSBvZiB0aGUgYm9yZGVyIGNvbnRyb2wgZHJvcGRvd24ncyB0b2dnbGUgYnV0dG9uLlxyXG5cdFx0ICovXHJcblx0XHQmID4gc3BhbiB7XHJcblx0XHRcdGhlaWdodDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHR3aWR0aDogJHsgc3BhY2UoIDQgKSB9O1xyXG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXHJcblx0XHRcdFx0LTQ1ZGVnLFxyXG5cdFx0XHRcdHRyYW5zcGFyZW50IDQ4JSxcclxuXHRcdFx0XHRyZ2IoIDAgMCAwIC8gMjAlICkgNDglLFxyXG5cdFx0XHRcdHJnYiggMCAwIDAgLyAyMCUgKSA1MiUsXHJcblx0XHRcdFx0dHJhbnNwYXJlbnQgNTIlXHJcblx0XHRcdCk7XHJcblx0XHR9XHJcblx0YDtcclxufTtcclxuXHJcbi8vIE11c3QgZXF1YWwgJGNvbG9yLXBhbGV0dGUtY2lyY2xlLXNpemUgZnJvbTpcclxuLy8gQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9jaXJjdWxhci1vcHRpb24tcGlja2VyL3N0eWxlLnNjc3NcclxuY29uc3Qgc3dhdGNoU2l6ZSA9IDI4O1xyXG5jb25zdCBzd2F0Y2hHYXAgPSAxMjtcclxuXHJcbmV4cG9ydCBjb25zdCBib3JkZXJDb250cm9sUG9wb3ZlckNvbnRyb2xzID0gY3NzYFxyXG5cdHdpZHRoOiAkeyBzd2F0Y2hTaXplICogNiArIHN3YXRjaEdhcCAqIDUgfXB4O1xyXG5cclxuXHQ+IGRpdjpmaXJzdC1vZi10eXBlID4gJHsgU3R5bGVkTGFiZWwgfSB7XHJcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xyXG5cdH1cclxuXHJcblx0JiYgJHsgU3R5bGVkTGFiZWwgfSArIGJ1dHRvbjpub3QoIC5oYXMtdGV4dCApIHtcclxuXHRcdG1pbi13aWR0aDogMjRweDtcclxuXHRcdHBhZGRpbmc6IDA7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlckNvbnRyb2xQb3BvdmVyQ29udGVudCA9IGNzc2BgO1xyXG5leHBvcnQgY29uc3QgYm9yZGVyQ29sb3JJbmRpY2F0b3IgPSBjc3NgYDtcclxuXHJcbmV4cG9ydCBjb25zdCByZXNldEJ1dHRvbiA9IGNzc2BcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHR3aWR0aDogMTAwJTtcclxuXHJcblx0LyogT3ZlcnJpZGUgYnV0dG9uIGNvbXBvbmVudCBzdHlsaW5nICovXHJcblx0JiYge1xyXG5cdFx0Ym9yZGVyLXRvcDogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgJHsgQ09MT1JTLmdyYXlbIDQwMCBdIH07XHJcblx0XHRib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xyXG5cdFx0Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDA7XHJcblx0XHRoZWlnaHQ6IDQwcHg7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJvcmRlclNsaWRlciA9ICgpID0+IGNzc2BcclxuXHRmbGV4OiAxIDEgNjAlO1xyXG5cdCR7IHJ0bCggeyBtYXJnaW5SaWdodDogc3BhY2UoIDMgKSB9ICkoKSB9XHJcbmA7XHJcbiJdfQ== */");
//# sourceMappingURL=styles.js.map