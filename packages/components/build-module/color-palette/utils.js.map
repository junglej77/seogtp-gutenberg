{"version":3,"names":["colord","extend","namesPlugin","a11yPlugin","__","isSimpleCSSColor","value","valueIsCssVariable","test","valueIsColorMix","extractColorNameFromCurrentValue","currentValue","colors","showMultiplePalettes","currentValueIsSimpleColor","normalizedCurrentValue","toHex","colorPalettes","paletteColors","name","colorName","color","colorValue","normalizedColorValue","isMultiplePaletteObject","obj","Array","isArray","isMultiplePaletteArray","arr","length","every","colorObj","normalizeColorValue","element","ownerDocument","defaultView","computedBackgroundColor","getComputedStyle","backgroundColor"],"sources":["@wordpress/components/src/color-palette/utils.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport { colord, extend } from 'colord';\r\nimport namesPlugin from 'colord/plugins/names';\r\nimport a11yPlugin from 'colord/plugins/a11y';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport type { ColorObject, ColorPaletteProps, PaletteObject } from './types';\r\n\r\nextend( [ namesPlugin, a11yPlugin ] );\r\n\r\n/**\r\n * Checks if a color value is a simple CSS color.\r\n *\r\n * @param value The color value to check.\r\n * @return A boolean indicating whether the color value is a simple CSS color.\r\n */\r\nconst isSimpleCSSColor = ( value: string ): boolean => {\r\n\tconst valueIsCssVariable = /var\\(/.test( value ?? '' );\r\n\tconst valueIsColorMix = /color-mix\\(/.test( value ?? '' );\r\n\treturn ! valueIsCssVariable && ! valueIsColorMix;\r\n};\r\n\r\nexport const extractColorNameFromCurrentValue = (\r\n\tcurrentValue?: ColorPaletteProps[ 'value' ],\r\n\tcolors: ColorPaletteProps[ 'colors' ] = [],\r\n\tshowMultiplePalettes: boolean = false\r\n) => {\r\n\tif ( ! currentValue ) {\r\n\t\treturn '';\r\n\t}\r\n\tconst currentValueIsSimpleColor = currentValue\r\n\t\t? isSimpleCSSColor( currentValue )\r\n\t\t: false;\r\n\tconst normalizedCurrentValue = currentValueIsSimpleColor\r\n\t\t? colord( currentValue ).toHex()\r\n\t\t: currentValue;\r\n\r\n\t// Normalize format of `colors` to simplify the following loop\r\n\ttype normalizedPaletteObject = { colors: ColorObject[] };\r\n\tconst colorPalettes: normalizedPaletteObject[] = showMultiplePalettes\r\n\t\t? ( colors as PaletteObject[] )\r\n\t\t: [ { colors: colors as ColorObject[] } ];\r\n\tfor ( const { colors: paletteColors } of colorPalettes ) {\r\n\t\tfor ( const { name: colorName, color: colorValue } of paletteColors ) {\r\n\t\t\tconst normalizedColorValue = currentValueIsSimpleColor\r\n\t\t\t\t? colord( colorValue ).toHex()\r\n\t\t\t\t: colorValue;\r\n\r\n\t\t\tif ( normalizedCurrentValue === normalizedColorValue ) {\r\n\t\t\t\treturn colorName;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// translators: shown when the user has picked a custom color (i.e not in the palette of colors).\r\n\treturn __( 'Custom' );\r\n};\r\n\r\n// The PaletteObject type has a `colors` property (an array of ColorObject),\r\n// while the ColorObject type has a `color` property (the CSS color value).\r\nexport const isMultiplePaletteObject = (\r\n\tobj: PaletteObject | ColorObject\r\n): obj is PaletteObject =>\r\n\tArray.isArray( ( obj as PaletteObject ).colors ) && ! ( 'color' in obj );\r\n\r\nexport const isMultiplePaletteArray = (\r\n\tarr: ( PaletteObject | ColorObject )[]\r\n): arr is PaletteObject[] => {\r\n\treturn (\r\n\t\tarr.length > 0 &&\r\n\t\tarr.every( ( colorObj ) => isMultiplePaletteObject( colorObj ) )\r\n\t);\r\n};\r\n\r\n/**\r\n * Transform a CSS variable used as background color into the color value itself.\r\n *\r\n * @param value   The color value that may be a CSS variable.\r\n * @param element The element for which to get the computed style.\r\n * @return The background color value computed from a element.\r\n */\r\nexport const normalizeColorValue = (\r\n\tvalue: string | undefined,\r\n\telement: HTMLElement | null\r\n) => {\r\n\tif ( ! value || ! element || isSimpleCSSColor( value ) ) {\r\n\t\treturn value;\r\n\t}\r\n\r\n\tconst { ownerDocument } = element;\r\n\tconst { defaultView } = ownerDocument;\r\n\tconst computedBackgroundColor =\r\n\t\tdefaultView?.getComputedStyle( element ).backgroundColor;\r\n\r\n\treturn computedBackgroundColor\r\n\t\t? colord( computedBackgroundColor ).toHex()\r\n\t\t: value;\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,MAAM,EAAEC,MAAM,QAAQ,QAAQ;AACvC,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,UAAU,MAAM,qBAAqB;;AAE5C;AACA;AACA;AACA,SAASC,EAAE,QAAQ,iBAAiB;;AAEpC;AACA;AACA;;AAGAH,MAAM,CAAE,CAAEC,WAAW,EAAEC,UAAU,CAAG,CAAC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,gBAAgB,GAAKC,KAAa,IAAe;EACtD,MAAMC,kBAAkB,GAAG,OAAO,CAACC,IAAI,CAAEF,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,EAAG,CAAC;EACtD,MAAMG,eAAe,GAAG,aAAa,CAACD,IAAI,CAAEF,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,EAAG,CAAC;EACzD,OAAO,CAAEC,kBAAkB,IAAI,CAAEE,eAAe;AACjD,CAAC;AAED,OAAO,MAAMC,gCAAgC,GAAGA,CAC/CC,YAA2C,EAC3CC,MAAqC,GAAG,EAAE,EAC1CC,oBAA6B,GAAG,KAAK,KACjC;EACJ,IAAK,CAAEF,YAAY,EAAG;IACrB,OAAO,EAAE;EACV;EACA,MAAMG,yBAAyB,GAAGH,YAAY,GAC3CN,gBAAgB,CAAEM,YAAa,CAAC,GAChC,KAAK;EACR,MAAMI,sBAAsB,GAAGD,yBAAyB,GACrDd,MAAM,CAAEW,YAAa,CAAC,CAACK,KAAK,CAAC,CAAC,GAC9BL,YAAY;;EAEf;;EAEA,MAAMM,aAAwC,GAAGJ,oBAAoB,GAChED,MAAM,GACR,CAAE;IAAEA,MAAM,EAAEA;EAAwB,CAAC,CAAE;EAC1C,KAAM,MAAM;IAAEA,MAAM,EAAEM;EAAc,CAAC,IAAID,aAAa,EAAG;IACxD,KAAM,MAAM;MAAEE,IAAI,EAAEC,SAAS;MAAEC,KAAK,EAAEC;IAAW,CAAC,IAAIJ,aAAa,EAAG;MACrE,MAAMK,oBAAoB,GAAGT,yBAAyB,GACnDd,MAAM,CAAEsB,UAAW,CAAC,CAACN,KAAK,CAAC,CAAC,GAC5BM,UAAU;MAEb,IAAKP,sBAAsB,KAAKQ,oBAAoB,EAAG;QACtD,OAAOH,SAAS;MACjB;IACD;EACD;;EAEA;EACA,OAAOhB,EAAE,CAAE,QAAS,CAAC;AACtB,CAAC;;AAED;AACA;AACA,OAAO,MAAMoB,uBAAuB,GACnCC,GAAgC,IAEhCC,KAAK,CAACC,OAAO,CAAIF,GAAG,CAAoBb,MAAO,CAAC,IAAI,EAAI,OAAO,IAAIa,GAAG,CAAE;AAEzE,OAAO,MAAMG,sBAAsB,GAClCC,GAAsC,IACV;EAC5B,OACCA,GAAG,CAACC,MAAM,GAAG,CAAC,IACdD,GAAG,CAACE,KAAK,CAAIC,QAAQ,IAAMR,uBAAuB,CAAEQ,QAAS,CAAE,CAAC;AAElE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,mBAAmB,GAAGA,CAClC3B,KAAyB,EACzB4B,OAA2B,KACvB;EACJ,IAAK,CAAE5B,KAAK,IAAI,CAAE4B,OAAO,IAAI7B,gBAAgB,CAAEC,KAAM,CAAC,EAAG;IACxD,OAAOA,KAAK;EACb;EAEA,MAAM;IAAE6B;EAAc,CAAC,GAAGD,OAAO;EACjC,MAAM;IAAEE;EAAY,CAAC,GAAGD,aAAa;EACrC,MAAME,uBAAuB,GAC5BD,WAAW,EAAEE,gBAAgB,CAAEJ,OAAQ,CAAC,CAACK,eAAe;EAEzD,OAAOF,uBAAuB,GAC3BrC,MAAM,CAAEqC,uBAAwB,CAAC,CAACrB,KAAK,CAAC,CAAC,GACzCV,KAAK;AACT,CAAC","ignoreList":[]}