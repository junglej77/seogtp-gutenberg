{"version":3,"names":[],"sources":["@wordpress/components/src/color-picker/types.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport type {\r\n\tColord,\r\n\tHslColor,\r\n\tHsvaColor,\r\n\tHsvColor,\r\n\tRgbaColor,\r\n\tRgbColor,\r\n} from 'colord';\r\nimport type { HslaColor } from 'react-colorful';\r\n/**\r\n * Internal dependencies\r\n */\r\nimport type { WordPressComponentProps } from '../context';\r\nimport type { useDeprecatedProps } from './use-deprecated-props';\r\n\r\nexport type ColorType = 'rgb' | 'hsl' | 'hex';\r\nexport type ColorCopyButtonProps = {\r\n\tcolor: Colord;\r\n\tcolorType: ColorType;\r\n};\r\n\r\nexport type LegacyAdapterProps = Parameters< typeof useDeprecatedProps >[ 0 ];\r\n\r\nexport type ColorPickerProps = WordPressComponentProps<\r\n\t{\r\n\t\t/**\r\n\t\t * When `true` the color picker will display the alpha channel both in\r\n\t\t * the bottom inputs as well as in the color picker itself.\r\n\t\t *\r\n\t\t * @default false\r\n\t\t */\r\n\t\tenableAlpha?: boolean;\r\n\t\t/**\r\n\t\t * The current color value to display in the picker.\r\n\t\t * Must be a hex or hex8 string.\r\n\t\t */\r\n\t\tcolor?: string;\r\n\t\t/**\r\n\t\t * Fired when the color changes. Always passes a hex or hex8 color string.\r\n\t\t */\r\n\t\tonChange?: ( color: string ) => void;\r\n\t\t/**\r\n\t\t * An optional default value to use for the color picker.\r\n\t\t */\r\n\t\tdefaultValue?: string;\r\n\t\t/**\r\n\t\t * The format to copy when clicking the displayed color format.\r\n\t\t */\r\n\t\tcopyFormat?: ColorType;\r\n\t},\r\n\t'div',\r\n\tfalse\r\n>;\r\n\r\nexport interface PickerProps {\r\n\tcolor: Colord;\r\n\tenableAlpha: boolean;\r\n\tonChange: ( nextColor: Colord ) => void;\r\n}\r\n\r\nexport interface ColorInputProps {\r\n\tcolorType: 'hsl' | 'hex' | 'rgb';\r\n\tcolor: Colord;\r\n\tonChange: ( nextColor: Colord ) => void;\r\n\tenableAlpha: boolean;\r\n}\r\n\r\nexport interface InputWithSliderProps {\r\n\tmin: number;\r\n\tmax: number;\r\n\tvalue: number;\r\n\tlabel: string;\r\n\tabbreviation: string;\r\n\tonChange: ( value: number ) => void;\r\n}\r\n\r\nexport interface HexInputProps {\r\n\tcolor: Colord;\r\n\tonChange: ( nextColor: Colord ) => void;\r\n\tenableAlpha: boolean;\r\n}\r\n\r\nexport interface HslInputProps {\r\n\tcolor: Colord;\r\n\tonChange: ( nextColor: Colord ) => void;\r\n\tenableAlpha: boolean;\r\n}\r\n\r\nexport interface RgbInputProps {\r\n\tcolor: Colord;\r\n\tonChange: ( nextColor: Colord ) => void;\r\n\tenableAlpha: boolean;\r\n}\r\n\r\n/**\r\n * @deprecated\r\n */\r\nexport type LegacyColor =\r\n\t| string\r\n\t| {\r\n\t\t\thex: string;\r\n\t\t\thsl: HslColor | HslaColor;\r\n\t\t\thsv: HsvColor | HsvaColor;\r\n\t\t\trgb: RgbColor | RgbaColor;\r\n\t\t\t/**\r\n\t\t\t * @deprecated\r\n\t\t\t */\r\n\t\t\toldHue: number;\r\n\t\t\t/**\r\n\t\t\t * @deprecated\r\n\t\t\t */\r\n\t\t\tsource: 'hex';\r\n\t  };\r\n\r\n/**\r\n * @deprecated\r\n */\r\nexport interface LegacyProps {\r\n\tcolor?: LegacyColor;\r\n\t/**\r\n\t * @deprecated\r\n\t */\r\n\tonChangeComplete: ( colors: LegacyColor ) => void;\r\n\t/**\r\n\t * @deprecated\r\n\t */\r\n\toldHue: string;\r\n\tclassName: string;\r\n\t/**\r\n\t * @deprecated\r\n\t */\r\n\tdisableAlpha: boolean;\r\n\tonChange?: never;\r\n}\r\n"],"mappings":"","ignoreList":[]}