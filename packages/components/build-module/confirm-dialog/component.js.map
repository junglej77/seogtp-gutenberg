{"version":3,"names":["__","useCallback","useEffect","useRef","useState","Modal","useContextSystem","contextConnect","Flex","Button","Text","VStack","styles","useCx","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","UnconnectedConfirmDialog","props","forwardedRef","isOpen","isOpenProp","onConfirm","onCancel","children","confirmButtonText","cancelButtonText","otherProps","cx","wrapperClassName","wrapper","cancelButtonRef","confirmButtonRef","setIsOpen","shouldSelfClose","setShouldSelfClose","isIsOpenSet","handleEvent","callback","event","handleEnter","isConfirmOrCancelButton","target","current","key","cancelLabel","confirmLabel","onRequestClose","onKeyDown","closeButtonLabel","isDismissible","ref","overlayClassName","__experimentalHideHeader","spacing","direction","justify","__next40pxDefaultSize","variant","onClick","ConfirmDialog"],"sources":["@wordpress/components/src/confirm-dialog/component.tsx"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\nimport { useCallback, useEffect, useRef, useState } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport Modal from '../modal';\r\nimport type { ConfirmDialogProps, DialogInputEvent } from './types';\r\nimport type { WordPressComponentProps } from '../context';\r\nimport { useContextSystem, contextConnect } from '../context';\r\nimport { Flex } from '../flex';\r\nimport Button from '../button';\r\nimport { Text } from '../text';\r\nimport { VStack } from '../v-stack';\r\nimport * as styles from './styles';\r\nimport { useCx } from '../utils/hooks/use-cx';\r\n\r\nconst UnconnectedConfirmDialog = (\r\n\tprops: WordPressComponentProps< ConfirmDialogProps, 'div', false >,\r\n\tforwardedRef: React.ForwardedRef< any >\r\n) => {\r\n\tconst {\r\n\t\tisOpen: isOpenProp,\r\n\t\tonConfirm,\r\n\t\tonCancel,\r\n\t\tchildren,\r\n\t\tconfirmButtonText,\r\n\t\tcancelButtonText,\r\n\t\t...otherProps\r\n\t} = useContextSystem( props, 'ConfirmDialog' );\r\n\r\n\tconst cx = useCx();\r\n\tconst wrapperClassName = cx( styles.wrapper );\r\n\tconst cancelButtonRef = useRef();\r\n\tconst confirmButtonRef = useRef();\r\n\r\n\tconst [ isOpen, setIsOpen ] = useState< boolean >();\r\n\tconst [ shouldSelfClose, setShouldSelfClose ] = useState< boolean >();\r\n\r\n\tuseEffect( () => {\r\n\t\t// We only allow the dialog to close itself if `isOpenProp` is *not* set.\r\n\t\t// If `isOpenProp` is set, then it (probably) means it's controlled by a\r\n\t\t// parent component. In that case, `shouldSelfClose` might do more harm than\r\n\t\t// good, so we disable it.\r\n\t\tconst isIsOpenSet = typeof isOpenProp !== 'undefined';\r\n\t\tsetIsOpen( isIsOpenSet ? isOpenProp : true );\r\n\t\tsetShouldSelfClose( ! isIsOpenSet );\r\n\t}, [ isOpenProp ] );\r\n\r\n\tconst handleEvent = useCallback(\r\n\t\t( callback?: ( event: DialogInputEvent ) => void ) =>\r\n\t\t\t( event: DialogInputEvent ) => {\r\n\t\t\t\tcallback?.( event );\r\n\t\t\t\tif ( shouldSelfClose ) {\r\n\t\t\t\t\tsetIsOpen( false );\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t[ shouldSelfClose, setIsOpen ]\r\n\t);\r\n\r\n\tconst handleEnter = useCallback(\r\n\t\t( event: React.KeyboardEvent< HTMLDivElement > ) => {\r\n\t\t\t// Avoid triggering the 'confirm' action when a button is focused,\r\n\t\t\t// as this can cause a double submission.\r\n\t\t\tconst isConfirmOrCancelButton =\r\n\t\t\t\tevent.target === cancelButtonRef.current ||\r\n\t\t\t\tevent.target === confirmButtonRef.current;\r\n\r\n\t\t\tif ( ! isConfirmOrCancelButton && event.key === 'Enter' ) {\r\n\t\t\t\thandleEvent( onConfirm )( event );\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ handleEvent, onConfirm ]\r\n\t);\r\n\r\n\tconst cancelLabel = cancelButtonText ?? __( 'Cancel' );\r\n\tconst confirmLabel = confirmButtonText ?? __( 'OK' );\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{ isOpen && (\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tonRequestClose={ handleEvent( onCancel ) }\r\n\t\t\t\t\tonKeyDown={ handleEnter }\r\n\t\t\t\t\tcloseButtonLabel={ cancelLabel }\r\n\t\t\t\t\tisDismissible\r\n\t\t\t\t\tref={ forwardedRef }\r\n\t\t\t\t\toverlayClassName={ wrapperClassName }\r\n\t\t\t\t\t__experimentalHideHeader\r\n\t\t\t\t\t{ ...otherProps }\r\n\t\t\t\t>\r\n\t\t\t\t\t<VStack spacing={ 8 }>\r\n\t\t\t\t\t\t<Text>{ children }</Text>\r\n\t\t\t\t\t\t<Flex direction=\"row\" justify=\"flex-end\">\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t__next40pxDefaultSize\r\n\t\t\t\t\t\t\t\tref={ cancelButtonRef }\r\n\t\t\t\t\t\t\t\tvariant=\"tertiary\"\r\n\t\t\t\t\t\t\t\tonClick={ handleEvent( onCancel ) }\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{ cancelLabel }\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t__next40pxDefaultSize\r\n\t\t\t\t\t\t\t\tref={ confirmButtonRef }\r\n\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={ handleEvent( onConfirm ) }\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{ confirmLabel }\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t</VStack>\r\n\t\t\t\t</Modal>\r\n\t\t\t) }\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n/**\r\n * `ConfirmDialog` is built of top of [`Modal`](/packages/components/src/modal/README.md)\r\n * and displays a confirmation dialog, with _confirm_ and _cancel_ buttons.\r\n * The dialog is confirmed by clicking the _confirm_ button or by pressing the `Enter` key.\r\n * It is cancelled (closed) by clicking the _cancel_ button, by pressing the `ESC` key, or by\r\n * clicking outside the dialog focus (i.e, the overlay).\r\n *\r\n * `ConfirmDialog` has two main implicit modes: controlled and uncontrolled.\r\n *\r\n * UnControlled:\r\n *\r\n * Allows the component to be used standalone, just by declaring it as part of another React's component render method:\r\n * -   It will be automatically open (displayed) upon mounting;\r\n * -   It will be automatically closed when clicking the _cancel_ button, by pressing the `ESC` key, or by clicking outside the dialog focus (i.e, the overlay);\r\n * -   `onCancel` is not mandatory but can be passed. Even if passed, the dialog will still be able to close itself.\r\n *\r\n * Activating this mode is as simple as omitting the `isOpen` prop. The only mandatory prop, in this case, is the `onConfirm` callback. The message is passed as the `children`. You can pass any JSX you'd like, which allows to further format the message or include sub-component if you'd like:\r\n *\r\n * ```jsx\r\n * import { __experimentalConfirmDialog as ConfirmDialog } from '@wordpress/components';\r\n *\r\n * function Example() {\r\n * \treturn (\r\n * \t\t<ConfirmDialog onConfirm={ () => console.debug( ' Confirmed! ' ) }>\r\n * \t\t\tAre you sure? <strong>This action cannot be undone!</strong>\r\n * \t\t</ConfirmDialog>\r\n * \t);\r\n * }\r\n * ```\r\n *\r\n *\r\n * Controlled mode:\r\n *  Let the parent component control when the dialog is open/closed. It's activated when a\r\n * boolean value is passed to `isOpen`:\r\n * -   It will not be automatically closed. You need to let it know when to open/close by updating the value of the `isOpen` prop;\r\n * -   Both `onConfirm` and the `onCancel` callbacks are mandatory props in this mode;\r\n * -   You'll want to update the state that controls `isOpen` by updating it from the `onCancel` and `onConfirm` callbacks.\r\n *\r\n *```jsx\r\n * import { __experimentalConfirmDialog as ConfirmDialog } from '@wordpress/components';\r\n * import { useState } from '@wordpress/element';\r\n *\r\n * function Example() {\r\n * \tconst [ isOpen, setIsOpen ] = useState( true );\r\n *\r\n * \tconst handleConfirm = () => {\r\n * \t\tconsole.debug( 'Confirmed!' );\r\n * \t\tsetIsOpen( false );\r\n * \t};\r\n *\r\n * \tconst handleCancel = () => {\r\n * \t\tconsole.debug( 'Cancelled!' );\r\n * \t\tsetIsOpen( false );\r\n * \t};\r\n *\r\n * \treturn (\r\n * \t\t<ConfirmDialog\r\n * \t\t\tisOpen={ isOpen }\r\n * \t\t\tonConfirm={ handleConfirm }\r\n * \t\t\tonCancel={ handleCancel }\r\n * \t\t>\r\n * \t\t\tAre you sure? <strong>This action cannot be undone!</strong>\r\n * \t\t</ConfirmDialog>\r\n * \t);\r\n * }\r\n * ```\r\n */\r\nexport const ConfirmDialog = contextConnect(\r\n\tUnconnectedConfirmDialog,\r\n\t'ConfirmDialog'\r\n);\r\nexport default ConfirmDialog;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,EAAE,QAAQ,iBAAiB;AACpC,SAASC,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,oBAAoB;;AAE7E;AACA;AACA;AACA,OAAOC,KAAK,MAAM,UAAU;AAG5B,SAASC,gBAAgB,EAAEC,cAAc,QAAQ,YAAY;AAC7D,SAASC,IAAI,QAAQ,SAAS;AAC9B,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,IAAI,QAAQ,SAAS;AAC9B,SAASC,MAAM,QAAQ,YAAY;AACnC,OAAO,KAAKC,MAAM,MAAM,UAAU;AAClC,SAASC,KAAK,QAAQ,uBAAuB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,wBAAwB,GAAGA,CAChCC,KAAkE,EAClEC,YAAuC,KACnC;EACJ,MAAM;IACLC,MAAM,EAAEC,UAAU;IAClBC,SAAS;IACTC,QAAQ;IACRC,QAAQ;IACRC,iBAAiB;IACjBC,gBAAgB;IAChB,GAAGC;EACJ,CAAC,GAAGxB,gBAAgB,CAAEe,KAAK,EAAE,eAAgB,CAAC;EAE9C,MAAMU,EAAE,GAAGlB,KAAK,CAAC,CAAC;EAClB,MAAMmB,gBAAgB,GAAGD,EAAE,CAAEnB,MAAM,CAACqB,OAAQ,CAAC;EAC7C,MAAMC,eAAe,GAAG/B,MAAM,CAAC,CAAC;EAChC,MAAMgC,gBAAgB,GAAGhC,MAAM,CAAC,CAAC;EAEjC,MAAM,CAAEoB,MAAM,EAAEa,SAAS,CAAE,GAAGhC,QAAQ,CAAY,CAAC;EACnD,MAAM,CAAEiC,eAAe,EAAEC,kBAAkB,CAAE,GAAGlC,QAAQ,CAAY,CAAC;EAErEF,SAAS,CAAE,MAAM;IAChB;IACA;IACA;IACA;IACA,MAAMqC,WAAW,GAAG,OAAOf,UAAU,KAAK,WAAW;IACrDY,SAAS,CAAEG,WAAW,GAAGf,UAAU,GAAG,IAAK,CAAC;IAC5Cc,kBAAkB,CAAE,CAAEC,WAAY,CAAC;EACpC,CAAC,EAAE,CAAEf,UAAU,CAAG,CAAC;EAEnB,MAAMgB,WAAW,GAAGvC,WAAW,CAC5BwC,QAA8C,IAC7CC,KAAuB,IAAM;IAC9BD,QAAQ,GAAIC,KAAM,CAAC;IACnB,IAAKL,eAAe,EAAG;MACtBD,SAAS,CAAE,KAAM,CAAC;IACnB;EACD,CAAC,EACF,CAAEC,eAAe,EAAED,SAAS,CAC7B,CAAC;EAED,MAAMO,WAAW,GAAG1C,WAAW,CAC5ByC,KAA4C,IAAM;IACnD;IACA;IACA,MAAME,uBAAuB,GAC5BF,KAAK,CAACG,MAAM,KAAKX,eAAe,CAACY,OAAO,IACxCJ,KAAK,CAACG,MAAM,KAAKV,gBAAgB,CAACW,OAAO;IAE1C,IAAK,CAAEF,uBAAuB,IAAIF,KAAK,CAACK,GAAG,KAAK,OAAO,EAAG;MACzDP,WAAW,CAAEf,SAAU,CAAC,CAAEiB,KAAM,CAAC;IAClC;EACD,CAAC,EACD,CAAEF,WAAW,EAAEf,SAAS,CACzB,CAAC;EAED,MAAMuB,WAAW,GAAGnB,gBAAgB,aAAhBA,gBAAgB,cAAhBA,gBAAgB,GAAI7B,EAAE,CAAE,QAAS,CAAC;EACtD,MAAMiD,YAAY,GAAGrB,iBAAiB,aAAjBA,iBAAiB,cAAjBA,iBAAiB,GAAI5B,EAAE,CAAE,IAAK,CAAC;EAEpD,oBACCe,IAAA,CAAAI,SAAA;IAAAQ,QAAA,EACGJ,MAAM,iBACPR,IAAA,CAACV,KAAK;MACL6C,cAAc,EAAGV,WAAW,CAAEd,QAAS,CAAG;MAC1CyB,SAAS,EAAGR,WAAa;MACzBS,gBAAgB,EAAGJ,WAAa;MAChCK,aAAa;MACbC,GAAG,EAAGhC,YAAc;MACpBiC,gBAAgB,EAAGvB,gBAAkB;MACrCwB,wBAAwB;MAAA,GACnB1B,UAAU;MAAAH,QAAA,eAEfV,KAAA,CAACN,MAAM;QAAC8C,OAAO,EAAG,CAAG;QAAA9B,QAAA,gBACpBZ,IAAA,CAACL,IAAI;UAAAiB,QAAA,EAAGA;QAAQ,CAAQ,CAAC,eACzBV,KAAA,CAACT,IAAI;UAACkD,SAAS,EAAC,KAAK;UAACC,OAAO,EAAC,UAAU;UAAAhC,QAAA,gBACvCZ,IAAA,CAACN,MAAM;YACNmD,qBAAqB;YACrBN,GAAG,EAAGpB,eAAiB;YACvB2B,OAAO,EAAC,UAAU;YAClBC,OAAO,EAAGtB,WAAW,CAAEd,QAAS,CAAG;YAAAC,QAAA,EAEjCqB;UAAW,CACN,CAAC,eACTjC,IAAA,CAACN,MAAM;YACNmD,qBAAqB;YACrBN,GAAG,EAAGnB,gBAAkB;YACxB0B,OAAO,EAAC,SAAS;YACjBC,OAAO,EAAGtB,WAAW,CAAEf,SAAU,CAAG;YAAAE,QAAA,EAElCsB;UAAY,CACP,CAAC;QAAA,CACJ,CAAC;MAAA,CACA;IAAC,CACH;EACP,CACA,CAAC;AAEL,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMc,aAAa,GAAGxD,cAAc,CAC1Ca,wBAAwB,EACxB,eACD,CAAC;AACD,eAAe2C,aAAa","ignoreList":[]}