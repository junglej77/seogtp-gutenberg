{"version":3,"names":[],"sources":["@wordpress/components/src/confirm-dialog/types.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport type { MouseEvent, KeyboardEvent, ReactNode } from 'react';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport type { ModalProps } from '../modal/types';\r\n\r\nexport type DialogInputEvent =\r\n\t| Parameters< ModalProps[ 'onRequestClose' ] >[ 0 ]\r\n\t| KeyboardEvent< HTMLDivElement >\r\n\t| MouseEvent< HTMLButtonElement >;\r\n\r\nexport type ConfirmDialogProps = {\r\n\t/**\r\n\t * The actual message for the dialog. It's passed as children and any valid `ReactNode` is accepted.\r\n\t */\r\n\tchildren: ReactNode;\r\n\t/**\r\n\t * The callback that's called when the user confirms.\r\n\t * A confirmation can happen when the `OK` button is clicked or when `Enter` is pressed.\r\n\t */\r\n\tonConfirm: ( event: DialogInputEvent ) => void;\r\n\t/**\r\n\t * The optional custom text to display as the confirmation button's label.\r\n\t */\r\n\tconfirmButtonText?: string;\r\n\t/**\r\n\t * The optional custom text to display as the cancellation button's label.\r\n\t */\r\n\tcancelButtonText?: string;\r\n\t/**\r\n\t * The callback that's called when the user cancels. A cancellation can happen\r\n\t * when the `Cancel` button is clicked, when the `ESC` key is pressed, or when\r\n\t * a click outside of the dialog focus is detected (i.e. in the overlay).\r\n\t *\r\n\t * It's not required if `isOpen` is not set (uncontrolled mode), as the component\r\n\t * will take care of closing itself, but you can still pass a callback if something\r\n\t * must be done upon cancelling (the component will still close itself in this case).\r\n\t *\r\n\t * If `isOpen` is set (controlled mode), then it's required, and you need to set\r\n\t * the state that defines `isOpen` to `false` as part of this callback if you want the\r\n\t * dialog to close when the user cancels.\r\n\t */\r\n\tonCancel?: ( event: DialogInputEvent ) => void;\r\n\t/**\r\n\t * Defines if the dialog is open (displayed) or closed (not rendered/displayed).\r\n\t * It also implicitly toggles the controlled mode if set or the uncontrolled mode if it's not set.\r\n\t */\r\n\tisOpen?: boolean;\r\n};\r\n"],"mappings":"","ignoreList":[]}