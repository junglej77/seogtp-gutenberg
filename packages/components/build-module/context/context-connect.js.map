{"version":3,"names":["forwardRef","warn","CONNECT_STATIC_NAMESPACE","getStyledClassNameFromKey","contextConnect","Component","namespace","_contextConnect","forwardsRef","contextConnectWithoutRef","options","WrappedComponent","globalThis","SCRIPT_DEBUG","mergedNamespace","Array","isArray","Object","assign","Set","displayName","selector","getConnectNamespace","namespaces","type","hasConnectNamespace","match","includes","some","result"],"sources":["@wordpress/components/src/context/context-connect.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport type { ForwardedRef, ReactChild, ReactNode } from 'react';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { forwardRef } from '@wordpress/element';\r\nimport warn from '@wordpress/warning';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { CONNECT_STATIC_NAMESPACE } from './constants';\r\nimport { getStyledClassNameFromKey } from './get-styled-class-name-from-key';\r\nimport type { WordPressComponentFromProps } from '.';\r\n\r\ntype AcceptsTwoArgs<\r\n\tF extends ( ...args: any ) => any,\r\n\tErrorMessage = never,\r\n> = Parameters< F >[ 'length' ] extends 2 ? {} : ErrorMessage;\r\n\r\ntype ContextConnectOptions = {\r\n\tforwardsRef?: boolean;\r\n};\r\n\r\n/**\r\n * Forwards ref (React.ForwardRef) and \"Connects\" (or registers) a component\r\n * within the Context system under a specified namespace.\r\n *\r\n * @param Component The component to register into the Context system.\r\n * @param namespace The namespace to register the component under.\r\n * @return The connected WordPressComponent\r\n */\r\nexport function contextConnect<\r\n\tC extends ( props: any, ref: ForwardedRef< any > ) => JSX.Element | null,\r\n>(\r\n\tComponent: C &\r\n\t\tAcceptsTwoArgs<\r\n\t\t\tC,\r\n\t\t\t'Warning: Your component function does not take a ref as the second argument. Did you mean to use `contextConnectWithoutRef`?'\r\n\t\t>,\r\n\tnamespace: string\r\n) {\r\n\treturn _contextConnect( Component, namespace, { forwardsRef: true } );\r\n}\r\n\r\n/**\r\n * \"Connects\" (or registers) a component within the Context system under a specified namespace.\r\n * Does not forward a ref.\r\n *\r\n * @param Component The component to register into the Context system.\r\n * @param namespace The namespace to register the component under.\r\n * @return The connected WordPressComponent\r\n */\r\nexport function contextConnectWithoutRef< P >(\r\n\tComponent: ( props: P ) => JSX.Element | null,\r\n\tnamespace: string\r\n) {\r\n\treturn _contextConnect( Component, namespace );\r\n}\r\n\r\n// This is an (experimental) evolution of the initial connect() HOC.\r\n// The hope is that we can improve render performance by removing functional\r\n// component wrappers.\r\nfunction _contextConnect<\r\n\tC extends ( props: any, ref: ForwardedRef< any > ) => JSX.Element | null,\r\n\tO extends ContextConnectOptions,\r\n>(\r\n\tComponent: C,\r\n\tnamespace: string,\r\n\toptions?: O\r\n): WordPressComponentFromProps<\r\n\tParameters< C >[ 0 ],\r\n\tO[ 'forwardsRef' ] extends true ? true : false\r\n> {\r\n\tconst WrappedComponent = options?.forwardsRef\r\n\t\t? forwardRef< any, Parameters< C >[ 0 ] >( Component )\r\n\t\t: Component;\r\n\r\n\tif ( typeof namespace === 'undefined' ) {\r\n\t\twarn( 'contextConnect: Please provide a namespace' );\r\n\t}\r\n\r\n\t// @ts-expect-error internal property\r\n\tlet mergedNamespace = WrappedComponent[ CONNECT_STATIC_NAMESPACE ] || [\r\n\t\tnamespace,\r\n\t];\r\n\r\n\t/**\r\n\t * Consolidate (merge) namespaces before attaching it to the WrappedComponent.\r\n\t */\r\n\tif ( Array.isArray( namespace ) ) {\r\n\t\tmergedNamespace = [ ...mergedNamespace, ...namespace ];\r\n\t}\r\n\tif ( typeof namespace === 'string' ) {\r\n\t\tmergedNamespace = [ ...mergedNamespace, namespace ];\r\n\t}\r\n\r\n\t// @ts-expect-error We can't rely on inferred types here because of the\r\n\t// `as` prop polymorphism we're handling in https://github.com/WordPress/gutenberg/blob/4f3a11243c365f94892e479bff0b922ccc4ccda3/packages/components/src/context/wordpress-component.ts#L32-L33\r\n\treturn Object.assign( WrappedComponent, {\r\n\t\t[ CONNECT_STATIC_NAMESPACE ]: [ ...new Set( mergedNamespace ) ],\r\n\t\tdisplayName: namespace,\r\n\t\tselector: `.${ getStyledClassNameFromKey( namespace ) }`,\r\n\t} );\r\n}\r\n\r\n/**\r\n * Attempts to retrieve the connected namespace from a component.\r\n *\r\n * @param Component The component to retrieve a namespace from.\r\n * @return The connected namespaces.\r\n */\r\nexport function getConnectNamespace(\r\n\tComponent: ReactChild | undefined | {}\r\n): string[] {\r\n\tif ( ! Component ) {\r\n\t\treturn [];\r\n\t}\r\n\r\n\tlet namespaces = [];\r\n\r\n\t// @ts-ignore internal property\r\n\tif ( Component[ CONNECT_STATIC_NAMESPACE ] ) {\r\n\t\t// @ts-ignore internal property\r\n\t\tnamespaces = Component[ CONNECT_STATIC_NAMESPACE ];\r\n\t}\r\n\r\n\t// @ts-ignore\r\n\tif ( Component.type && Component.type[ CONNECT_STATIC_NAMESPACE ] ) {\r\n\t\t// @ts-ignore\r\n\t\tnamespaces = Component.type[ CONNECT_STATIC_NAMESPACE ];\r\n\t}\r\n\r\n\treturn namespaces;\r\n}\r\n\r\n/**\r\n * Checks to see if a component is connected within the Context system.\r\n *\r\n * @param Component The component to retrieve a namespace from.\r\n * @param match     The namespace to check.\r\n */\r\nexport function hasConnectNamespace(\r\n\tComponent: ReactNode,\r\n\tmatch: string[] | string\r\n): boolean {\r\n\tif ( ! Component ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif ( typeof match === 'string' ) {\r\n\t\treturn getConnectNamespace( Component ).includes( match );\r\n\t}\r\n\tif ( Array.isArray( match ) ) {\r\n\t\treturn match.some( ( result ) =>\r\n\t\t\tgetConnectNamespace( Component ).includes( result )\r\n\t\t);\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n"],"mappings":"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","ignoreList":[]}