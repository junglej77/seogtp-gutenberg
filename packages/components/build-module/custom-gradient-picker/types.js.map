{"version":3,"names":[],"sources":["@wordpress/components/src/custom-gradient-picker/types.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport type gradientParser from 'gradient-parser';\r\n\r\nexport type CustomGradientPickerProps = {\r\n\t/**\r\n\t * Start opting in to the new margin-free styles that will become the default\r\n\t * in a future version, currently scheduled to be WordPress 6.4. (The prop\r\n\t * can be safely removed once this happens.)\r\n\t *\r\n\t * @default false\r\n\t * @deprecated Default behavior since WP 6.5. Prop can be safely removed.\r\n\t * @ignore\r\n\t */\r\n\t__nextHasNoMargin?: boolean;\r\n\t/**\r\n\t * The current value of the gradient. Pass a css gradient string (See default value for example).\r\n\t * Optionally pass in a `null` value to specify no gradient is currently selected.\r\n\t *\r\n\t * @default 'linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%)'\r\n\t */\r\n\tvalue?: string | null;\r\n\t/**\r\n\t * The function called when a new gradient has been defined. It is passed to\r\n\t * the `currentGradient` as an argument.\r\n\t */\r\n\tonChange: ( currentGradient: string ) => void;\r\n\t/**\r\n\t * Whether this is rendered in the sidebar.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\t__experimentalIsRenderedInSidebar?: boolean;\r\n};\r\n\r\nexport type GradientAnglePickerProps = {\r\n\tgradientAST:\r\n\t\t| gradientParser.LinearGradientNode\r\n\t\t| gradientParser.RepeatingLinearGradientNode;\r\n\thasGradient: boolean;\r\n\tonChange: ( gradient: string ) => void;\r\n};\r\n\r\nexport type GradientTypePickerProps = {\r\n\tgradientAST: gradientParser.GradientNode;\r\n\thasGradient: boolean;\r\n\tonChange: ( gradient: string ) => void;\r\n};\r\n\r\nexport type ControlPoint = { color: string; position: number };\r\n\r\nexport type CustomGradientBarProps = {\r\n\tbackground: React.CSSProperties[ 'background' ];\r\n\thasGradient: boolean;\r\n\tvalue: ControlPoint[];\r\n\tonChange: ( newControlPoints: ControlPoint[] ) => void;\r\n\tdisableInserter?: boolean;\r\n\tdisableAlpha?: boolean;\r\n\t__experimentalIsRenderedInSidebar?: boolean;\r\n};\r\n\r\nexport type CustomGradientBarIdleState = { id: 'IDLE' };\r\ntype CustomGradientBarMovingInserterState = {\r\n\tid: 'MOVING_INSERTER';\r\n\tinsertPosition: number;\r\n};\r\ntype CustomGradientBarInsertingControlPointState = {\r\n\tid: 'INSERTING_CONTROL_POINT';\r\n\tinsertPosition: number;\r\n};\r\ntype CustomGradientBarMovingControlPointState = { id: 'MOVING_CONTROL_POINT' };\r\n\r\nexport type CustomGradientBarReducerState =\r\n\t| CustomGradientBarIdleState\r\n\t| CustomGradientBarMovingInserterState\r\n\t| CustomGradientBarInsertingControlPointState\r\n\t| CustomGradientBarMovingControlPointState;\r\n\r\nexport type CustomGradientBarReducerAction =\r\n\t| { type: 'MOVE_INSERTER'; insertPosition: number }\r\n\t| { type: 'STOP_INSERTER_MOVE' }\r\n\t| { type: 'OPEN_INSERTER' }\r\n\t| { type: 'CLOSE_INSERTER' }\r\n\t| { type: 'START_CONTROL_CHANGE' }\r\n\t| { type: 'STOP_CONTROL_CHANGE' };\r\n\r\nexport type ControlPointButtonProps = {\r\n\tisOpen: boolean;\r\n\tposition: ControlPoint[ 'position' ];\r\n\tcolor: string;\r\n};\r\n\r\nexport type ControlPointsProps = {\r\n\tdisableRemove: boolean;\r\n\tdisableAlpha: boolean;\r\n\tgradientPickerDomRef: React.RefObject< HTMLDivElement >;\r\n\tignoreMarkerPosition?: number;\r\n\tvalue: ControlPoint[];\r\n\tonChange: ( controlPoints: ControlPoint[] ) => void;\r\n\tonStartControlPointChange: () => void;\r\n\tonStopControlPointChange: () => void;\r\n\t__experimentalIsRenderedInSidebar: boolean;\r\n};\r\n\r\nexport type ControlPointMoveState = {\r\n\tinitialPosition: number;\r\n\tindex: number;\r\n\tsignificantMoveHappened: boolean;\r\n\tlistenersActivated: boolean;\r\n};\r\n\r\nexport type InsertPointProps = {\r\n\tvalue: ControlPoint[];\r\n\tonChange: ( controlPoints: ControlPoint[] ) => void;\r\n\tonOpenInserter: () => void;\r\n\tonCloseInserter: () => void;\r\n\tinsertPosition: number;\r\n\tdisableAlpha: boolean;\r\n\t__experimentalIsRenderedInSidebar: boolean;\r\n};\r\n"],"mappings":"","ignoreList":[]}