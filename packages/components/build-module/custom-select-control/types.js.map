{"version":3,"names":[],"sources":["@wordpress/components/src/custom-select-control/types.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport type { FocusEventHandler, MouseEventHandler } from 'react';\r\n\r\n/**\r\n * The object structure for the options array.\r\n */\r\nexport type CustomSelectOption = {\r\n\tkey: string;\r\n\tname: string;\r\n\tstyle?: React.CSSProperties;\r\n\tclassName?: string;\r\n\thint?: string;\r\n\t/**\r\n\t * Use the `hint` property instead\r\n\t * @deprecated\r\n\t * @ignore\r\n\t */\r\n\t__experimentalHint?: string;\r\n\t[ key: string ]: any;\r\n};\r\n\r\n/**\r\n * The object returned from the onChange event.\r\n */\r\ntype CustomSelectChangeObject< T extends CustomSelectOption > = {\r\n\thighlightedIndex?: number;\r\n\tinputValue?: string;\r\n\tisOpen?: boolean;\r\n\ttype?: string;\r\n\tselectedItem: T;\r\n};\r\n\r\nexport type CustomSelectProps< T extends CustomSelectOption > = {\r\n\t/**\r\n\t * Optional classname for the component.\r\n\t */\r\n\tclassName?: string;\r\n\t/**\r\n\t * Hide the label visually, while keeping available to assistive technology.\r\n\t */\r\n\thideLabelFromVision?: boolean;\r\n\t/**\r\n\t * Description for the select trigger button used by assistive technology.\r\n\t * If no value is passed, the text \"Currently selected: selectedItem.name\"\r\n\t * will be used fully translated.\r\n\t */\r\n\tdescribedBy?: string;\r\n\t/**\r\n\t * Label for the control.\r\n\t */\r\n\tlabel: string;\r\n\t/**\r\n\t * Function called with the control's internal state changes. The `selectedItem`\r\n\t * property contains the next selected item.\r\n\t */\r\n\tonChange?: ( newValue: CustomSelectChangeObject< NoInfer< T > > ) => void;\r\n\t/**\r\n\t * A handler for `blur` events on the trigger button.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tonBlur?: FocusEventHandler< HTMLButtonElement >;\r\n\t/**\r\n\t * A handler for `focus` events on the trigger button.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tonFocus?: FocusEventHandler< HTMLButtonElement >;\r\n\t/**\r\n\t * A handler for `mouseout` events on the trigger button.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tonMouseOut?: MouseEventHandler< HTMLButtonElement >;\r\n\t/**\r\n\t * A handler for `mouseover` events on the trigger button.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tonMouseOver?: MouseEventHandler< HTMLButtonElement >;\r\n\t/**\r\n\t * The list of options that can be chosen from.\r\n\t */\r\n\toptions: ReadonlyArray< T >;\r\n\t/**\r\n\t * The size of the control.\r\n\t *\r\n\t * @default 'default'\r\n\t */\r\n\tsize?: 'default' | 'small' | '__unstable-large';\r\n\t/**\r\n\t * Can be used to externally control the value of the control.\r\n\t */\r\n\tvalue?: NoInfer< T >;\r\n\t/**\r\n\t * Use the `showSelectedHint` property instead.\r\n\t * @deprecated\r\n\t * @ignore\r\n\t */\r\n\t__experimentalShowSelectedHint?: boolean;\r\n\t/**\r\n\t * Show the hint of the selected item in the trigger button.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tshowSelectedHint?: boolean;\r\n\t/**\r\n\t * Opt-in prop for an unconstrained width style which became the default in\r\n\t * WordPress 6.5. The prop is no longer needed and can be safely removed.\r\n\t *\r\n\t * @deprecated\r\n\t * @ignore\r\n\t */\r\n\t__nextUnconstrainedWidth?: boolean;\r\n\t/**\r\n\t * Start opting into the larger default height that will become the default size in a future version.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\t__next40pxDefaultSize?: boolean;\r\n};\r\n"],"mappings":"","ignoreList":[]}