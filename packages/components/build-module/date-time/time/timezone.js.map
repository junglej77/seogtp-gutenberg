{"version":3,"names":["__","getSettings","getDateSettings","Tooltip","TimeZone","StyledComponent","jsx","_jsx","timezone","userTimezoneOffset","Date","getTimezoneOffset","Number","offset","offsetSymbol","zoneAbbr","abbr","isNaN","offsetFormatted","prettyTimezoneString","string","replace","timezoneDetail","hasNoAdditionalTimezoneDetail","trim","length","className","children","placement","text"],"sources":["@wordpress/components/src/date-time/time/timezone.tsx"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\nimport { getSettings as getDateSettings } from '@wordpress/date';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport Tooltip from '../../tooltip';\r\nimport { TimeZone as StyledComponent } from './styles';\r\n\r\n/**\r\n * Displays timezone information when user timezone is different from site\r\n * timezone.\r\n */\r\nconst TimeZone = () => {\r\n\tconst { timezone } = getDateSettings();\r\n\r\n\t// Convert timezone offset to hours.\r\n\tconst userTimezoneOffset = -1 * ( new Date().getTimezoneOffset() / 60 );\r\n\r\n\t// System timezone and user timezone match, nothing needed.\r\n\t// Compare as numbers because it comes over as string.\r\n\tif ( Number( timezone.offset ) === userTimezoneOffset ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst offsetSymbol = Number( timezone.offset ) >= 0 ? '+' : '';\r\n\tconst zoneAbbr =\r\n\t\t'' !== timezone.abbr && isNaN( Number( timezone.abbr ) )\r\n\t\t\t? timezone.abbr\r\n\t\t\t: `UTC${ offsetSymbol }${ timezone.offsetFormatted }`;\r\n\r\n\t// Replace underscore with space in strings like `America/Costa_Rica`.\r\n\tconst prettyTimezoneString = timezone.string.replace( '_', ' ' );\r\n\r\n\tconst timezoneDetail =\r\n\t\t'UTC' === timezone.string\r\n\t\t\t? __( 'Coordinated Universal Time' )\r\n\t\t\t: `(${ zoneAbbr }) ${ prettyTimezoneString }`;\r\n\r\n\t// When the prettyTimezoneString is empty, there is no additional timezone\r\n\t// detail information to show in a Tooltip.\r\n\tconst hasNoAdditionalTimezoneDetail =\r\n\t\tprettyTimezoneString.trim().length === 0;\r\n\r\n\treturn hasNoAdditionalTimezoneDetail ? (\r\n\t\t<StyledComponent className=\"components-datetime__timezone\">\r\n\t\t\t{ zoneAbbr }\r\n\t\t</StyledComponent>\r\n\t) : (\r\n\t\t<Tooltip placement=\"top\" text={ timezoneDetail }>\r\n\t\t\t<StyledComponent className=\"components-datetime__timezone\">\r\n\t\t\t\t{ zoneAbbr }\r\n\t\t\t</StyledComponent>\r\n\t\t</Tooltip>\r\n\t);\r\n};\r\n\r\nexport default TimeZone;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,EAAE,QAAQ,iBAAiB;AACpC,SAASC,WAAW,IAAIC,eAAe,QAAQ,iBAAiB;;AAEhE;AACA;AACA;AACA,OAAOC,OAAO,MAAM,eAAe;AACnC,SAASC,QAAQ,IAAIC,eAAe,QAAQ,UAAU;;AAEtD;AACA;AACA;AACA;AAHA,SAAAC,GAAA,IAAAC,IAAA;AAIA,MAAMH,QAAQ,GAAGA,CAAA,KAAM;EACtB,MAAM;IAAEI;EAAS,CAAC,GAAGN,eAAe,CAAC,CAAC;;EAEtC;EACA,MAAMO,kBAAkB,GAAG,CAAC,CAAC,IAAK,IAAIC,IAAI,CAAC,CAAC,CAACC,iBAAiB,CAAC,CAAC,GAAG,EAAE,CAAE;;EAEvE;EACA;EACA,IAAKC,MAAM,CAAEJ,QAAQ,CAACK,MAAO,CAAC,KAAKJ,kBAAkB,EAAG;IACvD,OAAO,IAAI;EACZ;EAEA,MAAMK,YAAY,GAAGF,MAAM,CAAEJ,QAAQ,CAACK,MAAO,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE;EAC9D,MAAME,QAAQ,GACb,EAAE,KAAKP,QAAQ,CAACQ,IAAI,IAAIC,KAAK,CAAEL,MAAM,CAAEJ,QAAQ,CAACQ,IAAK,CAAE,CAAC,GACrDR,QAAQ,CAACQ,IAAI,GACZ,MAAMF,YAAc,GAAGN,QAAQ,CAACU,eAAiB,EAAC;;EAEvD;EACA,MAAMC,oBAAoB,GAAGX,QAAQ,CAACY,MAAM,CAACC,OAAO,CAAE,GAAG,EAAE,GAAI,CAAC;EAEhE,MAAMC,cAAc,GACnB,KAAK,KAAKd,QAAQ,CAACY,MAAM,GACtBpB,EAAE,CAAE,4BAA6B,CAAC,GACjC,IAAIe,QAAU,KAAKI,oBAAsB,EAAC;;EAE/C;EACA;EACA,MAAMI,6BAA6B,GAClCJ,oBAAoB,CAACK,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC;EAEzC,OAAOF,6BAA6B,gBACnChB,IAAA,CAACF,eAAe;IAACqB,SAAS,EAAC,+BAA+B;IAAAC,QAAA,EACvDZ;EAAQ,CACM,CAAC,gBAElBR,IAAA,CAACJ,OAAO;IAACyB,SAAS,EAAC,KAAK;IAACC,IAAI,EAAGP,cAAgB;IAAAK,QAAA,eAC/CpB,IAAA,CAACF,eAAe;MAACqB,SAAS,EAAC,+BAA+B;MAAAC,QAAA,EACvDZ;IAAQ,CACM;EAAC,CACV,CACT;AACF,CAAC;AAED,eAAeX,QAAQ","ignoreList":[]}