{"version":3,"names":["createContext","disabledStyles","useCx","jsx","_jsx","Context","Consumer","Provider","Disabled","className","children","isDisabled","props","cx","value","inert","undefined"],"sources":["@wordpress/components/src/disabled/index.tsx"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { createContext } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { disabledStyles } from './styles/disabled-styles';\r\nimport type { DisabledProps } from './types';\r\nimport type { WordPressComponentProps } from '../context';\r\nimport { useCx } from '../utils';\r\n\r\nconst Context = createContext< boolean >( false );\r\nconst { Consumer, Provider } = Context;\r\n\r\n/**\r\n * `Disabled` is a component which disables descendant tabbable elements and\r\n * prevents pointer interaction.\r\n *\r\n * _Note: this component may not behave as expected in browsers that don't\r\n * support the `inert` HTML attribute. We recommend adding the official WICG\r\n * polyfill when using this component in your project._\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/inert\r\n *\r\n * ```jsx\r\n * import { Button, Disabled, TextControl } from '@wordpress/components';\r\n * import { useState } from '@wordpress/element';\r\n *\r\n * const MyDisabled = () => {\r\n * \tconst [ isDisabled, setIsDisabled ] = useState( true );\r\n *\r\n * \tlet input = <TextControl label=\"Input\" onChange={ () => {} } />;\r\n * \tif ( isDisabled ) {\r\n * \t\tinput = <Disabled>{ input }</Disabled>;\r\n * \t}\r\n *\r\n * \tconst toggleDisabled = () => {\r\n * \t\tsetIsDisabled( ( state ) => ! state );\r\n * \t};\r\n *\r\n * \treturn (\r\n * \t\t<div>\r\n * \t\t\t{ input }\r\n * \t\t\t<Button variant=\"primary\" onClick={ toggleDisabled }>\r\n * \t\t\t\tToggle Disabled\r\n * \t\t\t</Button>\r\n * \t\t</div>\r\n * \t);\r\n * };\r\n * ```\r\n */\r\nfunction Disabled( {\r\n\tclassName,\r\n\tchildren,\r\n\tisDisabled = true,\r\n\t...props\r\n}: WordPressComponentProps< DisabledProps, 'div' > ) {\r\n\tconst cx = useCx();\r\n\r\n\treturn (\r\n\t\t<Provider value={ isDisabled }>\r\n\t\t\t<div\r\n\t\t\t\t// @ts-ignore Reason: inert is a recent HTML attribute\r\n\t\t\t\tinert={ isDisabled ? 'true' : undefined }\r\n\t\t\t\tclassName={\r\n\t\t\t\t\tisDisabled\r\n\t\t\t\t\t\t? cx( disabledStyles, className, 'components-disabled' )\r\n\t\t\t\t\t\t: undefined\r\n\t\t\t\t}\r\n\t\t\t\t{ ...props }\r\n\t\t\t>\r\n\t\t\t\t{ children }\r\n\t\t\t</div>\r\n\t\t</Provider>\r\n\t);\r\n}\r\n\r\nDisabled.Context = Context;\r\nDisabled.Consumer = Consumer;\r\n\r\nexport default Disabled;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,oBAAoB;;AAElD;AACA;AACA;AACA,SAASC,cAAc,QAAQ,0BAA0B;AAGzD,SAASC,KAAK,QAAQ,UAAU;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEjC,MAAMC,OAAO,GAAGL,aAAa,CAAa,KAAM,CAAC;AACjD,MAAM;EAAEM,QAAQ;EAAEC;AAAS,CAAC,GAAGF,OAAO;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,QAAQA,CAAE;EAClBC,SAAS;EACTC,QAAQ;EACRC,UAAU,GAAG,IAAI;EACjB,GAAGC;AAC6C,CAAC,EAAG;EACpD,MAAMC,EAAE,GAAGX,KAAK,CAAC,CAAC;EAElB,oBACCE,IAAA,CAACG,QAAQ;IAACO,KAAK,EAAGH,UAAY;IAAAD,QAAA,eAC7BN,IAAA;MACC;MACAW,KAAK,EAAGJ,UAAU,GAAG,MAAM,GAAGK,SAAW;MACzCP,SAAS,EACRE,UAAU,GACPE,EAAE,CAAEZ,cAAc,EAAEQ,SAAS,EAAE,qBAAsB,CAAC,GACtDO,SACH;MAAA,GACIJ,KAAK;MAAAF,QAAA,EAERA;IAAQ,CACN;EAAC,CACG,CAAC;AAEb;AAEAF,QAAQ,CAACH,OAAO,GAAGA,OAAO;AAC1BG,QAAQ,CAACF,QAAQ,GAAGA,QAAQ;AAE5B,eAAeE,QAAQ","ignoreList":[]}