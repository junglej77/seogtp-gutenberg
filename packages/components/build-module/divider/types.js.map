{"version":3,"names":[],"sources":["@wordpress/components/src/divider/types.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport type { SeparatorProps } from '@ariakit/react';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport type { SpaceInput } from '../utils/space';\r\n\r\nexport type DividerProps = Omit<\r\n\tSeparatorProps,\r\n\t'children' | 'unstable_system' | 'orientation' | 'as' | 'render'\r\n> & {\r\n\t/**\r\n\t * Adjusts all margins on the inline dimension.\r\n\t *\r\n\t * Can either be a number (which will act as a multiplier to the library's grid system base of 4px),\r\n\t * or a literal CSS value string.\r\n\t */\r\n\tmargin?: SpaceInput;\r\n\t/**\r\n\t * Adjusts the inline-end margin.\r\n\t *\r\n\t * Can either be a number (which will act as a multiplier to the library's grid system base of 4px),\r\n\t * or a literal CSS value string.\r\n\t */\r\n\tmarginEnd?: SpaceInput;\r\n\t/**\r\n\t * Adjusts the inline-start margin.\r\n\t *\r\n\t * Can either be a number (which will act as a multiplier to the library's grid system base of 4px),\r\n\t * or a literal CSS value string.\r\n\t */\r\n\tmarginStart?: SpaceInput;\r\n\t/**\r\n\t * Divider's orientation. When using inside a flex container, you may need\r\n\t * to make sure the divider is `stretch` aligned in order for it to be\r\n\t * visible.\r\n\t *\r\n\t * @default 'horizontal'\r\n\t */\r\n\torientation?: SeparatorProps[ 'orientation' ];\r\n};\r\n"],"mappings":"","ignoreList":[]}