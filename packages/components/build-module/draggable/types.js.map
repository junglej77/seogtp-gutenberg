{"version":3,"names":[],"sources":["@wordpress/components/src/draggable/types.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport type { DragEvent, ReactNode } from 'react';\r\n\r\nexport type DraggableProps = {\r\n\t/**\r\n\t * Children.\r\n\t */\r\n\tchildren: ( props: {\r\n\t\t/**\r\n\t\t * `onDragStart` handler.\r\n\t\t */\r\n\t\tonDraggableStart: ( event: DragEvent ) => void;\r\n\t\t/**\r\n\t\t * `onDragEnd` handler.\r\n\t\t */\r\n\t\tonDraggableEnd: ( event: DragEvent ) => void;\r\n\t} ) => JSX.Element | null;\r\n\t/**\r\n\t * Whether to append the cloned element to the `ownerDocument` body.\r\n\t * By default, elements sourced by id are appended to the element's wrapper.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tappendToOwnerDocument?: boolean;\r\n\t/**\r\n\t * Classname for the cloned element.\r\n\t */\r\n\tcloneClassname?: string;\r\n\t/**\r\n\t * The HTML id of the element to clone on drag\r\n\t */\r\n\telementId: string;\r\n\t/**\r\n\t * A function called when dragging ends. This callback receives the `event`\r\n\t * object from the `dragend` event as its first parameter.\r\n\t */\r\n\tonDragEnd?: ( event: DragEvent ) => void;\r\n\t/**\r\n\t * A function called when the element being dragged is dragged over a valid\r\n\t * drop target. This callback receives the `event` object from the\r\n\t * `dragover` event as its first parameter.\r\n\t */\r\n\tonDragOver?: ( event: DragEvent ) => void;\r\n\t/**\r\n\t * A function called when dragging starts. This callback receives the\r\n\t * `event` object from the `dragstart` event as its first parameter.\r\n\t */\r\n\tonDragStart?: ( event: DragEvent ) => void;\r\n\t/**\r\n\t * Arbitrary data object attached to the drag and drop event.\r\n\t */\r\n\ttransferData: unknown;\r\n\t/**\r\n\t * The transfer data type to set.\r\n\t *\r\n\t * @default 'text'\r\n\t */\r\n\t__experimentalTransferDataType?: string;\r\n\t/**\r\n\t * Component to show when dragging.\r\n\t */\r\n\t__experimentalDragComponent?: ReactNode;\r\n};\r\n"],"mappings":"","ignoreList":[]}