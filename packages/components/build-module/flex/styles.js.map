{"version":3,"names":["css","Flex","process","env","NODE_ENV","name","styles","map","toString","_EMOTION_STRINGIFIED_CSS_ERROR__","Item","block","ItemsColumn","ItemsRow"],"sources":["@wordpress/components/src/flex/styles.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport { css } from '@emotion/react';\r\n\r\nexport const Flex = css`\r\n\tdisplay: flex;\r\n`;\r\n\r\nexport const Item = css`\r\n\tdisplay: block;\r\n\tmax-height: 100%;\r\n\tmax-width: 100%;\r\n\tmin-height: 0;\r\n\tmin-width: 0;\r\n`;\r\n\r\nexport const block = css`\r\n\tflex: 1;\r\n`;\r\n\r\n/**\r\n * Workaround to optimize DOM rendering.\r\n * We'll enhance alignment with naive parent flex assumptions.\r\n *\r\n * Trade-off:\r\n * Far less DOM less. However, UI rendering is not as reliable.\r\n */\r\n\r\n/**\r\n * Improves stability of width/height rendering.\r\n * https://github.com/ItsJonQ/g2/pull/149\r\n */\r\nexport const ItemsColumn = css`\r\n\t> * {\r\n\t\tmin-height: 0;\r\n\t}\r\n`;\r\n\r\nexport const ItemsRow = css`\r\n\t> * {\r\n\t\tmin-width: 0;\r\n\t}\r\n`;\r\n"],"mappings":";AAAA;AACA;AACA;AACA,SAASA,GAAG,QAAQ,gBAAgB;AAEpC,OAAO,MAAMC,IAAI,GAAAC,OAAA,CAAAC,GAAA,CAAAC,QAAA;EAAAC,IAAA;EAAAC,MAAA;AAAA;EAAAD,IAAA;EAAAC,MAAA;EAAAC,GAAA;EAAAC,QAAA,EAAAC;AAAA,CAEhB;AAED,OAAO,MAAMC,IAAI,GAAAR,OAAA,CAAAC,GAAA,CAAAC,QAAA;EAAAC,IAAA;EAAAC,MAAA;AAAA;EAAAD,IAAA;EAAAC,MAAA;EAAAC,GAAA;EAAAC,QAAA,EAAAC;AAAA,CAMhB;AAED,OAAO,MAAME,KAAK,GAAAT,OAAA,CAAAC,GAAA,CAAAC,QAAA;EAAAC,IAAA;EAAAC,MAAA;AAAA;EAAAD,IAAA;EAAAC,MAAA;EAAAC,GAAA;EAAAC,QAAA,EAAAC;AAAA,CAEjB;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,MAAMG,WAAW,GAAAV,OAAA,CAAAC,GAAA,CAAAC,QAAA;EAAAC,IAAA;EAAAC,MAAA;AAAA;EAAAD,IAAA;EAAAC,MAAA;EAAAC,GAAA;EAAAC,QAAA,EAAAC;AAAA,CAIvB;AAED,OAAO,MAAMI,QAAQ,GAAAX,OAAA,CAAAC,GAAA,CAAAC,QAAA;EAAAC,IAAA;EAAAC,MAAA;AAAA;EAAAD,IAAA;EAAAC,MAAA;EAAAC,GAAA;EAAAC,QAAA,EAAAC;AAAA,CAIpB","ignoreList":[]}