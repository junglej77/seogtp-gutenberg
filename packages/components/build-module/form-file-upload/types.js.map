{"version":3,"names":[],"sources":["@wordpress/components/src/form-file-upload/types.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport type { ComponentProps, InputHTMLAttributes, ReactNode } from 'react';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport type Icon from '../icon';\r\n\r\n// TODO: Replace `children` and `icon` types with props from Button once Button is typed.\r\nexport type FormFileUploadProps = {\r\n\t/**\r\n\t * Start opting into the larger default height that will become the default size in a future version.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\t__next40pxDefaultSize?: boolean;\r\n\t/**\r\n\t * A string passed to `input` element that tells the browser which file types can be\r\n\t * upload to the upload by the user use. e.g: `image/*,video/*`.\r\n\t *\r\n\t * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Unique_file_type_specifiers.\r\n\t */\r\n\taccept?: InputHTMLAttributes< HTMLInputElement >[ 'accept' ];\r\n\t/**\r\n\t * Children are passed as children of `Button`.\r\n\t */\r\n\tchildren?: ReactNode;\r\n\t/**\r\n\t * The icon to render in the `Button`.\r\n\t */\r\n\ticon?: ComponentProps< typeof Icon >[ 'icon' ];\r\n\t/**\r\n\t * Whether to allow multiple selection of files or not.\r\n\t */\r\n\tmultiple?: InputHTMLAttributes< HTMLInputElement >[ 'multiple' ];\r\n\t/**\r\n\t * Callback function passed directly to the `input` file element.\r\n\t *\r\n\t * Select files will be available in `event.currentTarget.files`.\r\n\t */\r\n\tonChange: InputHTMLAttributes< HTMLInputElement >[ 'onChange' ];\r\n\t/**\r\n\t * Callback function passed directly to the `input` file element.\r\n\t *\r\n\t * This can be useful when you want to force a `change` event to fire when\r\n\t * the user chooses the same file again. To do this, set the target value to\r\n\t * an empty string in the `onClick` function.\r\n\t *\r\n\t * ```jsx\r\n\t * <FormFileUpload\r\n\t * \tonClick={ ( event ) => ( event.target.value = '' ) }\r\n\t * \tonChange={ onChange }\r\n\t * >\r\n\t * \tUpload\r\n\t * </FormFileUpload>\r\n\t * ```\r\n\t */\r\n\tonClick?: InputHTMLAttributes< HTMLInputElement >[ 'onClick' ];\r\n\t/**\r\n\t * Optional callback function used to render the UI.\r\n\t *\r\n\t * If passed, the component does not render the default UI (a button) and\r\n\t * calls this function to render it. The function receives an object with\r\n\t * property `openFileDialog`, a function that, when called, opens the browser\r\n\t * native file upload modal window.\r\n\t */\r\n\trender?: ( arg: { openFileDialog: () => void } ) => ReactNode;\r\n};\r\n"],"mappings":"","ignoreList":[]}