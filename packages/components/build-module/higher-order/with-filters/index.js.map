{"version":3,"names":["Component","addAction","applyFilters","removeAction","createHigherOrderComponent","debounce","jsx","_jsx","ANIMATION_FRAME_PERIOD","withFilters","hookName","OriginalComponent","namespace","FilteredComponent","ensureFilteredComponent","undefined","FilteredComponentRenderer","constructor","props","componentDidMount","instances","push","length","onHooksUpdated","componentWillUnmount","filter","instance","render","throttledForceUpdate","forEach","forceUpdate","updatedHookName"],"sources":["@wordpress/components/src/higher-order/with-filters/index.tsx"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { Component } from '@wordpress/element';\r\nimport { addAction, applyFilters, removeAction } from '@wordpress/hooks';\r\nimport { createHigherOrderComponent, debounce } from '@wordpress/compose';\r\n\r\nconst ANIMATION_FRAME_PERIOD = 16;\r\n\r\n/**\r\n * Creates a higher-order component which adds filtering capability to the\r\n * wrapped component. Filters get applied when the original component is about\r\n * to be mounted. When a filter is added or removed that matches the hook name,\r\n * the wrapped component re-renders.\r\n *\r\n * @param hookName Hook name exposed to be used by filters.\r\n *\r\n * @return Higher-order component factory.\r\n *\r\n * ```jsx\r\n * import { withFilters } from '@wordpress/components';\r\n * import { addFilter } from '@wordpress/hooks';\r\n *\r\n * const MyComponent = ( { title } ) => <h1>{ title }</h1>;\r\n *\r\n * const ComponentToAppend = () => <div>Appended component</div>;\r\n *\r\n * function withComponentAppended( FilteredComponent ) {\r\n * \treturn ( props ) => (\r\n * \t\t<>\r\n * \t\t\t<FilteredComponent { ...props } />\r\n * \t\t\t<ComponentToAppend />\r\n * \t\t</>\r\n * \t);\r\n * }\r\n *\r\n * addFilter(\r\n * \t'MyHookName',\r\n * \t'my-plugin/with-component-appended',\r\n * \twithComponentAppended\r\n * );\r\n *\r\n * const MyComponentWithFilters = withFilters( 'MyHookName' )( MyComponent );\r\n * ```\r\n */\r\nexport default function withFilters( hookName: string ) {\r\n\treturn createHigherOrderComponent( ( OriginalComponent ) => {\r\n\t\tconst namespace = 'core/with-filters/' + hookName;\r\n\r\n\t\t/**\r\n\t\t * The component definition with current filters applied. Each instance\r\n\t\t * reuse this shared reference as an optimization to avoid excessive\r\n\t\t * calls to `applyFilters` when many instances exist.\r\n\t\t */\r\n\t\tlet FilteredComponent: React.ComponentType;\r\n\r\n\t\t/**\r\n\t\t * Initializes the FilteredComponent variable once, if not already\r\n\t\t * assigned. Subsequent calls are effectively a noop.\r\n\t\t */\r\n\t\tfunction ensureFilteredComponent() {\r\n\t\t\tif ( FilteredComponent === undefined ) {\r\n\t\t\t\tFilteredComponent = applyFilters(\r\n\t\t\t\t\thookName,\r\n\t\t\t\t\tOriginalComponent\r\n\t\t\t\t) as React.ComponentType;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclass FilteredComponentRenderer extends Component {\r\n\t\t\tstatic instances: FilteredComponentRenderer[];\r\n\r\n\t\t\tconstructor( props: { [ key: string ]: any } ) {\r\n\t\t\t\tsuper( props );\r\n\r\n\t\t\t\tensureFilteredComponent();\r\n\t\t\t}\r\n\r\n\t\t\tcomponentDidMount() {\r\n\t\t\t\tFilteredComponentRenderer.instances.push( this );\r\n\r\n\t\t\t\t// If there were previously no mounted instances for components\r\n\t\t\t\t// filtered on this hook, add the hook handler.\r\n\t\t\t\tif ( FilteredComponentRenderer.instances.length === 1 ) {\r\n\t\t\t\t\taddAction( 'hookRemoved', namespace, onHooksUpdated );\r\n\t\t\t\t\taddAction( 'hookAdded', namespace, onHooksUpdated );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcomponentWillUnmount() {\r\n\t\t\t\tFilteredComponentRenderer.instances =\r\n\t\t\t\t\tFilteredComponentRenderer.instances.filter(\r\n\t\t\t\t\t\t( instance ) => instance !== this\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t// If this was the last of the mounted components filtered on\r\n\t\t\t\t// this hook, remove the hook handler.\r\n\t\t\t\tif ( FilteredComponentRenderer.instances.length === 0 ) {\r\n\t\t\t\t\tremoveAction( 'hookRemoved', namespace );\r\n\t\t\t\t\tremoveAction( 'hookAdded', namespace );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\trender() {\r\n\t\t\t\treturn <FilteredComponent { ...this.props } />;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tFilteredComponentRenderer.instances = [];\r\n\r\n\t\t/**\r\n\t\t * Updates the FilteredComponent definition, forcing a render for each\r\n\t\t * mounted instance. This occurs a maximum of once per animation frame.\r\n\t\t */\r\n\t\tconst throttledForceUpdate = debounce( () => {\r\n\t\t\t// Recreate the filtered component, only after delay so that it's\r\n\t\t\t// computed once, even if many filters added.\r\n\t\t\tFilteredComponent = applyFilters(\r\n\t\t\t\thookName,\r\n\t\t\t\tOriginalComponent\r\n\t\t\t) as React.ComponentType;\r\n\r\n\t\t\t// Force each instance to render.\r\n\t\t\tFilteredComponentRenderer.instances.forEach( ( instance ) => {\r\n\t\t\t\tinstance.forceUpdate();\r\n\t\t\t} );\r\n\t\t}, ANIMATION_FRAME_PERIOD );\r\n\r\n\t\t/**\r\n\t\t * When a filter is added or removed for the matching hook name, each\r\n\t\t * mounted instance should re-render with the new filters having been\r\n\t\t * applied to the original component.\r\n\t\t *\r\n\t\t * @param updatedHookName Name of the hook that was updated.\r\n\t\t */\r\n\t\tfunction onHooksUpdated( updatedHookName: string ) {\r\n\t\t\tif ( updatedHookName === hookName ) {\r\n\t\t\t\tthrottledForceUpdate();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn FilteredComponentRenderer;\r\n\t}, 'withFilters' );\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,SAAS,EAAEC,YAAY,EAAEC,YAAY,QAAQ,kBAAkB;AACxE,SAASC,0BAA0B,EAAEC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE1E,MAAMC,sBAAsB,GAAG,EAAE;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,WAAWA,CAAEC,QAAgB,EAAG;EACvD,OAAON,0BAA0B,CAAIO,iBAAiB,IAAM;IAC3D,MAAMC,SAAS,GAAG,oBAAoB,GAAGF,QAAQ;;IAEjD;AACF;AACA;AACA;AACA;IACE,IAAIG,iBAAsC;;IAE1C;AACF;AACA;AACA;IACE,SAASC,uBAAuBA,CAAA,EAAG;MAClC,IAAKD,iBAAiB,KAAKE,SAAS,EAAG;QACtCF,iBAAiB,GAAGX,YAAY,CAC/BQ,QAAQ,EACRC,iBACD,CAAwB;MACzB;IACD;IAEA,MAAMK,yBAAyB,SAAShB,SAAS,CAAC;MAGjDiB,WAAWA,CAAEC,KAA+B,EAAG;QAC9C,KAAK,CAAEA,KAAM,CAAC;QAEdJ,uBAAuB,CAAC,CAAC;MAC1B;MAEAK,iBAAiBA,CAAA,EAAG;QACnBH,yBAAyB,CAACI,SAAS,CAACC,IAAI,CAAE,IAAK,CAAC;;QAEhD;QACA;QACA,IAAKL,yBAAyB,CAACI,SAAS,CAACE,MAAM,KAAK,CAAC,EAAG;UACvDrB,SAAS,CAAE,aAAa,EAAEW,SAAS,EAAEW,cAAe,CAAC;UACrDtB,SAAS,CAAE,WAAW,EAAEW,SAAS,EAAEW,cAAe,CAAC;QACpD;MACD;MAEAC,oBAAoBA,CAAA,EAAG;QACtBR,yBAAyB,CAACI,SAAS,GAClCJ,yBAAyB,CAACI,SAAS,CAACK,MAAM,CACvCC,QAAQ,IAAMA,QAAQ,KAAK,IAC9B,CAAC;;QAEF;QACA;QACA,IAAKV,yBAAyB,CAACI,SAAS,CAACE,MAAM,KAAK,CAAC,EAAG;UACvDnB,YAAY,CAAE,aAAa,EAAES,SAAU,CAAC;UACxCT,YAAY,CAAE,WAAW,EAAES,SAAU,CAAC;QACvC;MACD;MAEAe,MAAMA,CAAA,EAAG;QACR,oBAAOpB,IAAA,CAACM,iBAAiB;UAAA,GAAM,IAAI,CAACK;QAAK,CAAI,CAAC;MAC/C;IACD;IAEAF,yBAAyB,CAACI,SAAS,GAAG,EAAE;;IAExC;AACF;AACA;AACA;IACE,MAAMQ,oBAAoB,GAAGvB,QAAQ,CAAE,MAAM;MAC5C;MACA;MACAQ,iBAAiB,GAAGX,YAAY,CAC/BQ,QAAQ,EACRC,iBACD,CAAwB;;MAExB;MACAK,yBAAyB,CAACI,SAAS,CAACS,OAAO,CAAIH,QAAQ,IAAM;QAC5DA,QAAQ,CAACI,WAAW,CAAC,CAAC;MACvB,CAAE,CAAC;IACJ,CAAC,EAAEtB,sBAAuB,CAAC;;IAE3B;AACF;AACA;AACA;AACA;AACA;AACA;IACE,SAASe,cAAcA,CAAEQ,eAAuB,EAAG;MAClD,IAAKA,eAAe,KAAKrB,QAAQ,EAAG;QACnCkB,oBAAoB,CAAC,CAAC;MACvB;IACD;IAEA,OAAOZ,yBAAyB;EACjC,CAAC,EAAE,aAAc,CAAC;AACnB","ignoreList":[]}