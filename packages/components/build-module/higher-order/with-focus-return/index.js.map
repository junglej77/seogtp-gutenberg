{"version":3,"names":["Component","createHigherOrderComponent","useFocusReturn","deprecated","jsx","_jsx","isComponentLike","object","options","HoC","onFocusReturn","WrappedComponent","WithFocusReturn","props","ref","children","Provider","since","hint"],"sources":["@wordpress/components/src/higher-order/with-focus-return/index.tsx"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { Component } from '@wordpress/element';\r\nimport { createHigherOrderComponent, useFocusReturn } from '@wordpress/compose';\r\nimport deprecated from '@wordpress/deprecated';\r\n\r\n/**\r\n * Returns true if the given object is component-like. An object is component-\r\n * like if it is an instance of wp.element.Component, or is a function.\r\n *\r\n * @param object Object to test.\r\n *\r\n * @return Whether object is component-like.\r\n */\r\nfunction isComponentLike( object: any ): object is React.ComponentType {\r\n\treturn object instanceof Component || typeof object === 'function';\r\n}\r\n\r\ntype Props = {\r\n\tonFocusReturn?: () => void;\r\n};\r\n\r\n/**\r\n * Higher Order Component used to be used to wrap disposable elements like\r\n * sidebars, modals, dropdowns. When mounting the wrapped component, we track a\r\n * reference to the current active element so we know where to restore focus\r\n * when the component is unmounted.\r\n *\r\n * @param options The component to be enhanced with\r\n *                focus return behavior, or an object\r\n *                describing the component and the\r\n *                focus return characteristics.\r\n *\r\n * @return Higher Order Component with the focus restauration behaviour.\r\n */\r\nexport default createHigherOrderComponent(\r\n\t// @ts-expect-error TODO: Reconcile with intended `createHigherOrderComponent` types\r\n\t( options: React.ComponentType | Record< string, unknown > ) => {\r\n\t\tconst HoC =\r\n\t\t\t( { onFocusReturn }: Props = {} ) =>\r\n\t\t\t( WrappedComponent: React.ComponentType ) => {\r\n\t\t\t\tconst WithFocusReturn = (\r\n\t\t\t\t\tprops: Record< string, unknown >\r\n\t\t\t\t) => {\r\n\t\t\t\t\tconst ref = useFocusReturn( onFocusReturn );\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div ref={ ref }>\r\n\t\t\t\t\t\t\t<WrappedComponent { ...props } />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn WithFocusReturn;\r\n\t\t\t};\r\n\r\n\t\tif ( isComponentLike( options ) ) {\r\n\t\t\tconst WrappedComponent = options;\r\n\t\t\treturn HoC()( WrappedComponent );\r\n\t\t}\r\n\r\n\t\treturn HoC( options );\r\n\t},\r\n\t'withFocusReturn'\r\n);\r\n\r\nexport const Provider = ( { children }: { children: React.ReactNode } ) => {\r\n\tdeprecated( 'wp.components.FocusReturnProvider component', {\r\n\t\tsince: '5.7',\r\n\t\thint: 'This provider is not used anymore. You can just remove it from your codebase',\r\n\t} );\r\n\r\n\treturn children;\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,0BAA0B,EAAEC,cAAc,QAAQ,oBAAoB;AAC/E,OAAOC,UAAU,MAAM,uBAAuB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAAAC,GAAA,IAAAC,IAAA;AAQA,SAASC,eAAeA,CAAEC,MAAW,EAAkC;EACtE,OAAOA,MAAM,YAAYP,SAAS,IAAI,OAAOO,MAAM,KAAK,UAAU;AACnE;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeN,0BAA0B;AACxC;AACEO,OAAwD,IAAM;EAC/D,MAAMC,GAAG,GACRA,CAAE;IAAEC;EAAqB,CAAC,GAAG,CAAC,CAAC,KAC7BC,gBAAqC,IAAM;IAC5C,MAAMC,eAAe,GACpBC,KAAgC,IAC5B;MACJ,MAAMC,GAAG,GAAGZ,cAAc,CAAEQ,aAAc,CAAC;MAC3C,oBACCL,IAAA;QAAKS,GAAG,EAAGA,GAAK;QAAAC,QAAA,eACfV,IAAA,CAACM,gBAAgB;UAAA,GAAME;QAAK,CAAI;MAAC,CAC7B,CAAC;IAER,CAAC;IAED,OAAOD,eAAe;EACvB,CAAC;EAEF,IAAKN,eAAe,CAAEE,OAAQ,CAAC,EAAG;IACjC,MAAMG,gBAAgB,GAAGH,OAAO;IAChC,OAAOC,GAAG,CAAC,CAAC,CAAEE,gBAAiB,CAAC;EACjC;EAEA,OAAOF,GAAG,CAAED,OAAQ,CAAC;AACtB,CAAC,EACD,iBACD,CAAC;AAED,OAAO,MAAMQ,QAAQ,GAAGA,CAAE;EAAED;AAAwC,CAAC,KAAM;EAC1EZ,UAAU,CAAE,6CAA6C,EAAE;IAC1Dc,KAAK,EAAE,KAAK;IACZC,IAAI,EAAE;EACP,CAAE,CAAC;EAEH,OAAOH,QAAQ;AAChB,CAAC","ignoreList":[]}