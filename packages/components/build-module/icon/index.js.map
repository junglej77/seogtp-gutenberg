{"version":3,"names":["cloneElement","createElement","isValidElement","SVG","Dashicon","jsx","_jsx","Icon","icon","size","additionalProps","type","appliedProps","props","width","height"],"sources":["@wordpress/components/src/icon/index.tsx"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport type { ComponentType, HTMLProps, SVGProps } from 'react';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport {\r\n\tcloneElement,\r\n\tcreateElement,\r\n\tisValidElement,\r\n} from '@wordpress/element';\r\nimport { SVG } from '@wordpress/primitives';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport Dashicon from '../dashicon';\r\nimport type { IconKey as DashiconIconKey } from '../dashicon/types';\r\n\r\nexport type IconType =\r\n\t| DashiconIconKey\r\n\t| ComponentType< { size?: number } >\r\n\t| ( ( props: { size?: number } ) => JSX.Element )\r\n\t| JSX.Element;\r\n\r\ninterface BaseProps {\r\n\t/**\r\n\t * The icon to render. Supported values are: Dashicons (specified as\r\n\t * strings), functions, Component instances and `null`.\r\n\t *\r\n\t * @default null\r\n\t */\r\n\ticon?: IconType | null;\r\n\t/**\r\n\t * The size (width and height) of the icon.\r\n\t *\r\n\t * @default `20` when a Dashicon is rendered, `24` for all other icons.\r\n\t */\r\n\tsize?: number;\r\n}\r\n\r\ntype AdditionalProps< T > = T extends ComponentType< infer U >\r\n\t? U\r\n\t: T extends DashiconIconKey\r\n\t? SVGProps< SVGSVGElement >\r\n\t: {};\r\n\r\nexport type Props = BaseProps & AdditionalProps< IconType >;\r\n\r\nfunction Icon( {\r\n\ticon = null,\r\n\tsize = 'string' === typeof icon ? 20 : 24,\r\n\t...additionalProps\r\n}: Props ) {\r\n\tif ( 'string' === typeof icon ) {\r\n\t\treturn (\r\n\t\t\t<Dashicon\r\n\t\t\t\ticon={ icon }\r\n\t\t\t\tsize={ size }\r\n\t\t\t\t{ ...( additionalProps as HTMLProps< HTMLSpanElement > ) }\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\tif ( isValidElement( icon ) && Dashicon === icon.type ) {\r\n\t\treturn cloneElement( icon, {\r\n\t\t\t...additionalProps,\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( 'function' === typeof icon ) {\r\n\t\treturn createElement( icon, {\r\n\t\t\tsize,\r\n\t\t\t...additionalProps,\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( icon && ( icon.type === 'svg' || icon.type === SVG ) ) {\r\n\t\tconst appliedProps = {\r\n\t\t\t...icon.props,\r\n\t\t\twidth: size,\r\n\t\t\theight: size,\r\n\t\t\t...additionalProps,\r\n\t\t};\r\n\r\n\t\treturn <SVG { ...appliedProps } />;\r\n\t}\r\n\r\n\tif ( isValidElement( icon ) ) {\r\n\t\treturn cloneElement( icon, {\r\n\t\t\t// @ts-ignore Just forwarding the size prop along\r\n\t\t\tsize,\r\n\t\t\t...additionalProps,\r\n\t\t} );\r\n\t}\r\n\r\n\treturn icon;\r\n}\r\n\r\nexport default Icon;\r\n"],"mappings":"AAAA;AACA;AACA;;AAGA;AACA;AACA;AACA,SACCA,YAAY,EACZC,aAAa,EACbC,cAAc,QACR,oBAAoB;AAC3B,SAASC,GAAG,QAAQ,uBAAuB;;AAE3C;AACA;AACA;AACA,OAAOC,QAAQ,MAAM,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAiCnC,SAASC,IAAIA,CAAE;EACdC,IAAI,GAAG,IAAI;EACXC,IAAI,GAAG,QAAQ,KAAK,OAAOD,IAAI,GAAG,EAAE,GAAG,EAAE;EACzC,GAAGE;AACG,CAAC,EAAG;EACV,IAAK,QAAQ,KAAK,OAAOF,IAAI,EAAG;IAC/B,oBACCF,IAAA,CAACF,QAAQ;MACRI,IAAI,EAAGA,IAAM;MACbC,IAAI,EAAGA,IAAM;MAAA,GACNC;IAAe,CACtB,CAAC;EAEJ;EAEA,IAAKR,cAAc,CAAEM,IAAK,CAAC,IAAIJ,QAAQ,KAAKI,IAAI,CAACG,IAAI,EAAG;IACvD,OAAOX,YAAY,CAAEQ,IAAI,EAAE;MAC1B,GAAGE;IACJ,CAAE,CAAC;EACJ;EAEA,IAAK,UAAU,KAAK,OAAOF,IAAI,EAAG;IACjC,OAAOP,aAAa,CAAEO,IAAI,EAAE;MAC3BC,IAAI;MACJ,GAAGC;IACJ,CAAE,CAAC;EACJ;EAEA,IAAKF,IAAI,KAAMA,IAAI,CAACG,IAAI,KAAK,KAAK,IAAIH,IAAI,CAACG,IAAI,KAAKR,GAAG,CAAE,EAAG;IAC3D,MAAMS,YAAY,GAAG;MACpB,GAAGJ,IAAI,CAACK,KAAK;MACbC,KAAK,EAAEL,IAAI;MACXM,MAAM,EAAEN,IAAI;MACZ,GAAGC;IACJ,CAAC;IAED,oBAAOJ,IAAA,CAACH,GAAG;MAAA,GAAMS;IAAY,CAAI,CAAC;EACnC;EAEA,IAAKV,cAAc,CAAEM,IAAK,CAAC,EAAG;IAC7B,OAAOR,YAAY,CAAEQ,IAAI,EAAE;MAC1B;MACAC,IAAI;MACJ,GAAGC;IACJ,CAAE,CAAC;EACJ;EAEA,OAAOF,IAAI;AACZ;AAEA,eAAeD,IAAI","ignoreList":[]}