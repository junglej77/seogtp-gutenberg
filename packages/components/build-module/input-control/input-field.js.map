{"version":3,"names":["useDrag","forwardRef","useRef","useDragCursor","Input","useInputControlStateReducer","withIgnoreIMEEvents","jsx","_jsx","noop","InputField","disabled","dragDirection","dragThreshold","id","isDragEnabled","isPressEnterToChange","onBlur","onChange","onDrag","onDragEnd","onDragStart","onKeyDown","onValidate","size","stateReducer","state","value","valueProp","type","props","ref","change","commit","drag","dragEnd","dragStart","invalidate","pressDown","pressEnter","pressUp","reset","isDragging","isDirty","wasDirtyOnBlur","dragCursor","handleOnBlur","event","target","validity","valid","current","handleOnCommit","handleOnChange","nextValue","currentTarget","err","handleOnKeyDown","key","preventDefault","dragGestureProps","dragProps","distance","dragging","stopPropagation","axis","threshold","enabled","pointer","capture","handleOnMouseDown","onMouseDown","ownerDocument","activeElement","focus","className","inputSize","ForwardedComponent"],"sources":["@wordpress/components/src/input-control/input-field.tsx"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport { useDrag } from '@use-gesture/react';\r\nimport type {\r\n\tSyntheticEvent,\r\n\tChangeEvent,\r\n\tKeyboardEvent,\r\n\tPointerEvent,\r\n\tFocusEvent,\r\n\tForwardedRef,\r\n\tMouseEvent,\r\n} from 'react';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { forwardRef, useRef } from '@wordpress/element';\r\n/**\r\n * Internal dependencies\r\n */\r\nimport type { WordPressComponentProps } from '../context';\r\nimport { useDragCursor } from './utils';\r\nimport { Input } from './styles/input-control-styles';\r\nimport { useInputControlStateReducer } from './reducer/reducer';\r\nimport type { InputFieldProps } from './types';\r\nimport { withIgnoreIMEEvents } from '../utils/with-ignore-ime-events';\r\n\r\nconst noop = () => {};\r\n\r\nfunction InputField(\r\n\t{\r\n\t\tdisabled = false,\r\n\t\tdragDirection = 'n',\r\n\t\tdragThreshold = 10,\r\n\t\tid,\r\n\t\tisDragEnabled = false,\r\n\t\tisPressEnterToChange = false,\r\n\t\tonBlur = noop,\r\n\t\tonChange = noop,\r\n\t\tonDrag = noop,\r\n\t\tonDragEnd = noop,\r\n\t\tonDragStart = noop,\r\n\t\tonKeyDown = noop,\r\n\t\tonValidate = noop,\r\n\t\tsize = 'default',\r\n\t\tstateReducer = ( state: any ) => state,\r\n\t\tvalue: valueProp,\r\n\t\ttype,\r\n\t\t...props\r\n\t}: WordPressComponentProps< InputFieldProps, 'input', false >,\r\n\tref: ForwardedRef< HTMLInputElement >\r\n) {\r\n\tconst {\r\n\t\t// State.\r\n\t\tstate,\r\n\t\t// Actions.\r\n\t\tchange,\r\n\t\tcommit,\r\n\t\tdrag,\r\n\t\tdragEnd,\r\n\t\tdragStart,\r\n\t\tinvalidate,\r\n\t\tpressDown,\r\n\t\tpressEnter,\r\n\t\tpressUp,\r\n\t\treset,\r\n\t} = useInputControlStateReducer(\r\n\t\tstateReducer,\r\n\t\t{\r\n\t\t\tisDragEnabled,\r\n\t\t\tvalue: valueProp,\r\n\t\t\tisPressEnterToChange,\r\n\t\t},\r\n\t\tonChange\r\n\t);\r\n\r\n\tconst { value, isDragging, isDirty } = state;\r\n\tconst wasDirtyOnBlur = useRef( false );\r\n\r\n\tconst dragCursor = useDragCursor( isDragging, dragDirection );\r\n\r\n\tconst handleOnBlur = ( event: FocusEvent< HTMLInputElement > ) => {\r\n\t\tonBlur( event );\r\n\r\n\t\t/**\r\n\t\t * If isPressEnterToChange is set, this commits the value to\r\n\t\t * the onChange callback.\r\n\t\t */\r\n\t\tif ( isDirty || ! event.target.validity.valid ) {\r\n\t\t\twasDirtyOnBlur.current = true;\r\n\t\t\thandleOnCommit( event );\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleOnChange = ( event: ChangeEvent< HTMLInputElement > ) => {\r\n\t\tconst nextValue = event.target.value;\r\n\t\tchange( nextValue, event );\r\n\t};\r\n\r\n\tconst handleOnCommit = ( event: SyntheticEvent< HTMLInputElement > ) => {\r\n\t\tconst nextValue = event.currentTarget.value;\r\n\r\n\t\ttry {\r\n\t\t\tonValidate( nextValue );\r\n\t\t\tcommit( nextValue, event );\r\n\t\t} catch ( err ) {\r\n\t\t\tinvalidate( err, event );\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleOnKeyDown = ( event: KeyboardEvent< HTMLInputElement > ) => {\r\n\t\tconst { key } = event;\r\n\t\tonKeyDown( event );\r\n\r\n\t\tswitch ( key ) {\r\n\t\t\tcase 'ArrowUp':\r\n\t\t\t\tpressUp( event );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowDown':\r\n\t\t\t\tpressDown( event );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Enter':\r\n\t\t\t\tpressEnter( event );\r\n\r\n\t\t\t\tif ( isPressEnterToChange ) {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\thandleOnCommit( event );\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Escape':\r\n\t\t\t\tif ( isPressEnterToChange && isDirty ) {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\treset( valueProp, event );\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tconst dragGestureProps = useDrag< PointerEvent< HTMLInputElement > >(\r\n\t\t( dragProps ) => {\r\n\t\t\tconst { distance, dragging, event, target } = dragProps;\r\n\r\n\t\t\t// The `target` prop always references the `input` element while, by\r\n\t\t\t// default, the `dragProps.event.target` property would reference the real\r\n\t\t\t// event target (i.e. any DOM element that the pointer is hovering while\r\n\t\t\t// dragging). Ensuring that the `target` is always the `input` element\r\n\t\t\t// allows consumers of `InputControl` (or any higher-level control) to\r\n\t\t\t// check the input's validity by accessing `event.target.validity.valid`.\r\n\t\t\tdragProps.event = {\r\n\t\t\t\t...dragProps.event,\r\n\t\t\t\ttarget,\r\n\t\t\t};\r\n\r\n\t\t\tif ( ! distance ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tevent.stopPropagation();\r\n\r\n\t\t\t/**\r\n\t\t\t * Quick return if no longer dragging.\r\n\t\t\t * This prevents unnecessary value calculations.\r\n\t\t\t */\r\n\t\t\tif ( ! dragging ) {\r\n\t\t\t\tonDragEnd( dragProps );\r\n\t\t\t\tdragEnd( dragProps );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tonDrag( dragProps );\r\n\t\t\tdrag( dragProps );\r\n\r\n\t\t\tif ( ! isDragging ) {\r\n\t\t\t\tonDragStart( dragProps );\r\n\t\t\t\tdragStart( dragProps );\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\taxis: dragDirection === 'e' || dragDirection === 'w' ? 'x' : 'y',\r\n\t\t\tthreshold: dragThreshold,\r\n\t\t\tenabled: isDragEnabled,\r\n\t\t\tpointer: { capture: false },\r\n\t\t}\r\n\t);\r\n\r\n\tconst dragProps = isDragEnabled ? dragGestureProps() : {};\r\n\t/*\r\n\t * Works around the odd UA (e.g. Firefox) that does not focus inputs of\r\n\t * type=number when their spinner arrows are pressed.\r\n\t */\r\n\tlet handleOnMouseDown;\r\n\tif ( type === 'number' ) {\r\n\t\thandleOnMouseDown = ( event: MouseEvent< HTMLInputElement > ) => {\r\n\t\t\tprops.onMouseDown?.( event );\r\n\t\t\tif (\r\n\t\t\t\tevent.currentTarget !==\r\n\t\t\t\tevent.currentTarget.ownerDocument.activeElement\r\n\t\t\t) {\r\n\t\t\t\tevent.currentTarget.focus();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Input\r\n\t\t\t{ ...props }\r\n\t\t\t{ ...dragProps }\r\n\t\t\tclassName=\"components-input-control__input\"\r\n\t\t\tdisabled={ disabled }\r\n\t\t\tdragCursor={ dragCursor }\r\n\t\t\tisDragging={ isDragging }\r\n\t\t\tid={ id }\r\n\t\t\tonBlur={ handleOnBlur }\r\n\t\t\tonChange={ handleOnChange }\r\n\t\t\tonKeyDown={ withIgnoreIMEEvents( handleOnKeyDown ) }\r\n\t\t\tonMouseDown={ handleOnMouseDown }\r\n\t\t\tref={ ref }\r\n\t\t\tinputSize={ size }\r\n\t\t\t// Fallback to `''` to avoid \"uncontrolled to controlled\" warning.\r\n\t\t\t// See https://github.com/WordPress/gutenberg/pull/47250 for details.\r\n\t\t\tvalue={ value ?? '' }\r\n\t\t\ttype={ type }\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nconst ForwardedComponent = forwardRef( InputField );\r\n\r\nexport default ForwardedComponent;\r\n"],"mappings":"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","ignoreList":[]}