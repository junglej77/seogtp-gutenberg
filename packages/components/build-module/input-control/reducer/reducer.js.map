{"version":3,"names":["useReducer","useLayoutEffect","useRef","initialInputControlState","initialStateReducer","actions","mergeInitialState","initialState","value","initialValue","inputControlStateReducer","composedStateReducers","state","action","nextState","type","CONTROL","payload","isDirty","_event","undefined","PRESS_UP","PRESS_DOWN","DRAG_START","isDragging","DRAG_END","CHANGE","error","isPressEnterToChange","COMMIT","RESET","INVALIDATE","event","useInputControlStateReducer","stateReducer","onChangeHandler","dispatch","createChangeEvent","nextValue","createKeyEvent","createDragEvent","change","invalidate","reset","commit","dragStart","drag","DRAG","dragEnd","pressUp","pressDown","pressEnter","PRESS_ENTER","currentStateRef","refPropsRef","current","_state$value","_initialState$value"],"sources":["@wordpress/components/src/input-control/reducer/reducer.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport type { SyntheticEvent, ChangeEvent, PointerEvent } from 'react';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { useReducer, useLayoutEffect, useRef } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport type { InputState, StateReducer } from './state';\r\nimport { initialInputControlState, initialStateReducer } from './state';\r\nimport * as actions from './actions';\r\nimport type { InputChangeCallback } from '../types';\r\n\r\n/**\r\n * Prepares initialState for the reducer.\r\n *\r\n * @param initialState The initial state.\r\n * @return Prepared initialState for the reducer\r\n */\r\nfunction mergeInitialState(\r\n\tinitialState: Partial< InputState > = initialInputControlState\r\n): InputState {\r\n\tconst { value } = initialState;\r\n\r\n\treturn {\r\n\t\t...initialInputControlState,\r\n\t\t...initialState,\r\n\t\tinitialValue: value,\r\n\t} as InputState;\r\n}\r\n\r\n/**\r\n * Creates the base reducer which may be coupled to a specializing reducer.\r\n * As its final step, for all actions other than CONTROL, the base reducer\r\n * passes the state and action on through the specializing reducer. The\r\n * exception for CONTROL actions is because they represent controlled updates\r\n * from props and no case has yet presented for their specialization.\r\n *\r\n * @param composedStateReducers A reducer to specialize state changes.\r\n * @return The reducer.\r\n */\r\nfunction inputControlStateReducer(\r\n\tcomposedStateReducers: StateReducer\r\n): StateReducer< actions.ControlAction > {\r\n\treturn ( state, action ) => {\r\n\t\tconst nextState = { ...state };\r\n\r\n\t\tswitch ( action.type ) {\r\n\t\t\t/*\r\n\t\t\t * Controlled updates\r\n\t\t\t */\r\n\t\t\tcase actions.CONTROL:\r\n\t\t\t\tnextState.value = action.payload.value;\r\n\t\t\t\tnextState.isDirty = false;\r\n\t\t\t\tnextState._event = undefined;\r\n\t\t\t\t// Returns immediately to avoid invoking additional reducers.\r\n\t\t\t\treturn nextState;\r\n\r\n\t\t\t/**\r\n\t\t\t * Keyboard events\r\n\t\t\t */\r\n\t\t\tcase actions.PRESS_UP:\r\n\t\t\t\tnextState.isDirty = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase actions.PRESS_DOWN:\r\n\t\t\t\tnextState.isDirty = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t/**\r\n\t\t\t * Drag events\r\n\t\t\t */\r\n\t\t\tcase actions.DRAG_START:\r\n\t\t\t\tnextState.isDragging = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase actions.DRAG_END:\r\n\t\t\t\tnextState.isDragging = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t/**\r\n\t\t\t * Input events\r\n\t\t\t */\r\n\t\t\tcase actions.CHANGE:\r\n\t\t\t\tnextState.error = null;\r\n\t\t\t\tnextState.value = action.payload.value;\r\n\r\n\t\t\t\tif ( state.isPressEnterToChange ) {\r\n\t\t\t\t\tnextState.isDirty = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase actions.COMMIT:\r\n\t\t\t\tnextState.value = action.payload.value;\r\n\t\t\t\tnextState.isDirty = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase actions.RESET:\r\n\t\t\t\tnextState.error = null;\r\n\t\t\t\tnextState.isDirty = false;\r\n\t\t\t\tnextState.value = action.payload.value || state.initialValue;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t/**\r\n\t\t\t * Validation\r\n\t\t\t */\r\n\t\t\tcase actions.INVALIDATE:\r\n\t\t\t\tnextState.error = action.payload.error;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tnextState._event = action.payload.event;\r\n\r\n\t\t/**\r\n\t\t * Send the nextState + action to the composedReducers via\r\n\t\t * this \"bridge\" mechanism. This allows external stateReducers\r\n\t\t * to hook into actions, and modify state if needed.\r\n\t\t */\r\n\t\treturn composedStateReducers( nextState, action );\r\n\t};\r\n}\r\n\r\n/**\r\n * A custom hook that connects and external stateReducer with an internal\r\n * reducer. This hook manages the internal state of InputControl.\r\n * However, by connecting an external stateReducer function, other\r\n * components can react to actions as well as modify state before it is\r\n * applied.\r\n *\r\n * This technique uses the \"stateReducer\" design pattern:\r\n * https://kentcdodds.com/blog/the-state-reducer-pattern/\r\n *\r\n * @param stateReducer    An external state reducer.\r\n * @param initialState    The initial state for the reducer.\r\n * @param onChangeHandler A handler for the onChange event.\r\n * @return State, dispatch, and a collection of actions.\r\n */\r\nexport function useInputControlStateReducer(\r\n\tstateReducer: StateReducer = initialStateReducer,\r\n\tinitialState: Partial< InputState > = initialInputControlState,\r\n\tonChangeHandler: InputChangeCallback\r\n) {\r\n\tconst [ state, dispatch ] = useReducer(\r\n\t\tinputControlStateReducer( stateReducer ),\r\n\t\tmergeInitialState( initialState )\r\n\t);\r\n\r\n\tconst createChangeEvent =\r\n\t\t( type: actions.ChangeEventAction[ 'type' ] ) =>\r\n\t\t(\r\n\t\t\tnextValue: actions.ChangeEventAction[ 'payload' ][ 'value' ],\r\n\t\t\tevent: actions.ChangeEventAction[ 'payload' ][ 'event' ]\r\n\t\t) => {\r\n\t\t\tdispatch( {\r\n\t\t\t\ttype,\r\n\t\t\t\tpayload: { value: nextValue, event },\r\n\t\t\t} as actions.InputAction );\r\n\t\t};\r\n\r\n\tconst createKeyEvent =\r\n\t\t( type: actions.KeyEventAction[ 'type' ] ) =>\r\n\t\t( event: actions.KeyEventAction[ 'payload' ][ 'event' ] ) => {\r\n\t\t\tdispatch( { type, payload: { event } } );\r\n\t\t};\r\n\r\n\tconst createDragEvent =\r\n\t\t( type: actions.DragEventAction[ 'type' ] ) =>\r\n\t\t( payload: actions.DragEventAction[ 'payload' ] ) => {\r\n\t\t\tdispatch( { type, payload } );\r\n\t\t};\r\n\r\n\t/**\r\n\t * Actions for the reducer\r\n\t */\r\n\tconst change = createChangeEvent( actions.CHANGE );\r\n\tconst invalidate = ( error: unknown, event: SyntheticEvent ) =>\r\n\t\tdispatch( { type: actions.INVALIDATE, payload: { error, event } } );\r\n\tconst reset = createChangeEvent( actions.RESET );\r\n\tconst commit = createChangeEvent( actions.COMMIT );\r\n\r\n\tconst dragStart = createDragEvent( actions.DRAG_START );\r\n\tconst drag = createDragEvent( actions.DRAG );\r\n\tconst dragEnd = createDragEvent( actions.DRAG_END );\r\n\r\n\tconst pressUp = createKeyEvent( actions.PRESS_UP );\r\n\tconst pressDown = createKeyEvent( actions.PRESS_DOWN );\r\n\tconst pressEnter = createKeyEvent( actions.PRESS_ENTER );\r\n\r\n\tconst currentStateRef = useRef( state );\r\n\tconst refPropsRef = useRef( {\r\n\t\tvalue: initialState.value,\r\n\t\tonChangeHandler,\r\n\t} );\r\n\r\n\t// Freshens refs to props and state so that subsequent effects have access\r\n\t// to their latest values without their changes causing effect runs.\r\n\tuseLayoutEffect( () => {\r\n\t\tcurrentStateRef.current = state;\r\n\t\trefPropsRef.current = { value: initialState.value, onChangeHandler };\r\n\t} );\r\n\r\n\t// Propagates the latest state through onChange.\r\n\tuseLayoutEffect( () => {\r\n\t\tif (\r\n\t\t\tcurrentStateRef.current._event !== undefined &&\r\n\t\t\tstate.value !== refPropsRef.current.value &&\r\n\t\t\t! state.isDirty\r\n\t\t) {\r\n\t\t\trefPropsRef.current.onChangeHandler( state.value ?? '', {\r\n\t\t\t\tevent: currentStateRef.current._event as\r\n\t\t\t\t\t| ChangeEvent< HTMLInputElement >\r\n\t\t\t\t\t| PointerEvent< HTMLInputElement >,\r\n\t\t\t} );\r\n\t\t}\r\n\t}, [ state.value, state.isDirty ] );\r\n\r\n\t// Updates the state from props.\r\n\tuseLayoutEffect( () => {\r\n\t\tif (\r\n\t\t\tinitialState.value !== currentStateRef.current.value &&\r\n\t\t\t! currentStateRef.current.isDirty\r\n\t\t) {\r\n\t\t\tdispatch( {\r\n\t\t\t\ttype: actions.CONTROL,\r\n\t\t\t\tpayload: { value: initialState.value ?? '' },\r\n\t\t\t} );\r\n\t\t}\r\n\t}, [ initialState.value ] );\r\n\r\n\treturn {\r\n\t\tchange,\r\n\t\tcommit,\r\n\t\tdispatch,\r\n\t\tdrag,\r\n\t\tdragEnd,\r\n\t\tdragStart,\r\n\t\tinvalidate,\r\n\t\tpressDown,\r\n\t\tpressEnter,\r\n\t\tpressUp,\r\n\t\treset,\r\n\t\tstate,\r\n\t} as const;\r\n}\r\n"],"mappings":"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","ignoreList":[]}