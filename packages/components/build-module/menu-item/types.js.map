{"version":3,"names":[],"sources":["@wordpress/components/src/menu-item/types.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport type { ReactNode } from 'react';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport type { ButtonAsButtonProps } from '../button/types';\r\n\r\nexport type MenuItemProps = Pick< ButtonAsButtonProps, 'isDestructive' > & {\r\n\t/**\r\n\t * A CSS `class` to give to the container element.\r\n\t */\r\n\tclassName?: string;\r\n\t/**\r\n\t * The children elements.\r\n\t */\r\n\tchildren?: ReactNode;\r\n\t/**\r\n\t * Text to use as description for button text.\r\n\t */\r\n\tinfo?: string;\r\n\t/**\r\n\t * The icon to render. Supported values are: Dashicons (specified as\r\n\t * strings), functions, Component instances and `null`.\r\n\t *\r\n\t * @default null\r\n\t */\r\n\ticon?: JSX.Element | null;\r\n\t/**\r\n\t * Determines where to display the provided `icon`.\r\n\t */\r\n\ticonPosition?: ButtonAsButtonProps[ 'iconPosition' ];\r\n\t/**\r\n\t * Whether or not the menu item is currently selected, `isSelected` is only taken into\r\n\t * account when the `role` prop is either `\"menuitemcheckbox\"` or `\"menuitemradio\"`.\r\n\t */\r\n\tisSelected?: boolean;\r\n\t/**\r\n\t * If shortcut is a string, it is expecting the display text. If shortcut is an object,\r\n\t * it will accept the properties of `display` (string) and `ariaLabel` (string).\r\n\t */\r\n\tshortcut?: string | { display: string; ariaLabel: string };\r\n\t/**\r\n\t * If you need to have selectable menu items use menuitemradio for single select,\r\n\t * and menuitemcheckbox for multiselect.\r\n\t *\r\n\t * @default 'menuitem'\r\n\t */\r\n\trole?: string;\r\n\t/**\r\n\t * Allows for markup other than icons or shortcuts to be added to the menu item.\r\n\t *\r\n\t */\r\n\tsuffix?: ReactNode;\r\n\t/**\r\n\t * Human-readable label for item.\r\n\t */\r\n\tlabel?: string;\r\n};\r\n"],"mappings":"","ignoreList":[]}