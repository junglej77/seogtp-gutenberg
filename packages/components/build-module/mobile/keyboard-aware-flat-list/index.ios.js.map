{"version":3,"names":["FlatList","View","Animated","useCallback","useEffect","forwardRef","useImperativeHandle","useThrottle","useScroll","useTextInputOffset","useTextInputCaretPosition","OPTIMIZATION_ITEMS_THRESHOLD","OPTIMIZATION_PROPS","styles","jsx","_jsx","DEFAULT_FONT_SIZE","AnimatedFlatList","createAnimatedComponent","EMPTY_OBJECT","KeyboardAwareFlatList","extraScrollHeight","onScroll","scrollEnabled","shouldPreventAutomaticScroll","props","ref","scrollViewRef","scrollHandler","keyboardOffset","scrollToSection","scrollToElement","onContentSizeChange","lastScrollTo","onSizeChange","getTextInputOffset","onScrollToTextInput","caret","caretHeight","textInputOffset","hasTextInputOffset","leading","currentCaretData","contentInset","bottom","getFlatListRef","flatListRef","current","getNativeScrollRef","optimizationProps","data","length","style","list__container","children","automaticallyAdjustContentInsets","keyboardShouldPersistTaps","scrollEventThrottle","list__content"],"sources":["@wordpress/components/src/mobile/keyboard-aware-flat-list/index.ios.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport { FlatList, View } from 'react-native';\r\nimport Animated from 'react-native-reanimated';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport {\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tforwardRef,\r\n\tuseImperativeHandle,\r\n} from '@wordpress/element';\r\nimport { useThrottle } from '@wordpress/compose';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport useScroll from './use-scroll';\r\nimport useTextInputOffset from './use-text-input-offset';\r\nimport useTextInputCaretPosition from './use-text-input-caret-position';\r\nimport { OPTIMIZATION_ITEMS_THRESHOLD, OPTIMIZATION_PROPS } from './shared';\r\nimport styles from './styles.scss';\r\n\r\nconst DEFAULT_FONT_SIZE = 16;\r\nconst AnimatedFlatList = Animated.createAnimatedComponent( FlatList );\r\nconst EMPTY_OBJECT = {};\r\n\r\n/** @typedef {import('@wordpress/element').RefObject} RefObject */\r\n/**\r\n * React component that provides a FlatList that is aware of the keyboard state and can scroll\r\n * to the currently focused TextInput.\r\n *\r\n * @param {Object}    props                              Component props.\r\n * @param {number}    props.extraScrollHeight            Extra scroll height for the content.\r\n * @param {Function}  props.onScroll                     Function to be called when the list is scrolled.\r\n * @param {boolean}   props.scrollEnabled                Whether the list can be scrolled.\r\n * @param {boolean}   props.shouldPreventAutomaticScroll Whether to prevent scrolling when there's a Keyboard offset set.\r\n * @param {Object}    props...                           Other props to pass to the FlatList component.\r\n * @param {RefObject} ref\r\n * @return {Component} KeyboardAwareFlatList component.\r\n */\r\nexport const KeyboardAwareFlatList = (\r\n\t{\r\n\t\textraScrollHeight,\r\n\t\tonScroll,\r\n\t\tscrollEnabled,\r\n\t\tshouldPreventAutomaticScroll,\r\n\t\t...props\r\n\t},\r\n\tref\r\n) => {\r\n\tconst {\r\n\t\tscrollViewRef,\r\n\t\tscrollHandler,\r\n\t\tkeyboardOffset,\r\n\t\tscrollToSection,\r\n\t\tscrollToElement,\r\n\t\tonContentSizeChange,\r\n\t\tlastScrollTo,\r\n\t} = useScroll( {\r\n\t\tscrollEnabled,\r\n\t\tshouldPreventAutomaticScroll,\r\n\t\textraScrollHeight,\r\n\t\tonScroll,\r\n\t\tonSizeChange,\r\n\t} );\r\n\r\n\tconst [ getTextInputOffset ] = useTextInputOffset(\r\n\t\tscrollEnabled,\r\n\t\tscrollViewRef\r\n\t);\r\n\r\n\tconst onScrollToTextInput = useThrottle(\r\n\t\tuseCallback(\r\n\t\t\tasync ( caret ) => {\r\n\t\t\t\tconst { caretHeight = DEFAULT_FONT_SIZE } = caret ?? {};\r\n\t\t\t\tconst textInputOffset = await getTextInputOffset( caret );\r\n\t\t\t\tconst hasTextInputOffset = textInputOffset !== null;\r\n\r\n\t\t\t\tif ( hasTextInputOffset ) {\r\n\t\t\t\t\tscrollToSection( textInputOffset, caretHeight );\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t[ getTextInputOffset, scrollToSection ]\r\n\t\t),\r\n\t\t200,\r\n\t\t{ leading: false }\r\n\t);\r\n\r\n\tconst [ currentCaretData ] = useTextInputCaretPosition( scrollEnabled );\r\n\r\n\tconst onSizeChange = useCallback(\r\n\t\t() => onScrollToTextInput( currentCaretData ),\r\n\t\t[ currentCaretData, onScrollToTextInput ]\r\n\t);\r\n\r\n\tuseEffect( () => {\r\n\t\tonScrollToTextInput( currentCaretData );\r\n\t}, [ currentCaretData, onScrollToTextInput ] );\r\n\r\n\t// Adds content insets when the keyboard is opened to have\r\n\t// extra padding at the bottom.\r\n\tconst contentInset = { bottom: keyboardOffset };\r\n\r\n\tconst getFlatListRef = useCallback(\r\n\t\t( flatListRef ) => {\r\n\t\t\tscrollViewRef.current = flatListRef?.getNativeScrollRef();\r\n\t\t},\r\n\t\t[ scrollViewRef ]\r\n\t);\r\n\r\n\tuseImperativeHandle( ref, () => {\r\n\t\treturn {\r\n\t\t\tscrollViewRef: scrollViewRef.current,\r\n\t\t\tscrollToSection,\r\n\t\t\tscrollToElement,\r\n\t\t\tlastScrollTo,\r\n\t\t};\r\n\t} );\r\n\r\n\tconst optimizationProps =\r\n\t\tprops.data?.length > OPTIMIZATION_ITEMS_THRESHOLD\r\n\t\t\t? OPTIMIZATION_PROPS\r\n\t\t\t: EMPTY_OBJECT;\r\n\r\n\treturn (\r\n\t\t<View style={ styles.list__container }>\r\n\t\t\t<AnimatedFlatList\r\n\t\t\t\tref={ getFlatListRef }\r\n\t\t\t\tautomaticallyAdjustContentInsets={ false }\r\n\t\t\t\tcontentInset={ contentInset }\r\n\t\t\t\tkeyboardShouldPersistTaps=\"handled\"\r\n\t\t\t\tonContentSizeChange={ onContentSizeChange }\r\n\t\t\t\tonScroll={ scrollHandler }\r\n\t\t\t\tscrollEventThrottle={ 16 }\r\n\t\t\t\tstyle={ styles.list__content }\r\n\t\t\t\t{ ...optimizationProps }\r\n\t\t\t\t{ ...props }\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n};\r\n\r\nexport default forwardRef( KeyboardAwareFlatList );\r\n"],"mappings":"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","ignoreList":[]}