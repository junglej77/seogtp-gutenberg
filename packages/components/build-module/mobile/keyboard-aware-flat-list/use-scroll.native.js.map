{"version":3,"names":["useWindowDimensions","useAnimatedScrollHandler","useSharedValue","useCallback","useEffect","useRef","useKeyboardOffset","useScrollToSection","useScrollToElement","useScroll","scrollEnabled","shouldPreventAutomaticScroll","onScroll","onSizeChange","extraScrollHeight","scrollViewRef","scrollViewMeasurements","scrollViewYOffset","lastScrollTo","clientId","height","windowHeight","width","windowWidth","isLandscape","keyboardOffset","scrollHandler","event","contentOffset","value","y","current","scrollToSection","scrollToElement","measureScrollView","measureInWindow","_x","onContentSizeChange"],"sources":["@wordpress/components/src/mobile/keyboard-aware-flat-list/use-scroll.native.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\n\r\nimport { useWindowDimensions } from 'react-native';\r\nimport {\r\n\tuseAnimatedScrollHandler,\r\n\tuseSharedValue,\r\n} from 'react-native-reanimated';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { useCallback, useEffect, useRef } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport useKeyboardOffset from './use-keyboard-offset';\r\nimport useScrollToSection from './use-scroll-to-section';\r\nimport useScrollToElement from './use-scroll-to-element';\r\n\r\nexport default function useScroll( {\r\n\tscrollEnabled,\r\n\tshouldPreventAutomaticScroll,\r\n\tonScroll,\r\n\tonSizeChange,\r\n\textraScrollHeight,\r\n} ) {\r\n\tconst scrollViewRef = useRef();\r\n\tconst scrollViewMeasurements = useRef();\r\n\tconst scrollViewYOffset = useSharedValue( -1 );\r\n\tconst lastScrollTo = useRef( {\r\n\t\tclientId: null,\r\n\t} );\r\n\r\n\tconst { height: windowHeight, width: windowWidth } = useWindowDimensions();\r\n\tconst isLandscape = windowWidth >= windowHeight;\r\n\r\n\tconst [ keyboardOffset ] = useKeyboardOffset(\r\n\t\tscrollEnabled,\r\n\t\tshouldPreventAutomaticScroll\r\n\t);\r\n\r\n\tconst scrollHandler = useAnimatedScrollHandler( {\r\n\t\tonScroll: ( event ) => {\r\n\t\t\tconst { contentOffset } = event;\r\n\t\t\tscrollViewYOffset.value = contentOffset.y;\r\n\t\t\tonScroll( event );\r\n\t\t},\r\n\t} );\r\n\r\n\t// When the orientation changes, the ScrollView measurements\r\n\t// need to be re-calculated.\r\n\tuseEffect( () => {\r\n\t\tscrollViewMeasurements.current = null;\r\n\t}, [ isLandscape ] );\r\n\r\n\tconst [ scrollToSection ] = useScrollToSection(\r\n\t\textraScrollHeight,\r\n\t\tkeyboardOffset,\r\n\t\tscrollEnabled,\r\n\t\tscrollViewMeasurements,\r\n\t\tscrollViewRef,\r\n\t\tscrollViewYOffset\r\n\t);\r\n\tconst [ scrollToElement ] = useScrollToElement(\r\n\t\tscrollViewRef,\r\n\t\tscrollToSection\r\n\t);\r\n\r\n\tconst measureScrollView = useCallback( () => {\r\n\t\tif ( scrollViewRef.current ) {\r\n\t\t\tscrollViewRef.current.measureInWindow( ( _x, y, width, height ) => {\r\n\t\t\t\tscrollViewMeasurements.current = { y, width, height };\r\n\t\t\t} );\r\n\t\t}\r\n\t}, [ scrollViewRef ] );\r\n\r\n\tconst onContentSizeChange = useCallback( () => {\r\n\t\tif ( onSizeChange ) {\r\n\t\t\tonSizeChange();\r\n\t\t}\r\n\r\n\t\t// Sets the first values when the content size changes.\r\n\t\tif ( ! scrollViewMeasurements.current ) {\r\n\t\t\tmeasureScrollView();\r\n\t\t}\r\n\t}, [ measureScrollView, onSizeChange ] );\r\n\r\n\treturn {\r\n\t\tscrollViewRef,\r\n\t\tscrollHandler,\r\n\t\tkeyboardOffset,\r\n\t\tscrollToSection,\r\n\t\tscrollToElement,\r\n\t\tonContentSizeChange,\r\n\t\tlastScrollTo,\r\n\t};\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,mBAAmB,QAAQ,cAAc;AAClD,SACCC,wBAAwB,EACxBC,cAAc,QACR,yBAAyB;;AAEhC;AACA;AACA;AACA,SAASC,WAAW,EAAEC,SAAS,EAAEC,MAAM,QAAQ,oBAAoB;;AAEnE;AACA;AACA;AACA,OAAOC,iBAAiB,MAAM,uBAAuB;AACrD,OAAOC,kBAAkB,MAAM,yBAAyB;AACxD,OAAOC,kBAAkB,MAAM,yBAAyB;AAExD,eAAe,SAASC,SAASA,CAAE;EAClCC,aAAa;EACbC,4BAA4B;EAC5BC,QAAQ;EACRC,YAAY;EACZC;AACD,CAAC,EAAG;EACH,MAAMC,aAAa,GAAGV,MAAM,CAAC,CAAC;EAC9B,MAAMW,sBAAsB,GAAGX,MAAM,CAAC,CAAC;EACvC,MAAMY,iBAAiB,GAAGf,cAAc,CAAE,CAAC,CAAE,CAAC;EAC9C,MAAMgB,YAAY,GAAGb,MAAM,CAAE;IAC5Bc,QAAQ,EAAE;EACX,CAAE,CAAC;EAEH,MAAM;IAAEC,MAAM,EAAEC,YAAY;IAAEC,KAAK,EAAEC;EAAY,CAAC,GAAGvB,mBAAmB,CAAC,CAAC;EAC1E,MAAMwB,WAAW,GAAGD,WAAW,IAAIF,YAAY;EAE/C,MAAM,CAAEI,cAAc,CAAE,GAAGnB,iBAAiB,CAC3CI,aAAa,EACbC,4BACD,CAAC;EAED,MAAMe,aAAa,GAAGzB,wBAAwB,CAAE;IAC/CW,QAAQ,EAAIe,KAAK,IAAM;MACtB,MAAM;QAAEC;MAAc,CAAC,GAAGD,KAAK;MAC/BV,iBAAiB,CAACY,KAAK,GAAGD,aAAa,CAACE,CAAC;MACzClB,QAAQ,CAAEe,KAAM,CAAC;IAClB;EACD,CAAE,CAAC;;EAEH;EACA;EACAvB,SAAS,CAAE,MAAM;IAChBY,sBAAsB,CAACe,OAAO,GAAG,IAAI;EACtC,CAAC,EAAE,CAAEP,WAAW,CAAG,CAAC;EAEpB,MAAM,CAAEQ,eAAe,CAAE,GAAGzB,kBAAkB,CAC7CO,iBAAiB,EACjBW,cAAc,EACdf,aAAa,EACbM,sBAAsB,EACtBD,aAAa,EACbE,iBACD,CAAC;EACD,MAAM,CAAEgB,eAAe,CAAE,GAAGzB,kBAAkB,CAC7CO,aAAa,EACbiB,eACD,CAAC;EAED,MAAME,iBAAiB,GAAG/B,WAAW,CAAE,MAAM;IAC5C,IAAKY,aAAa,CAACgB,OAAO,EAAG;MAC5BhB,aAAa,CAACgB,OAAO,CAACI,eAAe,CAAE,CAAEC,EAAE,EAAEN,CAAC,EAAER,KAAK,EAAEF,MAAM,KAAM;QAClEJ,sBAAsB,CAACe,OAAO,GAAG;UAAED,CAAC;UAAER,KAAK;UAAEF;QAAO,CAAC;MACtD,CAAE,CAAC;IACJ;EACD,CAAC,EAAE,CAAEL,aAAa,CAAG,CAAC;EAEtB,MAAMsB,mBAAmB,GAAGlC,WAAW,CAAE,MAAM;IAC9C,IAAKU,YAAY,EAAG;MACnBA,YAAY,CAAC,CAAC;IACf;;IAEA;IACA,IAAK,CAAEG,sBAAsB,CAACe,OAAO,EAAG;MACvCG,iBAAiB,CAAC,CAAC;IACpB;EACD,CAAC,EAAE,CAAEA,iBAAiB,EAAErB,YAAY,CAAG,CAAC;EAExC,OAAO;IACNE,aAAa;IACbW,aAAa;IACbD,cAAc;IACdO,eAAe;IACfC,eAAe;IACfI,mBAAmB;IACnBnB;EACD,CAAC;AACF","ignoreList":[]}