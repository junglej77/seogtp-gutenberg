{"version":3,"names":["forwardRef","NavigableContainer","jsx","_jsx","UnforwardedTabbableContainer","eventToOffset","props","ref","innerEventToOffset","evt","code","shiftKey","undefined","stopNavigationEvents","onlyBrowserTabstops","TabbableContainer"],"sources":["@wordpress/components/src/navigable-container/tabbable.tsx"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport type { ForwardedRef } from 'react';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { forwardRef } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport NavigableContainer from './container';\r\nimport type { TabbableContainerProps } from './types';\r\n\r\nexport function UnforwardedTabbableContainer(\r\n\t{ eventToOffset, ...props }: TabbableContainerProps,\r\n\tref: ForwardedRef< any >\r\n) {\r\n\tconst innerEventToOffset = ( evt: KeyboardEvent ) => {\r\n\t\tconst { code, shiftKey } = evt;\r\n\t\tif ( 'Tab' === code ) {\r\n\t\t\treturn shiftKey ? -1 : 1;\r\n\t\t}\r\n\r\n\t\t// Allow custom handling of keys besides Tab.\r\n\t\t//\r\n\t\t// By default, TabbableContainer will move focus forward on Tab and\r\n\t\t// backward on Shift+Tab. The handler below will be used for all other\r\n\t\t// events. The semantics for `eventToOffset`'s return\r\n\t\t// values are the following:\r\n\t\t//\r\n\t\t// - +1: move focus forward\r\n\t\t// - -1: move focus backward\r\n\t\t// -  0: don't move focus, but acknowledge event and thus stop it\r\n\t\t// - undefined: do nothing, let the event propagate.\r\n\t\tif ( eventToOffset ) {\r\n\t\t\treturn eventToOffset( evt );\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<NavigableContainer\r\n\t\t\tref={ ref }\r\n\t\t\tstopNavigationEvents\r\n\t\t\tonlyBrowserTabstops\r\n\t\t\teventToOffset={ innerEventToOffset }\r\n\t\t\t{ ...props }\r\n\t\t/>\r\n\t);\r\n}\r\n\r\n/**\r\n * A container for tabbable elements.\r\n *\r\n *  ```jsx\r\n *  import {\r\n *    TabbableContainer,\r\n *    Button,\r\n *  } from '@wordpress/components';\r\n *\r\n *  function onNavigate( index, target ) {\r\n *    console.log( `Navigates to ${ index }`, target );\r\n *  }\r\n *\r\n *  const MyTabbableContainer = () => (\r\n *    <div>\r\n *      <span>Tabbable Container:</span>\r\n *      <TabbableContainer onNavigate={ onNavigate }>\r\n *        <Button variant=\"secondary\" tabIndex=\"0\">\r\n *          Section 1\r\n *        </Button>\r\n *        <Button variant=\"secondary\" tabIndex=\"0\">\r\n *          Section 2\r\n *        </Button>\r\n *        <Button variant=\"secondary\" tabIndex=\"0\">\r\n *          Section 3\r\n *        </Button>\r\n *        <Button variant=\"secondary\" tabIndex=\"0\">\r\n *          Section 4\r\n *        </Button>\r\n *      </TabbableContainer>\r\n *    </div>\r\n *  );\r\n *  ```\r\n */\r\nexport const TabbableContainer = forwardRef( UnforwardedTabbableContainer );\r\n\r\nexport default TabbableContainer;\r\n"],"mappings":"AAAA;AACA;AACA;;AAGA;AACA;AACA;AACA,SAASA,UAAU,QAAQ,oBAAoB;;AAE/C;AACA;AACA;AACA,OAAOC,kBAAkB,MAAM,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAG7C,OAAO,SAASC,4BAA4BA,CAC3C;EAAEC,aAAa;EAAE,GAAGC;AAA8B,CAAC,EACnDC,GAAwB,EACvB;EACD,MAAMC,kBAAkB,GAAKC,GAAkB,IAAM;IACpD,MAAM;MAAEC,IAAI;MAAEC;IAAS,CAAC,GAAGF,GAAG;IAC9B,IAAK,KAAK,KAAKC,IAAI,EAAG;MACrB,OAAOC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC;IACzB;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAKN,aAAa,EAAG;MACpB,OAAOA,aAAa,CAAEI,GAAI,CAAC;IAC5B;IAEA,OAAOG,SAAS;EACjB,CAAC;EAED,oBACCT,IAAA,CAACF,kBAAkB;IAClBM,GAAG,EAAGA,GAAK;IACXM,oBAAoB;IACpBC,mBAAmB;IACnBT,aAAa,EAAGG,kBAAoB;IAAA,GAC/BF;EAAK,CACV,CAAC;AAEJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMS,iBAAiB,GAAGf,UAAU,CAAEI,4BAA6B,CAAC;AAE3E,eAAeW,iBAAiB","ignoreList":[]}