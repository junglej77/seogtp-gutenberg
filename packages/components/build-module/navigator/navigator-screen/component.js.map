{"version":3,"names":["focus","useContext","useEffect","useMemo","useRef","useId","useMergeRefs","isRTL","isRTLFn","escapeAttribute","contextConnect","useContextSystem","useCx","View","NavigatorContext","styles","jsx","_jsx","UnconnectedNavigatorScreen","props","forwardedRef","screenId","children","className","path","otherProps","location","match","addScreen","removeScreen","isMatch","wrapperRef","screen","id","isInitial","isBack","cx","classes","navigatorScreen","locationRef","current","isInitialLocation","hasRestoredFocus","skipFocus","activeElement","ownerDocument","contains","elementToFocus","focusTargetSelector","querySelector","firstTabbable","tabbable","find","mergedWrapperRef","ref","NavigatorScreen"],"sources":["@wordpress/components/src/navigator/navigator-screen/component.tsx"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport type { ForwardedRef } from 'react';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { focus } from '@wordpress/dom';\r\nimport {\r\n\tuseContext,\r\n\tuseEffect,\r\n\tuseMemo,\r\n\tuseRef,\r\n\tuseId,\r\n} from '@wordpress/element';\r\nimport { useMergeRefs } from '@wordpress/compose';\r\nimport { isRTL as isRTLFn } from '@wordpress/i18n';\r\nimport { escapeAttribute } from '@wordpress/escape-html';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport type { WordPressComponentProps } from '../../context';\r\nimport { contextConnect, useContextSystem } from '../../context';\r\nimport { useCx } from '../../utils/hooks/use-cx';\r\nimport { View } from '../../view';\r\nimport { NavigatorContext } from '../context';\r\nimport * as styles from '../styles';\r\nimport type { NavigatorScreenProps } from '../types';\r\n\r\nfunction UnconnectedNavigatorScreen(\r\n\tprops: WordPressComponentProps< NavigatorScreenProps, 'div', false >,\r\n\tforwardedRef: ForwardedRef< any >\r\n) {\r\n\tconst screenId = useId();\r\n\tconst { children, className, path, ...otherProps } = useContextSystem(\r\n\t\tprops,\r\n\t\t'NavigatorScreen'\r\n\t);\r\n\r\n\tconst { location, match, addScreen, removeScreen } =\r\n\t\tuseContext( NavigatorContext );\r\n\tconst isMatch = match === screenId;\r\n\tconst wrapperRef = useRef< HTMLDivElement >( null );\r\n\r\n\tuseEffect( () => {\r\n\t\tconst screen = {\r\n\t\t\tid: screenId,\r\n\t\t\tpath: escapeAttribute( path ),\r\n\t\t};\r\n\t\taddScreen( screen );\r\n\t\treturn () => removeScreen( screen );\r\n\t}, [ screenId, path, addScreen, removeScreen ] );\r\n\r\n\tconst isRTL = isRTLFn();\r\n\tconst { isInitial, isBack } = location;\r\n\tconst cx = useCx();\r\n\tconst classes = useMemo(\r\n\t\t() =>\r\n\t\t\tcx(\r\n\t\t\t\tstyles.navigatorScreen( {\r\n\t\t\t\t\tisInitial,\r\n\t\t\t\t\tisBack,\r\n\t\t\t\t\tisRTL,\r\n\t\t\t\t} ),\r\n\t\t\t\tclassName\r\n\t\t\t),\r\n\t\t[ className, cx, isInitial, isBack, isRTL ]\r\n\t);\r\n\r\n\tconst locationRef = useRef( location );\r\n\r\n\tuseEffect( () => {\r\n\t\tlocationRef.current = location;\r\n\t}, [ location ] );\r\n\r\n\t// Focus restoration\r\n\tconst isInitialLocation = location.isInitial && ! location.isBack;\r\n\tuseEffect( () => {\r\n\t\t// Only attempt to restore focus:\r\n\t\t// - if the current location is not the initial one (to avoid moving focus on page load)\r\n\t\t// - when the screen becomes visible\r\n\t\t// - if the wrapper ref has been assigned\r\n\t\t// - if focus hasn't already been restored for the current location\r\n\t\t// - if the `skipFocus` option is not set to `true`. This is useful when we trigger the navigation outside of NavigatorScreen.\r\n\t\tif (\r\n\t\t\tisInitialLocation ||\r\n\t\t\t! isMatch ||\r\n\t\t\t! wrapperRef.current ||\r\n\t\t\tlocationRef.current.hasRestoredFocus ||\r\n\t\t\tlocation.skipFocus\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst activeElement = wrapperRef.current.ownerDocument.activeElement;\r\n\r\n\t\t// If an element is already focused within the wrapper do not focus the\r\n\t\t// element. This prevents inputs or buttons from losing focus unnecessarily.\r\n\t\tif ( wrapperRef.current.contains( activeElement ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet elementToFocus: HTMLElement | null = null;\r\n\r\n\t\t// When navigating back, if a selector is provided, use it to look for the\r\n\t\t// target element (assumed to be a node inside the current NavigatorScreen)\r\n\t\tif ( location.isBack && location.focusTargetSelector ) {\r\n\t\t\telementToFocus = wrapperRef.current.querySelector(\r\n\t\t\t\tlocation.focusTargetSelector\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// If the previous query didn't run or find any element to focus, fallback\r\n\t\t// to the first tabbable element in the screen (or the screen itself).\r\n\t\tif ( ! elementToFocus ) {\r\n\t\t\tconst [ firstTabbable ] = focus.tabbable.find( wrapperRef.current );\r\n\t\t\telementToFocus = firstTabbable ?? wrapperRef.current;\r\n\t\t}\r\n\r\n\t\tlocationRef.current.hasRestoredFocus = true;\r\n\t\telementToFocus.focus();\r\n\t}, [\r\n\t\tisInitialLocation,\r\n\t\tisMatch,\r\n\t\tlocation.isBack,\r\n\t\tlocation.focusTargetSelector,\r\n\t\tlocation.skipFocus,\r\n\t] );\r\n\r\n\tconst mergedWrapperRef = useMergeRefs( [ forwardedRef, wrapperRef ] );\r\n\r\n\treturn isMatch ? (\r\n\t\t<View ref={ mergedWrapperRef } className={ classes } { ...otherProps }>\r\n\t\t\t{ children }\r\n\t\t</View>\r\n\t) : null;\r\n}\r\n\r\n/**\r\n * The `NavigatorScreen` component represents a single view/screen/panel and\r\n * should be used in combination with the `NavigatorProvider`, the\r\n * `NavigatorButton` and the `NavigatorBackButton` components (or the `useNavigator`\r\n * hook).\r\n *\r\n * @example\r\n * ```jsx\r\n * import {\r\n *   __experimentalNavigatorProvider as NavigatorProvider,\r\n *   __experimentalNavigatorScreen as NavigatorScreen,\r\n *   __experimentalNavigatorButton as NavigatorButton,\r\n *   __experimentalNavigatorBackButton as NavigatorBackButton,\r\n * } from '@wordpress/components';\r\n *\r\n * const MyNavigation = () => (\r\n *   <NavigatorProvider initialPath=\"/\">\r\n *     <NavigatorScreen path=\"/\">\r\n *       <p>This is the home screen.</p>\r\n *        <NavigatorButton path=\"/child\">\r\n *          Navigate to child screen.\r\n *       </NavigatorButton>\r\n *     </NavigatorScreen>\r\n *\r\n *     <NavigatorScreen path=\"/child\">\r\n *       <p>This is the child screen.</p>\r\n *       <NavigatorBackButton>\r\n *         Go back\r\n *       </NavigatorBackButton>\r\n *     </NavigatorScreen>\r\n *   </NavigatorProvider>\r\n * );\r\n * ```\r\n */\r\nexport const NavigatorScreen = contextConnect(\r\n\tUnconnectedNavigatorScreen,\r\n\t'NavigatorScreen'\r\n);\r\n\r\nexport default NavigatorScreen;\r\n"],"mappings":"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","ignoreList":[]}