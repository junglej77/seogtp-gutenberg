{"version":3,"names":["css","keyframes","navigatorProviderWrapper","process","env","NODE_ENV","name","styles","map","toString","_EMOTION_STRINGIFIED_CSS_ERROR__","fadeInFromRight","opacity","transform","fadeInFromLeft","navigatorScreenAnimation","isInitial","isBack","isRTL","animationName","navigatorScreen","props"],"sources":["@wordpress/components/src/navigator/styles.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport { css, keyframes } from '@emotion/react';\r\n\r\nexport const navigatorProviderWrapper = css`\r\n\t/* Prevents horizontal overflow while animating screen transitions */\r\n\toverflow-x: hidden;\r\n\t/* Mark this subsection of the DOM as isolated, providing performance benefits\r\n\t * by limiting calculations of layout, style and paint to a DOM subtree rather\r\n\t * than the entire page.\r\n\t */\r\n\tcontain: content;\r\n`;\r\n\r\nconst fadeInFromRight = keyframes( {\r\n\t'0%': {\r\n\t\topacity: 0,\r\n\t\ttransform: `translateX( 50px )`,\r\n\t},\r\n\t'100%': { opacity: 1, transform: 'none' },\r\n} );\r\n\r\nconst fadeInFromLeft = keyframes( {\r\n\t'0%': {\r\n\t\topacity: 0,\r\n\t\ttransform: `translateX( -50px )`,\r\n\t},\r\n\t'100%': { opacity: 1, transform: 'none' },\r\n} );\r\n\r\ntype NavigatorScreenAnimationProps = {\r\n\tisInitial?: boolean;\r\n\tisBack?: boolean;\r\n\tisRTL: boolean;\r\n};\r\n\r\nconst navigatorScreenAnimation = ( {\r\n\tisInitial,\r\n\tisBack,\r\n\tisRTL,\r\n}: NavigatorScreenAnimationProps ) => {\r\n\tif ( isInitial && ! isBack ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst animationName =\r\n\t\t( isRTL && isBack ) || ( ! isRTL && ! isBack )\r\n\t\t\t? fadeInFromRight\r\n\t\t\t: fadeInFromLeft;\r\n\r\n\treturn css`\r\n\t\tanimation-duration: 0.14s;\r\n\t\tanimation-timing-function: ease-in-out;\r\n\t\twill-change: transform, opacity;\r\n\t\tanimation-name: ${ animationName };\r\n\r\n\t\t@media ( prefers-reduced-motion ) {\r\n\t\t\tanimation-duration: 0s;\r\n\t\t}\r\n\t`;\r\n};\r\n\r\nexport const navigatorScreen = ( props: NavigatorScreenAnimationProps ) => css`\r\n\t/* Ensures horizontal overflow is visually accessible */\r\n\toverflow-x: auto;\r\n\t/* In case the root has a height, it should not be exceeded */\r\n\tmax-height: 100%;\r\n\r\n\t${ navigatorScreenAnimation( props ) }\r\n`;\r\n"],"mappings":";AAAA;AACA;AACA;AACA,SAASA,GAAG,EAAEC,SAAS,QAAQ,gBAAgB;AAE/C,OAAO,MAAMC,wBAAwB,GAAAC,OAAA,CAAAC,GAAA,CAAAC,QAAA;EAAAC,IAAA;EAAAC,MAAA;AAAA;EAAAD,IAAA;EAAAC,MAAA;EAAAC,GAAA;EAAAC,QAAA,EAAAC;AAAA,CAQpC;AAED,MAAMC,eAAe,GAAGV,SAAS,CAAE;EAClC,IAAI,EAAE;IACLW,OAAO,EAAE,CAAC;IACVC,SAAS,EAAG;EACb,CAAC;EACD,MAAM,EAAE;IAAED,OAAO,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAO;AACzC,CAAE,CAAC;AAEH,MAAMC,cAAc,GAAGb,SAAS,CAAE;EACjC,IAAI,EAAE;IACLW,OAAO,EAAE,CAAC;IACVC,SAAS,EAAG;EACb,CAAC;EACD,MAAM,EAAE;IAAED,OAAO,EAAE,CAAC;IAAEC,SAAS,EAAE;EAAO;AACzC,CAAE,CAAC;AAQH,MAAME,wBAAwB,GAAGA,CAAE;EAClCC,SAAS;EACTC,MAAM;EACNC;AAC8B,CAAC,KAAM;EACrC,IAAKF,SAAS,IAAI,CAAEC,MAAM,EAAG;IAC5B;EACD;EAEA,MAAME,aAAa,GAChBD,KAAK,IAAID,MAAM,IAAQ,CAAEC,KAAK,IAAI,CAAED,MAAQ,GAC3CN,eAAe,GACfG,cAAc;EAElB,oBAAOd,GAAG,iHAIUmB,aAAa,kEAAAhB,OAAA,CAAAC,GAAA,CAAAC,QAAA,8DAAAF,OAAA,CAAAC,GAAA,CAAAC,QAAA;AAMlC,CAAC;AAED,OAAO,MAAMe,eAAe,GAAKC,KAAoC,iBAAMrB,GAAG,qCAM1Ee,wBAAwB,CAAEM,KAAM,CAAC,SAAAlB,OAAA,CAAAC,GAAA,CAAAC,QAAA,qDAAAF,OAAA,CAAAC,GAAA,CAAAC,QAAA,+yFACpC","ignoreList":[]}