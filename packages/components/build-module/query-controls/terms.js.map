{"version":3,"names":["ensureParentsAreDefined","terms","every","term","parent","buildTermsTree","flatTerms","flatTermsWithParentAndChildren","map","children","id","String","termsByParent","reduce","acc","push","fillWithChildren","length"],"sources":["@wordpress/components/src/query-controls/terms.ts"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport type {\r\n\tAuthor,\r\n\tCategory,\r\n\tTermWithParentAndChildren,\r\n\tTermsByParent,\r\n} from './types';\r\n\r\nconst ensureParentsAreDefined = (\r\n\tterms: TermWithParentAndChildren[]\r\n): terms is ( TermWithParentAndChildren & { parent: number } )[] => {\r\n\treturn terms.every( ( term ) => term.parent !== null );\r\n};\r\n/**\r\n * Returns terms in a tree form.\r\n *\r\n * @param flatTerms Array of terms in flat format.\r\n *\r\n * @return Terms in tree format.\r\n */\r\nexport function buildTermsTree( flatTerms: readonly ( Author | Category )[] ) {\r\n\tconst flatTermsWithParentAndChildren: TermWithParentAndChildren[] =\r\n\t\tflatTerms.map( ( term ) => ( {\r\n\t\t\tchildren: [],\r\n\t\t\tparent: null,\r\n\t\t\t...term,\r\n\t\t\tid: String( term.id ),\r\n\t\t} ) );\r\n\r\n\t// We use a custom type guard here to ensure that the parent property is\r\n\t// defined on all terms. The type of the `parent` property is `number | null`\r\n\t// and we need to ensure that it is `number`. This is because we use the\r\n\t// `parent` property as a key in the `termsByParent` object.\r\n\tif ( ! ensureParentsAreDefined( flatTermsWithParentAndChildren ) ) {\r\n\t\treturn flatTermsWithParentAndChildren;\r\n\t}\r\n\r\n\tconst termsByParent = flatTermsWithParentAndChildren.reduce(\r\n\t\t( acc: TermsByParent, term ) => {\r\n\t\t\tconst { parent } = term;\r\n\t\t\tif ( ! acc[ parent ] ) {\r\n\t\t\t\tacc[ parent ] = [];\r\n\t\t\t}\r\n\t\t\tacc[ parent ].push( term );\r\n\t\t\treturn acc;\r\n\t\t},\r\n\t\t{}\r\n\t);\r\n\r\n\tconst fillWithChildren = (\r\n\t\tterms: TermWithParentAndChildren[]\r\n\t): TermWithParentAndChildren[] => {\r\n\t\treturn terms.map( ( term ) => {\r\n\t\t\tconst children = termsByParent[ term.id ];\r\n\t\t\treturn {\r\n\t\t\t\t...term,\r\n\t\t\t\tchildren:\r\n\t\t\t\t\tchildren && children.length\r\n\t\t\t\t\t\t? fillWithChildren( children )\r\n\t\t\t\t\t\t: [],\r\n\t\t\t};\r\n\t\t} );\r\n\t};\r\n\r\n\treturn fillWithChildren( termsByParent[ '0' ] || [] );\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;;AAQA,MAAMA,uBAAuB,GAC5BC,KAAkC,IACiC;EACnE,OAAOA,KAAK,CAACC,KAAK,CAAIC,IAAI,IAAMA,IAAI,CAACC,MAAM,KAAK,IAAK,CAAC;AACvD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAAEC,SAA2C,EAAG;EAC7E,MAAMC,8BAA2D,GAChED,SAAS,CAACE,GAAG,CAAIL,IAAI,KAAQ;IAC5BM,QAAQ,EAAE,EAAE;IACZL,MAAM,EAAE,IAAI;IACZ,GAAGD,IAAI;IACPO,EAAE,EAAEC,MAAM,CAAER,IAAI,CAACO,EAAG;EACrB,CAAC,CAAG,CAAC;;EAEN;EACA;EACA;EACA;EACA,IAAK,CAAEV,uBAAuB,CAAEO,8BAA+B,CAAC,EAAG;IAClE,OAAOA,8BAA8B;EACtC;EAEA,MAAMK,aAAa,GAAGL,8BAA8B,CAACM,MAAM,CAC1D,CAAEC,GAAkB,EAAEX,IAAI,KAAM;IAC/B,MAAM;MAAEC;IAAO,CAAC,GAAGD,IAAI;IACvB,IAAK,CAAEW,GAAG,CAAEV,MAAM,CAAE,EAAG;MACtBU,GAAG,CAAEV,MAAM,CAAE,GAAG,EAAE;IACnB;IACAU,GAAG,CAAEV,MAAM,CAAE,CAACW,IAAI,CAAEZ,IAAK,CAAC;IAC1B,OAAOW,GAAG;EACX,CAAC,EACD,CAAC,CACF,CAAC;EAED,MAAME,gBAAgB,GACrBf,KAAkC,IACD;IACjC,OAAOA,KAAK,CAACO,GAAG,CAAIL,IAAI,IAAM;MAC7B,MAAMM,QAAQ,GAAGG,aAAa,CAAET,IAAI,CAACO,EAAE,CAAE;MACzC,OAAO;QACN,GAAGP,IAAI;QACPM,QAAQ,EACPA,QAAQ,IAAIA,QAAQ,CAACQ,MAAM,GACxBD,gBAAgB,CAAEP,QAAS,CAAC,GAC5B;MACL,CAAC;IACF,CAAE,CAAC;EACJ,CAAC;EAED,OAAOO,gBAAgB,CAAEJ,aAAa,CAAE,GAAG,CAAE,IAAI,EAAG,CAAC;AACtD","ignoreList":[]}