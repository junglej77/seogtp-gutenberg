{"version":3,"names":[],"sources":["@wordpress/components/src/query-controls/types.ts"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport type { FormTokenFieldProps } from '../form-token-field/types';\r\nimport type { TreeSelectProps } from '../tree-select/types';\r\n\r\nexport type Author = {\r\n\tid: number;\r\n\tname: string;\r\n};\r\n\r\nexport type Category = {\r\n\tid: number;\r\n\tname: string;\r\n\tparent: number;\r\n};\r\n\r\nexport type TermWithParentAndChildren = {\r\n\tid: string;\r\n\tname: string;\r\n\tparent: number | null;\r\n\tchildren: TermWithParentAndChildren[];\r\n};\r\n\r\nexport type TermsByParent = Record< string, TermWithParentAndChildren[] >;\r\n\r\nexport type CategorySelectProps = Pick<\r\n\tTreeSelectProps,\r\n\t'label' | 'noOptionLabel'\r\n> & {\r\n\tcategoriesList: Category[];\r\n\tonChange: ( newCategory: string ) => void;\r\n\tselectedCategoryId?: Category[ 'id' ];\r\n\t__next40pxDefaultSize: boolean;\r\n};\r\n\r\nexport type AuthorSelectProps = Pick<\r\n\tTreeSelectProps,\r\n\t'label' | 'noOptionLabel'\r\n> & {\r\n\tauthorList?: Author[];\r\n\tonChange: ( newAuthor: string ) => void;\r\n\tselectedAuthorId?: Author[ 'id' ];\r\n\t__next40pxDefaultSize: boolean;\r\n};\r\n\r\ntype Order = 'asc' | 'desc';\r\ntype OrderBy = 'date' | 'title';\r\n\r\ntype BaseQueryControlsProps = {\r\n\t/**\r\n\t * An array of the authors to select from.\r\n\t */\r\n\tauthorList?: AuthorSelectProps[ 'authorList' ];\r\n\t/**\r\n\t * The maximum number of items.\r\n\t *\r\n\t * @default 100\r\n\t */\r\n\tmaxItems?: number;\r\n\t/**\r\n\t * The minimum number of items.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\tminItems?: number;\r\n\t/**\r\n\t * The selected number of items to retrieve via the query.\r\n\t */\r\n\tnumberOfItems?: number;\r\n\t/**\r\n\t * A function that receives the new author value.\r\n\t * If not specified, the author controls are not rendered.\r\n\t */\r\n\tonAuthorChange?: AuthorSelectProps[ 'onChange' ];\r\n\t/**\r\n\t * A function that receives the new number of items.\r\n\t * If not specified, then the number of items\r\n\t * range control is not rendered.\r\n\t */\r\n\tonNumberOfItemsChange?: ( newNumber?: number ) => void;\r\n\t/**\r\n\t * A function that receives the new order value.\r\n\t * If this prop or the `onOrderByChange` prop are not specified,\r\n\t * then the order controls are not rendered.\r\n\t */\r\n\tonOrderChange?: ( newOrder: Order ) => void;\r\n\t/**\r\n\t * A function that receives the new orderby value.\r\n\t * If this prop or the `onOrderChange` prop are not specified,\r\n\t * then the order controls are not rendered.\r\n\t */\r\n\tonOrderByChange?: ( newOrderBy: OrderBy ) => void;\r\n\t/**\r\n\t * The order in which to retrieve posts.\r\n\t */\r\n\torder?: Order;\r\n\t/**\r\n\t * The meta key by which to order posts.\r\n\t */\r\n\torderBy?: OrderBy;\r\n\t/**\r\n\t * The selected author ID.\r\n\t */\r\n\tselectedAuthorId?: AuthorSelectProps[ 'selectedAuthorId' ];\r\n\t/**\r\n\t * Start opting into the larger default height that will become the\r\n\t * default size in a future version.\r\n\t *\r\n\t * @deprecated Default behavior since WP 6.7. Prop can be safely removed.\r\n\t * @ignore\r\n\t */\r\n\t__next40pxDefaultSize?: boolean;\r\n};\r\n\r\nexport type QueryControlsWithSingleCategorySelectionProps =\r\n\tBaseQueryControlsProps & {\r\n\t\t/**\r\n\t\t * An array of categories. When passed in conjunction with the\r\n\t\t * `onCategoryChange` prop, it causes the component to render UI that allows\r\n\t\t * selecting one category at a time.\r\n\t\t */\r\n\t\tcategoriesList?: CategorySelectProps[ 'categoriesList' ];\r\n\t\t/**\r\n\t\t * The selected category for the `categoriesList` prop.\r\n\t\t */\r\n\t\tselectedCategoryId?: CategorySelectProps[ 'selectedCategoryId' ];\r\n\t\t/**\r\n\t\t * A function that receives the new category value. If not specified, the\r\n\t\t * category controls are not rendered.\r\n\t\t * The function's signature changes depending on whether multiple category\r\n\t\t * selection is enabled or not.\r\n\t\t */\r\n\t\tonCategoryChange?: CategorySelectProps[ 'onChange' ];\r\n\t};\r\n\r\nexport type QueryControlsWithMultipleCategorySelectionProps =\r\n\tBaseQueryControlsProps & {\r\n\t\t/**\r\n\t\t * An object of categories with the category name as the key. When passed in\r\n\t\t * conjunction with the `onCategoryChange` prop, it causes the component to\r\n\t\t * render UI that enables multiple selection.\r\n\t\t */\r\n\t\tcategorySuggestions?: Record< Category[ 'name' ], Category >;\r\n\t\t/**\r\n\t\t * The selected categories for the `categorySuggestions` prop.\r\n\t\t */\r\n\t\tselectedCategories?: Category[];\r\n\t\t/**\r\n\t\t * A function that receives the new category value. If not specified, the\r\n\t\t * category controls are not rendered.\r\n\t\t * The function's signature changes depending on whether multiple category\r\n\t\t * selection is enabled or not.\r\n\t\t */\r\n\t\tonCategoryChange?: FormTokenFieldProps[ 'onChange' ];\r\n\t};\r\n\r\nexport type QueryControlsProps =\r\n\t| QueryControlsWithSingleCategorySelectionProps\r\n\t| QueryControlsWithMultipleCategorySelectionProps;\r\n"],"mappings":"","ignoreList":[]}