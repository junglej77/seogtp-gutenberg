{"version":3,"names":["useCallback","useEffect","useRef","useState","useResizeObserver","noop","POSITIONS","bottom","corner","useResizeLabel","axis","fadeTimeout","onResize","position","showPx","resizeListener","sizes","isAxisControlled","moveX","setMoveX","moveY","setMoveY","width","height","heightRef","widthRef","moveTimeoutRef","debounceUnsetMoveXY","unsetMoveXY","current","window","clearTimeout","setTimeout","isRendered","didWidthChange","didHeightChange","label","getSizeLabel","undefined","labelUnit"],"sources":["@wordpress/components/src/resizable-box/resize-tooltip/utils.ts"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useCallback, useEffect, useRef, useState } from '@wordpress/element';\r\nimport { useResizeObserver } from '@wordpress/compose';\r\n\r\nconst noop = () => {};\r\n\r\nexport type Axis = 'x' | 'y';\r\n\r\nexport const POSITIONS = {\r\n\tbottom: 'bottom',\r\n\tcorner: 'corner',\r\n} as const;\r\n\r\nexport type Position = ( typeof POSITIONS )[ keyof typeof POSITIONS ];\r\n\r\ninterface UseResizeLabelProps {\r\n\t/** The label value. */\r\n\tlabel?: string;\r\n\t/** Element to be rendered for resize listening events. */\r\n\tresizeListener: JSX.Element;\r\n}\r\n\r\ninterface UseResizeLabelArgs {\r\n\taxis?: Axis;\r\n\tfadeTimeout: number;\r\n\tonResize: ( data: { width: number | null; height: number | null } ) => void;\r\n\tposition: Position;\r\n\tshowPx: boolean;\r\n}\r\n\r\n/**\r\n * Custom hook that manages resize listener events. It also provides a label\r\n * based on current resize width x height values.\r\n *\r\n * @param props\r\n * @param props.axis        Only shows the label corresponding to the axis.\r\n * @param props.fadeTimeout Duration (ms) before deactivating the resize label.\r\n * @param props.onResize    Callback when a resize occurs. Provides { width, height } callback.\r\n * @param props.position    Adjusts label value.\r\n * @param props.showPx      Whether to add `PX` to the label.\r\n *\r\n * @return Properties for hook.\r\n */\r\nexport function useResizeLabel( {\r\n\taxis,\r\n\tfadeTimeout = 180,\r\n\tonResize = noop,\r\n\tposition = POSITIONS.bottom,\r\n\tshowPx = false,\r\n}: UseResizeLabelArgs ): UseResizeLabelProps {\r\n\t/*\r\n\t * The width/height values derive from this special useResizeObserver hook.\r\n\t * This custom hook uses the ResizeObserver API to listen for resize events.\r\n\t */\r\n\tconst [ resizeListener, sizes ] = useResizeObserver();\r\n\r\n\t/*\r\n\t * Indicates if the x/y axis is preferred.\r\n\t * If set, we will avoid resetting the moveX and moveY values.\r\n\t * This will allow for the preferred axis values to persist in the label.\r\n\t */\r\n\tconst isAxisControlled = !! axis;\r\n\r\n\t/*\r\n\t * The moveX and moveY values are used to track whether the label should\r\n\t * display width, height, or width x height.\r\n\t */\r\n\tconst [ moveX, setMoveX ] = useState( false );\r\n\tconst [ moveY, setMoveY ] = useState( false );\r\n\r\n\t/*\r\n\t * Cached dimension values to check for width/height updates from the\r\n\t * sizes property from useResizeAware()\r\n\t */\r\n\tconst { width, height } = sizes;\r\n\tconst heightRef = useRef( height );\r\n\tconst widthRef = useRef( width );\r\n\r\n\t/*\r\n\t * This timeout is used with setMoveX and setMoveY to determine of\r\n\t * both width and height values have changed at (roughly) the same time.\r\n\t */\r\n\tconst moveTimeoutRef = useRef< number >();\r\n\r\n\tconst debounceUnsetMoveXY = useCallback( () => {\r\n\t\tconst unsetMoveXY = () => {\r\n\t\t\t/*\r\n\t\t\t * If axis is controlled, we will avoid resetting the moveX and moveY values.\r\n\t\t\t * This will allow for the preferred axis values to persist in the label.\r\n\t\t\t */\r\n\t\t\tif ( isAxisControlled ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetMoveX( false );\r\n\t\t\tsetMoveY( false );\r\n\t\t};\r\n\r\n\t\tif ( moveTimeoutRef.current ) {\r\n\t\t\twindow.clearTimeout( moveTimeoutRef.current );\r\n\t\t}\r\n\r\n\t\tmoveTimeoutRef.current = window.setTimeout( unsetMoveXY, fadeTimeout );\r\n\t}, [ fadeTimeout, isAxisControlled ] );\r\n\r\n\tuseEffect( () => {\r\n\t\t/*\r\n\t\t * On the initial render of useResizeAware, the height and width values are\r\n\t\t * null. They are calculated then set using via an internal useEffect hook.\r\n\t\t */\r\n\t\tconst isRendered = width !== null || height !== null;\r\n\r\n\t\tif ( ! isRendered ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst didWidthChange = width !== widthRef.current;\r\n\t\tconst didHeightChange = height !== heightRef.current;\r\n\r\n\t\tif ( ! didWidthChange && ! didHeightChange ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * After the initial render, the useResizeAware will set the first\r\n\t\t * width and height values. We'll sync those values with our\r\n\t\t * width and height refs. However, we shouldn't render our Tooltip\r\n\t\t * label on this first cycle.\r\n\t\t */\r\n\t\tif ( width && ! widthRef.current && height && ! heightRef.current ) {\r\n\t\t\twidthRef.current = width;\r\n\t\t\theightRef.current = height;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * After the first cycle, we can track width and height changes.\r\n\t\t */\r\n\t\tif ( didWidthChange ) {\r\n\t\t\tsetMoveX( true );\r\n\t\t\twidthRef.current = width;\r\n\t\t}\r\n\r\n\t\tif ( didHeightChange ) {\r\n\t\t\tsetMoveY( true );\r\n\t\t\theightRef.current = height;\r\n\t\t}\r\n\r\n\t\tonResize( { width, height } );\r\n\t\tdebounceUnsetMoveXY();\r\n\t}, [ width, height, onResize, debounceUnsetMoveXY ] );\r\n\r\n\tconst label = getSizeLabel( {\r\n\t\taxis,\r\n\t\theight,\r\n\t\tmoveX,\r\n\t\tmoveY,\r\n\t\tposition,\r\n\t\tshowPx,\r\n\t\twidth,\r\n\t} );\r\n\r\n\treturn {\r\n\t\tlabel,\r\n\t\tresizeListener,\r\n\t};\r\n}\r\n\r\ninterface GetSizeLabelArgs {\r\n\taxis?: Axis;\r\n\theight: number | null;\r\n\tmoveX: boolean;\r\n\tmoveY: boolean;\r\n\tposition: Position;\r\n\tshowPx: boolean;\r\n\twidth: number | null;\r\n}\r\n\r\n/**\r\n * Gets the resize label based on width and height values (as well as recent changes).\r\n *\r\n * @param props\r\n * @param props.axis     Only shows the label corresponding to the axis.\r\n * @param props.height   Height value.\r\n * @param props.moveX    Recent width (x axis) changes.\r\n * @param props.moveY    Recent width (y axis) changes.\r\n * @param props.position Adjusts label value.\r\n * @param props.showPx   Whether to add `PX` to the label.\r\n * @param props.width    Width value.\r\n *\r\n * @return The rendered label.\r\n */\r\nfunction getSizeLabel( {\r\n\taxis,\r\n\theight,\r\n\tmoveX = false,\r\n\tmoveY = false,\r\n\tposition = POSITIONS.bottom,\r\n\tshowPx = false,\r\n\twidth,\r\n}: GetSizeLabelArgs ): string | undefined {\r\n\tif ( ! moveX && ! moveY ) {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/*\r\n\t * Corner position...\r\n\t * We want the label to appear like width x height.\r\n\t */\r\n\tif ( position === POSITIONS.corner ) {\r\n\t\treturn `${ width } x ${ height }`;\r\n\t}\r\n\r\n\t/*\r\n\t * Other POSITIONS...\r\n\t * The label will combine both width x height values if both\r\n\t * values have recently been changed.\r\n\t *\r\n\t * Otherwise, only width or height will be displayed.\r\n\t * The `PX` unit will be added, if specified by the `showPx` prop.\r\n\t */\r\n\tconst labelUnit = showPx ? ' px' : '';\r\n\r\n\tif ( axis ) {\r\n\t\tif ( axis === 'x' && moveX ) {\r\n\t\t\treturn `${ width }${ labelUnit }`;\r\n\t\t}\r\n\t\tif ( axis === 'y' && moveY ) {\r\n\t\t\treturn `${ height }${ labelUnit }`;\r\n\t\t}\r\n\t}\r\n\r\n\tif ( moveX && moveY ) {\r\n\t\treturn `${ width } x ${ height }`;\r\n\t}\r\n\tif ( moveX ) {\r\n\t\treturn `${ width }${ labelUnit }`;\r\n\t}\r\n\tif ( moveY ) {\r\n\t\treturn `${ height }${ labelUnit }`;\r\n\t}\r\n\r\n\treturn undefined;\r\n}\r\n"],"mappings":"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","ignoreList":[]}