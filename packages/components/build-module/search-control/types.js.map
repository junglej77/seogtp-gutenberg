{"version":3,"names":[],"sources":["@wordpress/components/src/search-control/types.ts"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport type { InputControlProps } from '../input-control/types';\r\n\r\nexport type SearchControlProps = Pick< InputControlProps, 'help' | 'value' > & {\r\n\t/**\r\n\t * @deprecated This is now the default.\r\n\t * @ignore\r\n\t */\r\n\t__next40pxDefaultSize?: InputControlProps[ '__next40pxDefaultSize' ];\r\n\t/**\r\n\t * Start opting into the new margin-free styles that will become the default in a future version.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\t__nextHasNoMarginBottom?: boolean;\r\n\t/**\r\n\t * If true, the label will only be visible to screen readers.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\thideLabelFromVision?: InputControlProps[ 'hideLabelFromVision' ];\r\n\t/**\r\n\t * The accessible label for the input.\r\n\t *\r\n\t * A label should always be provided as an accessibility best practice,\r\n\t * even when a placeholder is defined and `hideLabelFromVision` is `true`.\r\n\t *\r\n\t * @default 'Search'\r\n\t */\r\n\tlabel?: string;\r\n\t/**\r\n\t * A function that receives the value of the input when the value is changed.\r\n\t */\r\n\tonChange: ( value: string ) => void;\r\n\t/**\r\n\t * When an `onClose` callback is provided, the search control will render a close button\r\n\t * that will trigger the given callback.\r\n\t *\r\n\t * Use this if you want the button to trigger your own logic to close the search field entirely,\r\n\t * rather than just clearing the input value.\r\n\t */\r\n\tonClose?: () => void;\r\n\t/** @ignore */\r\n\tonDrag?: InputControlProps[ 'onDrag' ];\r\n\t/** @ignore */\r\n\tonDragStart?: InputControlProps[ 'onDragStart' ];\r\n\t/** @ignore */\r\n\tonDragEnd?: InputControlProps[ 'onDragEnd' ];\r\n\t/**\r\n\t * A placeholder for the input.\r\n\t *\r\n\t * @default 'Search'\r\n\t */\r\n\tplaceholder?: InputControlProps[ 'placeholder' ];\r\n\t/**\r\n\t * The size of the component\r\n\t *\r\n\t * @default 'default'\r\n\t */\r\n\tsize?: 'default' | 'compact';\r\n};\r\n\r\nexport type SuffixItemProps = Pick<\r\n\tSearchControlProps,\r\n\t'value' | 'onChange' | 'onClose'\r\n> & {\r\n\tsearchRef: React.RefObject< HTMLInputElement >;\r\n};\r\n"],"mappings":"","ignoreList":[]}