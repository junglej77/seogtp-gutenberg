import _styled from "@emotion/styled/base";
function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
/**
 * External dependencies
 */
import { css } from '@emotion/react';
/**
 * Internal dependencies
 */
import { COLORS, rtl, CONFIG } from '../../utils';
import { space } from '../../utils/space';
import InputControlSuffixWrapper from '../../input-control/input-suffix-wrapper';
import { fontSizeStyles } from '../../input-control/styles/input-control-styles';
import InputBase from '../../input-control/input-base';
const disabledStyles = ({
  disabled
}) => {
  if (!disabled) {
    return '';
  }
  return /*#__PURE__*/css("color:", COLORS.ui.textDisabled, ";cursor:default;" + (process.env.NODE_ENV === "production" ? "" : ";label:disabledStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErQlciLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9zZWxlY3QtY29udHJvbC9zdHlsZXMvc2VsZWN0LWNvbnRyb2wtc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xyXG4gKi9cclxuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XHJcblxyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIHJ0bCwgQ09ORklHIH0gZnJvbSAnLi4vLi4vdXRpbHMnO1xyXG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uLy4uL3V0aWxzL3NwYWNlJztcclxuaW1wb3J0IHR5cGUgeyBTZWxlY3RDb250cm9sUHJvcHMgfSBmcm9tICcuLi90eXBlcyc7XHJcbmltcG9ydCBJbnB1dENvbnRyb2xTdWZmaXhXcmFwcGVyIGZyb20gJy4uLy4uL2lucHV0LWNvbnRyb2wvaW5wdXQtc3VmZml4LXdyYXBwZXInO1xyXG5pbXBvcnQgeyBmb250U2l6ZVN0eWxlcyB9IGZyb20gJy4uLy4uL2lucHV0LWNvbnRyb2wvc3R5bGVzL2lucHV0LWNvbnRyb2wtc3R5bGVzJztcclxuaW1wb3J0IElucHV0QmFzZSBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL2lucHV0LWJhc2UnO1xyXG5cclxuaW50ZXJmYWNlIFNlbGVjdFByb3BzXHJcblx0ZXh0ZW5kcyBQaWNrPFxyXG5cdFx0U2VsZWN0Q29udHJvbFByb3BzLFxyXG5cdFx0J19fbmV4dDQwcHhEZWZhdWx0U2l6ZScgfCAnZGlzYWJsZWQnIHwgJ211bHRpcGxlJyB8ICd2YXJpYW50J1xyXG5cdD4ge1xyXG5cdC8vIFVzaW5nIGBzZWxlY3RTaXplYCBpbnN0ZWFkIG9mIGBzaXplYCB0byBhdm9pZCBhIHR5cGUgY29uZmxpY3Qgd2l0aCB0aGVcclxuXHQvLyBgc2l6ZWAgSFRNTCBhdHRyaWJ1dGUgb2YgdGhlIGBzZWxlY3RgIGVsZW1lbnQuXHJcblx0c2VsZWN0U2l6ZT86IFNlbGVjdENvbnRyb2xQcm9wc1sgJ3NpemUnIF07XHJcbn1cclxuXHJcbmNvbnN0IGRpc2FibGVkU3R5bGVzID0gKCB7IGRpc2FibGVkIH06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdGlmICggISBkaXNhYmxlZCApIHtcclxuXHRcdHJldHVybiAnJztcclxuXHR9XHJcblxyXG5cdHJldHVybiBjc3NgXHJcblx0XHRjb2xvcjogJHsgQ09MT1JTLnVpLnRleHREaXNhYmxlZCB9O1xyXG5cdFx0Y3Vyc29yOiBkZWZhdWx0O1xyXG5cdGA7XHJcbn07XHJcblxyXG5jb25zdCBpbnB1dEJhc2VWYXJpYW50U3R5bGVzID0gKCB7IHZhcmlhbnQgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0aWYgKCB2YXJpYW50ID09PSAnbWluaW1hbCcgKSB7XHJcblx0XHRyZXR1cm4gY3NzYFxyXG5cdFx0XHRkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuXHRcdGA7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gJyc7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgU3R5bGVkSW5wdXRCYXNlID0gc3R5bGVkKCBJbnB1dEJhc2UgKWBcclxuXHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmZvcmVncm91bmQgfTtcclxuXHRjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG5cdCR7IGRpc2FibGVkU3R5bGVzIH1cclxuXHQkeyBpbnB1dEJhc2VWYXJpYW50U3R5bGVzIH1cclxuYDtcclxuXHJcbmNvbnN0IHNpemVTdHlsZXMgPSAoIHtcclxuXHRfX25leHQ0MHB4RGVmYXVsdFNpemUsXHJcblx0bXVsdGlwbGUsXHJcblx0c2VsZWN0U2l6ZSA9ICdkZWZhdWx0JyxcclxufTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0aWYgKCBtdWx0aXBsZSApIHtcclxuXHRcdC8vIFdoZW4gYG11bHRpcGxlYCwganVzdCB1c2UgdGhlIG5hdGl2ZSBicm93c2VyIHN0eWxlc1xyXG5cdFx0Ly8gd2l0aG91dCBzZXR0aW5nIGV4cGxpY2l0IGhlaWdodC5cclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdGNvbnN0IHNpemVzID0ge1xyXG5cdFx0ZGVmYXVsdDoge1xyXG5cdFx0XHRoZWlnaHQ6IDQwLFxyXG5cdFx0XHRtaW5IZWlnaHQ6IDQwLFxyXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxyXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxyXG5cdFx0fSxcclxuXHRcdHNtYWxsOiB7XHJcblx0XHRcdGhlaWdodDogMjQsXHJcblx0XHRcdG1pbkhlaWdodDogMjQsXHJcblx0XHRcdHBhZGRpbmdUb3A6IDAsXHJcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXHJcblx0XHR9LFxyXG5cdFx0Y29tcGFjdDoge1xyXG5cdFx0XHRoZWlnaHQ6IDMyLFxyXG5cdFx0XHRtaW5IZWlnaHQ6IDMyLFxyXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxyXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxyXG5cdFx0fSxcclxuXHRcdCdfX3Vuc3RhYmxlLWxhcmdlJzoge1xyXG5cdFx0XHRoZWlnaHQ6IDQwLFxyXG5cdFx0XHRtaW5IZWlnaHQ6IDQwLFxyXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxyXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxyXG5cdFx0fSxcclxuXHR9O1xyXG5cclxuXHRpZiAoICEgX19uZXh0NDBweERlZmF1bHRTaXplICkge1xyXG5cdFx0c2l6ZXMuZGVmYXVsdCA9IHNpemVzLmNvbXBhY3Q7XHJcblx0fVxyXG5cclxuXHRjb25zdCBzdHlsZSA9IHNpemVzWyBzZWxlY3RTaXplIF0gfHwgc2l6ZXMuZGVmYXVsdDtcclxuXHJcblx0cmV0dXJuIGNzcyggc3R5bGUgKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBjaGV2cm9uSWNvblNpemUgPSAxODtcclxuXHJcbmNvbnN0IHNpemVQYWRkaW5ncyA9ICgge1xyXG5cdF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSxcclxuXHRtdWx0aXBsZSxcclxuXHRzZWxlY3RTaXplID0gJ2RlZmF1bHQnLFxyXG59OiBTZWxlY3RQcm9wcyApID0+IHtcclxuXHRjb25zdCBwYWRkaW5nID0ge1xyXG5cdFx0ZGVmYXVsdDogQ09ORklHLmNvbnRyb2xQYWRkaW5nWCxcclxuXHRcdHNtYWxsOiBDT05GSUcuY29udHJvbFBhZGRpbmdYU21hbGwsXHJcblx0XHRjb21wYWN0OiBDT05GSUcuY29udHJvbFBhZGRpbmdYU21hbGwsXHJcblx0XHQnX191bnN0YWJsZS1sYXJnZSc6IENPTkZJRy5jb250cm9sUGFkZGluZ1gsXHJcblx0fTtcclxuXHJcblx0aWYgKCAhIF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSApIHtcclxuXHRcdHBhZGRpbmcuZGVmYXVsdCA9IHBhZGRpbmcuY29tcGFjdDtcclxuXHR9XHJcblxyXG5cdGNvbnN0IHNlbGVjdGVkUGFkZGluZyA9IHBhZGRpbmdbIHNlbGVjdFNpemUgXSB8fCBwYWRkaW5nLmRlZmF1bHQ7XHJcblxyXG5cdHJldHVybiBydGwoIHtcclxuXHRcdHBhZGRpbmdMZWZ0OiBzZWxlY3RlZFBhZGRpbmcsXHJcblx0XHRwYWRkaW5nUmlnaHQ6IHNlbGVjdGVkUGFkZGluZyArIGNoZXZyb25JY29uU2l6ZSxcclxuXHRcdC4uLiggbXVsdGlwbGVcclxuXHRcdFx0PyB7XHJcblx0XHRcdFx0XHRwYWRkaW5nVG9wOiBzZWxlY3RlZFBhZGRpbmcsXHJcblx0XHRcdFx0XHRwYWRkaW5nQm90dG9tOiBzZWxlY3RlZFBhZGRpbmcsXHJcblx0XHRcdCAgfVxyXG5cdFx0XHQ6IHt9ICksXHJcblx0fSApO1xyXG59O1xyXG5cclxuY29uc3Qgb3ZlcmZsb3dTdHlsZXMgPSAoIHsgbXVsdGlwbGUgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0cmV0dXJuIHtcclxuXHRcdG92ZXJmbG93OiBtdWx0aXBsZSA/ICdhdXRvJyA6ICdoaWRkZW4nLFxyXG5cdH07XHJcbn07XHJcblxyXG5jb25zdCB2YXJpYW50U3R5bGVzID0gKCB7IHZhcmlhbnQgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0aWYgKCB2YXJpYW50ID09PSAnbWluaW1hbCcgKSB7XHJcblx0XHRyZXR1cm4gY3NzKCB7XHJcblx0XHRcdGZpZWxkU2l6aW5nOiAnY29udGVudCcsXHJcblx0XHR9ICk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gJyc7XHJcbn07XHJcblxyXG4vLyBUT0RPOiBSZXNvbHZlIG5lZWQgdG8gdXNlICYmJiB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eVxyXG4vLyBodHRwczovL2dpdGh1Yi5jb20vV29yZFByZXNzL2d1dGVuYmVyZy9pc3N1ZXMvMTg0ODNcclxuXHJcbmV4cG9ydCBjb25zdCBTZWxlY3QgPSBzdHlsZWQuc2VsZWN0PCBTZWxlY3RQcm9wcyA+YFxyXG5cdCYmJiB7XHJcblx0XHRhcHBlYXJhbmNlOiBub25lO1xyXG5cdFx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcblx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cdFx0Ym9yZGVyOiBub25lO1xyXG5cdFx0Ym94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xyXG5cdFx0Y29sb3I6IGN1cnJlbnRDb2xvcjsgLy8gT3ZlcnJpZGVzIGhvdmVyL2ZvY3VzIHN0eWxlcyBpbiBmb3Jtcy5jc3NcclxuXHRcdGN1cnNvcjogaW5oZXJpdDtcclxuXHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcblx0XHRtYXJnaW46IDA7XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHRcdG1heC13aWR0aDogbm9uZTtcclxuXHRcdHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcblx0XHR0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuXHJcblx0XHQkeyBmb250U2l6ZVN0eWxlcyB9O1xyXG5cdFx0JHsgc2l6ZVN0eWxlcyB9O1xyXG5cdFx0JHsgc2l6ZVBhZGRpbmdzIH07XHJcblx0XHQkeyBvdmVyZmxvd1N0eWxlcyB9XHJcblx0XHQkeyB2YXJpYW50U3R5bGVzIH1cclxuXHR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgRG93bkFycm93V3JhcHBlciA9IHN0eWxlZC5kaXZgXHJcblx0bWFyZ2luLWlubGluZS1lbmQ6ICR7IHNwYWNlKCAtMSApIH07IC8vIG9wdGljYWxseSBhZGp1c3QgdGhlIGljb25cclxuXHRsaW5lLWhlaWdodDogMDtcclxuXHJcblx0cGF0aCB7XHJcblx0XHRmaWxsOiBjdXJyZW50Q29sb3I7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXJXaXRoQ2xpY2tUaHJvdWdoID0gc3R5bGVkKFxyXG5cdElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXJcclxuKWBcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XHJcblxyXG5cdCR7IHJ0bCggeyByaWdodDogMCB9ICkgfVxyXG5gO1xyXG4iXX0= */");
};
var _ref2 = process.env.NODE_ENV === "production" ? {
  name: "1lv1yo7",
  styles: "display:inline-flex"
} : {
  name: "siqiia-inputBaseVariantStyles",
  styles: "display:inline-flex;label:inputBaseVariantStyles;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1Q1kiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9zZWxlY3QtY29udHJvbC9zdHlsZXMvc2VsZWN0LWNvbnRyb2wtc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xyXG4gKi9cclxuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XHJcblxyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIHJ0bCwgQ09ORklHIH0gZnJvbSAnLi4vLi4vdXRpbHMnO1xyXG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uLy4uL3V0aWxzL3NwYWNlJztcclxuaW1wb3J0IHR5cGUgeyBTZWxlY3RDb250cm9sUHJvcHMgfSBmcm9tICcuLi90eXBlcyc7XHJcbmltcG9ydCBJbnB1dENvbnRyb2xTdWZmaXhXcmFwcGVyIGZyb20gJy4uLy4uL2lucHV0LWNvbnRyb2wvaW5wdXQtc3VmZml4LXdyYXBwZXInO1xyXG5pbXBvcnQgeyBmb250U2l6ZVN0eWxlcyB9IGZyb20gJy4uLy4uL2lucHV0LWNvbnRyb2wvc3R5bGVzL2lucHV0LWNvbnRyb2wtc3R5bGVzJztcclxuaW1wb3J0IElucHV0QmFzZSBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL2lucHV0LWJhc2UnO1xyXG5cclxuaW50ZXJmYWNlIFNlbGVjdFByb3BzXHJcblx0ZXh0ZW5kcyBQaWNrPFxyXG5cdFx0U2VsZWN0Q29udHJvbFByb3BzLFxyXG5cdFx0J19fbmV4dDQwcHhEZWZhdWx0U2l6ZScgfCAnZGlzYWJsZWQnIHwgJ211bHRpcGxlJyB8ICd2YXJpYW50J1xyXG5cdD4ge1xyXG5cdC8vIFVzaW5nIGBzZWxlY3RTaXplYCBpbnN0ZWFkIG9mIGBzaXplYCB0byBhdm9pZCBhIHR5cGUgY29uZmxpY3Qgd2l0aCB0aGVcclxuXHQvLyBgc2l6ZWAgSFRNTCBhdHRyaWJ1dGUgb2YgdGhlIGBzZWxlY3RgIGVsZW1lbnQuXHJcblx0c2VsZWN0U2l6ZT86IFNlbGVjdENvbnRyb2xQcm9wc1sgJ3NpemUnIF07XHJcbn1cclxuXHJcbmNvbnN0IGRpc2FibGVkU3R5bGVzID0gKCB7IGRpc2FibGVkIH06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdGlmICggISBkaXNhYmxlZCApIHtcclxuXHRcdHJldHVybiAnJztcclxuXHR9XHJcblxyXG5cdHJldHVybiBjc3NgXHJcblx0XHRjb2xvcjogJHsgQ09MT1JTLnVpLnRleHREaXNhYmxlZCB9O1xyXG5cdFx0Y3Vyc29yOiBkZWZhdWx0O1xyXG5cdGA7XHJcbn07XHJcblxyXG5jb25zdCBpbnB1dEJhc2VWYXJpYW50U3R5bGVzID0gKCB7IHZhcmlhbnQgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0aWYgKCB2YXJpYW50ID09PSAnbWluaW1hbCcgKSB7XHJcblx0XHRyZXR1cm4gY3NzYFxyXG5cdFx0XHRkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuXHRcdGA7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gJyc7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgU3R5bGVkSW5wdXRCYXNlID0gc3R5bGVkKCBJbnB1dEJhc2UgKWBcclxuXHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmZvcmVncm91bmQgfTtcclxuXHRjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG5cdCR7IGRpc2FibGVkU3R5bGVzIH1cclxuXHQkeyBpbnB1dEJhc2VWYXJpYW50U3R5bGVzIH1cclxuYDtcclxuXHJcbmNvbnN0IHNpemVTdHlsZXMgPSAoIHtcclxuXHRfX25leHQ0MHB4RGVmYXVsdFNpemUsXHJcblx0bXVsdGlwbGUsXHJcblx0c2VsZWN0U2l6ZSA9ICdkZWZhdWx0JyxcclxufTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0aWYgKCBtdWx0aXBsZSApIHtcclxuXHRcdC8vIFdoZW4gYG11bHRpcGxlYCwganVzdCB1c2UgdGhlIG5hdGl2ZSBicm93c2VyIHN0eWxlc1xyXG5cdFx0Ly8gd2l0aG91dCBzZXR0aW5nIGV4cGxpY2l0IGhlaWdodC5cclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdGNvbnN0IHNpemVzID0ge1xyXG5cdFx0ZGVmYXVsdDoge1xyXG5cdFx0XHRoZWlnaHQ6IDQwLFxyXG5cdFx0XHRtaW5IZWlnaHQ6IDQwLFxyXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxyXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxyXG5cdFx0fSxcclxuXHRcdHNtYWxsOiB7XHJcblx0XHRcdGhlaWdodDogMjQsXHJcblx0XHRcdG1pbkhlaWdodDogMjQsXHJcblx0XHRcdHBhZGRpbmdUb3A6IDAsXHJcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXHJcblx0XHR9LFxyXG5cdFx0Y29tcGFjdDoge1xyXG5cdFx0XHRoZWlnaHQ6IDMyLFxyXG5cdFx0XHRtaW5IZWlnaHQ6IDMyLFxyXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxyXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxyXG5cdFx0fSxcclxuXHRcdCdfX3Vuc3RhYmxlLWxhcmdlJzoge1xyXG5cdFx0XHRoZWlnaHQ6IDQwLFxyXG5cdFx0XHRtaW5IZWlnaHQ6IDQwLFxyXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxyXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxyXG5cdFx0fSxcclxuXHR9O1xyXG5cclxuXHRpZiAoICEgX19uZXh0NDBweERlZmF1bHRTaXplICkge1xyXG5cdFx0c2l6ZXMuZGVmYXVsdCA9IHNpemVzLmNvbXBhY3Q7XHJcblx0fVxyXG5cclxuXHRjb25zdCBzdHlsZSA9IHNpemVzWyBzZWxlY3RTaXplIF0gfHwgc2l6ZXMuZGVmYXVsdDtcclxuXHJcblx0cmV0dXJuIGNzcyggc3R5bGUgKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBjaGV2cm9uSWNvblNpemUgPSAxODtcclxuXHJcbmNvbnN0IHNpemVQYWRkaW5ncyA9ICgge1xyXG5cdF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSxcclxuXHRtdWx0aXBsZSxcclxuXHRzZWxlY3RTaXplID0gJ2RlZmF1bHQnLFxyXG59OiBTZWxlY3RQcm9wcyApID0+IHtcclxuXHRjb25zdCBwYWRkaW5nID0ge1xyXG5cdFx0ZGVmYXVsdDogQ09ORklHLmNvbnRyb2xQYWRkaW5nWCxcclxuXHRcdHNtYWxsOiBDT05GSUcuY29udHJvbFBhZGRpbmdYU21hbGwsXHJcblx0XHRjb21wYWN0OiBDT05GSUcuY29udHJvbFBhZGRpbmdYU21hbGwsXHJcblx0XHQnX191bnN0YWJsZS1sYXJnZSc6IENPTkZJRy5jb250cm9sUGFkZGluZ1gsXHJcblx0fTtcclxuXHJcblx0aWYgKCAhIF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSApIHtcclxuXHRcdHBhZGRpbmcuZGVmYXVsdCA9IHBhZGRpbmcuY29tcGFjdDtcclxuXHR9XHJcblxyXG5cdGNvbnN0IHNlbGVjdGVkUGFkZGluZyA9IHBhZGRpbmdbIHNlbGVjdFNpemUgXSB8fCBwYWRkaW5nLmRlZmF1bHQ7XHJcblxyXG5cdHJldHVybiBydGwoIHtcclxuXHRcdHBhZGRpbmdMZWZ0OiBzZWxlY3RlZFBhZGRpbmcsXHJcblx0XHRwYWRkaW5nUmlnaHQ6IHNlbGVjdGVkUGFkZGluZyArIGNoZXZyb25JY29uU2l6ZSxcclxuXHRcdC4uLiggbXVsdGlwbGVcclxuXHRcdFx0PyB7XHJcblx0XHRcdFx0XHRwYWRkaW5nVG9wOiBzZWxlY3RlZFBhZGRpbmcsXHJcblx0XHRcdFx0XHRwYWRkaW5nQm90dG9tOiBzZWxlY3RlZFBhZGRpbmcsXHJcblx0XHRcdCAgfVxyXG5cdFx0XHQ6IHt9ICksXHJcblx0fSApO1xyXG59O1xyXG5cclxuY29uc3Qgb3ZlcmZsb3dTdHlsZXMgPSAoIHsgbXVsdGlwbGUgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0cmV0dXJuIHtcclxuXHRcdG92ZXJmbG93OiBtdWx0aXBsZSA/ICdhdXRvJyA6ICdoaWRkZW4nLFxyXG5cdH07XHJcbn07XHJcblxyXG5jb25zdCB2YXJpYW50U3R5bGVzID0gKCB7IHZhcmlhbnQgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0aWYgKCB2YXJpYW50ID09PSAnbWluaW1hbCcgKSB7XHJcblx0XHRyZXR1cm4gY3NzKCB7XHJcblx0XHRcdGZpZWxkU2l6aW5nOiAnY29udGVudCcsXHJcblx0XHR9ICk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gJyc7XHJcbn07XHJcblxyXG4vLyBUT0RPOiBSZXNvbHZlIG5lZWQgdG8gdXNlICYmJiB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eVxyXG4vLyBodHRwczovL2dpdGh1Yi5jb20vV29yZFByZXNzL2d1dGVuYmVyZy9pc3N1ZXMvMTg0ODNcclxuXHJcbmV4cG9ydCBjb25zdCBTZWxlY3QgPSBzdHlsZWQuc2VsZWN0PCBTZWxlY3RQcm9wcyA+YFxyXG5cdCYmJiB7XHJcblx0XHRhcHBlYXJhbmNlOiBub25lO1xyXG5cdFx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcblx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cdFx0Ym9yZGVyOiBub25lO1xyXG5cdFx0Ym94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xyXG5cdFx0Y29sb3I6IGN1cnJlbnRDb2xvcjsgLy8gT3ZlcnJpZGVzIGhvdmVyL2ZvY3VzIHN0eWxlcyBpbiBmb3Jtcy5jc3NcclxuXHRcdGN1cnNvcjogaW5oZXJpdDtcclxuXHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcblx0XHRtYXJnaW46IDA7XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHRcdG1heC13aWR0aDogbm9uZTtcclxuXHRcdHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcblx0XHR0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuXHJcblx0XHQkeyBmb250U2l6ZVN0eWxlcyB9O1xyXG5cdFx0JHsgc2l6ZVN0eWxlcyB9O1xyXG5cdFx0JHsgc2l6ZVBhZGRpbmdzIH07XHJcblx0XHQkeyBvdmVyZmxvd1N0eWxlcyB9XHJcblx0XHQkeyB2YXJpYW50U3R5bGVzIH1cclxuXHR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgRG93bkFycm93V3JhcHBlciA9IHN0eWxlZC5kaXZgXHJcblx0bWFyZ2luLWlubGluZS1lbmQ6ICR7IHNwYWNlKCAtMSApIH07IC8vIG9wdGljYWxseSBhZGp1c3QgdGhlIGljb25cclxuXHRsaW5lLWhlaWdodDogMDtcclxuXHJcblx0cGF0aCB7XHJcblx0XHRmaWxsOiBjdXJyZW50Q29sb3I7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXJXaXRoQ2xpY2tUaHJvdWdoID0gc3R5bGVkKFxyXG5cdElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXJcclxuKWBcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XHJcblxyXG5cdCR7IHJ0bCggeyByaWdodDogMCB9ICkgfVxyXG5gO1xyXG4iXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
const inputBaseVariantStyles = ({
  variant
}) => {
  if (variant === 'minimal') {
    return _ref2;
  }
  return '';
};
export const StyledInputBase = /*#__PURE__*/_styled(InputBase, process.env.NODE_ENV === "production" ? {
  target: "e1mv6sxx3"
} : {
  target: "e1mv6sxx3",
  label: "StyledInputBase"
})("color:", COLORS.theme.foreground, ";cursor:pointer;", disabledStyles, " ", inputBaseVariantStyles, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErQ2tEIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcclxuICovXHJcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xyXG5cclxuLyoqXHJcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xyXG4gKi9cclxuaW1wb3J0IHsgQ09MT1JTLCBydGwsIENPTkZJRyB9IGZyb20gJy4uLy4uL3V0aWxzJztcclxuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi8uLi91dGlscy9zcGFjZSc7XHJcbmltcG9ydCB0eXBlIHsgU2VsZWN0Q29udHJvbFByb3BzIH0gZnJvbSAnLi4vdHlwZXMnO1xyXG5pbXBvcnQgSW5wdXRDb250cm9sU3VmZml4V3JhcHBlciBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL2lucHV0LXN1ZmZpeC13cmFwcGVyJztcclxuaW1wb3J0IHsgZm9udFNpemVTdHlsZXMgfSBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XHJcbmltcG9ydCBJbnB1dEJhc2UgZnJvbSAnLi4vLi4vaW5wdXQtY29udHJvbC9pbnB1dC1iYXNlJztcclxuXHJcbmludGVyZmFjZSBTZWxlY3RQcm9wc1xyXG5cdGV4dGVuZHMgUGljazxcclxuXHRcdFNlbGVjdENvbnRyb2xQcm9wcyxcclxuXHRcdCdfX25leHQ0MHB4RGVmYXVsdFNpemUnIHwgJ2Rpc2FibGVkJyB8ICdtdWx0aXBsZScgfCAndmFyaWFudCdcclxuXHQ+IHtcclxuXHQvLyBVc2luZyBgc2VsZWN0U2l6ZWAgaW5zdGVhZCBvZiBgc2l6ZWAgdG8gYXZvaWQgYSB0eXBlIGNvbmZsaWN0IHdpdGggdGhlXHJcblx0Ly8gYHNpemVgIEhUTUwgYXR0cmlidXRlIG9mIHRoZSBgc2VsZWN0YCBlbGVtZW50LlxyXG5cdHNlbGVjdFNpemU/OiBTZWxlY3RDb250cm9sUHJvcHNbICdzaXplJyBdO1xyXG59XHJcblxyXG5jb25zdCBkaXNhYmxlZFN0eWxlcyA9ICggeyBkaXNhYmxlZCB9OiBTZWxlY3RQcm9wcyApID0+IHtcclxuXHRpZiAoICEgZGlzYWJsZWQgKSB7XHJcblx0XHRyZXR1cm4gJyc7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gY3NzYFxyXG5cdFx0Y29sb3I6ICR7IENPTE9SUy51aS50ZXh0RGlzYWJsZWQgfTtcclxuXHRcdGN1cnNvcjogZGVmYXVsdDtcclxuXHRgO1xyXG59O1xyXG5cclxuY29uc3QgaW5wdXRCYXNlVmFyaWFudFN0eWxlcyA9ICggeyB2YXJpYW50IH06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdGlmICggdmFyaWFudCA9PT0gJ21pbmltYWwnICkge1xyXG5cdFx0cmV0dXJuIGNzc2BcclxuXHRcdFx0ZGlzcGxheTogaW5saW5lLWZsZXg7XHJcblx0XHRgO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuICcnO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IFN0eWxlZElucHV0QmFzZSA9IHN0eWxlZCggSW5wdXRCYXNlIClgXHJcblx0Y29sb3I6ICR7IENPTE9SUy50aGVtZS5mb3JlZ3JvdW5kIH07XHJcblx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cclxuXHQkeyBkaXNhYmxlZFN0eWxlcyB9XHJcblx0JHsgaW5wdXRCYXNlVmFyaWFudFN0eWxlcyB9XHJcbmA7XHJcblxyXG5jb25zdCBzaXplU3R5bGVzID0gKCB7XHJcblx0X19uZXh0NDBweERlZmF1bHRTaXplLFxyXG5cdG11bHRpcGxlLFxyXG5cdHNlbGVjdFNpemUgPSAnZGVmYXVsdCcsXHJcbn06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdGlmICggbXVsdGlwbGUgKSB7XHJcblx0XHQvLyBXaGVuIGBtdWx0aXBsZWAsIGp1c3QgdXNlIHRoZSBuYXRpdmUgYnJvd3NlciBzdHlsZXNcclxuXHRcdC8vIHdpdGhvdXQgc2V0dGluZyBleHBsaWNpdCBoZWlnaHQuXHJcblx0XHRyZXR1cm47XHJcblx0fVxyXG5cclxuXHRjb25zdCBzaXplcyA9IHtcclxuXHRcdGRlZmF1bHQ6IHtcclxuXHRcdFx0aGVpZ2h0OiA0MCxcclxuXHRcdFx0bWluSGVpZ2h0OiA0MCxcclxuXHRcdFx0cGFkZGluZ1RvcDogMCxcclxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcclxuXHRcdH0sXHJcblx0XHRzbWFsbDoge1xyXG5cdFx0XHRoZWlnaHQ6IDI0LFxyXG5cdFx0XHRtaW5IZWlnaHQ6IDI0LFxyXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxyXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxyXG5cdFx0fSxcclxuXHRcdGNvbXBhY3Q6IHtcclxuXHRcdFx0aGVpZ2h0OiAzMixcclxuXHRcdFx0bWluSGVpZ2h0OiAzMixcclxuXHRcdFx0cGFkZGluZ1RvcDogMCxcclxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcclxuXHRcdH0sXHJcblx0XHQnX191bnN0YWJsZS1sYXJnZSc6IHtcclxuXHRcdFx0aGVpZ2h0OiA0MCxcclxuXHRcdFx0bWluSGVpZ2h0OiA0MCxcclxuXHRcdFx0cGFkZGluZ1RvcDogMCxcclxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcclxuXHRcdH0sXHJcblx0fTtcclxuXHJcblx0aWYgKCAhIF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSApIHtcclxuXHRcdHNpemVzLmRlZmF1bHQgPSBzaXplcy5jb21wYWN0O1xyXG5cdH1cclxuXHJcblx0Y29uc3Qgc3R5bGUgPSBzaXplc1sgc2VsZWN0U2l6ZSBdIHx8IHNpemVzLmRlZmF1bHQ7XHJcblxyXG5cdHJldHVybiBjc3MoIHN0eWxlICk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgY2hldnJvbkljb25TaXplID0gMTg7XHJcblxyXG5jb25zdCBzaXplUGFkZGluZ3MgPSAoIHtcclxuXHRfX25leHQ0MHB4RGVmYXVsdFNpemUsXHJcblx0bXVsdGlwbGUsXHJcblx0c2VsZWN0U2l6ZSA9ICdkZWZhdWx0JyxcclxufTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0Y29uc3QgcGFkZGluZyA9IHtcclxuXHRcdGRlZmF1bHQ6IENPTkZJRy5jb250cm9sUGFkZGluZ1gsXHJcblx0XHRzbWFsbDogQ09ORklHLmNvbnRyb2xQYWRkaW5nWFNtYWxsLFxyXG5cdFx0Y29tcGFjdDogQ09ORklHLmNvbnRyb2xQYWRkaW5nWFNtYWxsLFxyXG5cdFx0J19fdW5zdGFibGUtbGFyZ2UnOiBDT05GSUcuY29udHJvbFBhZGRpbmdYLFxyXG5cdH07XHJcblxyXG5cdGlmICggISBfX25leHQ0MHB4RGVmYXVsdFNpemUgKSB7XHJcblx0XHRwYWRkaW5nLmRlZmF1bHQgPSBwYWRkaW5nLmNvbXBhY3Q7XHJcblx0fVxyXG5cclxuXHRjb25zdCBzZWxlY3RlZFBhZGRpbmcgPSBwYWRkaW5nWyBzZWxlY3RTaXplIF0gfHwgcGFkZGluZy5kZWZhdWx0O1xyXG5cclxuXHRyZXR1cm4gcnRsKCB7XHJcblx0XHRwYWRkaW5nTGVmdDogc2VsZWN0ZWRQYWRkaW5nLFxyXG5cdFx0cGFkZGluZ1JpZ2h0OiBzZWxlY3RlZFBhZGRpbmcgKyBjaGV2cm9uSWNvblNpemUsXHJcblx0XHQuLi4oIG11bHRpcGxlXHJcblx0XHRcdD8ge1xyXG5cdFx0XHRcdFx0cGFkZGluZ1RvcDogc2VsZWN0ZWRQYWRkaW5nLFxyXG5cdFx0XHRcdFx0cGFkZGluZ0JvdHRvbTogc2VsZWN0ZWRQYWRkaW5nLFxyXG5cdFx0XHQgIH1cclxuXHRcdFx0OiB7fSApLFxyXG5cdH0gKTtcclxufTtcclxuXHJcbmNvbnN0IG92ZXJmbG93U3R5bGVzID0gKCB7IG11bHRpcGxlIH06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdHJldHVybiB7XHJcblx0XHRvdmVyZmxvdzogbXVsdGlwbGUgPyAnYXV0bycgOiAnaGlkZGVuJyxcclxuXHR9O1xyXG59O1xyXG5cclxuY29uc3QgdmFyaWFudFN0eWxlcyA9ICggeyB2YXJpYW50IH06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdGlmICggdmFyaWFudCA9PT0gJ21pbmltYWwnICkge1xyXG5cdFx0cmV0dXJuIGNzcygge1xyXG5cdFx0XHRmaWVsZFNpemluZzogJ2NvbnRlbnQnLFxyXG5cdFx0fSApO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuICcnO1xyXG59O1xyXG5cclxuLy8gVE9ETzogUmVzb2x2ZSBuZWVkIHRvIHVzZSAmJiYgdG8gaW5jcmVhc2Ugc3BlY2lmaWNpdHlcclxuLy8gaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy9ndXRlbmJlcmcvaXNzdWVzLzE4NDgzXHJcblxyXG5leHBvcnQgY29uc3QgU2VsZWN0ID0gc3R5bGVkLnNlbGVjdDwgU2VsZWN0UHJvcHMgPmBcclxuXHQmJiYge1xyXG5cdFx0YXBwZWFyYW5jZTogbm9uZTtcclxuXHRcdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG5cdFx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcclxuXHRcdGJvcmRlcjogbm9uZTtcclxuXHRcdGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcclxuXHRcdGNvbG9yOiBjdXJyZW50Q29sb3I7IC8vIE92ZXJyaWRlcyBob3Zlci9mb2N1cyBzdHlsZXMgaW4gZm9ybXMuY3NzXHJcblx0XHRjdXJzb3I6IGluaGVyaXQ7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG5cdFx0bWFyZ2luOiAwO1xyXG5cdFx0d2lkdGg6IDEwMCU7XHJcblx0XHRtYXgtd2lkdGg6IG5vbmU7XHJcblx0XHR3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG5cdFx0dGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcblxyXG5cdFx0JHsgZm9udFNpemVTdHlsZXMgfTtcclxuXHRcdCR7IHNpemVTdHlsZXMgfTtcclxuXHRcdCR7IHNpemVQYWRkaW5ncyB9O1xyXG5cdFx0JHsgb3ZlcmZsb3dTdHlsZXMgfVxyXG5cdFx0JHsgdmFyaWFudFN0eWxlcyB9XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IERvd25BcnJvd1dyYXBwZXIgPSBzdHlsZWQuZGl2YFxyXG5cdG1hcmdpbi1pbmxpbmUtZW5kOiAkeyBzcGFjZSggLTEgKSB9OyAvLyBvcHRpY2FsbHkgYWRqdXN0IHRoZSBpY29uXHJcblx0bGluZS1oZWlnaHQ6IDA7XHJcblxyXG5cdHBhdGgge1xyXG5cdFx0ZmlsbDogY3VycmVudENvbG9yO1xyXG5cdH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBJbnB1dENvbnRyb2xTdWZmaXhXcmFwcGVyV2l0aENsaWNrVGhyb3VnaCA9IHN0eWxlZChcclxuXHRJbnB1dENvbnRyb2xTdWZmaXhXcmFwcGVyXHJcbilgXHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuXHQkeyBydGwoIHsgcmlnaHQ6IDAgfSApIH1cclxuYDtcclxuIl19 */"));
const sizeStyles = ({
  __next40pxDefaultSize,
  multiple,
  selectSize = 'default'
}) => {
  if (multiple) {
    // When `multiple`, just use the native browser styles
    // without setting explicit height.
    return;
  }
  const sizes = {
    default: {
      height: 40,
      minHeight: 40,
      paddingTop: 0,
      paddingBottom: 0
    },
    small: {
      height: 24,
      minHeight: 24,
      paddingTop: 0,
      paddingBottom: 0
    },
    compact: {
      height: 32,
      minHeight: 32,
      paddingTop: 0,
      paddingBottom: 0
    },
    '__unstable-large': {
      height: 40,
      minHeight: 40,
      paddingTop: 0,
      paddingBottom: 0
    }
  };
  if (!__next40pxDefaultSize) {
    sizes.default = sizes.compact;
  }
  const style = sizes[selectSize] || sizes.default;
  return /*#__PURE__*/css(style, process.env.NODE_ENV === "production" ? "" : ";label:sizeStyles;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtR1EiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9zZWxlY3QtY29udHJvbC9zdHlsZXMvc2VsZWN0LWNvbnRyb2wtc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xyXG4gKi9cclxuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XHJcblxyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIHJ0bCwgQ09ORklHIH0gZnJvbSAnLi4vLi4vdXRpbHMnO1xyXG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uLy4uL3V0aWxzL3NwYWNlJztcclxuaW1wb3J0IHR5cGUgeyBTZWxlY3RDb250cm9sUHJvcHMgfSBmcm9tICcuLi90eXBlcyc7XHJcbmltcG9ydCBJbnB1dENvbnRyb2xTdWZmaXhXcmFwcGVyIGZyb20gJy4uLy4uL2lucHV0LWNvbnRyb2wvaW5wdXQtc3VmZml4LXdyYXBwZXInO1xyXG5pbXBvcnQgeyBmb250U2l6ZVN0eWxlcyB9IGZyb20gJy4uLy4uL2lucHV0LWNvbnRyb2wvc3R5bGVzL2lucHV0LWNvbnRyb2wtc3R5bGVzJztcclxuaW1wb3J0IElucHV0QmFzZSBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL2lucHV0LWJhc2UnO1xyXG5cclxuaW50ZXJmYWNlIFNlbGVjdFByb3BzXHJcblx0ZXh0ZW5kcyBQaWNrPFxyXG5cdFx0U2VsZWN0Q29udHJvbFByb3BzLFxyXG5cdFx0J19fbmV4dDQwcHhEZWZhdWx0U2l6ZScgfCAnZGlzYWJsZWQnIHwgJ211bHRpcGxlJyB8ICd2YXJpYW50J1xyXG5cdD4ge1xyXG5cdC8vIFVzaW5nIGBzZWxlY3RTaXplYCBpbnN0ZWFkIG9mIGBzaXplYCB0byBhdm9pZCBhIHR5cGUgY29uZmxpY3Qgd2l0aCB0aGVcclxuXHQvLyBgc2l6ZWAgSFRNTCBhdHRyaWJ1dGUgb2YgdGhlIGBzZWxlY3RgIGVsZW1lbnQuXHJcblx0c2VsZWN0U2l6ZT86IFNlbGVjdENvbnRyb2xQcm9wc1sgJ3NpemUnIF07XHJcbn1cclxuXHJcbmNvbnN0IGRpc2FibGVkU3R5bGVzID0gKCB7IGRpc2FibGVkIH06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdGlmICggISBkaXNhYmxlZCApIHtcclxuXHRcdHJldHVybiAnJztcclxuXHR9XHJcblxyXG5cdHJldHVybiBjc3NgXHJcblx0XHRjb2xvcjogJHsgQ09MT1JTLnVpLnRleHREaXNhYmxlZCB9O1xyXG5cdFx0Y3Vyc29yOiBkZWZhdWx0O1xyXG5cdGA7XHJcbn07XHJcblxyXG5jb25zdCBpbnB1dEJhc2VWYXJpYW50U3R5bGVzID0gKCB7IHZhcmlhbnQgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0aWYgKCB2YXJpYW50ID09PSAnbWluaW1hbCcgKSB7XHJcblx0XHRyZXR1cm4gY3NzYFxyXG5cdFx0XHRkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuXHRcdGA7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gJyc7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgU3R5bGVkSW5wdXRCYXNlID0gc3R5bGVkKCBJbnB1dEJhc2UgKWBcclxuXHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmZvcmVncm91bmQgfTtcclxuXHRjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG5cdCR7IGRpc2FibGVkU3R5bGVzIH1cclxuXHQkeyBpbnB1dEJhc2VWYXJpYW50U3R5bGVzIH1cclxuYDtcclxuXHJcbmNvbnN0IHNpemVTdHlsZXMgPSAoIHtcclxuXHRfX25leHQ0MHB4RGVmYXVsdFNpemUsXHJcblx0bXVsdGlwbGUsXHJcblx0c2VsZWN0U2l6ZSA9ICdkZWZhdWx0JyxcclxufTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0aWYgKCBtdWx0aXBsZSApIHtcclxuXHRcdC8vIFdoZW4gYG11bHRpcGxlYCwganVzdCB1c2UgdGhlIG5hdGl2ZSBicm93c2VyIHN0eWxlc1xyXG5cdFx0Ly8gd2l0aG91dCBzZXR0aW5nIGV4cGxpY2l0IGhlaWdodC5cclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdGNvbnN0IHNpemVzID0ge1xyXG5cdFx0ZGVmYXVsdDoge1xyXG5cdFx0XHRoZWlnaHQ6IDQwLFxyXG5cdFx0XHRtaW5IZWlnaHQ6IDQwLFxyXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxyXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxyXG5cdFx0fSxcclxuXHRcdHNtYWxsOiB7XHJcblx0XHRcdGhlaWdodDogMjQsXHJcblx0XHRcdG1pbkhlaWdodDogMjQsXHJcblx0XHRcdHBhZGRpbmdUb3A6IDAsXHJcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXHJcblx0XHR9LFxyXG5cdFx0Y29tcGFjdDoge1xyXG5cdFx0XHRoZWlnaHQ6IDMyLFxyXG5cdFx0XHRtaW5IZWlnaHQ6IDMyLFxyXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxyXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxyXG5cdFx0fSxcclxuXHRcdCdfX3Vuc3RhYmxlLWxhcmdlJzoge1xyXG5cdFx0XHRoZWlnaHQ6IDQwLFxyXG5cdFx0XHRtaW5IZWlnaHQ6IDQwLFxyXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxyXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxyXG5cdFx0fSxcclxuXHR9O1xyXG5cclxuXHRpZiAoICEgX19uZXh0NDBweERlZmF1bHRTaXplICkge1xyXG5cdFx0c2l6ZXMuZGVmYXVsdCA9IHNpemVzLmNvbXBhY3Q7XHJcblx0fVxyXG5cclxuXHRjb25zdCBzdHlsZSA9IHNpemVzWyBzZWxlY3RTaXplIF0gfHwgc2l6ZXMuZGVmYXVsdDtcclxuXHJcblx0cmV0dXJuIGNzcyggc3R5bGUgKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBjaGV2cm9uSWNvblNpemUgPSAxODtcclxuXHJcbmNvbnN0IHNpemVQYWRkaW5ncyA9ICgge1xyXG5cdF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSxcclxuXHRtdWx0aXBsZSxcclxuXHRzZWxlY3RTaXplID0gJ2RlZmF1bHQnLFxyXG59OiBTZWxlY3RQcm9wcyApID0+IHtcclxuXHRjb25zdCBwYWRkaW5nID0ge1xyXG5cdFx0ZGVmYXVsdDogQ09ORklHLmNvbnRyb2xQYWRkaW5nWCxcclxuXHRcdHNtYWxsOiBDT05GSUcuY29udHJvbFBhZGRpbmdYU21hbGwsXHJcblx0XHRjb21wYWN0OiBDT05GSUcuY29udHJvbFBhZGRpbmdYU21hbGwsXHJcblx0XHQnX191bnN0YWJsZS1sYXJnZSc6IENPTkZJRy5jb250cm9sUGFkZGluZ1gsXHJcblx0fTtcclxuXHJcblx0aWYgKCAhIF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSApIHtcclxuXHRcdHBhZGRpbmcuZGVmYXVsdCA9IHBhZGRpbmcuY29tcGFjdDtcclxuXHR9XHJcblxyXG5cdGNvbnN0IHNlbGVjdGVkUGFkZGluZyA9IHBhZGRpbmdbIHNlbGVjdFNpemUgXSB8fCBwYWRkaW5nLmRlZmF1bHQ7XHJcblxyXG5cdHJldHVybiBydGwoIHtcclxuXHRcdHBhZGRpbmdMZWZ0OiBzZWxlY3RlZFBhZGRpbmcsXHJcblx0XHRwYWRkaW5nUmlnaHQ6IHNlbGVjdGVkUGFkZGluZyArIGNoZXZyb25JY29uU2l6ZSxcclxuXHRcdC4uLiggbXVsdGlwbGVcclxuXHRcdFx0PyB7XHJcblx0XHRcdFx0XHRwYWRkaW5nVG9wOiBzZWxlY3RlZFBhZGRpbmcsXHJcblx0XHRcdFx0XHRwYWRkaW5nQm90dG9tOiBzZWxlY3RlZFBhZGRpbmcsXHJcblx0XHRcdCAgfVxyXG5cdFx0XHQ6IHt9ICksXHJcblx0fSApO1xyXG59O1xyXG5cclxuY29uc3Qgb3ZlcmZsb3dTdHlsZXMgPSAoIHsgbXVsdGlwbGUgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0cmV0dXJuIHtcclxuXHRcdG92ZXJmbG93OiBtdWx0aXBsZSA/ICdhdXRvJyA6ICdoaWRkZW4nLFxyXG5cdH07XHJcbn07XHJcblxyXG5jb25zdCB2YXJpYW50U3R5bGVzID0gKCB7IHZhcmlhbnQgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0aWYgKCB2YXJpYW50ID09PSAnbWluaW1hbCcgKSB7XHJcblx0XHRyZXR1cm4gY3NzKCB7XHJcblx0XHRcdGZpZWxkU2l6aW5nOiAnY29udGVudCcsXHJcblx0XHR9ICk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gJyc7XHJcbn07XHJcblxyXG4vLyBUT0RPOiBSZXNvbHZlIG5lZWQgdG8gdXNlICYmJiB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eVxyXG4vLyBodHRwczovL2dpdGh1Yi5jb20vV29yZFByZXNzL2d1dGVuYmVyZy9pc3N1ZXMvMTg0ODNcclxuXHJcbmV4cG9ydCBjb25zdCBTZWxlY3QgPSBzdHlsZWQuc2VsZWN0PCBTZWxlY3RQcm9wcyA+YFxyXG5cdCYmJiB7XHJcblx0XHRhcHBlYXJhbmNlOiBub25lO1xyXG5cdFx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcblx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cdFx0Ym9yZGVyOiBub25lO1xyXG5cdFx0Ym94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xyXG5cdFx0Y29sb3I6IGN1cnJlbnRDb2xvcjsgLy8gT3ZlcnJpZGVzIGhvdmVyL2ZvY3VzIHN0eWxlcyBpbiBmb3Jtcy5jc3NcclxuXHRcdGN1cnNvcjogaW5oZXJpdDtcclxuXHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcblx0XHRtYXJnaW46IDA7XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHRcdG1heC13aWR0aDogbm9uZTtcclxuXHRcdHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcblx0XHR0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuXHJcblx0XHQkeyBmb250U2l6ZVN0eWxlcyB9O1xyXG5cdFx0JHsgc2l6ZVN0eWxlcyB9O1xyXG5cdFx0JHsgc2l6ZVBhZGRpbmdzIH07XHJcblx0XHQkeyBvdmVyZmxvd1N0eWxlcyB9XHJcblx0XHQkeyB2YXJpYW50U3R5bGVzIH1cclxuXHR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgRG93bkFycm93V3JhcHBlciA9IHN0eWxlZC5kaXZgXHJcblx0bWFyZ2luLWlubGluZS1lbmQ6ICR7IHNwYWNlKCAtMSApIH07IC8vIG9wdGljYWxseSBhZGp1c3QgdGhlIGljb25cclxuXHRsaW5lLWhlaWdodDogMDtcclxuXHJcblx0cGF0aCB7XHJcblx0XHRmaWxsOiBjdXJyZW50Q29sb3I7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXJXaXRoQ2xpY2tUaHJvdWdoID0gc3R5bGVkKFxyXG5cdElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXJcclxuKWBcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XHJcblxyXG5cdCR7IHJ0bCggeyByaWdodDogMCB9ICkgfVxyXG5gO1xyXG4iXX0= */");
};
export const chevronIconSize = 18;
const sizePaddings = ({
  __next40pxDefaultSize,
  multiple,
  selectSize = 'default'
}) => {
  const padding = {
    default: CONFIG.controlPaddingX,
    small: CONFIG.controlPaddingXSmall,
    compact: CONFIG.controlPaddingXSmall,
    '__unstable-large': CONFIG.controlPaddingX
  };
  if (!__next40pxDefaultSize) {
    padding.default = padding.compact;
  }
  const selectedPadding = padding[selectSize] || padding.default;
  return rtl({
    paddingLeft: selectedPadding,
    paddingRight: selectedPadding + chevronIconSize,
    ...(multiple ? {
      paddingTop: selectedPadding,
      paddingBottom: selectedPadding
    } : {})
  });
};
const overflowStyles = ({
  multiple
}) => {
  return {
    overflow: multiple ? 'auto' : 'hidden'
  };
};
var _ref = process.env.NODE_ENV === "production" ? {
  name: "n1jncc",
  styles: "field-sizing:content"
} : {
  name: "1n00qi9-variantStyles",
  styles: "field-sizing:content;label:variantStyles;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4SVMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9zZWxlY3QtY29udHJvbC9zdHlsZXMvc2VsZWN0LWNvbnRyb2wtc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xyXG4gKi9cclxuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XHJcblxyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIHJ0bCwgQ09ORklHIH0gZnJvbSAnLi4vLi4vdXRpbHMnO1xyXG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uLy4uL3V0aWxzL3NwYWNlJztcclxuaW1wb3J0IHR5cGUgeyBTZWxlY3RDb250cm9sUHJvcHMgfSBmcm9tICcuLi90eXBlcyc7XHJcbmltcG9ydCBJbnB1dENvbnRyb2xTdWZmaXhXcmFwcGVyIGZyb20gJy4uLy4uL2lucHV0LWNvbnRyb2wvaW5wdXQtc3VmZml4LXdyYXBwZXInO1xyXG5pbXBvcnQgeyBmb250U2l6ZVN0eWxlcyB9IGZyb20gJy4uLy4uL2lucHV0LWNvbnRyb2wvc3R5bGVzL2lucHV0LWNvbnRyb2wtc3R5bGVzJztcclxuaW1wb3J0IElucHV0QmFzZSBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL2lucHV0LWJhc2UnO1xyXG5cclxuaW50ZXJmYWNlIFNlbGVjdFByb3BzXHJcblx0ZXh0ZW5kcyBQaWNrPFxyXG5cdFx0U2VsZWN0Q29udHJvbFByb3BzLFxyXG5cdFx0J19fbmV4dDQwcHhEZWZhdWx0U2l6ZScgfCAnZGlzYWJsZWQnIHwgJ211bHRpcGxlJyB8ICd2YXJpYW50J1xyXG5cdD4ge1xyXG5cdC8vIFVzaW5nIGBzZWxlY3RTaXplYCBpbnN0ZWFkIG9mIGBzaXplYCB0byBhdm9pZCBhIHR5cGUgY29uZmxpY3Qgd2l0aCB0aGVcclxuXHQvLyBgc2l6ZWAgSFRNTCBhdHRyaWJ1dGUgb2YgdGhlIGBzZWxlY3RgIGVsZW1lbnQuXHJcblx0c2VsZWN0U2l6ZT86IFNlbGVjdENvbnRyb2xQcm9wc1sgJ3NpemUnIF07XHJcbn1cclxuXHJcbmNvbnN0IGRpc2FibGVkU3R5bGVzID0gKCB7IGRpc2FibGVkIH06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdGlmICggISBkaXNhYmxlZCApIHtcclxuXHRcdHJldHVybiAnJztcclxuXHR9XHJcblxyXG5cdHJldHVybiBjc3NgXHJcblx0XHRjb2xvcjogJHsgQ09MT1JTLnVpLnRleHREaXNhYmxlZCB9O1xyXG5cdFx0Y3Vyc29yOiBkZWZhdWx0O1xyXG5cdGA7XHJcbn07XHJcblxyXG5jb25zdCBpbnB1dEJhc2VWYXJpYW50U3R5bGVzID0gKCB7IHZhcmlhbnQgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0aWYgKCB2YXJpYW50ID09PSAnbWluaW1hbCcgKSB7XHJcblx0XHRyZXR1cm4gY3NzYFxyXG5cdFx0XHRkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuXHRcdGA7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gJyc7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgU3R5bGVkSW5wdXRCYXNlID0gc3R5bGVkKCBJbnB1dEJhc2UgKWBcclxuXHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmZvcmVncm91bmQgfTtcclxuXHRjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG5cdCR7IGRpc2FibGVkU3R5bGVzIH1cclxuXHQkeyBpbnB1dEJhc2VWYXJpYW50U3R5bGVzIH1cclxuYDtcclxuXHJcbmNvbnN0IHNpemVTdHlsZXMgPSAoIHtcclxuXHRfX25leHQ0MHB4RGVmYXVsdFNpemUsXHJcblx0bXVsdGlwbGUsXHJcblx0c2VsZWN0U2l6ZSA9ICdkZWZhdWx0JyxcclxufTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0aWYgKCBtdWx0aXBsZSApIHtcclxuXHRcdC8vIFdoZW4gYG11bHRpcGxlYCwganVzdCB1c2UgdGhlIG5hdGl2ZSBicm93c2VyIHN0eWxlc1xyXG5cdFx0Ly8gd2l0aG91dCBzZXR0aW5nIGV4cGxpY2l0IGhlaWdodC5cclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdGNvbnN0IHNpemVzID0ge1xyXG5cdFx0ZGVmYXVsdDoge1xyXG5cdFx0XHRoZWlnaHQ6IDQwLFxyXG5cdFx0XHRtaW5IZWlnaHQ6IDQwLFxyXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxyXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxyXG5cdFx0fSxcclxuXHRcdHNtYWxsOiB7XHJcblx0XHRcdGhlaWdodDogMjQsXHJcblx0XHRcdG1pbkhlaWdodDogMjQsXHJcblx0XHRcdHBhZGRpbmdUb3A6IDAsXHJcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXHJcblx0XHR9LFxyXG5cdFx0Y29tcGFjdDoge1xyXG5cdFx0XHRoZWlnaHQ6IDMyLFxyXG5cdFx0XHRtaW5IZWlnaHQ6IDMyLFxyXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxyXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxyXG5cdFx0fSxcclxuXHRcdCdfX3Vuc3RhYmxlLWxhcmdlJzoge1xyXG5cdFx0XHRoZWlnaHQ6IDQwLFxyXG5cdFx0XHRtaW5IZWlnaHQ6IDQwLFxyXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxyXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxyXG5cdFx0fSxcclxuXHR9O1xyXG5cclxuXHRpZiAoICEgX19uZXh0NDBweERlZmF1bHRTaXplICkge1xyXG5cdFx0c2l6ZXMuZGVmYXVsdCA9IHNpemVzLmNvbXBhY3Q7XHJcblx0fVxyXG5cclxuXHRjb25zdCBzdHlsZSA9IHNpemVzWyBzZWxlY3RTaXplIF0gfHwgc2l6ZXMuZGVmYXVsdDtcclxuXHJcblx0cmV0dXJuIGNzcyggc3R5bGUgKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBjaGV2cm9uSWNvblNpemUgPSAxODtcclxuXHJcbmNvbnN0IHNpemVQYWRkaW5ncyA9ICgge1xyXG5cdF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSxcclxuXHRtdWx0aXBsZSxcclxuXHRzZWxlY3RTaXplID0gJ2RlZmF1bHQnLFxyXG59OiBTZWxlY3RQcm9wcyApID0+IHtcclxuXHRjb25zdCBwYWRkaW5nID0ge1xyXG5cdFx0ZGVmYXVsdDogQ09ORklHLmNvbnRyb2xQYWRkaW5nWCxcclxuXHRcdHNtYWxsOiBDT05GSUcuY29udHJvbFBhZGRpbmdYU21hbGwsXHJcblx0XHRjb21wYWN0OiBDT05GSUcuY29udHJvbFBhZGRpbmdYU21hbGwsXHJcblx0XHQnX191bnN0YWJsZS1sYXJnZSc6IENPTkZJRy5jb250cm9sUGFkZGluZ1gsXHJcblx0fTtcclxuXHJcblx0aWYgKCAhIF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSApIHtcclxuXHRcdHBhZGRpbmcuZGVmYXVsdCA9IHBhZGRpbmcuY29tcGFjdDtcclxuXHR9XHJcblxyXG5cdGNvbnN0IHNlbGVjdGVkUGFkZGluZyA9IHBhZGRpbmdbIHNlbGVjdFNpemUgXSB8fCBwYWRkaW5nLmRlZmF1bHQ7XHJcblxyXG5cdHJldHVybiBydGwoIHtcclxuXHRcdHBhZGRpbmdMZWZ0OiBzZWxlY3RlZFBhZGRpbmcsXHJcblx0XHRwYWRkaW5nUmlnaHQ6IHNlbGVjdGVkUGFkZGluZyArIGNoZXZyb25JY29uU2l6ZSxcclxuXHRcdC4uLiggbXVsdGlwbGVcclxuXHRcdFx0PyB7XHJcblx0XHRcdFx0XHRwYWRkaW5nVG9wOiBzZWxlY3RlZFBhZGRpbmcsXHJcblx0XHRcdFx0XHRwYWRkaW5nQm90dG9tOiBzZWxlY3RlZFBhZGRpbmcsXHJcblx0XHRcdCAgfVxyXG5cdFx0XHQ6IHt9ICksXHJcblx0fSApO1xyXG59O1xyXG5cclxuY29uc3Qgb3ZlcmZsb3dTdHlsZXMgPSAoIHsgbXVsdGlwbGUgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0cmV0dXJuIHtcclxuXHRcdG92ZXJmbG93OiBtdWx0aXBsZSA/ICdhdXRvJyA6ICdoaWRkZW4nLFxyXG5cdH07XHJcbn07XHJcblxyXG5jb25zdCB2YXJpYW50U3R5bGVzID0gKCB7IHZhcmlhbnQgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0aWYgKCB2YXJpYW50ID09PSAnbWluaW1hbCcgKSB7XHJcblx0XHRyZXR1cm4gY3NzKCB7XHJcblx0XHRcdGZpZWxkU2l6aW5nOiAnY29udGVudCcsXHJcblx0XHR9ICk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gJyc7XHJcbn07XHJcblxyXG4vLyBUT0RPOiBSZXNvbHZlIG5lZWQgdG8gdXNlICYmJiB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eVxyXG4vLyBodHRwczovL2dpdGh1Yi5jb20vV29yZFByZXNzL2d1dGVuYmVyZy9pc3N1ZXMvMTg0ODNcclxuXHJcbmV4cG9ydCBjb25zdCBTZWxlY3QgPSBzdHlsZWQuc2VsZWN0PCBTZWxlY3RQcm9wcyA+YFxyXG5cdCYmJiB7XHJcblx0XHRhcHBlYXJhbmNlOiBub25lO1xyXG5cdFx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcblx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cdFx0Ym9yZGVyOiBub25lO1xyXG5cdFx0Ym94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xyXG5cdFx0Y29sb3I6IGN1cnJlbnRDb2xvcjsgLy8gT3ZlcnJpZGVzIGhvdmVyL2ZvY3VzIHN0eWxlcyBpbiBmb3Jtcy5jc3NcclxuXHRcdGN1cnNvcjogaW5oZXJpdDtcclxuXHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcblx0XHRtYXJnaW46IDA7XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHRcdG1heC13aWR0aDogbm9uZTtcclxuXHRcdHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcblx0XHR0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuXHJcblx0XHQkeyBmb250U2l6ZVN0eWxlcyB9O1xyXG5cdFx0JHsgc2l6ZVN0eWxlcyB9O1xyXG5cdFx0JHsgc2l6ZVBhZGRpbmdzIH07XHJcblx0XHQkeyBvdmVyZmxvd1N0eWxlcyB9XHJcblx0XHQkeyB2YXJpYW50U3R5bGVzIH1cclxuXHR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgRG93bkFycm93V3JhcHBlciA9IHN0eWxlZC5kaXZgXHJcblx0bWFyZ2luLWlubGluZS1lbmQ6ICR7IHNwYWNlKCAtMSApIH07IC8vIG9wdGljYWxseSBhZGp1c3QgdGhlIGljb25cclxuXHRsaW5lLWhlaWdodDogMDtcclxuXHJcblx0cGF0aCB7XHJcblx0XHRmaWxsOiBjdXJyZW50Q29sb3I7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXJXaXRoQ2xpY2tUaHJvdWdoID0gc3R5bGVkKFxyXG5cdElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXJcclxuKWBcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XHJcblxyXG5cdCR7IHJ0bCggeyByaWdodDogMCB9ICkgfVxyXG5gO1xyXG4iXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
const variantStyles = ({
  variant
}) => {
  if (variant === 'minimal') {
    return _ref;
  }
  return '';
};

// TODO: Resolve need to use &&& to increase specificity
// https://github.com/WordPress/gutenberg/issues/18483

export const Select = /*#__PURE__*/_styled("select", process.env.NODE_ENV === "production" ? {
  target: "e1mv6sxx2"
} : {
  target: "e1mv6sxx2",
  label: "Select"
})("&&&{appearance:none;background:transparent;box-sizing:border-box;border:none;box-shadow:none!important;color:currentColor;cursor:inherit;display:block;font-family:inherit;margin:0;width:100%;max-width:none;white-space:nowrap;text-overflow:ellipsis;", fontSizeStyles, ";", sizeStyles, ";", sizePaddings, ";", overflowStyles, " ", variantStyles, ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5SmtEIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcclxuICovXHJcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xyXG5cclxuLyoqXHJcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xyXG4gKi9cclxuaW1wb3J0IHsgQ09MT1JTLCBydGwsIENPTkZJRyB9IGZyb20gJy4uLy4uL3V0aWxzJztcclxuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi8uLi91dGlscy9zcGFjZSc7XHJcbmltcG9ydCB0eXBlIHsgU2VsZWN0Q29udHJvbFByb3BzIH0gZnJvbSAnLi4vdHlwZXMnO1xyXG5pbXBvcnQgSW5wdXRDb250cm9sU3VmZml4V3JhcHBlciBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL2lucHV0LXN1ZmZpeC13cmFwcGVyJztcclxuaW1wb3J0IHsgZm9udFNpemVTdHlsZXMgfSBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XHJcbmltcG9ydCBJbnB1dEJhc2UgZnJvbSAnLi4vLi4vaW5wdXQtY29udHJvbC9pbnB1dC1iYXNlJztcclxuXHJcbmludGVyZmFjZSBTZWxlY3RQcm9wc1xyXG5cdGV4dGVuZHMgUGljazxcclxuXHRcdFNlbGVjdENvbnRyb2xQcm9wcyxcclxuXHRcdCdfX25leHQ0MHB4RGVmYXVsdFNpemUnIHwgJ2Rpc2FibGVkJyB8ICdtdWx0aXBsZScgfCAndmFyaWFudCdcclxuXHQ+IHtcclxuXHQvLyBVc2luZyBgc2VsZWN0U2l6ZWAgaW5zdGVhZCBvZiBgc2l6ZWAgdG8gYXZvaWQgYSB0eXBlIGNvbmZsaWN0IHdpdGggdGhlXHJcblx0Ly8gYHNpemVgIEhUTUwgYXR0cmlidXRlIG9mIHRoZSBgc2VsZWN0YCBlbGVtZW50LlxyXG5cdHNlbGVjdFNpemU/OiBTZWxlY3RDb250cm9sUHJvcHNbICdzaXplJyBdO1xyXG59XHJcblxyXG5jb25zdCBkaXNhYmxlZFN0eWxlcyA9ICggeyBkaXNhYmxlZCB9OiBTZWxlY3RQcm9wcyApID0+IHtcclxuXHRpZiAoICEgZGlzYWJsZWQgKSB7XHJcblx0XHRyZXR1cm4gJyc7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gY3NzYFxyXG5cdFx0Y29sb3I6ICR7IENPTE9SUy51aS50ZXh0RGlzYWJsZWQgfTtcclxuXHRcdGN1cnNvcjogZGVmYXVsdDtcclxuXHRgO1xyXG59O1xyXG5cclxuY29uc3QgaW5wdXRCYXNlVmFyaWFudFN0eWxlcyA9ICggeyB2YXJpYW50IH06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdGlmICggdmFyaWFudCA9PT0gJ21pbmltYWwnICkge1xyXG5cdFx0cmV0dXJuIGNzc2BcclxuXHRcdFx0ZGlzcGxheTogaW5saW5lLWZsZXg7XHJcblx0XHRgO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuICcnO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IFN0eWxlZElucHV0QmFzZSA9IHN0eWxlZCggSW5wdXRCYXNlIClgXHJcblx0Y29sb3I6ICR7IENPTE9SUy50aGVtZS5mb3JlZ3JvdW5kIH07XHJcblx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cclxuXHQkeyBkaXNhYmxlZFN0eWxlcyB9XHJcblx0JHsgaW5wdXRCYXNlVmFyaWFudFN0eWxlcyB9XHJcbmA7XHJcblxyXG5jb25zdCBzaXplU3R5bGVzID0gKCB7XHJcblx0X19uZXh0NDBweERlZmF1bHRTaXplLFxyXG5cdG11bHRpcGxlLFxyXG5cdHNlbGVjdFNpemUgPSAnZGVmYXVsdCcsXHJcbn06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdGlmICggbXVsdGlwbGUgKSB7XHJcblx0XHQvLyBXaGVuIGBtdWx0aXBsZWAsIGp1c3QgdXNlIHRoZSBuYXRpdmUgYnJvd3NlciBzdHlsZXNcclxuXHRcdC8vIHdpdGhvdXQgc2V0dGluZyBleHBsaWNpdCBoZWlnaHQuXHJcblx0XHRyZXR1cm47XHJcblx0fVxyXG5cclxuXHRjb25zdCBzaXplcyA9IHtcclxuXHRcdGRlZmF1bHQ6IHtcclxuXHRcdFx0aGVpZ2h0OiA0MCxcclxuXHRcdFx0bWluSGVpZ2h0OiA0MCxcclxuXHRcdFx0cGFkZGluZ1RvcDogMCxcclxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcclxuXHRcdH0sXHJcblx0XHRzbWFsbDoge1xyXG5cdFx0XHRoZWlnaHQ6IDI0LFxyXG5cdFx0XHRtaW5IZWlnaHQ6IDI0LFxyXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxyXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxyXG5cdFx0fSxcclxuXHRcdGNvbXBhY3Q6IHtcclxuXHRcdFx0aGVpZ2h0OiAzMixcclxuXHRcdFx0bWluSGVpZ2h0OiAzMixcclxuXHRcdFx0cGFkZGluZ1RvcDogMCxcclxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcclxuXHRcdH0sXHJcblx0XHQnX191bnN0YWJsZS1sYXJnZSc6IHtcclxuXHRcdFx0aGVpZ2h0OiA0MCxcclxuXHRcdFx0bWluSGVpZ2h0OiA0MCxcclxuXHRcdFx0cGFkZGluZ1RvcDogMCxcclxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcclxuXHRcdH0sXHJcblx0fTtcclxuXHJcblx0aWYgKCAhIF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSApIHtcclxuXHRcdHNpemVzLmRlZmF1bHQgPSBzaXplcy5jb21wYWN0O1xyXG5cdH1cclxuXHJcblx0Y29uc3Qgc3R5bGUgPSBzaXplc1sgc2VsZWN0U2l6ZSBdIHx8IHNpemVzLmRlZmF1bHQ7XHJcblxyXG5cdHJldHVybiBjc3MoIHN0eWxlICk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgY2hldnJvbkljb25TaXplID0gMTg7XHJcblxyXG5jb25zdCBzaXplUGFkZGluZ3MgPSAoIHtcclxuXHRfX25leHQ0MHB4RGVmYXVsdFNpemUsXHJcblx0bXVsdGlwbGUsXHJcblx0c2VsZWN0U2l6ZSA9ICdkZWZhdWx0JyxcclxufTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0Y29uc3QgcGFkZGluZyA9IHtcclxuXHRcdGRlZmF1bHQ6IENPTkZJRy5jb250cm9sUGFkZGluZ1gsXHJcblx0XHRzbWFsbDogQ09ORklHLmNvbnRyb2xQYWRkaW5nWFNtYWxsLFxyXG5cdFx0Y29tcGFjdDogQ09ORklHLmNvbnRyb2xQYWRkaW5nWFNtYWxsLFxyXG5cdFx0J19fdW5zdGFibGUtbGFyZ2UnOiBDT05GSUcuY29udHJvbFBhZGRpbmdYLFxyXG5cdH07XHJcblxyXG5cdGlmICggISBfX25leHQ0MHB4RGVmYXVsdFNpemUgKSB7XHJcblx0XHRwYWRkaW5nLmRlZmF1bHQgPSBwYWRkaW5nLmNvbXBhY3Q7XHJcblx0fVxyXG5cclxuXHRjb25zdCBzZWxlY3RlZFBhZGRpbmcgPSBwYWRkaW5nWyBzZWxlY3RTaXplIF0gfHwgcGFkZGluZy5kZWZhdWx0O1xyXG5cclxuXHRyZXR1cm4gcnRsKCB7XHJcblx0XHRwYWRkaW5nTGVmdDogc2VsZWN0ZWRQYWRkaW5nLFxyXG5cdFx0cGFkZGluZ1JpZ2h0OiBzZWxlY3RlZFBhZGRpbmcgKyBjaGV2cm9uSWNvblNpemUsXHJcblx0XHQuLi4oIG11bHRpcGxlXHJcblx0XHRcdD8ge1xyXG5cdFx0XHRcdFx0cGFkZGluZ1RvcDogc2VsZWN0ZWRQYWRkaW5nLFxyXG5cdFx0XHRcdFx0cGFkZGluZ0JvdHRvbTogc2VsZWN0ZWRQYWRkaW5nLFxyXG5cdFx0XHQgIH1cclxuXHRcdFx0OiB7fSApLFxyXG5cdH0gKTtcclxufTtcclxuXHJcbmNvbnN0IG92ZXJmbG93U3R5bGVzID0gKCB7IG11bHRpcGxlIH06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdHJldHVybiB7XHJcblx0XHRvdmVyZmxvdzogbXVsdGlwbGUgPyAnYXV0bycgOiAnaGlkZGVuJyxcclxuXHR9O1xyXG59O1xyXG5cclxuY29uc3QgdmFyaWFudFN0eWxlcyA9ICggeyB2YXJpYW50IH06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdGlmICggdmFyaWFudCA9PT0gJ21pbmltYWwnICkge1xyXG5cdFx0cmV0dXJuIGNzcygge1xyXG5cdFx0XHRmaWVsZFNpemluZzogJ2NvbnRlbnQnLFxyXG5cdFx0fSApO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuICcnO1xyXG59O1xyXG5cclxuLy8gVE9ETzogUmVzb2x2ZSBuZWVkIHRvIHVzZSAmJiYgdG8gaW5jcmVhc2Ugc3BlY2lmaWNpdHlcclxuLy8gaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy9ndXRlbmJlcmcvaXNzdWVzLzE4NDgzXHJcblxyXG5leHBvcnQgY29uc3QgU2VsZWN0ID0gc3R5bGVkLnNlbGVjdDwgU2VsZWN0UHJvcHMgPmBcclxuXHQmJiYge1xyXG5cdFx0YXBwZWFyYW5jZTogbm9uZTtcclxuXHRcdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG5cdFx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcclxuXHRcdGJvcmRlcjogbm9uZTtcclxuXHRcdGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcclxuXHRcdGNvbG9yOiBjdXJyZW50Q29sb3I7IC8vIE92ZXJyaWRlcyBob3Zlci9mb2N1cyBzdHlsZXMgaW4gZm9ybXMuY3NzXHJcblx0XHRjdXJzb3I6IGluaGVyaXQ7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG5cdFx0bWFyZ2luOiAwO1xyXG5cdFx0d2lkdGg6IDEwMCU7XHJcblx0XHRtYXgtd2lkdGg6IG5vbmU7XHJcblx0XHR3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG5cdFx0dGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcblxyXG5cdFx0JHsgZm9udFNpemVTdHlsZXMgfTtcclxuXHRcdCR7IHNpemVTdHlsZXMgfTtcclxuXHRcdCR7IHNpemVQYWRkaW5ncyB9O1xyXG5cdFx0JHsgb3ZlcmZsb3dTdHlsZXMgfVxyXG5cdFx0JHsgdmFyaWFudFN0eWxlcyB9XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IERvd25BcnJvd1dyYXBwZXIgPSBzdHlsZWQuZGl2YFxyXG5cdG1hcmdpbi1pbmxpbmUtZW5kOiAkeyBzcGFjZSggLTEgKSB9OyAvLyBvcHRpY2FsbHkgYWRqdXN0IHRoZSBpY29uXHJcblx0bGluZS1oZWlnaHQ6IDA7XHJcblxyXG5cdHBhdGgge1xyXG5cdFx0ZmlsbDogY3VycmVudENvbG9yO1xyXG5cdH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBJbnB1dENvbnRyb2xTdWZmaXhXcmFwcGVyV2l0aENsaWNrVGhyb3VnaCA9IHN0eWxlZChcclxuXHRJbnB1dENvbnRyb2xTdWZmaXhXcmFwcGVyXHJcbilgXHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuXHQkeyBydGwoIHsgcmlnaHQ6IDAgfSApIH1cclxuYDtcclxuIl19 */"));
export const DownArrowWrapper = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e1mv6sxx1"
} : {
  target: "e1mv6sxx1",
  label: "DownArrowWrapper"
})("margin-inline-end:", space(-1), ";line-height:0;path{fill:currentColor;}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrTDBDIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcclxuICovXHJcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xyXG5cclxuLyoqXHJcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xyXG4gKi9cclxuaW1wb3J0IHsgQ09MT1JTLCBydGwsIENPTkZJRyB9IGZyb20gJy4uLy4uL3V0aWxzJztcclxuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi8uLi91dGlscy9zcGFjZSc7XHJcbmltcG9ydCB0eXBlIHsgU2VsZWN0Q29udHJvbFByb3BzIH0gZnJvbSAnLi4vdHlwZXMnO1xyXG5pbXBvcnQgSW5wdXRDb250cm9sU3VmZml4V3JhcHBlciBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL2lucHV0LXN1ZmZpeC13cmFwcGVyJztcclxuaW1wb3J0IHsgZm9udFNpemVTdHlsZXMgfSBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XHJcbmltcG9ydCBJbnB1dEJhc2UgZnJvbSAnLi4vLi4vaW5wdXQtY29udHJvbC9pbnB1dC1iYXNlJztcclxuXHJcbmludGVyZmFjZSBTZWxlY3RQcm9wc1xyXG5cdGV4dGVuZHMgUGljazxcclxuXHRcdFNlbGVjdENvbnRyb2xQcm9wcyxcclxuXHRcdCdfX25leHQ0MHB4RGVmYXVsdFNpemUnIHwgJ2Rpc2FibGVkJyB8ICdtdWx0aXBsZScgfCAndmFyaWFudCdcclxuXHQ+IHtcclxuXHQvLyBVc2luZyBgc2VsZWN0U2l6ZWAgaW5zdGVhZCBvZiBgc2l6ZWAgdG8gYXZvaWQgYSB0eXBlIGNvbmZsaWN0IHdpdGggdGhlXHJcblx0Ly8gYHNpemVgIEhUTUwgYXR0cmlidXRlIG9mIHRoZSBgc2VsZWN0YCBlbGVtZW50LlxyXG5cdHNlbGVjdFNpemU/OiBTZWxlY3RDb250cm9sUHJvcHNbICdzaXplJyBdO1xyXG59XHJcblxyXG5jb25zdCBkaXNhYmxlZFN0eWxlcyA9ICggeyBkaXNhYmxlZCB9OiBTZWxlY3RQcm9wcyApID0+IHtcclxuXHRpZiAoICEgZGlzYWJsZWQgKSB7XHJcblx0XHRyZXR1cm4gJyc7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gY3NzYFxyXG5cdFx0Y29sb3I6ICR7IENPTE9SUy51aS50ZXh0RGlzYWJsZWQgfTtcclxuXHRcdGN1cnNvcjogZGVmYXVsdDtcclxuXHRgO1xyXG59O1xyXG5cclxuY29uc3QgaW5wdXRCYXNlVmFyaWFudFN0eWxlcyA9ICggeyB2YXJpYW50IH06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdGlmICggdmFyaWFudCA9PT0gJ21pbmltYWwnICkge1xyXG5cdFx0cmV0dXJuIGNzc2BcclxuXHRcdFx0ZGlzcGxheTogaW5saW5lLWZsZXg7XHJcblx0XHRgO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuICcnO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IFN0eWxlZElucHV0QmFzZSA9IHN0eWxlZCggSW5wdXRCYXNlIClgXHJcblx0Y29sb3I6ICR7IENPTE9SUy50aGVtZS5mb3JlZ3JvdW5kIH07XHJcblx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cclxuXHQkeyBkaXNhYmxlZFN0eWxlcyB9XHJcblx0JHsgaW5wdXRCYXNlVmFyaWFudFN0eWxlcyB9XHJcbmA7XHJcblxyXG5jb25zdCBzaXplU3R5bGVzID0gKCB7XHJcblx0X19uZXh0NDBweERlZmF1bHRTaXplLFxyXG5cdG11bHRpcGxlLFxyXG5cdHNlbGVjdFNpemUgPSAnZGVmYXVsdCcsXHJcbn06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdGlmICggbXVsdGlwbGUgKSB7XHJcblx0XHQvLyBXaGVuIGBtdWx0aXBsZWAsIGp1c3QgdXNlIHRoZSBuYXRpdmUgYnJvd3NlciBzdHlsZXNcclxuXHRcdC8vIHdpdGhvdXQgc2V0dGluZyBleHBsaWNpdCBoZWlnaHQuXHJcblx0XHRyZXR1cm47XHJcblx0fVxyXG5cclxuXHRjb25zdCBzaXplcyA9IHtcclxuXHRcdGRlZmF1bHQ6IHtcclxuXHRcdFx0aGVpZ2h0OiA0MCxcclxuXHRcdFx0bWluSGVpZ2h0OiA0MCxcclxuXHRcdFx0cGFkZGluZ1RvcDogMCxcclxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcclxuXHRcdH0sXHJcblx0XHRzbWFsbDoge1xyXG5cdFx0XHRoZWlnaHQ6IDI0LFxyXG5cdFx0XHRtaW5IZWlnaHQ6IDI0LFxyXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxyXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxyXG5cdFx0fSxcclxuXHRcdGNvbXBhY3Q6IHtcclxuXHRcdFx0aGVpZ2h0OiAzMixcclxuXHRcdFx0bWluSGVpZ2h0OiAzMixcclxuXHRcdFx0cGFkZGluZ1RvcDogMCxcclxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcclxuXHRcdH0sXHJcblx0XHQnX191bnN0YWJsZS1sYXJnZSc6IHtcclxuXHRcdFx0aGVpZ2h0OiA0MCxcclxuXHRcdFx0bWluSGVpZ2h0OiA0MCxcclxuXHRcdFx0cGFkZGluZ1RvcDogMCxcclxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcclxuXHRcdH0sXHJcblx0fTtcclxuXHJcblx0aWYgKCAhIF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSApIHtcclxuXHRcdHNpemVzLmRlZmF1bHQgPSBzaXplcy5jb21wYWN0O1xyXG5cdH1cclxuXHJcblx0Y29uc3Qgc3R5bGUgPSBzaXplc1sgc2VsZWN0U2l6ZSBdIHx8IHNpemVzLmRlZmF1bHQ7XHJcblxyXG5cdHJldHVybiBjc3MoIHN0eWxlICk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgY2hldnJvbkljb25TaXplID0gMTg7XHJcblxyXG5jb25zdCBzaXplUGFkZGluZ3MgPSAoIHtcclxuXHRfX25leHQ0MHB4RGVmYXVsdFNpemUsXHJcblx0bXVsdGlwbGUsXHJcblx0c2VsZWN0U2l6ZSA9ICdkZWZhdWx0JyxcclxufTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0Y29uc3QgcGFkZGluZyA9IHtcclxuXHRcdGRlZmF1bHQ6IENPTkZJRy5jb250cm9sUGFkZGluZ1gsXHJcblx0XHRzbWFsbDogQ09ORklHLmNvbnRyb2xQYWRkaW5nWFNtYWxsLFxyXG5cdFx0Y29tcGFjdDogQ09ORklHLmNvbnRyb2xQYWRkaW5nWFNtYWxsLFxyXG5cdFx0J19fdW5zdGFibGUtbGFyZ2UnOiBDT05GSUcuY29udHJvbFBhZGRpbmdYLFxyXG5cdH07XHJcblxyXG5cdGlmICggISBfX25leHQ0MHB4RGVmYXVsdFNpemUgKSB7XHJcblx0XHRwYWRkaW5nLmRlZmF1bHQgPSBwYWRkaW5nLmNvbXBhY3Q7XHJcblx0fVxyXG5cclxuXHRjb25zdCBzZWxlY3RlZFBhZGRpbmcgPSBwYWRkaW5nWyBzZWxlY3RTaXplIF0gfHwgcGFkZGluZy5kZWZhdWx0O1xyXG5cclxuXHRyZXR1cm4gcnRsKCB7XHJcblx0XHRwYWRkaW5nTGVmdDogc2VsZWN0ZWRQYWRkaW5nLFxyXG5cdFx0cGFkZGluZ1JpZ2h0OiBzZWxlY3RlZFBhZGRpbmcgKyBjaGV2cm9uSWNvblNpemUsXHJcblx0XHQuLi4oIG11bHRpcGxlXHJcblx0XHRcdD8ge1xyXG5cdFx0XHRcdFx0cGFkZGluZ1RvcDogc2VsZWN0ZWRQYWRkaW5nLFxyXG5cdFx0XHRcdFx0cGFkZGluZ0JvdHRvbTogc2VsZWN0ZWRQYWRkaW5nLFxyXG5cdFx0XHQgIH1cclxuXHRcdFx0OiB7fSApLFxyXG5cdH0gKTtcclxufTtcclxuXHJcbmNvbnN0IG92ZXJmbG93U3R5bGVzID0gKCB7IG11bHRpcGxlIH06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdHJldHVybiB7XHJcblx0XHRvdmVyZmxvdzogbXVsdGlwbGUgPyAnYXV0bycgOiAnaGlkZGVuJyxcclxuXHR9O1xyXG59O1xyXG5cclxuY29uc3QgdmFyaWFudFN0eWxlcyA9ICggeyB2YXJpYW50IH06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdGlmICggdmFyaWFudCA9PT0gJ21pbmltYWwnICkge1xyXG5cdFx0cmV0dXJuIGNzcygge1xyXG5cdFx0XHRmaWVsZFNpemluZzogJ2NvbnRlbnQnLFxyXG5cdFx0fSApO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuICcnO1xyXG59O1xyXG5cclxuLy8gVE9ETzogUmVzb2x2ZSBuZWVkIHRvIHVzZSAmJiYgdG8gaW5jcmVhc2Ugc3BlY2lmaWNpdHlcclxuLy8gaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy9ndXRlbmJlcmcvaXNzdWVzLzE4NDgzXHJcblxyXG5leHBvcnQgY29uc3QgU2VsZWN0ID0gc3R5bGVkLnNlbGVjdDwgU2VsZWN0UHJvcHMgPmBcclxuXHQmJiYge1xyXG5cdFx0YXBwZWFyYW5jZTogbm9uZTtcclxuXHRcdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG5cdFx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcclxuXHRcdGJvcmRlcjogbm9uZTtcclxuXHRcdGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcclxuXHRcdGNvbG9yOiBjdXJyZW50Q29sb3I7IC8vIE92ZXJyaWRlcyBob3Zlci9mb2N1cyBzdHlsZXMgaW4gZm9ybXMuY3NzXHJcblx0XHRjdXJzb3I6IGluaGVyaXQ7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG5cdFx0bWFyZ2luOiAwO1xyXG5cdFx0d2lkdGg6IDEwMCU7XHJcblx0XHRtYXgtd2lkdGg6IG5vbmU7XHJcblx0XHR3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG5cdFx0dGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcblxyXG5cdFx0JHsgZm9udFNpemVTdHlsZXMgfTtcclxuXHRcdCR7IHNpemVTdHlsZXMgfTtcclxuXHRcdCR7IHNpemVQYWRkaW5ncyB9O1xyXG5cdFx0JHsgb3ZlcmZsb3dTdHlsZXMgfVxyXG5cdFx0JHsgdmFyaWFudFN0eWxlcyB9XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IERvd25BcnJvd1dyYXBwZXIgPSBzdHlsZWQuZGl2YFxyXG5cdG1hcmdpbi1pbmxpbmUtZW5kOiAkeyBzcGFjZSggLTEgKSB9OyAvLyBvcHRpY2FsbHkgYWRqdXN0IHRoZSBpY29uXHJcblx0bGluZS1oZWlnaHQ6IDA7XHJcblxyXG5cdHBhdGgge1xyXG5cdFx0ZmlsbDogY3VycmVudENvbG9yO1xyXG5cdH1cclxuYDtcclxuXHJcbmV4cG9ydCBjb25zdCBJbnB1dENvbnRyb2xTdWZmaXhXcmFwcGVyV2l0aENsaWNrVGhyb3VnaCA9IHN0eWxlZChcclxuXHRJbnB1dENvbnRyb2xTdWZmaXhXcmFwcGVyXHJcbilgXHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuXHQkeyBydGwoIHsgcmlnaHQ6IDAgfSApIH1cclxuYDtcclxuIl19 */"));
export const InputControlSuffixWrapperWithClickThrough = /*#__PURE__*/_styled(InputControlSuffixWrapper, process.env.NODE_ENV === "production" ? {
  target: "e1mv6sxx0"
} : {
  target: "e1mv6sxx0",
  label: "InputControlSuffixWrapperWithClickThrough"
})("position:absolute;pointer-events:none;", rtl({
  right: 0
}), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2TEMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9zZWxlY3QtY29udHJvbC9zdHlsZXMvc2VsZWN0LWNvbnRyb2wtc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xyXG4gKi9cclxuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XHJcblxyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIHJ0bCwgQ09ORklHIH0gZnJvbSAnLi4vLi4vdXRpbHMnO1xyXG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uLy4uL3V0aWxzL3NwYWNlJztcclxuaW1wb3J0IHR5cGUgeyBTZWxlY3RDb250cm9sUHJvcHMgfSBmcm9tICcuLi90eXBlcyc7XHJcbmltcG9ydCBJbnB1dENvbnRyb2xTdWZmaXhXcmFwcGVyIGZyb20gJy4uLy4uL2lucHV0LWNvbnRyb2wvaW5wdXQtc3VmZml4LXdyYXBwZXInO1xyXG5pbXBvcnQgeyBmb250U2l6ZVN0eWxlcyB9IGZyb20gJy4uLy4uL2lucHV0LWNvbnRyb2wvc3R5bGVzL2lucHV0LWNvbnRyb2wtc3R5bGVzJztcclxuaW1wb3J0IElucHV0QmFzZSBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL2lucHV0LWJhc2UnO1xyXG5cclxuaW50ZXJmYWNlIFNlbGVjdFByb3BzXHJcblx0ZXh0ZW5kcyBQaWNrPFxyXG5cdFx0U2VsZWN0Q29udHJvbFByb3BzLFxyXG5cdFx0J19fbmV4dDQwcHhEZWZhdWx0U2l6ZScgfCAnZGlzYWJsZWQnIHwgJ211bHRpcGxlJyB8ICd2YXJpYW50J1xyXG5cdD4ge1xyXG5cdC8vIFVzaW5nIGBzZWxlY3RTaXplYCBpbnN0ZWFkIG9mIGBzaXplYCB0byBhdm9pZCBhIHR5cGUgY29uZmxpY3Qgd2l0aCB0aGVcclxuXHQvLyBgc2l6ZWAgSFRNTCBhdHRyaWJ1dGUgb2YgdGhlIGBzZWxlY3RgIGVsZW1lbnQuXHJcblx0c2VsZWN0U2l6ZT86IFNlbGVjdENvbnRyb2xQcm9wc1sgJ3NpemUnIF07XHJcbn1cclxuXHJcbmNvbnN0IGRpc2FibGVkU3R5bGVzID0gKCB7IGRpc2FibGVkIH06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdGlmICggISBkaXNhYmxlZCApIHtcclxuXHRcdHJldHVybiAnJztcclxuXHR9XHJcblxyXG5cdHJldHVybiBjc3NgXHJcblx0XHRjb2xvcjogJHsgQ09MT1JTLnVpLnRleHREaXNhYmxlZCB9O1xyXG5cdFx0Y3Vyc29yOiBkZWZhdWx0O1xyXG5cdGA7XHJcbn07XHJcblxyXG5jb25zdCBpbnB1dEJhc2VWYXJpYW50U3R5bGVzID0gKCB7IHZhcmlhbnQgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0aWYgKCB2YXJpYW50ID09PSAnbWluaW1hbCcgKSB7XHJcblx0XHRyZXR1cm4gY3NzYFxyXG5cdFx0XHRkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuXHRcdGA7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gJyc7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgU3R5bGVkSW5wdXRCYXNlID0gc3R5bGVkKCBJbnB1dEJhc2UgKWBcclxuXHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmZvcmVncm91bmQgfTtcclxuXHRjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG5cdCR7IGRpc2FibGVkU3R5bGVzIH1cclxuXHQkeyBpbnB1dEJhc2VWYXJpYW50U3R5bGVzIH1cclxuYDtcclxuXHJcbmNvbnN0IHNpemVTdHlsZXMgPSAoIHtcclxuXHRfX25leHQ0MHB4RGVmYXVsdFNpemUsXHJcblx0bXVsdGlwbGUsXHJcblx0c2VsZWN0U2l6ZSA9ICdkZWZhdWx0JyxcclxufTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0aWYgKCBtdWx0aXBsZSApIHtcclxuXHRcdC8vIFdoZW4gYG11bHRpcGxlYCwganVzdCB1c2UgdGhlIG5hdGl2ZSBicm93c2VyIHN0eWxlc1xyXG5cdFx0Ly8gd2l0aG91dCBzZXR0aW5nIGV4cGxpY2l0IGhlaWdodC5cclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdGNvbnN0IHNpemVzID0ge1xyXG5cdFx0ZGVmYXVsdDoge1xyXG5cdFx0XHRoZWlnaHQ6IDQwLFxyXG5cdFx0XHRtaW5IZWlnaHQ6IDQwLFxyXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxyXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxyXG5cdFx0fSxcclxuXHRcdHNtYWxsOiB7XHJcblx0XHRcdGhlaWdodDogMjQsXHJcblx0XHRcdG1pbkhlaWdodDogMjQsXHJcblx0XHRcdHBhZGRpbmdUb3A6IDAsXHJcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXHJcblx0XHR9LFxyXG5cdFx0Y29tcGFjdDoge1xyXG5cdFx0XHRoZWlnaHQ6IDMyLFxyXG5cdFx0XHRtaW5IZWlnaHQ6IDMyLFxyXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxyXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxyXG5cdFx0fSxcclxuXHRcdCdfX3Vuc3RhYmxlLWxhcmdlJzoge1xyXG5cdFx0XHRoZWlnaHQ6IDQwLFxyXG5cdFx0XHRtaW5IZWlnaHQ6IDQwLFxyXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxyXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxyXG5cdFx0fSxcclxuXHR9O1xyXG5cclxuXHRpZiAoICEgX19uZXh0NDBweERlZmF1bHRTaXplICkge1xyXG5cdFx0c2l6ZXMuZGVmYXVsdCA9IHNpemVzLmNvbXBhY3Q7XHJcblx0fVxyXG5cclxuXHRjb25zdCBzdHlsZSA9IHNpemVzWyBzZWxlY3RTaXplIF0gfHwgc2l6ZXMuZGVmYXVsdDtcclxuXHJcblx0cmV0dXJuIGNzcyggc3R5bGUgKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBjaGV2cm9uSWNvblNpemUgPSAxODtcclxuXHJcbmNvbnN0IHNpemVQYWRkaW5ncyA9ICgge1xyXG5cdF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSxcclxuXHRtdWx0aXBsZSxcclxuXHRzZWxlY3RTaXplID0gJ2RlZmF1bHQnLFxyXG59OiBTZWxlY3RQcm9wcyApID0+IHtcclxuXHRjb25zdCBwYWRkaW5nID0ge1xyXG5cdFx0ZGVmYXVsdDogQ09ORklHLmNvbnRyb2xQYWRkaW5nWCxcclxuXHRcdHNtYWxsOiBDT05GSUcuY29udHJvbFBhZGRpbmdYU21hbGwsXHJcblx0XHRjb21wYWN0OiBDT05GSUcuY29udHJvbFBhZGRpbmdYU21hbGwsXHJcblx0XHQnX191bnN0YWJsZS1sYXJnZSc6IENPTkZJRy5jb250cm9sUGFkZGluZ1gsXHJcblx0fTtcclxuXHJcblx0aWYgKCAhIF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSApIHtcclxuXHRcdHBhZGRpbmcuZGVmYXVsdCA9IHBhZGRpbmcuY29tcGFjdDtcclxuXHR9XHJcblxyXG5cdGNvbnN0IHNlbGVjdGVkUGFkZGluZyA9IHBhZGRpbmdbIHNlbGVjdFNpemUgXSB8fCBwYWRkaW5nLmRlZmF1bHQ7XHJcblxyXG5cdHJldHVybiBydGwoIHtcclxuXHRcdHBhZGRpbmdMZWZ0OiBzZWxlY3RlZFBhZGRpbmcsXHJcblx0XHRwYWRkaW5nUmlnaHQ6IHNlbGVjdGVkUGFkZGluZyArIGNoZXZyb25JY29uU2l6ZSxcclxuXHRcdC4uLiggbXVsdGlwbGVcclxuXHRcdFx0PyB7XHJcblx0XHRcdFx0XHRwYWRkaW5nVG9wOiBzZWxlY3RlZFBhZGRpbmcsXHJcblx0XHRcdFx0XHRwYWRkaW5nQm90dG9tOiBzZWxlY3RlZFBhZGRpbmcsXHJcblx0XHRcdCAgfVxyXG5cdFx0XHQ6IHt9ICksXHJcblx0fSApO1xyXG59O1xyXG5cclxuY29uc3Qgb3ZlcmZsb3dTdHlsZXMgPSAoIHsgbXVsdGlwbGUgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0cmV0dXJuIHtcclxuXHRcdG92ZXJmbG93OiBtdWx0aXBsZSA/ICdhdXRvJyA6ICdoaWRkZW4nLFxyXG5cdH07XHJcbn07XHJcblxyXG5jb25zdCB2YXJpYW50U3R5bGVzID0gKCB7IHZhcmlhbnQgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0aWYgKCB2YXJpYW50ID09PSAnbWluaW1hbCcgKSB7XHJcblx0XHRyZXR1cm4gY3NzKCB7XHJcblx0XHRcdGZpZWxkU2l6aW5nOiAnY29udGVudCcsXHJcblx0XHR9ICk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gJyc7XHJcbn07XHJcblxyXG4vLyBUT0RPOiBSZXNvbHZlIG5lZWQgdG8gdXNlICYmJiB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eVxyXG4vLyBodHRwczovL2dpdGh1Yi5jb20vV29yZFByZXNzL2d1dGVuYmVyZy9pc3N1ZXMvMTg0ODNcclxuXHJcbmV4cG9ydCBjb25zdCBTZWxlY3QgPSBzdHlsZWQuc2VsZWN0PCBTZWxlY3RQcm9wcyA+YFxyXG5cdCYmJiB7XHJcblx0XHRhcHBlYXJhbmNlOiBub25lO1xyXG5cdFx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcblx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cdFx0Ym9yZGVyOiBub25lO1xyXG5cdFx0Ym94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xyXG5cdFx0Y29sb3I6IGN1cnJlbnRDb2xvcjsgLy8gT3ZlcnJpZGVzIGhvdmVyL2ZvY3VzIHN0eWxlcyBpbiBmb3Jtcy5jc3NcclxuXHRcdGN1cnNvcjogaW5oZXJpdDtcclxuXHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcblx0XHRtYXJnaW46IDA7XHJcblx0XHR3aWR0aDogMTAwJTtcclxuXHRcdG1heC13aWR0aDogbm9uZTtcclxuXHRcdHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcblx0XHR0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuXHJcblx0XHQkeyBmb250U2l6ZVN0eWxlcyB9O1xyXG5cdFx0JHsgc2l6ZVN0eWxlcyB9O1xyXG5cdFx0JHsgc2l6ZVBhZGRpbmdzIH07XHJcblx0XHQkeyBvdmVyZmxvd1N0eWxlcyB9XHJcblx0XHQkeyB2YXJpYW50U3R5bGVzIH1cclxuXHR9XHJcbmA7XHJcblxyXG5leHBvcnQgY29uc3QgRG93bkFycm93V3JhcHBlciA9IHN0eWxlZC5kaXZgXHJcblx0bWFyZ2luLWlubGluZS1lbmQ6ICR7IHNwYWNlKCAtMSApIH07IC8vIG9wdGljYWxseSBhZGp1c3QgdGhlIGljb25cclxuXHRsaW5lLWhlaWdodDogMDtcclxuXHJcblx0cGF0aCB7XHJcblx0XHRmaWxsOiBjdXJyZW50Q29sb3I7XHJcblx0fVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXJXaXRoQ2xpY2tUaHJvdWdoID0gc3R5bGVkKFxyXG5cdElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXJcclxuKWBcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XHJcblxyXG5cdCR7IHJ0bCggeyByaWdodDogMCB9ICkgfVxyXG5gO1xyXG4iXX0= */"));
//# sourceMappingURL=select-control-styles.js.map