{"version":3,"names":["Ariakit","useStoreState","useInstanceId","useEffect","useLayoutEffect","useMemo","useRef","TabsContext","Tab","TabList","TabPanel","jsx","_jsx","Tabs","selectOnMove","defaultTabId","orientation","onSelect","children","selectedTabId","instanceId","store","useTabStore","defaultSelectedId","setSelectedId","selectedId","strippedDownId","replace","isControlled","undefined","items","activeId","setActiveId","tabsHavePopulatedRef","length","current","selectedTab","find","item","id","firstEnabledTab","dimmed","initialTab","requestAnimationFrame","focusedElement","element","ownerDocument","activeElement","some","contextValue","Provider","value","Context"],"sources":["@wordpress/components/src/tabs/index.tsx"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport * as Ariakit from '@ariakit/react';\r\nimport { useStoreState } from '@ariakit/react';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { useInstanceId } from '@wordpress/compose';\r\nimport {\r\n\tuseEffect,\r\n\tuseLayoutEffect,\r\n\tuseMemo,\r\n\tuseRef,\r\n} from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport type { TabsProps } from './types';\r\nimport { TabsContext } from './context';\r\nimport { Tab } from './tab';\r\nimport { TabList } from './tablist';\r\nimport { TabPanel } from './tabpanel';\r\n\r\nfunction Tabs( {\r\n\tselectOnMove = true,\r\n\tdefaultTabId,\r\n\torientation = 'horizontal',\r\n\tonSelect,\r\n\tchildren,\r\n\tselectedTabId,\r\n}: TabsProps ) {\r\n\tconst instanceId = useInstanceId( Tabs, 'tabs' );\r\n\tconst store = Ariakit.useTabStore( {\r\n\t\tselectOnMove,\r\n\t\torientation,\r\n\t\tdefaultSelectedId: defaultTabId && `${ instanceId }-${ defaultTabId }`,\r\n\t\tsetSelectedId: ( selectedId ) => {\r\n\t\t\tconst strippedDownId =\r\n\t\t\t\ttypeof selectedId === 'string'\r\n\t\t\t\t\t? selectedId.replace( `${ instanceId }-`, '' )\r\n\t\t\t\t\t: selectedId;\r\n\t\t\tonSelect?.( strippedDownId );\r\n\t\t},\r\n\t\tselectedId: selectedTabId && `${ instanceId }-${ selectedTabId }`,\r\n\t} );\r\n\r\n\tconst isControlled = selectedTabId !== undefined;\r\n\r\n\tconst { items, selectedId, activeId } = useStoreState( store );\r\n\tconst { setSelectedId, setActiveId } = store;\r\n\r\n\t// Keep track of whether tabs have been populated. This is used to prevent\r\n\t// certain effects from firing too early while tab data and relevant\r\n\t// variables are undefined during the initial render.\r\n\tconst tabsHavePopulatedRef = useRef( false );\r\n\tif ( items.length > 0 ) {\r\n\t\ttabsHavePopulatedRef.current = true;\r\n\t}\r\n\r\n\tconst selectedTab = items.find( ( item ) => item.id === selectedId );\r\n\tconst firstEnabledTab = items.find( ( item ) => {\r\n\t\t// Ariakit internally refers to disabled tabs as `dimmed`.\r\n\t\treturn ! item.dimmed;\r\n\t} );\r\n\tconst initialTab = items.find(\r\n\t\t( item ) => item.id === `${ instanceId }-${ defaultTabId }`\r\n\t);\r\n\r\n\t// Handle selecting the initial tab.\r\n\tuseLayoutEffect( () => {\r\n\t\tif ( isControlled ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Wait for the denoted initial tab to be declared before making a\r\n\t\t// selection. This ensures that if a tab is declared lazily it can\r\n\t\t// still receive initial selection, as well as ensuring no tab is\r\n\t\t// selected if an invalid `defaultTabId` is provided.\r\n\t\tif ( defaultTabId && ! initialTab ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If the currently selected tab is missing (i.e. removed from the DOM),\r\n\t\t// fall back to the initial tab or the first enabled tab if there is\r\n\t\t// one. Otherwise, no tab should be selected.\r\n\t\tif ( ! items.find( ( item ) => item.id === selectedId ) ) {\r\n\t\t\tif ( initialTab && ! initialTab.dimmed ) {\r\n\t\t\t\tsetSelectedId( initialTab?.id );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( firstEnabledTab ) {\r\n\t\t\t\tsetSelectedId( firstEnabledTab.id );\r\n\t\t\t} else if ( tabsHavePopulatedRef.current ) {\r\n\t\t\t\tsetSelectedId( null );\r\n\t\t\t}\r\n\t\t}\r\n\t}, [\r\n\t\tfirstEnabledTab,\r\n\t\tinitialTab,\r\n\t\tdefaultTabId,\r\n\t\tisControlled,\r\n\t\titems,\r\n\t\tselectedId,\r\n\t\tsetSelectedId,\r\n\t] );\r\n\r\n\t// Handle the currently selected tab becoming disabled.\r\n\tuseLayoutEffect( () => {\r\n\t\tif ( ! selectedTab?.dimmed ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// In controlled mode, we trust that disabling tabs is done\r\n\t\t// intentionally, and don't select a new tab automatically.\r\n\t\tif ( isControlled ) {\r\n\t\t\tsetSelectedId( null );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If the currently selected tab becomes disabled, fall back to the\r\n\t\t// `defaultTabId` if possible. Otherwise select the first\r\n\t\t// enabled tab (if there is one).\r\n\t\tif ( initialTab && ! initialTab.dimmed ) {\r\n\t\t\tsetSelectedId( initialTab.id );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( firstEnabledTab ) {\r\n\t\t\tsetSelectedId( firstEnabledTab.id );\r\n\t\t}\r\n\t}, [\r\n\t\tfirstEnabledTab,\r\n\t\tinitialTab,\r\n\t\tisControlled,\r\n\t\tselectedTab?.dimmed,\r\n\t\tsetSelectedId,\r\n\t] );\r\n\r\n\t// Clear `selectedId` if the active tab is removed from the DOM in controlled mode.\r\n\tuseLayoutEffect( () => {\r\n\t\tif ( ! isControlled ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Once the tabs have populated, if the `selectedTabId` still can't be\r\n\t\t// found, clear the selection.\r\n\t\tif (\r\n\t\t\ttabsHavePopulatedRef.current &&\r\n\t\t\t!! selectedTabId &&\r\n\t\t\t! selectedTab\r\n\t\t) {\r\n\t\t\tsetSelectedId( null );\r\n\t\t}\r\n\t}, [ isControlled, selectedTab, selectedTabId, setSelectedId ] );\r\n\r\n\tuseEffect( () => {\r\n\t\t// If there is no active tab, fallback to place focus on the first enabled tab\r\n\t\t// so there is always an active element\r\n\t\tif ( selectedTabId === null && ! activeId && firstEnabledTab?.id ) {\r\n\t\t\tsetActiveId( firstEnabledTab.id );\r\n\t\t}\r\n\t}, [ selectedTabId, activeId, firstEnabledTab?.id, setActiveId ] );\r\n\r\n\tuseEffect( () => {\r\n\t\tif ( ! isControlled ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\trequestAnimationFrame( () => {\r\n\t\t\tconst focusedElement =\r\n\t\t\t\titems?.[ 0 ]?.element?.ownerDocument.activeElement;\r\n\r\n\t\t\tif (\r\n\t\t\t\t! focusedElement ||\r\n\t\t\t\t! items.some( ( item ) => focusedElement === item.element )\r\n\t\t\t) {\r\n\t\t\t\treturn; // Return early if no tabs are focused.\r\n\t\t\t}\r\n\r\n\t\t\t// If, after ariakit re-computes the active tab, that tab doesn't match\r\n\t\t\t// the currently focused tab, then we force an update to ariakit to avoid\r\n\t\t\t// any mismatches, especially when navigating to previous/next tab with\r\n\t\t\t// arrow keys.\r\n\t\t\tif ( activeId !== focusedElement.id ) {\r\n\t\t\t\tsetActiveId( focusedElement.id );\r\n\t\t\t}\r\n\t\t} );\r\n\t}, [ activeId, isControlled, items, setActiveId ] );\r\n\r\n\tconst contextValue = useMemo(\r\n\t\t() => ( {\r\n\t\t\tstore,\r\n\t\t\tinstanceId,\r\n\t\t} ),\r\n\t\t[ store, instanceId ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<TabsContext.Provider value={ contextValue }>\r\n\t\t\t{ children }\r\n\t\t</TabsContext.Provider>\r\n\t);\r\n}\r\n\r\nTabs.TabList = TabList;\r\nTabs.Tab = Tab;\r\nTabs.TabPanel = TabPanel;\r\nTabs.Context = TabsContext;\r\n\r\nexport default Tabs;\r\n"],"mappings":"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","ignoreList":[]}