{"version":3,"names":["css","useMemo","Children","cloneElement","hasConnectNamespace","useContextSystem","useTruncate","getOptimalTextShade","styles","createHighlighterText","getFontSize","CONFIG","COLORS","getLineHeight","useCx","_ref","process","env","NODE_ENV","name","map","toString","_EMOTION_STRINGIFIED_CSS_ERROR__","useText","props","adjustLineHeightForInnerControls","align","children","className","color","ellipsizeMode","isDestructive","display","highlightEscape","highlightCaseSensitive","highlightWords","highlightSanitize","isBlock","letterSpacing","lineHeight","lineHeightProp","optimizeReadabilityFor","size","truncate","upperCase","variant","weight","fontWeight","otherProps","content","isHighlighter","Array","isArray","isCaption","TypeError","autoEscape","caseSensitive","searchWords","sanitize","cx","classes","sx","Base","fontSize","textAlign","optimalTextColor","isOptimalTextColorDark","gray","white","Text","destructive","highlighterText","block","muted","finalEllipsizeMode","finalComponentProps","truncateProps","child","isLink"],"sources":["@wordpress/components/src/text/hook.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport type { SerializedStyles } from '@emotion/react';\r\nimport { css } from '@emotion/react';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { useMemo, Children, cloneElement } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport type { WordPressComponentProps } from '../context';\r\nimport { hasConnectNamespace, useContextSystem } from '../context';\r\nimport { useTruncate } from '../truncate';\r\nimport { getOptimalTextShade } from '../utils/colors';\r\nimport * as styles from './styles';\r\nimport { createHighlighterText } from './utils';\r\nimport { getFontSize } from '../utils/font-size';\r\nimport { CONFIG, COLORS } from '../utils';\r\nimport { getLineHeight } from './get-line-height';\r\nimport { useCx } from '../utils/hooks/use-cx';\r\nimport type { Props } from './types';\r\nimport type React from 'react';\r\n\r\n/**\r\n * @param {import('../context').WordPressComponentProps<import('./types').Props, 'span'>} props\r\n */\r\nexport default function useText(\r\n\tprops: WordPressComponentProps< Props, 'span' >\r\n) {\r\n\tconst {\r\n\t\tadjustLineHeightForInnerControls,\r\n\t\talign,\r\n\t\tchildren,\r\n\t\tclassName,\r\n\t\tcolor,\r\n\t\tellipsizeMode,\r\n\t\tisDestructive = false,\r\n\t\tdisplay,\r\n\t\thighlightEscape = false,\r\n\t\thighlightCaseSensitive = false,\r\n\t\thighlightWords,\r\n\t\thighlightSanitize,\r\n\t\tisBlock = false,\r\n\t\tletterSpacing,\r\n\t\tlineHeight: lineHeightProp,\r\n\t\toptimizeReadabilityFor,\r\n\t\tsize,\r\n\t\ttruncate = false,\r\n\t\tupperCase = false,\r\n\t\tvariant,\r\n\t\tweight = CONFIG.fontWeight,\r\n\t\t...otherProps\r\n\t} = useContextSystem( props, 'Text' );\r\n\r\n\tlet content: React.ReactNode = children;\r\n\tconst isHighlighter = Array.isArray( highlightWords );\r\n\tconst isCaption = size === 'caption';\r\n\r\n\tif ( isHighlighter ) {\r\n\t\tif ( typeof children !== 'string' ) {\r\n\t\t\tthrow new TypeError(\r\n\t\t\t\t'`children` of `Text` must only be `string` types when `highlightWords` is defined'\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tcontent = createHighlighterText( {\r\n\t\t\tautoEscape: highlightEscape,\r\n\t\t\tchildren,\r\n\t\t\tcaseSensitive: highlightCaseSensitive,\r\n\t\t\tsearchWords: highlightWords,\r\n\t\t\tsanitize: highlightSanitize,\r\n\t\t} );\r\n\t}\r\n\r\n\tconst cx = useCx();\r\n\r\n\tconst classes = useMemo( () => {\r\n\t\tconst sx: Record< string, SerializedStyles | null > = {};\r\n\r\n\t\tconst lineHeight = getLineHeight(\r\n\t\t\tadjustLineHeightForInnerControls,\r\n\t\t\tlineHeightProp\r\n\t\t);\r\n\r\n\t\tsx.Base = css( {\r\n\t\t\tcolor,\r\n\t\t\tdisplay,\r\n\t\t\tfontSize: getFontSize( size ),\r\n\t\t\tfontWeight: weight,\r\n\t\t\tlineHeight,\r\n\t\t\tletterSpacing,\r\n\t\t\ttextAlign: align,\r\n\t\t} );\r\n\r\n\t\tsx.upperCase = css( { textTransform: 'uppercase' } );\r\n\r\n\t\tsx.optimalTextColor = null;\r\n\r\n\t\tif ( optimizeReadabilityFor ) {\r\n\t\t\tconst isOptimalTextColorDark =\r\n\t\t\t\tgetOptimalTextShade( optimizeReadabilityFor ) === 'dark';\r\n\r\n\t\t\tsx.optimalTextColor = isOptimalTextColorDark\r\n\t\t\t\t? css( { color: COLORS.gray[ 900 ] } )\r\n\t\t\t\t: css( { color: COLORS.white } );\r\n\t\t}\r\n\r\n\t\treturn cx(\r\n\t\t\tstyles.Text,\r\n\t\t\tsx.Base,\r\n\t\t\tsx.optimalTextColor,\r\n\t\t\tisDestructive && styles.destructive,\r\n\t\t\t!! isHighlighter && styles.highlighterText,\r\n\t\t\tisBlock && styles.block,\r\n\t\t\tisCaption && styles.muted,\r\n\t\t\tvariant && styles[ variant ],\r\n\t\t\tupperCase && sx.upperCase,\r\n\t\t\tclassName\r\n\t\t);\r\n\t}, [\r\n\t\tadjustLineHeightForInnerControls,\r\n\t\talign,\r\n\t\tclassName,\r\n\t\tcolor,\r\n\t\tcx,\r\n\t\tdisplay,\r\n\t\tisBlock,\r\n\t\tisCaption,\r\n\t\tisDestructive,\r\n\t\tisHighlighter,\r\n\t\tletterSpacing,\r\n\t\tlineHeightProp,\r\n\t\toptimizeReadabilityFor,\r\n\t\tsize,\r\n\t\tupperCase,\r\n\t\tvariant,\r\n\t\tweight,\r\n\t] );\r\n\r\n\tlet finalEllipsizeMode: undefined | 'auto' | 'none';\r\n\tif ( truncate === true ) {\r\n\t\tfinalEllipsizeMode = 'auto';\r\n\t}\r\n\tif ( truncate === false ) {\r\n\t\tfinalEllipsizeMode = 'none';\r\n\t}\r\n\r\n\tconst finalComponentProps = {\r\n\t\t...otherProps,\r\n\t\tclassName: classes,\r\n\t\tchildren,\r\n\t\tellipsizeMode: ellipsizeMode || finalEllipsizeMode,\r\n\t};\r\n\r\n\tconst truncateProps = useTruncate( finalComponentProps );\r\n\r\n\t/**\r\n\t * Enhance child `<Link />` components to inherit font size.\r\n\t */\r\n\tif ( ! truncate && Array.isArray( children ) ) {\r\n\t\tcontent = Children.map( children, ( child ) => {\r\n\t\t\tif (\r\n\t\t\t\ttypeof child !== 'object' ||\r\n\t\t\t\tchild === null ||\r\n\t\t\t\t! ( 'props' in child )\r\n\t\t\t) {\r\n\t\t\t\treturn child;\r\n\t\t\t}\r\n\r\n\t\t\tconst isLink = hasConnectNamespace( child, [ 'Link' ] );\r\n\t\t\tif ( isLink ) {\r\n\t\t\t\treturn cloneElement( child, {\r\n\t\t\t\t\tsize: child.props.size || 'inherit',\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\treturn child;\r\n\t\t} );\r\n\t}\r\n\r\n\treturn {\r\n\t\t...truncateProps,\r\n\t\tchildren: truncate ? truncateProps.children : content,\r\n\t};\r\n}\r\n"],"mappings":"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","ignoreList":[]}