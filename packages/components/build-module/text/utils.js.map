{"version":3,"names":["memoize","findAll","createElement","lowercaseProps","object","mapped","key","toLowerCase","memoizedLowercaseProps","createHighlighterText","activeClassName","activeIndex","activeStyle","autoEscape","caseSensitive","children","findChunks","highlightClassName","highlightStyle","highlightTag","sanitize","searchWords","unhighlightClassName","unhighlightStyle","textToHighlight","chunks","HighlightTag","highlightIndex","highlightClassNames","highlightStyles","textContent","map","chunk","index","text","substr","start","end","highlight","highlightClass","isActive","Object","assign","props","className","style"],"sources":["@wordpress/components/src/text/utils.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport memoize from 'memize';\r\nimport type { FindAllArgs } from 'highlight-words-core';\r\nimport { findAll } from 'highlight-words-core';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { createElement } from '@wordpress/element';\r\n\r\n/**\r\n * Source:\r\n * https://github.com/bvaughn/react-highlight-words/blob/HEAD/src/Highlighter.js\r\n */\r\n\r\n/**\r\n * @typedef Options\r\n * @property {string}                                                     [activeClassName='']      Classname for active highlighted areas.\r\n * @property {number}                                                     [activeIndex=-1]          The index of the active highlighted area.\r\n * @property {import('react').AllHTMLAttributes<HTMLDivElement>['style']} [activeStyle]             Styles to apply to the active highlighted area.\r\n * @property {boolean}                                                    [autoEscape]              Whether to automatically escape text.\r\n * @property {boolean}                                                    [caseSensitive=false]     Whether to highlight in a case-sensitive manner.\r\n * @property {string}                                                     children                  Children to highlight.\r\n * @property {import('highlight-words-core').FindAllArgs['findChunks']}   [findChunks]              Custom `findChunks` function to pass to `highlight-words-core`.\r\n * @property {string | Record<string, unknown>}                           [highlightClassName='']   Classname to apply to highlighted text or a Record of classnames to apply to given text (which should be the key).\r\n * @property {import('react').AllHTMLAttributes<HTMLDivElement>['style']} [highlightStyle={}]       Styles to apply to highlighted text.\r\n * @property {keyof JSX.IntrinsicElements}                                [highlightTag='mark']     Tag to use for the highlighted text.\r\n * @property {import('highlight-words-core').FindAllArgs['sanitize']}     [sanitize]                Custom `santize` function to pass to `highlight-words-core`.\r\n * @property {string[]}                                                   [searchWords=[]]          Words to search for and highlight.\r\n * @property {string}                                                     [unhighlightClassName=''] Classname to apply to unhighlighted text.\r\n * @property {import('react').AllHTMLAttributes<HTMLDivElement>['style']} [unhighlightStyle]        Style to apply to unhighlighted text.\r\n */\r\n\r\ninterface Options {\r\n\tactiveClassName?: string;\r\n\tactiveIndex?: number;\r\n\tactiveStyle?: React.AllHTMLAttributes< HTMLDivElement >[ 'style' ];\r\n\tautoEscape?: boolean;\r\n\tcaseSensitive?: boolean;\r\n\tchildren: string;\r\n\tfindChunks?: FindAllArgs[ 'findChunks' ];\r\n\thighlightClassName?: string | Record< string, unknown >;\r\n\thighlightStyle?: React.AllHTMLAttributes< HTMLDivElement >[ 'style' ];\r\n\thighlightTag?: keyof JSX.IntrinsicElements;\r\n\tsanitize?: FindAllArgs[ 'sanitize' ];\r\n\tsearchWords?: string[];\r\n\tunhighlightClassName?: string;\r\n\tunhighlightStyle?: React.AllHTMLAttributes< HTMLDivElement >[ 'style' ];\r\n}\r\n\r\n/**\r\n * Maps props to lowercase names.\r\n *\r\n * @param object Props to map.\r\n * @return The mapped props.\r\n */\r\nconst lowercaseProps = < T extends Record< string, unknown > >( object: T ) => {\r\n\tconst mapped: Record< string, unknown > = {};\r\n\tfor ( const key in object ) {\r\n\t\tmapped[ key.toLowerCase() ] = object[ key ];\r\n\t}\r\n\treturn mapped as { [ K in keyof T as Lowercase< string & K > ]: T[ K ] };\r\n};\r\n\r\nconst memoizedLowercaseProps = memoize( lowercaseProps );\r\n\r\n/**\r\n * @param options\r\n * @param options.activeClassName\r\n * @param options.activeIndex\r\n * @param options.activeStyle\r\n * @param options.autoEscape\r\n * @param options.caseSensitive\r\n * @param options.children\r\n * @param options.findChunks\r\n * @param options.highlightClassName\r\n * @param options.highlightStyle\r\n * @param options.highlightTag\r\n * @param options.sanitize\r\n * @param options.searchWords\r\n * @param options.unhighlightClassName\r\n * @param options.unhighlightStyle\r\n */\r\nexport function createHighlighterText( {\r\n\tactiveClassName = '',\r\n\tactiveIndex = -1,\r\n\tactiveStyle,\r\n\tautoEscape,\r\n\tcaseSensitive = false,\r\n\tchildren,\r\n\tfindChunks,\r\n\thighlightClassName = '',\r\n\thighlightStyle = {},\r\n\thighlightTag = 'mark',\r\n\tsanitize,\r\n\tsearchWords = [],\r\n\tunhighlightClassName = '',\r\n\tunhighlightStyle,\r\n}: Options ) {\r\n\tif ( ! children ) {\r\n\t\treturn null;\r\n\t}\r\n\tif ( typeof children !== 'string' ) {\r\n\t\treturn children;\r\n\t}\r\n\r\n\tconst textToHighlight = children;\r\n\r\n\tconst chunks = findAll( {\r\n\t\tautoEscape,\r\n\t\tcaseSensitive,\r\n\t\tfindChunks,\r\n\t\tsanitize,\r\n\t\tsearchWords,\r\n\t\ttextToHighlight,\r\n\t} );\r\n\tconst HighlightTag = highlightTag;\r\n\tlet highlightIndex = -1;\r\n\tlet highlightClassNames = '';\r\n\tlet highlightStyles;\r\n\r\n\tconst textContent = chunks.map( ( chunk, index ) => {\r\n\t\tconst text = textToHighlight.substr(\r\n\t\t\tchunk.start,\r\n\t\t\tchunk.end - chunk.start\r\n\t\t);\r\n\r\n\t\tif ( chunk.highlight ) {\r\n\t\t\thighlightIndex++;\r\n\r\n\t\t\tlet highlightClass;\r\n\t\t\tif ( typeof highlightClassName === 'object' ) {\r\n\t\t\t\tif ( ! caseSensitive ) {\r\n\t\t\t\t\thighlightClassName =\r\n\t\t\t\t\t\tmemoizedLowercaseProps( highlightClassName );\r\n\t\t\t\t\thighlightClass = highlightClassName[ text.toLowerCase() ];\r\n\t\t\t\t} else {\r\n\t\t\t\t\thighlightClass = highlightClassName[ text ];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\thighlightClass = highlightClassName;\r\n\t\t\t}\r\n\r\n\t\t\tconst isActive = highlightIndex === +activeIndex;\r\n\r\n\t\t\thighlightClassNames = `${ highlightClass } ${\r\n\t\t\t\tisActive ? activeClassName : ''\r\n\t\t\t}`;\r\n\t\t\thighlightStyles =\r\n\t\t\t\tisActive === true && activeStyle !== null\r\n\t\t\t\t\t? Object.assign( {}, highlightStyle, activeStyle )\r\n\t\t\t\t\t: highlightStyle;\r\n\r\n\t\t\tconst props: Record< string, unknown > = {\r\n\t\t\t\tchildren: text,\r\n\t\t\t\tclassName: highlightClassNames,\r\n\t\t\t\tkey: index,\r\n\t\t\t\tstyle: highlightStyles,\r\n\t\t\t};\r\n\r\n\t\t\t// Don't attach arbitrary props to DOM elements; this triggers React DEV warnings (https://fb.me/react-unknown-prop)\r\n\t\t\t// Only pass through the highlightIndex attribute for custom components.\r\n\t\t\tif ( typeof HighlightTag !== 'string' ) {\r\n\t\t\t\tprops.highlightIndex = highlightIndex;\r\n\t\t\t}\r\n\r\n\t\t\treturn createElement( HighlightTag, props );\r\n\t\t}\r\n\t\treturn createElement( 'span', {\r\n\t\t\tchildren: text,\r\n\t\t\tclassName: unhighlightClassName,\r\n\t\t\tkey: index,\r\n\t\t\tstyle: unhighlightStyle,\r\n\t\t} );\r\n\t} );\r\n\r\n\treturn textContent;\r\n}\r\n"],"mappings":"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","ignoreList":[]}