{"version":3,"names":["useInstanceId","forwardRef","useMemo","View","useControlledValue","ToggleGroupControlContext","useComputeControlledOrUncontrolledValue","jsx","_jsx","UnforwardedToggleGroupControlAsButtonGroup","children","isAdaptiveWidth","label","onChange","size","value","valueProp","id","idProp","otherProps","forwardedRef","generatedId","ToggleGroupControlAsButtonGroup","baseId","defaultValue","selectedValue","setSelectedValue","groupContextValue","setValue","isBlock","isDeselectable","Provider","ref","role"],"sources":["@wordpress/components/src/toggle-group-control/toggle-group-control/as-button-group.tsx"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useInstanceId } from '@wordpress/compose';\r\nimport { forwardRef, useMemo } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { View } from '../../view';\r\nimport { useControlledValue } from '../../utils';\r\nimport type { WordPressComponentProps } from '../../context';\r\nimport ToggleGroupControlContext from '../context';\r\nimport { useComputeControlledOrUncontrolledValue } from './utils';\r\nimport type {\r\n\tToggleGroupControlMainControlProps,\r\n\tToggleGroupControlContextProps,\r\n} from '../types';\r\n\r\nfunction UnforwardedToggleGroupControlAsButtonGroup(\r\n\t{\r\n\t\tchildren,\r\n\t\tisAdaptiveWidth,\r\n\t\tlabel,\r\n\t\tonChange,\r\n\t\tsize,\r\n\t\tvalue: valueProp,\r\n\t\tid: idProp,\r\n\t\t...otherProps\r\n\t}: WordPressComponentProps<\r\n\t\tToggleGroupControlMainControlProps,\r\n\t\t'div',\r\n\t\tfalse\r\n\t>,\r\n\tforwardedRef: React.ForwardedRef< HTMLDivElement >\r\n) {\r\n\tconst generatedId = useInstanceId(\r\n\t\tToggleGroupControlAsButtonGroup,\r\n\t\t'toggle-group-control-as-button-group'\r\n\t);\r\n\tconst baseId = idProp || generatedId;\r\n\r\n\t// Use a heuristic to understand if the component is being used in controlled\r\n\t// or uncontrolled mode, and consequently:\r\n\t// - when controlled, convert `undefined` values to `''` (ie. \"no value\")\r\n\t// - use the `value` prop as the `defaultValue` when uncontrolled\r\n\tconst { value, defaultValue } =\r\n\t\tuseComputeControlledOrUncontrolledValue( valueProp );\r\n\r\n\tconst [ selectedValue, setSelectedValue ] = useControlledValue( {\r\n\t\tdefaultValue,\r\n\t\tvalue,\r\n\t\tonChange,\r\n\t} );\r\n\r\n\tconst groupContextValue = useMemo(\r\n\t\t() =>\r\n\t\t\t( {\r\n\t\t\t\tbaseId,\r\n\t\t\t\tvalue: selectedValue,\r\n\t\t\t\tsetValue: setSelectedValue,\r\n\t\t\t\tisBlock: ! isAdaptiveWidth,\r\n\t\t\t\tisDeselectable: true,\r\n\t\t\t\tsize,\r\n\t\t\t} ) as ToggleGroupControlContextProps,\r\n\t\t[ baseId, selectedValue, setSelectedValue, isAdaptiveWidth, size ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ToggleGroupControlContext.Provider value={ groupContextValue }>\r\n\t\t\t<View\r\n\t\t\t\taria-label={ label }\r\n\t\t\t\t{ ...otherProps }\r\n\t\t\t\tref={ forwardedRef }\r\n\t\t\t\trole=\"group\"\r\n\t\t\t>\r\n\t\t\t\t{ children }\r\n\t\t\t</View>\r\n\t\t</ToggleGroupControlContext.Provider>\r\n\t);\r\n}\r\n\r\nexport const ToggleGroupControlAsButtonGroup = forwardRef(\r\n\tUnforwardedToggleGroupControlAsButtonGroup\r\n);\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;;AAExD;AACA;AACA;AACA,SAASC,IAAI,QAAQ,YAAY;AACjC,SAASC,kBAAkB,QAAQ,aAAa;AAEhD,OAAOC,yBAAyB,MAAM,YAAY;AAClD,SAASC,uCAAuC,QAAQ,SAAS;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAMlE,SAASC,0CAA0CA,CAClD;EACCC,QAAQ;EACRC,eAAe;EACfC,KAAK;EACLC,QAAQ;EACRC,IAAI;EACJC,KAAK,EAAEC,SAAS;EAChBC,EAAE,EAAEC,MAAM;EACV,GAAGC;AAKJ,CAAC,EACDC,YAAkD,EACjD;EACD,MAAMC,WAAW,GAAGrB,aAAa,CAChCsB,+BAA+B,EAC/B,sCACD,CAAC;EACD,MAAMC,MAAM,GAAGL,MAAM,IAAIG,WAAW;;EAEpC;EACA;EACA;EACA;EACA,MAAM;IAAEN,KAAK;IAAES;EAAa,CAAC,GAC5BlB,uCAAuC,CAAEU,SAAU,CAAC;EAErD,MAAM,CAAES,aAAa,EAAEC,gBAAgB,CAAE,GAAGtB,kBAAkB,CAAE;IAC/DoB,YAAY;IACZT,KAAK;IACLF;EACD,CAAE,CAAC;EAEH,MAAMc,iBAAiB,GAAGzB,OAAO,CAChC,OACG;IACDqB,MAAM;IACNR,KAAK,EAAEU,aAAa;IACpBG,QAAQ,EAAEF,gBAAgB;IAC1BG,OAAO,EAAE,CAAElB,eAAe;IAC1BmB,cAAc,EAAE,IAAI;IACpBhB;EACD,CAAC,CAAoC,EACtC,CAAES,MAAM,EAAEE,aAAa,EAAEC,gBAAgB,EAAEf,eAAe,EAAEG,IAAI,CACjE,CAAC;EAED,oBACCN,IAAA,CAACH,yBAAyB,CAAC0B,QAAQ;IAAChB,KAAK,EAAGY,iBAAmB;IAAAjB,QAAA,eAC9DF,IAAA,CAACL,IAAI;MACJ,cAAaS,KAAO;MAAA,GACfO,UAAU;MACfa,GAAG,EAAGZ,YAAc;MACpBa,IAAI,EAAC,OAAO;MAAAvB,QAAA,EAEVA;IAAQ,CACL;EAAC,CAC4B,CAAC;AAEvC;AAEA,OAAO,MAAMY,+BAA+B,GAAGrB,UAAU,CACxDQ,0CACD,CAAC","ignoreList":[]}