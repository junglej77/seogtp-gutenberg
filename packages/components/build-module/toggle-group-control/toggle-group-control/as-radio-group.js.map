{"version":3,"names":["Ariakit","useStoreState","useInstanceId","forwardRef","useMemo","View","ToggleGroupControlContext","useComputeControlledOrUncontrolledValue","jsx","_jsx","UnforwardedToggleGroupControlAsRadioGroup","children","isAdaptiveWidth","label","onChange","onChangeProp","size","value","valueProp","id","idProp","otherProps","forwardedRef","generatedId","ToggleGroupControlAsRadioGroup","baseId","defaultValue","wrappedOnChangeProp","v","undefined","radio","useRadioStore","setValue","selectedValue","groupContextValue","isBlock","Provider","RadioGroup","store","render","ref"],"sources":["@wordpress/components/src/toggle-group-control/toggle-group-control/as-radio-group.tsx"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport type { ForwardedRef } from 'react';\r\nimport * as Ariakit from '@ariakit/react';\r\nimport { useStoreState } from '@ariakit/react';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { useInstanceId } from '@wordpress/compose';\r\nimport { forwardRef, useMemo } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { View } from '../../view';\r\nimport type { WordPressComponentProps } from '../../context';\r\nimport ToggleGroupControlContext from '../context';\r\nimport { useComputeControlledOrUncontrolledValue } from './utils';\r\nimport type {\r\n\tToggleGroupControlMainControlProps,\r\n\tToggleGroupControlContextProps,\r\n} from '../types';\r\n\r\nfunction UnforwardedToggleGroupControlAsRadioGroup(\r\n\t{\r\n\t\tchildren,\r\n\t\tisAdaptiveWidth,\r\n\t\tlabel,\r\n\t\tonChange: onChangeProp,\r\n\t\tsize,\r\n\t\tvalue: valueProp,\r\n\t\tid: idProp,\r\n\t\t...otherProps\r\n\t}: WordPressComponentProps<\r\n\t\tToggleGroupControlMainControlProps,\r\n\t\t'div',\r\n\t\tfalse\r\n\t>,\r\n\tforwardedRef: ForwardedRef< HTMLDivElement >\r\n) {\r\n\tconst generatedId = useInstanceId(\r\n\t\tToggleGroupControlAsRadioGroup,\r\n\t\t'toggle-group-control-as-radio-group'\r\n\t);\r\n\tconst baseId = idProp || generatedId;\r\n\r\n\t// Use a heuristic to understand if the component is being used in controlled\r\n\t// or uncontrolled mode, and consequently:\r\n\t// - when controlled, convert `undefined` values to `''` (ie. \"no value\")\r\n\t// - use the `value` prop as the `defaultValue` when uncontrolled\r\n\tconst { value, defaultValue } =\r\n\t\tuseComputeControlledOrUncontrolledValue( valueProp );\r\n\r\n\t// `useRadioStore`'s `setValue` prop can be called with `null`, while\r\n\t// the component's `onChange` prop only expects `undefined`\r\n\tconst wrappedOnChangeProp = onChangeProp\r\n\t\t? ( v: string | number | null ) => {\r\n\t\t\t\tonChangeProp( v ?? undefined );\r\n\t\t  }\r\n\t\t: undefined;\r\n\r\n\tconst radio = Ariakit.useRadioStore( {\r\n\t\tdefaultValue,\r\n\t\tvalue,\r\n\t\tsetValue: wrappedOnChangeProp,\r\n\t} );\r\n\r\n\tconst selectedValue = useStoreState( radio, 'value' );\r\n\tconst setValue = radio.setValue;\r\n\r\n\tconst groupContextValue = useMemo(\r\n\t\t() =>\r\n\t\t\t( {\r\n\t\t\t\tbaseId,\r\n\t\t\t\tisBlock: ! isAdaptiveWidth,\r\n\t\t\t\tsize,\r\n\t\t\t\tvalue: selectedValue,\r\n\t\t\t\tsetValue,\r\n\t\t\t} ) as ToggleGroupControlContextProps,\r\n\t\t[ baseId, isAdaptiveWidth, size, selectedValue, setValue ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<ToggleGroupControlContext.Provider value={ groupContextValue }>\r\n\t\t\t<Ariakit.RadioGroup\r\n\t\t\t\tstore={ radio }\r\n\t\t\t\taria-label={ label }\r\n\t\t\t\trender={ <View /> }\r\n\t\t\t\t{ ...otherProps }\r\n\t\t\t\tid={ baseId }\r\n\t\t\t\tref={ forwardedRef }\r\n\t\t\t>\r\n\t\t\t\t{ children }\r\n\t\t\t</Ariakit.RadioGroup>\r\n\t\t</ToggleGroupControlContext.Provider>\r\n\t);\r\n}\r\n\r\nexport const ToggleGroupControlAsRadioGroup = forwardRef(\r\n\tUnforwardedToggleGroupControlAsRadioGroup\r\n);\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAO,KAAKA,OAAO,MAAM,gBAAgB;AACzC,SAASC,aAAa,QAAQ,gBAAgB;;AAE9C;AACA;AACA;AACA,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;;AAExD;AACA;AACA;AACA,SAASC,IAAI,QAAQ,YAAY;AAEjC,OAAOC,yBAAyB,MAAM,YAAY;AAClD,SAASC,uCAAuC,QAAQ,SAAS;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAMlE,SAASC,yCAAyCA,CACjD;EACCC,QAAQ;EACRC,eAAe;EACfC,KAAK;EACLC,QAAQ,EAAEC,YAAY;EACtBC,IAAI;EACJC,KAAK,EAAEC,SAAS;EAChBC,EAAE,EAAEC,MAAM;EACV,GAAGC;AAKJ,CAAC,EACDC,YAA4C,EAC3C;EACD,MAAMC,WAAW,GAAGrB,aAAa,CAChCsB,8BAA8B,EAC9B,qCACD,CAAC;EACD,MAAMC,MAAM,GAAGL,MAAM,IAAIG,WAAW;;EAEpC;EACA;EACA;EACA;EACA,MAAM;IAAEN,KAAK;IAAES;EAAa,CAAC,GAC5BnB,uCAAuC,CAAEW,SAAU,CAAC;;EAErD;EACA;EACA,MAAMS,mBAAmB,GAAGZ,YAAY,GACnCa,CAAyB,IAAM;IACjCb,YAAY,CAAEa,CAAC,aAADA,CAAC,cAADA,CAAC,GAAIC,SAAU,CAAC;EAC9B,CAAC,GACDA,SAAS;EAEZ,MAAMC,KAAK,GAAG9B,OAAO,CAAC+B,aAAa,CAAE;IACpCL,YAAY;IACZT,KAAK;IACLe,QAAQ,EAAEL;EACX,CAAE,CAAC;EAEH,MAAMM,aAAa,GAAGhC,aAAa,CAAE6B,KAAK,EAAE,OAAQ,CAAC;EACrD,MAAME,QAAQ,GAAGF,KAAK,CAACE,QAAQ;EAE/B,MAAME,iBAAiB,GAAG9B,OAAO,CAChC,OACG;IACDqB,MAAM;IACNU,OAAO,EAAE,CAAEvB,eAAe;IAC1BI,IAAI;IACJC,KAAK,EAAEgB,aAAa;IACpBD;EACD,CAAC,CAAoC,EACtC,CAAEP,MAAM,EAAEb,eAAe,EAAEI,IAAI,EAAEiB,aAAa,EAAED,QAAQ,CACzD,CAAC;EAED,oBACCvB,IAAA,CAACH,yBAAyB,CAAC8B,QAAQ;IAACnB,KAAK,EAAGiB,iBAAmB;IAAAvB,QAAA,eAC9DF,IAAA,CAACT,OAAO,CAACqC,UAAU;MAClBC,KAAK,EAAGR,KAAO;MACf,cAAajB,KAAO;MACpB0B,MAAM,eAAG9B,IAAA,CAACJ,IAAI,IAAE,CAAG;MAAA,GACdgB,UAAU;MACfF,EAAE,EAAGM,MAAQ;MACbe,GAAG,EAAGlB,YAAc;MAAAX,QAAA,EAElBA;IAAQ,CACS;EAAC,CACc,CAAC;AAEvC;AAEA,OAAO,MAAMa,8BAA8B,GAAGrB,UAAU,CACvDO,yCACD,CAAC","ignoreList":[]}