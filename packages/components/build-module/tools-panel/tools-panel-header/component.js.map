{"version":3,"names":["speak","check","moreVertical","plus","__","_x","sprintf","DropdownMenu","MenuGroup","MenuItem","HStack","Heading","useToolsPanelHeader","contextConnect","ResetLabel","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","DefaultControlsGroup","itemClassName","items","toggleItem","length","resetSuffix","children","map","label","hasValue","className","role","onClick","suffix","icon","isSelected","OptionalControlsGroup","itemLabel","ToolsPanelHeader","props","forwardedRef","areAllOptionalControlsHidden","defaultControlsItemClassName","dropdownMenuClassName","hasMenuItems","headingClassName","headingLevel","labelText","menuItems","resetAll","dropdownMenuProps","headerProps","defaultItems","Object","entries","default","optionalItems","optional","dropDownMenuIcon","dropDownMenuLabelText","dropdownMenuDescriptionText","undefined","canResetAll","some","ref","level","menuProps","toggleProps","size","description","variant","ConnectedToolsPanelHeader"],"sources":["@wordpress/components/src/tools-panel/tools-panel-header/component.tsx"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport type { ForwardedRef } from 'react';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { speak } from '@wordpress/a11y';\r\nimport { check, moreVertical, plus } from '@wordpress/icons';\r\nimport { __, _x, sprintf } from '@wordpress/i18n';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport DropdownMenu from '../../dropdown-menu';\r\nimport MenuGroup from '../../menu-group';\r\nimport MenuItem from '../../menu-item';\r\nimport { HStack } from '../../h-stack';\r\nimport { Heading } from '../../heading';\r\nimport { useToolsPanelHeader } from './hook';\r\nimport type { WordPressComponentProps } from '../../context';\r\nimport { contextConnect } from '../../context';\r\nimport { ResetLabel } from '../styles';\r\nimport type {\r\n\tToolsPanelControlsGroupProps,\r\n\tToolsPanelHeaderProps,\r\n} from '../types';\r\n\r\nconst DefaultControlsGroup = ( {\r\n\titemClassName,\r\n\titems,\r\n\ttoggleItem,\r\n}: ToolsPanelControlsGroupProps ) => {\r\n\tif ( ! items.length ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst resetSuffix = <ResetLabel aria-hidden>{ __( 'Reset' ) }</ResetLabel>;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{ items.map( ( [ label, hasValue ] ) => {\r\n\t\t\t\tif ( hasValue ) {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\tkey={ label }\r\n\t\t\t\t\t\t\tclassName={ itemClassName }\r\n\t\t\t\t\t\t\trole=\"menuitem\"\r\n\t\t\t\t\t\t\tlabel={ sprintf(\r\n\t\t\t\t\t\t\t\t// translators: %s: The name of the control being reset e.g. \"Padding\".\r\n\t\t\t\t\t\t\t\t__( 'Reset %s' ),\r\n\t\t\t\t\t\t\t\tlabel\r\n\t\t\t\t\t\t\t) }\r\n\t\t\t\t\t\t\tonClick={ () => {\r\n\t\t\t\t\t\t\t\ttoggleItem( label );\r\n\t\t\t\t\t\t\t\tspeak(\r\n\t\t\t\t\t\t\t\t\tsprintf(\r\n\t\t\t\t\t\t\t\t\t\t// translators: %s: The name of the control being reset e.g. \"Padding\".\r\n\t\t\t\t\t\t\t\t\t\t__( '%s reset to default' ),\r\n\t\t\t\t\t\t\t\t\t\tlabel\r\n\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t'assertive'\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t\tsuffix={ resetSuffix }\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{ label }\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tkey={ label }\r\n\t\t\t\t\t\ticon={ check }\r\n\t\t\t\t\t\tclassName={ itemClassName }\r\n\t\t\t\t\t\trole=\"menuitemcheckbox\"\r\n\t\t\t\t\t\tisSelected\r\n\t\t\t\t\t\taria-disabled\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{ label }\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t);\r\n\t\t\t} ) }\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst OptionalControlsGroup = ( {\r\n\titems,\r\n\ttoggleItem,\r\n}: ToolsPanelControlsGroupProps ) => {\r\n\tif ( ! items.length ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{ items.map( ( [ label, isSelected ] ) => {\r\n\t\t\t\tconst itemLabel = isSelected\r\n\t\t\t\t\t? sprintf(\r\n\t\t\t\t\t\t\t// translators: %s: The name of the control being hidden and reset e.g. \"Padding\".\r\n\t\t\t\t\t\t\t__( 'Hide and reset %s' ),\r\n\t\t\t\t\t\t\tlabel\r\n\t\t\t\t\t  )\r\n\t\t\t\t\t: sprintf(\r\n\t\t\t\t\t\t\t// translators: %s: The name of the control to display e.g. \"Padding\".\r\n\t\t\t\t\t\t\t__( 'Show %s' ),\r\n\t\t\t\t\t\t\tlabel\r\n\t\t\t\t\t  );\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tkey={ label }\r\n\t\t\t\t\t\ticon={ isSelected ? check : null }\r\n\t\t\t\t\t\tisSelected={ isSelected }\r\n\t\t\t\t\t\tlabel={ itemLabel }\r\n\t\t\t\t\t\tonClick={ () => {\r\n\t\t\t\t\t\t\tif ( isSelected ) {\r\n\t\t\t\t\t\t\t\tspeak(\r\n\t\t\t\t\t\t\t\t\tsprintf(\r\n\t\t\t\t\t\t\t\t\t\t// translators: %s: The name of the control being reset e.g. \"Padding\".\r\n\t\t\t\t\t\t\t\t\t\t__( '%s hidden and reset to default' ),\r\n\t\t\t\t\t\t\t\t\t\tlabel\r\n\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t'assertive'\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tspeak(\r\n\t\t\t\t\t\t\t\t\tsprintf(\r\n\t\t\t\t\t\t\t\t\t\t// translators: %s: The name of the control being reset e.g. \"Padding\".\r\n\t\t\t\t\t\t\t\t\t\t__( '%s is now visible' ),\r\n\t\t\t\t\t\t\t\t\t\tlabel\r\n\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t'assertive'\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttoggleItem( label );\r\n\t\t\t\t\t\t} }\r\n\t\t\t\t\t\trole=\"menuitemcheckbox\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{ label }\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t);\r\n\t\t\t} ) }\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst ToolsPanelHeader = (\r\n\tprops: WordPressComponentProps< ToolsPanelHeaderProps, 'h2' >,\r\n\tforwardedRef: ForwardedRef< any >\r\n) => {\r\n\tconst {\r\n\t\tareAllOptionalControlsHidden,\r\n\t\tdefaultControlsItemClassName,\r\n\t\tdropdownMenuClassName,\r\n\t\thasMenuItems,\r\n\t\theadingClassName,\r\n\t\theadingLevel = 2,\r\n\t\tlabel: labelText,\r\n\t\tmenuItems,\r\n\t\tresetAll,\r\n\t\ttoggleItem,\r\n\t\tdropdownMenuProps,\r\n\t\t...headerProps\r\n\t} = useToolsPanelHeader( props );\r\n\r\n\tif ( ! labelText ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst defaultItems = Object.entries( menuItems?.default || {} );\r\n\tconst optionalItems = Object.entries( menuItems?.optional || {} );\r\n\tconst dropDownMenuIcon = areAllOptionalControlsHidden ? plus : moreVertical;\r\n\tconst dropDownMenuLabelText = sprintf(\r\n\t\t// translators: %s: The name of the tool e.g. \"Color\" or \"Typography\".\r\n\t\t_x( '%s options', 'Button label to reveal tool panel options' ),\r\n\t\tlabelText\r\n\t);\r\n\tconst dropdownMenuDescriptionText = areAllOptionalControlsHidden\r\n\t\t? __( 'All options are currently hidden' )\r\n\t\t: undefined;\r\n\r\n\tconst canResetAll = [ ...defaultItems, ...optionalItems ].some(\r\n\t\t( [ , isSelected ] ) => isSelected\r\n\t);\r\n\r\n\treturn (\r\n\t\t<HStack { ...headerProps } ref={ forwardedRef }>\r\n\t\t\t<Heading level={ headingLevel } className={ headingClassName }>\r\n\t\t\t\t{ labelText }\r\n\t\t\t</Heading>\r\n\t\t\t{ hasMenuItems && (\r\n\t\t\t\t<DropdownMenu\r\n\t\t\t\t\t{ ...dropdownMenuProps }\r\n\t\t\t\t\ticon={ dropDownMenuIcon }\r\n\t\t\t\t\tlabel={ dropDownMenuLabelText }\r\n\t\t\t\t\tmenuProps={ { className: dropdownMenuClassName } }\r\n\t\t\t\t\ttoggleProps={ {\r\n\t\t\t\t\t\tsize: 'small',\r\n\t\t\t\t\t\tdescription: dropdownMenuDescriptionText,\r\n\t\t\t\t\t} }\r\n\t\t\t\t>\r\n\t\t\t\t\t{ () => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<MenuGroup label={ labelText }>\r\n\t\t\t\t\t\t\t\t<DefaultControlsGroup\r\n\t\t\t\t\t\t\t\t\titems={ defaultItems }\r\n\t\t\t\t\t\t\t\t\ttoggleItem={ toggleItem }\r\n\t\t\t\t\t\t\t\t\titemClassName={\r\n\t\t\t\t\t\t\t\t\t\tdefaultControlsItemClassName\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<OptionalControlsGroup\r\n\t\t\t\t\t\t\t\t\titems={ optionalItems }\r\n\t\t\t\t\t\t\t\t\ttoggleItem={ toggleItem }\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</MenuGroup>\r\n\t\t\t\t\t\t\t<MenuGroup>\r\n\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\taria-disabled={ ! canResetAll }\r\n\t\t\t\t\t\t\t\t\t// @ts-expect-error - TODO: If this \"tertiary\" style is something we really want to allow on MenuItem,\r\n\t\t\t\t\t\t\t\t\t// we should rename it and explicitly allow it as an official API. All the other Button variants\r\n\t\t\t\t\t\t\t\t\t// don't make sense in a MenuItem context, and should be disallowed.\r\n\t\t\t\t\t\t\t\t\tvariant=\"tertiary\"\r\n\t\t\t\t\t\t\t\t\tonClick={ () => {\r\n\t\t\t\t\t\t\t\t\t\tif ( canResetAll ) {\r\n\t\t\t\t\t\t\t\t\t\t\tresetAll();\r\n\t\t\t\t\t\t\t\t\t\t\tspeak(\r\n\t\t\t\t\t\t\t\t\t\t\t\t__( 'All options reset' ),\r\n\t\t\t\t\t\t\t\t\t\t\t\t'assertive'\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{ __( 'Reset all' ) }\r\n\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t</MenuGroup>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) }\r\n\t\t\t\t</DropdownMenu>\r\n\t\t\t) }\r\n\t\t</HStack>\r\n\t);\r\n};\r\n\r\nconst ConnectedToolsPanelHeader = contextConnect(\r\n\tToolsPanelHeader,\r\n\t'ToolsPanelHeader'\r\n);\r\n\r\nexport default ConnectedToolsPanelHeader;\r\n"],"mappings":"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","ignoreList":[]}