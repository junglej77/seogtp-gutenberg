{"version":3,"names":["useState","useMemo","RovingTabIndexProvider","jsx","_jsx","RovingTabIndex","children","lastFocusedElement","setLastFocusedElement","providerValue","value"],"sources":["@wordpress/components/src/tree-grid/roving-tab-index.tsx"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useState, useMemo } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { RovingTabIndexProvider } from './roving-tab-index-context';\r\n\r\n/**\r\n * Provider for adding roving tab index behaviors to tree grid structures.\r\n *\r\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/components/src/tree-grid/README.md\r\n */\r\nexport default function RovingTabIndex( {\r\n\tchildren,\r\n}: {\r\n\tchildren: React.ReactNode;\r\n} ) {\r\n\tconst [ lastFocusedElement, setLastFocusedElement ] =\r\n\t\tuseState< HTMLElement >();\r\n\r\n\t// Use `useMemo` to avoid creation of a new object for the providerValue\r\n\t// on every render. Only create a new object when the `lastFocusedElement`\r\n\t// value changes.\r\n\tconst providerValue = useMemo(\r\n\t\t() => ( { lastFocusedElement, setLastFocusedElement } ),\r\n\t\t[ lastFocusedElement ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<RovingTabIndexProvider value={ providerValue }>\r\n\t\t\t{ children }\r\n\t\t</RovingTabIndexProvider>\r\n\t);\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,QAAQ,EAAEC,OAAO,QAAQ,oBAAoB;;AAEtD;AACA;AACA;AACA,SAASC,sBAAsB,QAAQ,4BAA4B;;AAEnE;AACA;AACA;AACA;AACA;AAJA,SAAAC,GAAA,IAAAC,IAAA;AAKA,eAAe,SAASC,cAAcA,CAAE;EACvCC;AAGD,CAAC,EAAG;EACH,MAAM,CAAEC,kBAAkB,EAAEC,qBAAqB,CAAE,GAClDR,QAAQ,CAAgB,CAAC;;EAE1B;EACA;EACA;EACA,MAAMS,aAAa,GAAGR,OAAO,CAC5B,OAAQ;IAAEM,kBAAkB;IAAEC;EAAsB,CAAC,CAAE,EACvD,CAAED,kBAAkB,CACrB,CAAC;EAED,oBACCH,IAAA,CAACF,sBAAsB;IAACQ,KAAK,EAAGD,aAAe;IAAAH,QAAA,EAC5CA;EAAQ,CACa,CAAC;AAE3B","ignoreList":[]}