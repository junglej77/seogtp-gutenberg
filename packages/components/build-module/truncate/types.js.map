{"version":3,"names":[],"sources":["@wordpress/components/src/truncate/types.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport type { ReactNode } from 'react';\r\n\r\nexport type TruncateEllipsizeMode =\r\n\t| 'auto'\r\n\t| 'head'\r\n\t| 'tail'\r\n\t| 'middle'\r\n\t| 'none';\r\n\r\nexport type TruncateProps = {\r\n\t/**\r\n\t * The ellipsis string when truncating the text by the `limit` prop's value.\r\n\t *\r\n\t * @default '…'\r\n\t */\r\n\tellipsis?: string;\r\n\t/**\r\n\t * Determines where to truncate.  For example, we can truncate text right in\r\n\t * the middle. To do this, we need to set `ellipsizeMode` to `middle` and a\r\n\t * text `limit`.\r\n\t *\r\n\t * * `auto`: Trims content at the end automatically without a `limit`.\r\n\t * * `head`: Trims content at the beginning. Requires a `limit`.\r\n\t * * `middle`: Trims content in the middle. Requires a `limit`.\r\n\t * * `tail`: Trims content at the end. Requires a `limit`.\r\n\t *\r\n\t * @default 'auto'\r\n\t */\r\n\tellipsizeMode?: TruncateEllipsizeMode;\r\n\t/**\r\n\t * Determines the max number of characters to be displayed before the rest\r\n\t * of the text gets truncated. Requires `ellipsizeMode` to assume values\r\n\t * different from `auto` and `none`.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tlimit?: number;\r\n\t/**\r\n\t * Clamps the text content to the specified `numberOfLines`, adding an\r\n\t * ellipsis at the end. Note: this feature ignores the value of the\r\n\t * `ellipsis` prop and always displays the default `…` ellipsis.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tnumberOfLines?: number;\r\n\t/**\r\n\t * The children elements.\r\n\t *\r\n\t * Note: text truncation will be attempted only if the `children` are either\r\n\t * of type `string` or `number`. In any other scenarios, the component will\r\n\t * not attempt to truncate the text, and will pass through the `children`.\r\n\t */\r\n\tchildren: ReactNode;\r\n};\r\n"],"mappings":"","ignoreList":[]}