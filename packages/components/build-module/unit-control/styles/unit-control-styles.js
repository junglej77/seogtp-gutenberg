import _styled from "@emotion/styled/base";
/**
 * External dependencies
 */
import { css } from '@emotion/react';
/**
 * Internal dependencies
 */
import { COLORS, CONFIG, rtl } from '../../utils';
import NumberControl from '../../number-control';
import { BackdropUI } from '../../input-control/styles/input-control-styles';
import { space } from '../../utils/space';

// Using `selectSize` instead of `size` to avoid a type conflict with the
// `size` HTML attribute of the `select` element.

// TODO: Resolve need to use &&& to increase specificity
// https://github.com/WordPress/gutenberg/issues/18483

export const ValueInput = /*#__PURE__*/_styled(NumberControl, process.env.NODE_ENV === "production" ? {
  target: "e1bagdl32"
} : {
  target: "e1bagdl32",
  label: "ValueInput"
})("&&&{input{display:block;width:100%;}", BackdropUI, "{transition:box-shadow 0.1s linear;}}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVCaUQiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcclxuLyoqXHJcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xyXG4gKi9cclxuaW1wb3J0IHsgQ09MT1JTLCBDT05GSUcsIHJ0bCB9IGZyb20gJy4uLy4uL3V0aWxzJztcclxuaW1wb3J0IE51bWJlckNvbnRyb2wgZnJvbSAnLi4vLi4vbnVtYmVyLWNvbnRyb2wnO1xyXG5pbXBvcnQgeyBCYWNrZHJvcFVJIH0gZnJvbSAnLi4vLi4vaW5wdXQtY29udHJvbC9zdHlsZXMvaW5wdXQtY29udHJvbC1zdHlsZXMnO1xyXG5pbXBvcnQgdHlwZSB7IFNlbGVjdFNpemUgfSBmcm9tICcuLi90eXBlcyc7XHJcbmltcG9ydCB7IHNwYWNlIH0gZnJvbSAnLi4vLi4vdXRpbHMvc3BhY2UnO1xyXG5cclxuLy8gVXNpbmcgYHNlbGVjdFNpemVgIGluc3RlYWQgb2YgYHNpemVgIHRvIGF2b2lkIGEgdHlwZSBjb25mbGljdCB3aXRoIHRoZVxyXG4vLyBgc2l6ZWAgSFRNTCBhdHRyaWJ1dGUgb2YgdGhlIGBzZWxlY3RgIGVsZW1lbnQuXHJcbnR5cGUgU2VsZWN0UHJvcHMgPSB7XHJcblx0c2VsZWN0U2l6ZTogU2VsZWN0U2l6ZTtcclxufTtcclxuXHJcbi8vIFRPRE86IFJlc29sdmUgbmVlZCB0byB1c2UgJiYmIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5XHJcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9Xb3JkUHJlc3MvZ3V0ZW5iZXJnL2lzc3Vlcy8xODQ4M1xyXG5cclxuZXhwb3J0IGNvbnN0IFZhbHVlSW5wdXQgPSBzdHlsZWQoIE51bWJlckNvbnRyb2wgKWBcclxuXHQmJiYge1xyXG5cdFx0aW5wdXQge1xyXG5cdFx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdFx0d2lkdGg6IDEwMCU7XHJcblx0XHR9XHJcblxyXG5cdFx0JHsgQmFja2Ryb3BVSSB9IHtcclxuXHRcdFx0dHJhbnNpdGlvbjogYm94LXNoYWRvdyAwLjFzIGxpbmVhcjtcclxuXHRcdH1cclxuXHR9XHJcbmA7XHJcblxyXG5jb25zdCBiYXNlVW5pdExhYmVsU3R5bGVzID0gKCB7IHNlbGVjdFNpemUgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0Y29uc3Qgc2l6ZXMgPSB7XHJcblx0XHRzbWFsbDogY3NzYFxyXG5cdFx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cdFx0XHRwYWRkaW5nOiAycHggMXB4O1xyXG5cdFx0XHR3aWR0aDogMjBweDtcclxuXHRcdFx0Zm9udC1zaXplOiA4cHg7XHJcblx0XHRcdGxpbmUtaGVpZ2h0OiAxO1xyXG5cdFx0XHRsZXR0ZXItc3BhY2luZzogLTAuNXB4O1xyXG5cdFx0XHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cdFx0XHR0ZXh0LWFsaWduLWxhc3Q6IGNlbnRlcjtcclxuXHJcblx0XHRcdCY6bm90KCA6ZGlzYWJsZWQgKSB7XHJcblx0XHRcdFx0Y29sb3I6ICR7IENPTE9SUy5ncmF5WyA4MDAgXSB9O1xyXG5cdFx0XHR9XHJcblx0XHRgLFxyXG5cdFx0ZGVmYXVsdDogY3NzYFxyXG5cdFx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cdFx0XHRtaW4td2lkdGg6IDI0cHg7XHJcblx0XHRcdG1heC13aWR0aDogNDhweDtcclxuXHRcdFx0aGVpZ2h0OiAyNHB4O1xyXG5cdFx0XHRtYXJnaW4taW5saW5lLWVuZDogJHsgc3BhY2UoIDIgKSB9O1xyXG5cdFx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMSApIH07XHJcblxyXG5cdFx0XHRmb250LXNpemU6IDEzcHg7XHJcblx0XHRcdGxpbmUtaGVpZ2h0OiAxO1xyXG5cdFx0XHR0ZXh0LWFsaWduLWxhc3Q6IGNlbnRlcjtcclxuXHRcdFx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuXHRcdFx0b3ZlcmZsb3c6IGhpZGRlbjtcclxuXHRcdFx0dGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcblx0XHRcdGZpZWxkLXNpemluZzogY29udGVudDtcclxuXHJcblx0XHRcdCY6bm90KCA6ZGlzYWJsZWQgKSB7XHJcblx0XHRcdFx0Y29sb3I6ICR7IENPTE9SUy50aGVtZS5hY2NlbnQgfTtcclxuXHRcdFx0fVxyXG5cdFx0YCxcclxuXHR9O1xyXG5cclxuXHRyZXR1cm4gc2l6ZXNbIHNlbGVjdFNpemUgXTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBVbml0TGFiZWwgPSBzdHlsZWQuZGl2PCBTZWxlY3RQcm9wcyA+YFxyXG5cdCYmJiB7XHJcblx0XHRwb2ludGVyLWV2ZW50czogbm9uZTtcclxuXHJcblx0XHQkeyBiYXNlVW5pdExhYmVsU3R5bGVzIH07XHJcblxyXG5cdFx0Y29sb3I6ICR7IENPTE9SUy5ncmF5WyA5MDAgXSB9O1xyXG5cdH1cclxuYDtcclxuXHJcbmNvbnN0IHVuaXRTZWxlY3RTaXplcyA9ICggeyBzZWxlY3RTaXplID0gJ2RlZmF1bHQnIH06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdGNvbnN0IHNpemVzID0ge1xyXG5cdFx0c21hbGw6IGNzc2BcclxuXHRcdFx0aGVpZ2h0OiAxMDAlO1xyXG5cdFx0XHRib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuXHRcdFx0dHJhbnNpdGlvbjpcclxuXHRcdFx0XHRib3gtc2hhZG93IDAuMXMgbGluZWFyLFxyXG5cdFx0XHRcdGJvcmRlciAwLjFzIGxpbmVhcjtcclxuXHJcblx0XHRcdCR7IHJ0bCggeyBib3JkZXJUb3BMZWZ0UmFkaXVzOiAwLCBib3JkZXJCb3R0b21MZWZ0UmFkaXVzOiAwIH0gKSgpIH1cclxuXHJcblx0XHRcdCY6bm90KDpkaXNhYmxlZCk6aG92ZXIge1xyXG5cdFx0XHRcdGJhY2tncm91bmQtY29sb3I6ICR7IENPTE9SUy5ncmF5WyAxMDAgXSB9O1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQmOmZvY3VzIHtcclxuXHRcdFx0XHRib3JkZXI6IDFweCBzb2xpZCAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcclxuXHRcdFx0XHRib3gtc2hhZG93OiBpbnNldCAwIDAgMFxyXG5cdFx0XHRcdFx0JHsgQ09ORklHLmJvcmRlcldpZHRoICsgJyAnICsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XHJcblx0XHRcdFx0b3V0bGluZS1vZmZzZXQ6IDA7XHJcblx0XHRcdFx0b3V0bGluZTogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG5cdFx0XHRcdHotaW5kZXg6IDE7XHJcblx0XHRcdH1cclxuXHRcdGAsXHJcblx0XHRkZWZhdWx0OiBjc3NgXHJcblx0XHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRcdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdFx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuXHRcdFx0Jjp3aGVyZSggOm5vdCggOmRpc2FibGVkICkgKTpob3ZlciB7XHJcblx0XHRcdFx0Ym94LXNoYWRvdzogMCAwIDBcclxuXHRcdFx0XHRcdCR7IENPTkZJRy5ib3JkZXJXaWR0aCArICcgJyArIENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHRcdG91dGxpbmU6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkIHRyYW5zcGFyZW50OyAvLyBGb3IgSGlnaCBDb250cmFzdCBNb2RlXHJcblx0XHRcdH1cclxuXHJcblx0XHRcdCY6Zm9jdXMge1xyXG5cdFx0XHRcdGJveC1zaGFkb3c6IDAgMCAwXHJcblx0XHRcdFx0XHQkeyBDT05GSUcuYm9yZGVyV2lkdGhGb2N1cyArICcgJyArIENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHRcdG91dGxpbmU6ICR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzIH0gc29saWQgdHJhbnNwYXJlbnQ7IC8vIEZvciBIaWdoIENvbnRyYXN0IE1vZGVcclxuXHRcdFx0fVxyXG5cdFx0YCxcclxuXHR9O1xyXG5cclxuXHRyZXR1cm4gc2l6ZXNbIHNlbGVjdFNpemUgXTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBVbml0U2VsZWN0ID0gc3R5bGVkLnNlbGVjdDwgU2VsZWN0UHJvcHMgPmBcclxuXHQvLyBUaGUgJiYmIGNvdW50ZXJhY3RzIDxzZWxlY3Q+IHN0eWxlcyBpbiBXUCBmb3Jtcy5jc3NcclxuXHQmJiYge1xyXG5cdFx0YXBwZWFyYW5jZTogbm9uZTtcclxuXHRcdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG5cdFx0Ym9yZGVyLXJhZGl1czogJHsgQ09ORklHLnJhZGl1c1hTbWFsbCB9O1xyXG5cdFx0Ym9yZGVyOiBub25lO1xyXG5cdFx0ZGlzcGxheTogYmxvY2s7XHJcblx0XHRvdXRsaW5lOiBub25lO1xyXG5cdFx0LyogUmVtb3ZpbmcgbWFyZ2luIGVuc3VyZXMgZm9jdXMgc3R5bGVzIG5lYXRseSBvdmVybGF5IHRoZSB3cmFwcGVyLiAqL1xyXG5cdFx0bWFyZ2luOiAwO1xyXG5cdFx0bWluLWhlaWdodDogYXV0bztcclxuXHRcdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG5cclxuXHRcdCY6bm90KCA6ZGlzYWJsZWQgKSB7XHJcblx0XHRcdGN1cnNvcjogcG9pbnRlcjtcclxuXHRcdH1cclxuXHJcblx0XHQkeyBiYXNlVW5pdExhYmVsU3R5bGVzIH07XHJcblx0XHQkeyB1bml0U2VsZWN0U2l6ZXMgfTtcclxuXHR9XHJcbmA7XHJcbiJdfQ== */"));
const baseUnitLabelStyles = ({
  selectSize
}) => {
  const sizes = {
    small: /*#__PURE__*/css("box-sizing:border-box;padding:2px 1px;width:20px;font-size:8px;line-height:1;letter-spacing:-0.5px;text-transform:uppercase;text-align-last:center;&:not( :disabled ){color:", COLORS.gray[800], ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:small;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNDWSIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcclxuICovXHJcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIENPTkZJRywgcnRsIH0gZnJvbSAnLi4vLi4vdXRpbHMnO1xyXG5pbXBvcnQgTnVtYmVyQ29udHJvbCBmcm9tICcuLi8uLi9udW1iZXItY29udHJvbCc7XHJcbmltcG9ydCB7IEJhY2tkcm9wVUkgfSBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XHJcbmltcG9ydCB0eXBlIHsgU2VsZWN0U2l6ZSB9IGZyb20gJy4uL3R5cGVzJztcclxuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi8uLi91dGlscy9zcGFjZSc7XHJcblxyXG4vLyBVc2luZyBgc2VsZWN0U2l6ZWAgaW5zdGVhZCBvZiBgc2l6ZWAgdG8gYXZvaWQgYSB0eXBlIGNvbmZsaWN0IHdpdGggdGhlXHJcbi8vIGBzaXplYCBIVE1MIGF0dHJpYnV0ZSBvZiB0aGUgYHNlbGVjdGAgZWxlbWVudC5cclxudHlwZSBTZWxlY3RQcm9wcyA9IHtcclxuXHRzZWxlY3RTaXplOiBTZWxlY3RTaXplO1xyXG59O1xyXG5cclxuLy8gVE9ETzogUmVzb2x2ZSBuZWVkIHRvIHVzZSAmJiYgdG8gaW5jcmVhc2Ugc3BlY2lmaWNpdHlcclxuLy8gaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy9ndXRlbmJlcmcvaXNzdWVzLzE4NDgzXHJcblxyXG5leHBvcnQgY29uc3QgVmFsdWVJbnB1dCA9IHN0eWxlZCggTnVtYmVyQ29udHJvbCApYFxyXG5cdCYmJiB7XHJcblx0XHRpbnB1dCB7XHJcblx0XHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0XHR3aWR0aDogMTAwJTtcclxuXHRcdH1cclxuXHJcblx0XHQkeyBCYWNrZHJvcFVJIH0ge1xyXG5cdFx0XHR0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuMXMgbGluZWFyO1xyXG5cdFx0fVxyXG5cdH1cclxuYDtcclxuXHJcbmNvbnN0IGJhc2VVbml0TGFiZWxTdHlsZXMgPSAoIHsgc2VsZWN0U2l6ZSB9OiBTZWxlY3RQcm9wcyApID0+IHtcclxuXHRjb25zdCBzaXplcyA9IHtcclxuXHRcdHNtYWxsOiBjc3NgXHJcblx0XHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcblx0XHRcdHBhZGRpbmc6IDJweCAxcHg7XHJcblx0XHRcdHdpZHRoOiAyMHB4O1xyXG5cdFx0XHRmb250LXNpemU6IDhweDtcclxuXHRcdFx0bGluZS1oZWlnaHQ6IDE7XHJcblx0XHRcdGxldHRlci1zcGFjaW5nOiAtMC41cHg7XHJcblx0XHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblx0XHRcdHRleHQtYWxpZ24tbGFzdDogY2VudGVyO1xyXG5cclxuXHRcdFx0Jjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0XHRjb2xvcjogJHsgQ09MT1JTLmdyYXlbIDgwMCBdIH07XHJcblx0XHRcdH1cclxuXHRcdGAsXHJcblx0XHRkZWZhdWx0OiBjc3NgXHJcblx0XHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcblx0XHRcdG1pbi13aWR0aDogMjRweDtcclxuXHRcdFx0bWF4LXdpZHRoOiA0OHB4O1xyXG5cdFx0XHRoZWlnaHQ6IDI0cHg7XHJcblx0XHRcdG1hcmdpbi1pbmxpbmUtZW5kOiAkeyBzcGFjZSggMiApIH07XHJcblx0XHRcdHBhZGRpbmc6ICR7IHNwYWNlKCAxICkgfTtcclxuXHJcblx0XHRcdGZvbnQtc2l6ZTogMTNweDtcclxuXHRcdFx0bGluZS1oZWlnaHQ6IDE7XHJcblx0XHRcdHRleHQtYWxpZ24tbGFzdDogY2VudGVyO1xyXG5cdFx0XHR3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG5cdFx0XHRvdmVyZmxvdzogaGlkZGVuO1xyXG5cdFx0XHR0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuXHRcdFx0ZmllbGQtc2l6aW5nOiBjb250ZW50O1xyXG5cclxuXHRcdFx0Jjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0XHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmFjY2VudCB9O1xyXG5cdFx0XHR9XHJcblx0XHRgLFxyXG5cdH07XHJcblxyXG5cdHJldHVybiBzaXplc1sgc2VsZWN0U2l6ZSBdO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IFVuaXRMYWJlbCA9IHN0eWxlZC5kaXY8IFNlbGVjdFByb3BzID5gXHJcblx0JiYmIHtcclxuXHRcdHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuXHRcdCR7IGJhc2VVbml0TGFiZWxTdHlsZXMgfTtcclxuXHJcblx0XHRjb2xvcjogJHsgQ09MT1JTLmdyYXlbIDkwMCBdIH07XHJcblx0fVxyXG5gO1xyXG5cclxuY29uc3QgdW5pdFNlbGVjdFNpemVzID0gKCB7IHNlbGVjdFNpemUgPSAnZGVmYXVsdCcgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0Y29uc3Qgc2l6ZXMgPSB7XHJcblx0XHRzbWFsbDogY3NzYFxyXG5cdFx0XHRoZWlnaHQ6IDEwMCU7XHJcblx0XHRcdGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG5cdFx0XHR0cmFuc2l0aW9uOlxyXG5cdFx0XHRcdGJveC1zaGFkb3cgMC4xcyBsaW5lYXIsXHJcblx0XHRcdFx0Ym9yZGVyIDAuMXMgbGluZWFyO1xyXG5cclxuXHRcdFx0JHsgcnRsKCB7IGJvcmRlclRvcExlZnRSYWRpdXM6IDAsIGJvcmRlckJvdHRvbUxlZnRSYWRpdXM6IDAgfSApKCkgfVxyXG5cclxuXHRcdFx0Jjpub3QoOmRpc2FibGVkKTpob3ZlciB7XHJcblx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJHsgQ09MT1JTLmdyYXlbIDEwMCBdIH07XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdCY6Zm9jdXMge1xyXG5cdFx0XHRcdGJvcmRlcjogMXB4IHNvbGlkICR7IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHRcdGJveC1zaGFkb3c6IGluc2V0IDAgMCAwXHJcblx0XHRcdFx0XHQkeyBDT05GSUcuYm9yZGVyV2lkdGggKyAnICcgKyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcclxuXHRcdFx0XHRvdXRsaW5lLW9mZnNldDogMDtcclxuXHRcdFx0XHRvdXRsaW5lOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHRcdFx0ei1pbmRleDogMTtcclxuXHRcdFx0fVxyXG5cdFx0YCxcclxuXHRcdGRlZmF1bHQ6IGNzc2BcclxuXHRcdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0XHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG5cdFx0XHQmOndoZXJlKCA6bm90KCA6ZGlzYWJsZWQgKSApOmhvdmVyIHtcclxuXHRcdFx0XHRib3gtc2hhZG93OiAwIDAgMFxyXG5cdFx0XHRcdFx0JHsgQ09ORklHLmJvcmRlcldpZHRoICsgJyAnICsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XHJcblx0XHRcdFx0b3V0bGluZTogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgdHJhbnNwYXJlbnQ7IC8vIEZvciBIaWdoIENvbnRyYXN0IE1vZGVcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Jjpmb2N1cyB7XHJcblx0XHRcdFx0Ym94LXNoYWRvdzogMCAwIDBcclxuXHRcdFx0XHRcdCR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzICsgJyAnICsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XHJcblx0XHRcdFx0b3V0bGluZTogJHsgQ09ORklHLmJvcmRlcldpZHRoRm9jdXMgfSBzb2xpZCB0cmFuc3BhcmVudDsgLy8gRm9yIEhpZ2ggQ29udHJhc3QgTW9kZVxyXG5cdFx0XHR9XHJcblx0XHRgLFxyXG5cdH07XHJcblxyXG5cdHJldHVybiBzaXplc1sgc2VsZWN0U2l6ZSBdO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IFVuaXRTZWxlY3QgPSBzdHlsZWQuc2VsZWN0PCBTZWxlY3RQcm9wcyA+YFxyXG5cdC8vIFRoZSAmJiYgY291bnRlcmFjdHMgPHNlbGVjdD4gc3R5bGVzIGluIFdQIGZvcm1zLmNzc1xyXG5cdCYmJiB7XHJcblx0XHRhcHBlYXJhbmNlOiBub25lO1xyXG5cdFx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcblx0XHRib3JkZXItcmFkaXVzOiAkeyBDT05GSUcucmFkaXVzWFNtYWxsIH07XHJcblx0XHRib3JkZXI6IG5vbmU7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdG91dGxpbmU6IG5vbmU7XHJcblx0XHQvKiBSZW1vdmluZyBtYXJnaW4gZW5zdXJlcyBmb2N1cyBzdHlsZXMgbmVhdGx5IG92ZXJsYXkgdGhlIHdyYXBwZXIuICovXHJcblx0XHRtYXJnaW46IDA7XHJcblx0XHRtaW4taGVpZ2h0OiBhdXRvO1xyXG5cdFx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcblxyXG5cdFx0Jjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cdFx0fVxyXG5cclxuXHRcdCR7IGJhc2VVbml0TGFiZWxTdHlsZXMgfTtcclxuXHRcdCR7IHVuaXRTZWxlY3RTaXplcyB9O1xyXG5cdH1cclxuYDtcclxuIl19 */"),
    default: /*#__PURE__*/css("box-sizing:border-box;min-width:24px;max-width:48px;height:24px;margin-inline-end:", space(2), ";padding:", space(1), ";font-size:13px;line-height:1;text-align-last:center;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;field-sizing:content;&:not( :disabled ){color:", COLORS.theme.accent, ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:default;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9EYyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcclxuICovXHJcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIENPTkZJRywgcnRsIH0gZnJvbSAnLi4vLi4vdXRpbHMnO1xyXG5pbXBvcnQgTnVtYmVyQ29udHJvbCBmcm9tICcuLi8uLi9udW1iZXItY29udHJvbCc7XHJcbmltcG9ydCB7IEJhY2tkcm9wVUkgfSBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XHJcbmltcG9ydCB0eXBlIHsgU2VsZWN0U2l6ZSB9IGZyb20gJy4uL3R5cGVzJztcclxuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi8uLi91dGlscy9zcGFjZSc7XHJcblxyXG4vLyBVc2luZyBgc2VsZWN0U2l6ZWAgaW5zdGVhZCBvZiBgc2l6ZWAgdG8gYXZvaWQgYSB0eXBlIGNvbmZsaWN0IHdpdGggdGhlXHJcbi8vIGBzaXplYCBIVE1MIGF0dHJpYnV0ZSBvZiB0aGUgYHNlbGVjdGAgZWxlbWVudC5cclxudHlwZSBTZWxlY3RQcm9wcyA9IHtcclxuXHRzZWxlY3RTaXplOiBTZWxlY3RTaXplO1xyXG59O1xyXG5cclxuLy8gVE9ETzogUmVzb2x2ZSBuZWVkIHRvIHVzZSAmJiYgdG8gaW5jcmVhc2Ugc3BlY2lmaWNpdHlcclxuLy8gaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy9ndXRlbmJlcmcvaXNzdWVzLzE4NDgzXHJcblxyXG5leHBvcnQgY29uc3QgVmFsdWVJbnB1dCA9IHN0eWxlZCggTnVtYmVyQ29udHJvbCApYFxyXG5cdCYmJiB7XHJcblx0XHRpbnB1dCB7XHJcblx0XHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0XHR3aWR0aDogMTAwJTtcclxuXHRcdH1cclxuXHJcblx0XHQkeyBCYWNrZHJvcFVJIH0ge1xyXG5cdFx0XHR0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuMXMgbGluZWFyO1xyXG5cdFx0fVxyXG5cdH1cclxuYDtcclxuXHJcbmNvbnN0IGJhc2VVbml0TGFiZWxTdHlsZXMgPSAoIHsgc2VsZWN0U2l6ZSB9OiBTZWxlY3RQcm9wcyApID0+IHtcclxuXHRjb25zdCBzaXplcyA9IHtcclxuXHRcdHNtYWxsOiBjc3NgXHJcblx0XHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcblx0XHRcdHBhZGRpbmc6IDJweCAxcHg7XHJcblx0XHRcdHdpZHRoOiAyMHB4O1xyXG5cdFx0XHRmb250LXNpemU6IDhweDtcclxuXHRcdFx0bGluZS1oZWlnaHQ6IDE7XHJcblx0XHRcdGxldHRlci1zcGFjaW5nOiAtMC41cHg7XHJcblx0XHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblx0XHRcdHRleHQtYWxpZ24tbGFzdDogY2VudGVyO1xyXG5cclxuXHRcdFx0Jjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0XHRjb2xvcjogJHsgQ09MT1JTLmdyYXlbIDgwMCBdIH07XHJcblx0XHRcdH1cclxuXHRcdGAsXHJcblx0XHRkZWZhdWx0OiBjc3NgXHJcblx0XHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcblx0XHRcdG1pbi13aWR0aDogMjRweDtcclxuXHRcdFx0bWF4LXdpZHRoOiA0OHB4O1xyXG5cdFx0XHRoZWlnaHQ6IDI0cHg7XHJcblx0XHRcdG1hcmdpbi1pbmxpbmUtZW5kOiAkeyBzcGFjZSggMiApIH07XHJcblx0XHRcdHBhZGRpbmc6ICR7IHNwYWNlKCAxICkgfTtcclxuXHJcblx0XHRcdGZvbnQtc2l6ZTogMTNweDtcclxuXHRcdFx0bGluZS1oZWlnaHQ6IDE7XHJcblx0XHRcdHRleHQtYWxpZ24tbGFzdDogY2VudGVyO1xyXG5cdFx0XHR3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG5cdFx0XHRvdmVyZmxvdzogaGlkZGVuO1xyXG5cdFx0XHR0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuXHRcdFx0ZmllbGQtc2l6aW5nOiBjb250ZW50O1xyXG5cclxuXHRcdFx0Jjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0XHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmFjY2VudCB9O1xyXG5cdFx0XHR9XHJcblx0XHRgLFxyXG5cdH07XHJcblxyXG5cdHJldHVybiBzaXplc1sgc2VsZWN0U2l6ZSBdO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IFVuaXRMYWJlbCA9IHN0eWxlZC5kaXY8IFNlbGVjdFByb3BzID5gXHJcblx0JiYmIHtcclxuXHRcdHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuXHRcdCR7IGJhc2VVbml0TGFiZWxTdHlsZXMgfTtcclxuXHJcblx0XHRjb2xvcjogJHsgQ09MT1JTLmdyYXlbIDkwMCBdIH07XHJcblx0fVxyXG5gO1xyXG5cclxuY29uc3QgdW5pdFNlbGVjdFNpemVzID0gKCB7IHNlbGVjdFNpemUgPSAnZGVmYXVsdCcgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0Y29uc3Qgc2l6ZXMgPSB7XHJcblx0XHRzbWFsbDogY3NzYFxyXG5cdFx0XHRoZWlnaHQ6IDEwMCU7XHJcblx0XHRcdGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG5cdFx0XHR0cmFuc2l0aW9uOlxyXG5cdFx0XHRcdGJveC1zaGFkb3cgMC4xcyBsaW5lYXIsXHJcblx0XHRcdFx0Ym9yZGVyIDAuMXMgbGluZWFyO1xyXG5cclxuXHRcdFx0JHsgcnRsKCB7IGJvcmRlclRvcExlZnRSYWRpdXM6IDAsIGJvcmRlckJvdHRvbUxlZnRSYWRpdXM6IDAgfSApKCkgfVxyXG5cclxuXHRcdFx0Jjpub3QoOmRpc2FibGVkKTpob3ZlciB7XHJcblx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJHsgQ09MT1JTLmdyYXlbIDEwMCBdIH07XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdCY6Zm9jdXMge1xyXG5cdFx0XHRcdGJvcmRlcjogMXB4IHNvbGlkICR7IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHRcdGJveC1zaGFkb3c6IGluc2V0IDAgMCAwXHJcblx0XHRcdFx0XHQkeyBDT05GSUcuYm9yZGVyV2lkdGggKyAnICcgKyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcclxuXHRcdFx0XHRvdXRsaW5lLW9mZnNldDogMDtcclxuXHRcdFx0XHRvdXRsaW5lOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHRcdFx0ei1pbmRleDogMTtcclxuXHRcdFx0fVxyXG5cdFx0YCxcclxuXHRcdGRlZmF1bHQ6IGNzc2BcclxuXHRcdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0XHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG5cdFx0XHQmOndoZXJlKCA6bm90KCA6ZGlzYWJsZWQgKSApOmhvdmVyIHtcclxuXHRcdFx0XHRib3gtc2hhZG93OiAwIDAgMFxyXG5cdFx0XHRcdFx0JHsgQ09ORklHLmJvcmRlcldpZHRoICsgJyAnICsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XHJcblx0XHRcdFx0b3V0bGluZTogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgdHJhbnNwYXJlbnQ7IC8vIEZvciBIaWdoIENvbnRyYXN0IE1vZGVcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Jjpmb2N1cyB7XHJcblx0XHRcdFx0Ym94LXNoYWRvdzogMCAwIDBcclxuXHRcdFx0XHRcdCR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzICsgJyAnICsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XHJcblx0XHRcdFx0b3V0bGluZTogJHsgQ09ORklHLmJvcmRlcldpZHRoRm9jdXMgfSBzb2xpZCB0cmFuc3BhcmVudDsgLy8gRm9yIEhpZ2ggQ29udHJhc3QgTW9kZVxyXG5cdFx0XHR9XHJcblx0XHRgLFxyXG5cdH07XHJcblxyXG5cdHJldHVybiBzaXplc1sgc2VsZWN0U2l6ZSBdO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IFVuaXRTZWxlY3QgPSBzdHlsZWQuc2VsZWN0PCBTZWxlY3RQcm9wcyA+YFxyXG5cdC8vIFRoZSAmJiYgY291bnRlcmFjdHMgPHNlbGVjdD4gc3R5bGVzIGluIFdQIGZvcm1zLmNzc1xyXG5cdCYmJiB7XHJcblx0XHRhcHBlYXJhbmNlOiBub25lO1xyXG5cdFx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcblx0XHRib3JkZXItcmFkaXVzOiAkeyBDT05GSUcucmFkaXVzWFNtYWxsIH07XHJcblx0XHRib3JkZXI6IG5vbmU7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdG91dGxpbmU6IG5vbmU7XHJcblx0XHQvKiBSZW1vdmluZyBtYXJnaW4gZW5zdXJlcyBmb2N1cyBzdHlsZXMgbmVhdGx5IG92ZXJsYXkgdGhlIHdyYXBwZXIuICovXHJcblx0XHRtYXJnaW46IDA7XHJcblx0XHRtaW4taGVpZ2h0OiBhdXRvO1xyXG5cdFx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcblxyXG5cdFx0Jjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cdFx0fVxyXG5cclxuXHRcdCR7IGJhc2VVbml0TGFiZWxTdHlsZXMgfTtcclxuXHRcdCR7IHVuaXRTZWxlY3RTaXplcyB9O1xyXG5cdH1cclxuYDtcclxuIl19 */")
  };
  return sizes[selectSize];
};
export const UnitLabel = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e1bagdl31"
} : {
  target: "e1bagdl31",
  label: "UnitLabel"
})("&&&{pointer-events:none;", baseUnitLabelStyles, ";color:", COLORS.gray[900], ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZFa0QiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcclxuLyoqXHJcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xyXG4gKi9cclxuaW1wb3J0IHsgQ09MT1JTLCBDT05GSUcsIHJ0bCB9IGZyb20gJy4uLy4uL3V0aWxzJztcclxuaW1wb3J0IE51bWJlckNvbnRyb2wgZnJvbSAnLi4vLi4vbnVtYmVyLWNvbnRyb2wnO1xyXG5pbXBvcnQgeyBCYWNrZHJvcFVJIH0gZnJvbSAnLi4vLi4vaW5wdXQtY29udHJvbC9zdHlsZXMvaW5wdXQtY29udHJvbC1zdHlsZXMnO1xyXG5pbXBvcnQgdHlwZSB7IFNlbGVjdFNpemUgfSBmcm9tICcuLi90eXBlcyc7XHJcbmltcG9ydCB7IHNwYWNlIH0gZnJvbSAnLi4vLi4vdXRpbHMvc3BhY2UnO1xyXG5cclxuLy8gVXNpbmcgYHNlbGVjdFNpemVgIGluc3RlYWQgb2YgYHNpemVgIHRvIGF2b2lkIGEgdHlwZSBjb25mbGljdCB3aXRoIHRoZVxyXG4vLyBgc2l6ZWAgSFRNTCBhdHRyaWJ1dGUgb2YgdGhlIGBzZWxlY3RgIGVsZW1lbnQuXHJcbnR5cGUgU2VsZWN0UHJvcHMgPSB7XHJcblx0c2VsZWN0U2l6ZTogU2VsZWN0U2l6ZTtcclxufTtcclxuXHJcbi8vIFRPRE86IFJlc29sdmUgbmVlZCB0byB1c2UgJiYmIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5XHJcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9Xb3JkUHJlc3MvZ3V0ZW5iZXJnL2lzc3Vlcy8xODQ4M1xyXG5cclxuZXhwb3J0IGNvbnN0IFZhbHVlSW5wdXQgPSBzdHlsZWQoIE51bWJlckNvbnRyb2wgKWBcclxuXHQmJiYge1xyXG5cdFx0aW5wdXQge1xyXG5cdFx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdFx0d2lkdGg6IDEwMCU7XHJcblx0XHR9XHJcblxyXG5cdFx0JHsgQmFja2Ryb3BVSSB9IHtcclxuXHRcdFx0dHJhbnNpdGlvbjogYm94LXNoYWRvdyAwLjFzIGxpbmVhcjtcclxuXHRcdH1cclxuXHR9XHJcbmA7XHJcblxyXG5jb25zdCBiYXNlVW5pdExhYmVsU3R5bGVzID0gKCB7IHNlbGVjdFNpemUgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0Y29uc3Qgc2l6ZXMgPSB7XHJcblx0XHRzbWFsbDogY3NzYFxyXG5cdFx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cdFx0XHRwYWRkaW5nOiAycHggMXB4O1xyXG5cdFx0XHR3aWR0aDogMjBweDtcclxuXHRcdFx0Zm9udC1zaXplOiA4cHg7XHJcblx0XHRcdGxpbmUtaGVpZ2h0OiAxO1xyXG5cdFx0XHRsZXR0ZXItc3BhY2luZzogLTAuNXB4O1xyXG5cdFx0XHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cdFx0XHR0ZXh0LWFsaWduLWxhc3Q6IGNlbnRlcjtcclxuXHJcblx0XHRcdCY6bm90KCA6ZGlzYWJsZWQgKSB7XHJcblx0XHRcdFx0Y29sb3I6ICR7IENPTE9SUy5ncmF5WyA4MDAgXSB9O1xyXG5cdFx0XHR9XHJcblx0XHRgLFxyXG5cdFx0ZGVmYXVsdDogY3NzYFxyXG5cdFx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cdFx0XHRtaW4td2lkdGg6IDI0cHg7XHJcblx0XHRcdG1heC13aWR0aDogNDhweDtcclxuXHRcdFx0aGVpZ2h0OiAyNHB4O1xyXG5cdFx0XHRtYXJnaW4taW5saW5lLWVuZDogJHsgc3BhY2UoIDIgKSB9O1xyXG5cdFx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMSApIH07XHJcblxyXG5cdFx0XHRmb250LXNpemU6IDEzcHg7XHJcblx0XHRcdGxpbmUtaGVpZ2h0OiAxO1xyXG5cdFx0XHR0ZXh0LWFsaWduLWxhc3Q6IGNlbnRlcjtcclxuXHRcdFx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuXHRcdFx0b3ZlcmZsb3c6IGhpZGRlbjtcclxuXHRcdFx0dGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcblx0XHRcdGZpZWxkLXNpemluZzogY29udGVudDtcclxuXHJcblx0XHRcdCY6bm90KCA6ZGlzYWJsZWQgKSB7XHJcblx0XHRcdFx0Y29sb3I6ICR7IENPTE9SUy50aGVtZS5hY2NlbnQgfTtcclxuXHRcdFx0fVxyXG5cdFx0YCxcclxuXHR9O1xyXG5cclxuXHRyZXR1cm4gc2l6ZXNbIHNlbGVjdFNpemUgXTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBVbml0TGFiZWwgPSBzdHlsZWQuZGl2PCBTZWxlY3RQcm9wcyA+YFxyXG5cdCYmJiB7XHJcblx0XHRwb2ludGVyLWV2ZW50czogbm9uZTtcclxuXHJcblx0XHQkeyBiYXNlVW5pdExhYmVsU3R5bGVzIH07XHJcblxyXG5cdFx0Y29sb3I6ICR7IENPTE9SUy5ncmF5WyA5MDAgXSB9O1xyXG5cdH1cclxuYDtcclxuXHJcbmNvbnN0IHVuaXRTZWxlY3RTaXplcyA9ICggeyBzZWxlY3RTaXplID0gJ2RlZmF1bHQnIH06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdGNvbnN0IHNpemVzID0ge1xyXG5cdFx0c21hbGw6IGNzc2BcclxuXHRcdFx0aGVpZ2h0OiAxMDAlO1xyXG5cdFx0XHRib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuXHRcdFx0dHJhbnNpdGlvbjpcclxuXHRcdFx0XHRib3gtc2hhZG93IDAuMXMgbGluZWFyLFxyXG5cdFx0XHRcdGJvcmRlciAwLjFzIGxpbmVhcjtcclxuXHJcblx0XHRcdCR7IHJ0bCggeyBib3JkZXJUb3BMZWZ0UmFkaXVzOiAwLCBib3JkZXJCb3R0b21MZWZ0UmFkaXVzOiAwIH0gKSgpIH1cclxuXHJcblx0XHRcdCY6bm90KDpkaXNhYmxlZCk6aG92ZXIge1xyXG5cdFx0XHRcdGJhY2tncm91bmQtY29sb3I6ICR7IENPTE9SUy5ncmF5WyAxMDAgXSB9O1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQmOmZvY3VzIHtcclxuXHRcdFx0XHRib3JkZXI6IDFweCBzb2xpZCAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcclxuXHRcdFx0XHRib3gtc2hhZG93OiBpbnNldCAwIDAgMFxyXG5cdFx0XHRcdFx0JHsgQ09ORklHLmJvcmRlcldpZHRoICsgJyAnICsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XHJcblx0XHRcdFx0b3V0bGluZS1vZmZzZXQ6IDA7XHJcblx0XHRcdFx0b3V0bGluZTogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG5cdFx0XHRcdHotaW5kZXg6IDE7XHJcblx0XHRcdH1cclxuXHRcdGAsXHJcblx0XHRkZWZhdWx0OiBjc3NgXHJcblx0XHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRcdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdFx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuXHRcdFx0Jjp3aGVyZSggOm5vdCggOmRpc2FibGVkICkgKTpob3ZlciB7XHJcblx0XHRcdFx0Ym94LXNoYWRvdzogMCAwIDBcclxuXHRcdFx0XHRcdCR7IENPTkZJRy5ib3JkZXJXaWR0aCArICcgJyArIENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHRcdG91dGxpbmU6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkIHRyYW5zcGFyZW50OyAvLyBGb3IgSGlnaCBDb250cmFzdCBNb2RlXHJcblx0XHRcdH1cclxuXHJcblx0XHRcdCY6Zm9jdXMge1xyXG5cdFx0XHRcdGJveC1zaGFkb3c6IDAgMCAwXHJcblx0XHRcdFx0XHQkeyBDT05GSUcuYm9yZGVyV2lkdGhGb2N1cyArICcgJyArIENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHRcdG91dGxpbmU6ICR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzIH0gc29saWQgdHJhbnNwYXJlbnQ7IC8vIEZvciBIaWdoIENvbnRyYXN0IE1vZGVcclxuXHRcdFx0fVxyXG5cdFx0YCxcclxuXHR9O1xyXG5cclxuXHRyZXR1cm4gc2l6ZXNbIHNlbGVjdFNpemUgXTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBVbml0U2VsZWN0ID0gc3R5bGVkLnNlbGVjdDwgU2VsZWN0UHJvcHMgPmBcclxuXHQvLyBUaGUgJiYmIGNvdW50ZXJhY3RzIDxzZWxlY3Q+IHN0eWxlcyBpbiBXUCBmb3Jtcy5jc3NcclxuXHQmJiYge1xyXG5cdFx0YXBwZWFyYW5jZTogbm9uZTtcclxuXHRcdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG5cdFx0Ym9yZGVyLXJhZGl1czogJHsgQ09ORklHLnJhZGl1c1hTbWFsbCB9O1xyXG5cdFx0Ym9yZGVyOiBub25lO1xyXG5cdFx0ZGlzcGxheTogYmxvY2s7XHJcblx0XHRvdXRsaW5lOiBub25lO1xyXG5cdFx0LyogUmVtb3ZpbmcgbWFyZ2luIGVuc3VyZXMgZm9jdXMgc3R5bGVzIG5lYXRseSBvdmVybGF5IHRoZSB3cmFwcGVyLiAqL1xyXG5cdFx0bWFyZ2luOiAwO1xyXG5cdFx0bWluLWhlaWdodDogYXV0bztcclxuXHRcdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG5cclxuXHRcdCY6bm90KCA6ZGlzYWJsZWQgKSB7XHJcblx0XHRcdGN1cnNvcjogcG9pbnRlcjtcclxuXHRcdH1cclxuXHJcblx0XHQkeyBiYXNlVW5pdExhYmVsU3R5bGVzIH07XHJcblx0XHQkeyB1bml0U2VsZWN0U2l6ZXMgfTtcclxuXHR9XHJcbmA7XHJcbiJdfQ== */"));
const unitSelectSizes = ({
  selectSize = 'default'
}) => {
  const sizes = {
    small: /*#__PURE__*/css("height:100%;border:1px solid transparent;transition:box-shadow 0.1s linear,border 0.1s linear;", rtl({
      borderTopLeftRadius: 0,
      borderBottomLeftRadius: 0
    })(), " &:not(:disabled):hover{background-color:", COLORS.gray[100], ";}&:focus{border:1px solid ", COLORS.ui.borderFocus, ";box-shadow:inset 0 0 0 ", CONFIG.borderWidth + ' ' + COLORS.ui.borderFocus, ";outline-offset:0;outline:2px solid transparent;z-index:1;}" + (process.env.NODE_ENV === "production" ? "" : ";label:small;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlGWSIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcclxuICovXHJcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIENPTkZJRywgcnRsIH0gZnJvbSAnLi4vLi4vdXRpbHMnO1xyXG5pbXBvcnQgTnVtYmVyQ29udHJvbCBmcm9tICcuLi8uLi9udW1iZXItY29udHJvbCc7XHJcbmltcG9ydCB7IEJhY2tkcm9wVUkgfSBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XHJcbmltcG9ydCB0eXBlIHsgU2VsZWN0U2l6ZSB9IGZyb20gJy4uL3R5cGVzJztcclxuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi8uLi91dGlscy9zcGFjZSc7XHJcblxyXG4vLyBVc2luZyBgc2VsZWN0U2l6ZWAgaW5zdGVhZCBvZiBgc2l6ZWAgdG8gYXZvaWQgYSB0eXBlIGNvbmZsaWN0IHdpdGggdGhlXHJcbi8vIGBzaXplYCBIVE1MIGF0dHJpYnV0ZSBvZiB0aGUgYHNlbGVjdGAgZWxlbWVudC5cclxudHlwZSBTZWxlY3RQcm9wcyA9IHtcclxuXHRzZWxlY3RTaXplOiBTZWxlY3RTaXplO1xyXG59O1xyXG5cclxuLy8gVE9ETzogUmVzb2x2ZSBuZWVkIHRvIHVzZSAmJiYgdG8gaW5jcmVhc2Ugc3BlY2lmaWNpdHlcclxuLy8gaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy9ndXRlbmJlcmcvaXNzdWVzLzE4NDgzXHJcblxyXG5leHBvcnQgY29uc3QgVmFsdWVJbnB1dCA9IHN0eWxlZCggTnVtYmVyQ29udHJvbCApYFxyXG5cdCYmJiB7XHJcblx0XHRpbnB1dCB7XHJcblx0XHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0XHR3aWR0aDogMTAwJTtcclxuXHRcdH1cclxuXHJcblx0XHQkeyBCYWNrZHJvcFVJIH0ge1xyXG5cdFx0XHR0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuMXMgbGluZWFyO1xyXG5cdFx0fVxyXG5cdH1cclxuYDtcclxuXHJcbmNvbnN0IGJhc2VVbml0TGFiZWxTdHlsZXMgPSAoIHsgc2VsZWN0U2l6ZSB9OiBTZWxlY3RQcm9wcyApID0+IHtcclxuXHRjb25zdCBzaXplcyA9IHtcclxuXHRcdHNtYWxsOiBjc3NgXHJcblx0XHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcblx0XHRcdHBhZGRpbmc6IDJweCAxcHg7XHJcblx0XHRcdHdpZHRoOiAyMHB4O1xyXG5cdFx0XHRmb250LXNpemU6IDhweDtcclxuXHRcdFx0bGluZS1oZWlnaHQ6IDE7XHJcblx0XHRcdGxldHRlci1zcGFjaW5nOiAtMC41cHg7XHJcblx0XHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblx0XHRcdHRleHQtYWxpZ24tbGFzdDogY2VudGVyO1xyXG5cclxuXHRcdFx0Jjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0XHRjb2xvcjogJHsgQ09MT1JTLmdyYXlbIDgwMCBdIH07XHJcblx0XHRcdH1cclxuXHRcdGAsXHJcblx0XHRkZWZhdWx0OiBjc3NgXHJcblx0XHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcblx0XHRcdG1pbi13aWR0aDogMjRweDtcclxuXHRcdFx0bWF4LXdpZHRoOiA0OHB4O1xyXG5cdFx0XHRoZWlnaHQ6IDI0cHg7XHJcblx0XHRcdG1hcmdpbi1pbmxpbmUtZW5kOiAkeyBzcGFjZSggMiApIH07XHJcblx0XHRcdHBhZGRpbmc6ICR7IHNwYWNlKCAxICkgfTtcclxuXHJcblx0XHRcdGZvbnQtc2l6ZTogMTNweDtcclxuXHRcdFx0bGluZS1oZWlnaHQ6IDE7XHJcblx0XHRcdHRleHQtYWxpZ24tbGFzdDogY2VudGVyO1xyXG5cdFx0XHR3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG5cdFx0XHRvdmVyZmxvdzogaGlkZGVuO1xyXG5cdFx0XHR0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuXHRcdFx0ZmllbGQtc2l6aW5nOiBjb250ZW50O1xyXG5cclxuXHRcdFx0Jjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0XHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmFjY2VudCB9O1xyXG5cdFx0XHR9XHJcblx0XHRgLFxyXG5cdH07XHJcblxyXG5cdHJldHVybiBzaXplc1sgc2VsZWN0U2l6ZSBdO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IFVuaXRMYWJlbCA9IHN0eWxlZC5kaXY8IFNlbGVjdFByb3BzID5gXHJcblx0JiYmIHtcclxuXHRcdHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuXHRcdCR7IGJhc2VVbml0TGFiZWxTdHlsZXMgfTtcclxuXHJcblx0XHRjb2xvcjogJHsgQ09MT1JTLmdyYXlbIDkwMCBdIH07XHJcblx0fVxyXG5gO1xyXG5cclxuY29uc3QgdW5pdFNlbGVjdFNpemVzID0gKCB7IHNlbGVjdFNpemUgPSAnZGVmYXVsdCcgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0Y29uc3Qgc2l6ZXMgPSB7XHJcblx0XHRzbWFsbDogY3NzYFxyXG5cdFx0XHRoZWlnaHQ6IDEwMCU7XHJcblx0XHRcdGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG5cdFx0XHR0cmFuc2l0aW9uOlxyXG5cdFx0XHRcdGJveC1zaGFkb3cgMC4xcyBsaW5lYXIsXHJcblx0XHRcdFx0Ym9yZGVyIDAuMXMgbGluZWFyO1xyXG5cclxuXHRcdFx0JHsgcnRsKCB7IGJvcmRlclRvcExlZnRSYWRpdXM6IDAsIGJvcmRlckJvdHRvbUxlZnRSYWRpdXM6IDAgfSApKCkgfVxyXG5cclxuXHRcdFx0Jjpub3QoOmRpc2FibGVkKTpob3ZlciB7XHJcblx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJHsgQ09MT1JTLmdyYXlbIDEwMCBdIH07XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdCY6Zm9jdXMge1xyXG5cdFx0XHRcdGJvcmRlcjogMXB4IHNvbGlkICR7IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHRcdGJveC1zaGFkb3c6IGluc2V0IDAgMCAwXHJcblx0XHRcdFx0XHQkeyBDT05GSUcuYm9yZGVyV2lkdGggKyAnICcgKyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcclxuXHRcdFx0XHRvdXRsaW5lLW9mZnNldDogMDtcclxuXHRcdFx0XHRvdXRsaW5lOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHRcdFx0ei1pbmRleDogMTtcclxuXHRcdFx0fVxyXG5cdFx0YCxcclxuXHRcdGRlZmF1bHQ6IGNzc2BcclxuXHRcdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0XHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG5cdFx0XHQmOndoZXJlKCA6bm90KCA6ZGlzYWJsZWQgKSApOmhvdmVyIHtcclxuXHRcdFx0XHRib3gtc2hhZG93OiAwIDAgMFxyXG5cdFx0XHRcdFx0JHsgQ09ORklHLmJvcmRlcldpZHRoICsgJyAnICsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XHJcblx0XHRcdFx0b3V0bGluZTogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgdHJhbnNwYXJlbnQ7IC8vIEZvciBIaWdoIENvbnRyYXN0IE1vZGVcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Jjpmb2N1cyB7XHJcblx0XHRcdFx0Ym94LXNoYWRvdzogMCAwIDBcclxuXHRcdFx0XHRcdCR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzICsgJyAnICsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XHJcblx0XHRcdFx0b3V0bGluZTogJHsgQ09ORklHLmJvcmRlcldpZHRoRm9jdXMgfSBzb2xpZCB0cmFuc3BhcmVudDsgLy8gRm9yIEhpZ2ggQ29udHJhc3QgTW9kZVxyXG5cdFx0XHR9XHJcblx0XHRgLFxyXG5cdH07XHJcblxyXG5cdHJldHVybiBzaXplc1sgc2VsZWN0U2l6ZSBdO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IFVuaXRTZWxlY3QgPSBzdHlsZWQuc2VsZWN0PCBTZWxlY3RQcm9wcyA+YFxyXG5cdC8vIFRoZSAmJiYgY291bnRlcmFjdHMgPHNlbGVjdD4gc3R5bGVzIGluIFdQIGZvcm1zLmNzc1xyXG5cdCYmJiB7XHJcblx0XHRhcHBlYXJhbmNlOiBub25lO1xyXG5cdFx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcblx0XHRib3JkZXItcmFkaXVzOiAkeyBDT05GSUcucmFkaXVzWFNtYWxsIH07XHJcblx0XHRib3JkZXI6IG5vbmU7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdG91dGxpbmU6IG5vbmU7XHJcblx0XHQvKiBSZW1vdmluZyBtYXJnaW4gZW5zdXJlcyBmb2N1cyBzdHlsZXMgbmVhdGx5IG92ZXJsYXkgdGhlIHdyYXBwZXIuICovXHJcblx0XHRtYXJnaW46IDA7XHJcblx0XHRtaW4taGVpZ2h0OiBhdXRvO1xyXG5cdFx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcblxyXG5cdFx0Jjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cdFx0fVxyXG5cclxuXHRcdCR7IGJhc2VVbml0TGFiZWxTdHlsZXMgfTtcclxuXHRcdCR7IHVuaXRTZWxlY3RTaXplcyB9O1xyXG5cdH1cclxuYDtcclxuIl19 */"),
    default: /*#__PURE__*/css("display:flex;justify-content:center;align-items:center;&:where( :not( :disabled ) ):hover{box-shadow:0 0 0 ", CONFIG.borderWidth + ' ' + COLORS.ui.borderFocus, ";outline:", CONFIG.borderWidth, " solid transparent;}&:focus{box-shadow:0 0 0 ", CONFIG.borderWidthFocus + ' ' + COLORS.ui.borderFocus, ";outline:", CONFIG.borderWidthFocus, " solid transparent;}" + (process.env.NODE_ENV === "production" ? "" : ";label:default;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQStHYyIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL3VuaXQtY29udHJvbC9zdHlsZXMvdW5pdC1jb250cm9sLXN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcclxuICovXHJcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xyXG4vKipcclxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBDT0xPUlMsIENPTkZJRywgcnRsIH0gZnJvbSAnLi4vLi4vdXRpbHMnO1xyXG5pbXBvcnQgTnVtYmVyQ29udHJvbCBmcm9tICcuLi8uLi9udW1iZXItY29udHJvbCc7XHJcbmltcG9ydCB7IEJhY2tkcm9wVUkgfSBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL3N0eWxlcy9pbnB1dC1jb250cm9sLXN0eWxlcyc7XHJcbmltcG9ydCB0eXBlIHsgU2VsZWN0U2l6ZSB9IGZyb20gJy4uL3R5cGVzJztcclxuaW1wb3J0IHsgc3BhY2UgfSBmcm9tICcuLi8uLi91dGlscy9zcGFjZSc7XHJcblxyXG4vLyBVc2luZyBgc2VsZWN0U2l6ZWAgaW5zdGVhZCBvZiBgc2l6ZWAgdG8gYXZvaWQgYSB0eXBlIGNvbmZsaWN0IHdpdGggdGhlXHJcbi8vIGBzaXplYCBIVE1MIGF0dHJpYnV0ZSBvZiB0aGUgYHNlbGVjdGAgZWxlbWVudC5cclxudHlwZSBTZWxlY3RQcm9wcyA9IHtcclxuXHRzZWxlY3RTaXplOiBTZWxlY3RTaXplO1xyXG59O1xyXG5cclxuLy8gVE9ETzogUmVzb2x2ZSBuZWVkIHRvIHVzZSAmJiYgdG8gaW5jcmVhc2Ugc3BlY2lmaWNpdHlcclxuLy8gaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy9ndXRlbmJlcmcvaXNzdWVzLzE4NDgzXHJcblxyXG5leHBvcnQgY29uc3QgVmFsdWVJbnB1dCA9IHN0eWxlZCggTnVtYmVyQ29udHJvbCApYFxyXG5cdCYmJiB7XHJcblx0XHRpbnB1dCB7XHJcblx0XHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0XHR3aWR0aDogMTAwJTtcclxuXHRcdH1cclxuXHJcblx0XHQkeyBCYWNrZHJvcFVJIH0ge1xyXG5cdFx0XHR0cmFuc2l0aW9uOiBib3gtc2hhZG93IDAuMXMgbGluZWFyO1xyXG5cdFx0fVxyXG5cdH1cclxuYDtcclxuXHJcbmNvbnN0IGJhc2VVbml0TGFiZWxTdHlsZXMgPSAoIHsgc2VsZWN0U2l6ZSB9OiBTZWxlY3RQcm9wcyApID0+IHtcclxuXHRjb25zdCBzaXplcyA9IHtcclxuXHRcdHNtYWxsOiBjc3NgXHJcblx0XHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcblx0XHRcdHBhZGRpbmc6IDJweCAxcHg7XHJcblx0XHRcdHdpZHRoOiAyMHB4O1xyXG5cdFx0XHRmb250LXNpemU6IDhweDtcclxuXHRcdFx0bGluZS1oZWlnaHQ6IDE7XHJcblx0XHRcdGxldHRlci1zcGFjaW5nOiAtMC41cHg7XHJcblx0XHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblx0XHRcdHRleHQtYWxpZ24tbGFzdDogY2VudGVyO1xyXG5cclxuXHRcdFx0Jjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0XHRjb2xvcjogJHsgQ09MT1JTLmdyYXlbIDgwMCBdIH07XHJcblx0XHRcdH1cclxuXHRcdGAsXHJcblx0XHRkZWZhdWx0OiBjc3NgXHJcblx0XHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcblx0XHRcdG1pbi13aWR0aDogMjRweDtcclxuXHRcdFx0bWF4LXdpZHRoOiA0OHB4O1xyXG5cdFx0XHRoZWlnaHQ6IDI0cHg7XHJcblx0XHRcdG1hcmdpbi1pbmxpbmUtZW5kOiAkeyBzcGFjZSggMiApIH07XHJcblx0XHRcdHBhZGRpbmc6ICR7IHNwYWNlKCAxICkgfTtcclxuXHJcblx0XHRcdGZvbnQtc2l6ZTogMTNweDtcclxuXHRcdFx0bGluZS1oZWlnaHQ6IDE7XHJcblx0XHRcdHRleHQtYWxpZ24tbGFzdDogY2VudGVyO1xyXG5cdFx0XHR3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG5cdFx0XHRvdmVyZmxvdzogaGlkZGVuO1xyXG5cdFx0XHR0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuXHRcdFx0ZmllbGQtc2l6aW5nOiBjb250ZW50O1xyXG5cclxuXHRcdFx0Jjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0XHRjb2xvcjogJHsgQ09MT1JTLnRoZW1lLmFjY2VudCB9O1xyXG5cdFx0XHR9XHJcblx0XHRgLFxyXG5cdH07XHJcblxyXG5cdHJldHVybiBzaXplc1sgc2VsZWN0U2l6ZSBdO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IFVuaXRMYWJlbCA9IHN0eWxlZC5kaXY8IFNlbGVjdFByb3BzID5gXHJcblx0JiYmIHtcclxuXHRcdHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuXHRcdCR7IGJhc2VVbml0TGFiZWxTdHlsZXMgfTtcclxuXHJcblx0XHRjb2xvcjogJHsgQ09MT1JTLmdyYXlbIDkwMCBdIH07XHJcblx0fVxyXG5gO1xyXG5cclxuY29uc3QgdW5pdFNlbGVjdFNpemVzID0gKCB7IHNlbGVjdFNpemUgPSAnZGVmYXVsdCcgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0Y29uc3Qgc2l6ZXMgPSB7XHJcblx0XHRzbWFsbDogY3NzYFxyXG5cdFx0XHRoZWlnaHQ6IDEwMCU7XHJcblx0XHRcdGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG5cdFx0XHR0cmFuc2l0aW9uOlxyXG5cdFx0XHRcdGJveC1zaGFkb3cgMC4xcyBsaW5lYXIsXHJcblx0XHRcdFx0Ym9yZGVyIDAuMXMgbGluZWFyO1xyXG5cclxuXHRcdFx0JHsgcnRsKCB7IGJvcmRlclRvcExlZnRSYWRpdXM6IDAsIGJvcmRlckJvdHRvbUxlZnRSYWRpdXM6IDAgfSApKCkgfVxyXG5cclxuXHRcdFx0Jjpub3QoOmRpc2FibGVkKTpob3ZlciB7XHJcblx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJHsgQ09MT1JTLmdyYXlbIDEwMCBdIH07XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdCY6Zm9jdXMge1xyXG5cdFx0XHRcdGJvcmRlcjogMXB4IHNvbGlkICR7IENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHRcdGJveC1zaGFkb3c6IGluc2V0IDAgMCAwXHJcblx0XHRcdFx0XHQkeyBDT05GSUcuYm9yZGVyV2lkdGggKyAnICcgKyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcclxuXHRcdFx0XHRvdXRsaW5lLW9mZnNldDogMDtcclxuXHRcdFx0XHRvdXRsaW5lOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcblx0XHRcdFx0ei1pbmRleDogMTtcclxuXHRcdFx0fVxyXG5cdFx0YCxcclxuXHRcdGRlZmF1bHQ6IGNzc2BcclxuXHRcdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0XHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG5cdFx0XHQmOndoZXJlKCA6bm90KCA6ZGlzYWJsZWQgKSApOmhvdmVyIHtcclxuXHRcdFx0XHRib3gtc2hhZG93OiAwIDAgMFxyXG5cdFx0XHRcdFx0JHsgQ09ORklHLmJvcmRlcldpZHRoICsgJyAnICsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XHJcblx0XHRcdFx0b3V0bGluZTogJHsgQ09ORklHLmJvcmRlcldpZHRoIH0gc29saWQgdHJhbnNwYXJlbnQ7IC8vIEZvciBIaWdoIENvbnRyYXN0IE1vZGVcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Jjpmb2N1cyB7XHJcblx0XHRcdFx0Ym94LXNoYWRvdzogMCAwIDBcclxuXHRcdFx0XHRcdCR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzICsgJyAnICsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XHJcblx0XHRcdFx0b3V0bGluZTogJHsgQ09ORklHLmJvcmRlcldpZHRoRm9jdXMgfSBzb2xpZCB0cmFuc3BhcmVudDsgLy8gRm9yIEhpZ2ggQ29udHJhc3QgTW9kZVxyXG5cdFx0XHR9XHJcblx0XHRgLFxyXG5cdH07XHJcblxyXG5cdHJldHVybiBzaXplc1sgc2VsZWN0U2l6ZSBdO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IFVuaXRTZWxlY3QgPSBzdHlsZWQuc2VsZWN0PCBTZWxlY3RQcm9wcyA+YFxyXG5cdC8vIFRoZSAmJiYgY291bnRlcmFjdHMgPHNlbGVjdD4gc3R5bGVzIGluIFdQIGZvcm1zLmNzc1xyXG5cdCYmJiB7XHJcblx0XHRhcHBlYXJhbmNlOiBub25lO1xyXG5cdFx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcblx0XHRib3JkZXItcmFkaXVzOiAkeyBDT05GSUcucmFkaXVzWFNtYWxsIH07XHJcblx0XHRib3JkZXI6IG5vbmU7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdG91dGxpbmU6IG5vbmU7XHJcblx0XHQvKiBSZW1vdmluZyBtYXJnaW4gZW5zdXJlcyBmb2N1cyBzdHlsZXMgbmVhdGx5IG92ZXJsYXkgdGhlIHdyYXBwZXIuICovXHJcblx0XHRtYXJnaW46IDA7XHJcblx0XHRtaW4taGVpZ2h0OiBhdXRvO1xyXG5cdFx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcblxyXG5cdFx0Jjpub3QoIDpkaXNhYmxlZCApIHtcclxuXHRcdFx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cdFx0fVxyXG5cclxuXHRcdCR7IGJhc2VVbml0TGFiZWxTdHlsZXMgfTtcclxuXHRcdCR7IHVuaXRTZWxlY3RTaXplcyB9O1xyXG5cdH1cclxuYDtcclxuIl19 */")
  };
  return sizes[selectSize];
};
export const UnitSelect = /*#__PURE__*/_styled("select", process.env.NODE_ENV === "production" ? {
  target: "e1bagdl30"
} : {
  target: "e1bagdl30",
  label: "UnitSelect"
})("&&&{appearance:none;background:transparent;border-radius:", CONFIG.radiusXSmall, ";border:none;display:block;outline:none;margin:0;min-height:auto;font-family:inherit;", baseUnitLabelStyles, ";", unitSelectSizes, ";&:not( :disabled ){cursor:pointer;}}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvdW5pdC1jb250cm9sL3N0eWxlcy91bml0LWNvbnRyb2wtc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFJc0QiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy91bml0LWNvbnRyb2wvc3R5bGVzL3VuaXQtY29udHJvbC1zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXHJcbiAqL1xyXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcclxuLyoqXHJcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xyXG4gKi9cclxuaW1wb3J0IHsgQ09MT1JTLCBDT05GSUcsIHJ0bCB9IGZyb20gJy4uLy4uL3V0aWxzJztcclxuaW1wb3J0IE51bWJlckNvbnRyb2wgZnJvbSAnLi4vLi4vbnVtYmVyLWNvbnRyb2wnO1xyXG5pbXBvcnQgeyBCYWNrZHJvcFVJIH0gZnJvbSAnLi4vLi4vaW5wdXQtY29udHJvbC9zdHlsZXMvaW5wdXQtY29udHJvbC1zdHlsZXMnO1xyXG5pbXBvcnQgdHlwZSB7IFNlbGVjdFNpemUgfSBmcm9tICcuLi90eXBlcyc7XHJcbmltcG9ydCB7IHNwYWNlIH0gZnJvbSAnLi4vLi4vdXRpbHMvc3BhY2UnO1xyXG5cclxuLy8gVXNpbmcgYHNlbGVjdFNpemVgIGluc3RlYWQgb2YgYHNpemVgIHRvIGF2b2lkIGEgdHlwZSBjb25mbGljdCB3aXRoIHRoZVxyXG4vLyBgc2l6ZWAgSFRNTCBhdHRyaWJ1dGUgb2YgdGhlIGBzZWxlY3RgIGVsZW1lbnQuXHJcbnR5cGUgU2VsZWN0UHJvcHMgPSB7XHJcblx0c2VsZWN0U2l6ZTogU2VsZWN0U2l6ZTtcclxufTtcclxuXHJcbi8vIFRPRE86IFJlc29sdmUgbmVlZCB0byB1c2UgJiYmIHRvIGluY3JlYXNlIHNwZWNpZmljaXR5XHJcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9Xb3JkUHJlc3MvZ3V0ZW5iZXJnL2lzc3Vlcy8xODQ4M1xyXG5cclxuZXhwb3J0IGNvbnN0IFZhbHVlSW5wdXQgPSBzdHlsZWQoIE51bWJlckNvbnRyb2wgKWBcclxuXHQmJiYge1xyXG5cdFx0aW5wdXQge1xyXG5cdFx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdFx0d2lkdGg6IDEwMCU7XHJcblx0XHR9XHJcblxyXG5cdFx0JHsgQmFja2Ryb3BVSSB9IHtcclxuXHRcdFx0dHJhbnNpdGlvbjogYm94LXNoYWRvdyAwLjFzIGxpbmVhcjtcclxuXHRcdH1cclxuXHR9XHJcbmA7XHJcblxyXG5jb25zdCBiYXNlVW5pdExhYmVsU3R5bGVzID0gKCB7IHNlbGVjdFNpemUgfTogU2VsZWN0UHJvcHMgKSA9PiB7XHJcblx0Y29uc3Qgc2l6ZXMgPSB7XHJcblx0XHRzbWFsbDogY3NzYFxyXG5cdFx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cdFx0XHRwYWRkaW5nOiAycHggMXB4O1xyXG5cdFx0XHR3aWR0aDogMjBweDtcclxuXHRcdFx0Zm9udC1zaXplOiA4cHg7XHJcblx0XHRcdGxpbmUtaGVpZ2h0OiAxO1xyXG5cdFx0XHRsZXR0ZXItc3BhY2luZzogLTAuNXB4O1xyXG5cdFx0XHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cdFx0XHR0ZXh0LWFsaWduLWxhc3Q6IGNlbnRlcjtcclxuXHJcblx0XHRcdCY6bm90KCA6ZGlzYWJsZWQgKSB7XHJcblx0XHRcdFx0Y29sb3I6ICR7IENPTE9SUy5ncmF5WyA4MDAgXSB9O1xyXG5cdFx0XHR9XHJcblx0XHRgLFxyXG5cdFx0ZGVmYXVsdDogY3NzYFxyXG5cdFx0XHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cdFx0XHRtaW4td2lkdGg6IDI0cHg7XHJcblx0XHRcdG1heC13aWR0aDogNDhweDtcclxuXHRcdFx0aGVpZ2h0OiAyNHB4O1xyXG5cdFx0XHRtYXJnaW4taW5saW5lLWVuZDogJHsgc3BhY2UoIDIgKSB9O1xyXG5cdFx0XHRwYWRkaW5nOiAkeyBzcGFjZSggMSApIH07XHJcblxyXG5cdFx0XHRmb250LXNpemU6IDEzcHg7XHJcblx0XHRcdGxpbmUtaGVpZ2h0OiAxO1xyXG5cdFx0XHR0ZXh0LWFsaWduLWxhc3Q6IGNlbnRlcjtcclxuXHRcdFx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuXHRcdFx0b3ZlcmZsb3c6IGhpZGRlbjtcclxuXHRcdFx0dGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcblx0XHRcdGZpZWxkLXNpemluZzogY29udGVudDtcclxuXHJcblx0XHRcdCY6bm90KCA6ZGlzYWJsZWQgKSB7XHJcblx0XHRcdFx0Y29sb3I6ICR7IENPTE9SUy50aGVtZS5hY2NlbnQgfTtcclxuXHRcdFx0fVxyXG5cdFx0YCxcclxuXHR9O1xyXG5cclxuXHRyZXR1cm4gc2l6ZXNbIHNlbGVjdFNpemUgXTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBVbml0TGFiZWwgPSBzdHlsZWQuZGl2PCBTZWxlY3RQcm9wcyA+YFxyXG5cdCYmJiB7XHJcblx0XHRwb2ludGVyLWV2ZW50czogbm9uZTtcclxuXHJcblx0XHQkeyBiYXNlVW5pdExhYmVsU3R5bGVzIH07XHJcblxyXG5cdFx0Y29sb3I6ICR7IENPTE9SUy5ncmF5WyA5MDAgXSB9O1xyXG5cdH1cclxuYDtcclxuXHJcbmNvbnN0IHVuaXRTZWxlY3RTaXplcyA9ICggeyBzZWxlY3RTaXplID0gJ2RlZmF1bHQnIH06IFNlbGVjdFByb3BzICkgPT4ge1xyXG5cdGNvbnN0IHNpemVzID0ge1xyXG5cdFx0c21hbGw6IGNzc2BcclxuXHRcdFx0aGVpZ2h0OiAxMDAlO1xyXG5cdFx0XHRib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuXHRcdFx0dHJhbnNpdGlvbjpcclxuXHRcdFx0XHRib3gtc2hhZG93IDAuMXMgbGluZWFyLFxyXG5cdFx0XHRcdGJvcmRlciAwLjFzIGxpbmVhcjtcclxuXHJcblx0XHRcdCR7IHJ0bCggeyBib3JkZXJUb3BMZWZ0UmFkaXVzOiAwLCBib3JkZXJCb3R0b21MZWZ0UmFkaXVzOiAwIH0gKSgpIH1cclxuXHJcblx0XHRcdCY6bm90KDpkaXNhYmxlZCk6aG92ZXIge1xyXG5cdFx0XHRcdGJhY2tncm91bmQtY29sb3I6ICR7IENPTE9SUy5ncmF5WyAxMDAgXSB9O1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQmOmZvY3VzIHtcclxuXHRcdFx0XHRib3JkZXI6IDFweCBzb2xpZCAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfTtcclxuXHRcdFx0XHRib3gtc2hhZG93OiBpbnNldCAwIDAgMFxyXG5cdFx0XHRcdFx0JHsgQ09ORklHLmJvcmRlcldpZHRoICsgJyAnICsgQ09MT1JTLnVpLmJvcmRlckZvY3VzIH07XHJcblx0XHRcdFx0b3V0bGluZS1vZmZzZXQ6IDA7XHJcblx0XHRcdFx0b3V0bGluZTogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG5cdFx0XHRcdHotaW5kZXg6IDE7XHJcblx0XHRcdH1cclxuXHRcdGAsXHJcblx0XHRkZWZhdWx0OiBjc3NgXHJcblx0XHRcdGRpc3BsYXk6IGZsZXg7XHJcblx0XHRcdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdFx0XHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuXHRcdFx0Jjp3aGVyZSggOm5vdCggOmRpc2FibGVkICkgKTpob3ZlciB7XHJcblx0XHRcdFx0Ym94LXNoYWRvdzogMCAwIDBcclxuXHRcdFx0XHRcdCR7IENPTkZJRy5ib3JkZXJXaWR0aCArICcgJyArIENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHRcdG91dGxpbmU6ICR7IENPTkZJRy5ib3JkZXJXaWR0aCB9IHNvbGlkIHRyYW5zcGFyZW50OyAvLyBGb3IgSGlnaCBDb250cmFzdCBNb2RlXHJcblx0XHRcdH1cclxuXHJcblx0XHRcdCY6Zm9jdXMge1xyXG5cdFx0XHRcdGJveC1zaGFkb3c6IDAgMCAwXHJcblx0XHRcdFx0XHQkeyBDT05GSUcuYm9yZGVyV2lkdGhGb2N1cyArICcgJyArIENPTE9SUy51aS5ib3JkZXJGb2N1cyB9O1xyXG5cdFx0XHRcdG91dGxpbmU6ICR7IENPTkZJRy5ib3JkZXJXaWR0aEZvY3VzIH0gc29saWQgdHJhbnNwYXJlbnQ7IC8vIEZvciBIaWdoIENvbnRyYXN0IE1vZGVcclxuXHRcdFx0fVxyXG5cdFx0YCxcclxuXHR9O1xyXG5cclxuXHRyZXR1cm4gc2l6ZXNbIHNlbGVjdFNpemUgXTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBVbml0U2VsZWN0ID0gc3R5bGVkLnNlbGVjdDwgU2VsZWN0UHJvcHMgPmBcclxuXHQvLyBUaGUgJiYmIGNvdW50ZXJhY3RzIDxzZWxlY3Q+IHN0eWxlcyBpbiBXUCBmb3Jtcy5jc3NcclxuXHQmJiYge1xyXG5cdFx0YXBwZWFyYW5jZTogbm9uZTtcclxuXHRcdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG5cdFx0Ym9yZGVyLXJhZGl1czogJHsgQ09ORklHLnJhZGl1c1hTbWFsbCB9O1xyXG5cdFx0Ym9yZGVyOiBub25lO1xyXG5cdFx0ZGlzcGxheTogYmxvY2s7XHJcblx0XHRvdXRsaW5lOiBub25lO1xyXG5cdFx0LyogUmVtb3ZpbmcgbWFyZ2luIGVuc3VyZXMgZm9jdXMgc3R5bGVzIG5lYXRseSBvdmVybGF5IHRoZSB3cmFwcGVyLiAqL1xyXG5cdFx0bWFyZ2luOiAwO1xyXG5cdFx0bWluLWhlaWdodDogYXV0bztcclxuXHRcdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xyXG5cclxuXHRcdCY6bm90KCA6ZGlzYWJsZWQgKSB7XHJcblx0XHRcdGN1cnNvcjogcG9pbnRlcjtcclxuXHRcdH1cclxuXHJcblx0XHQkeyBiYXNlVW5pdExhYmVsU3R5bGVzIH07XHJcblx0XHQkeyB1bml0U2VsZWN0U2l6ZXMgfTtcclxuXHR9XHJcbmA7XHJcbiJdfQ== */"));
//# sourceMappingURL=unit-control-styles.js.map