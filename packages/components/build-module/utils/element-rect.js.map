{"version":3,"names":["useRef","useEffect","useState","useEvent","useTrackElementRectUpdates","targetElement","onRect","fireOnElementInit","onRectEvent","observedElementRef","resizeObserverRef","current","ResizeObserver","entries","resizeObserver","observe","unobserve","NULL_ELEMENT_OFFSET_RECT","left","top","width","height","getElementOffsetRect","element","Math","max","offsetLeft","offsetTop","parseFloat","getComputedStyle","useTrackElementOffsetRect","indicatorPosition","setIndicatorPosition"],"sources":["@wordpress/components/src/utils/element-rect.ts"],"sourcesContent":["/* eslint-disable jsdoc/require-param */\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { useRef, useEffect, useState } from '@wordpress/element';\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { useEvent } from './hooks/use-event';\r\n\r\n/**\r\n * `useTrackElementRectUpdates` options.\r\n */\r\nexport type UseTrackElementRectUpdatesOptions = {\r\n\t/**\r\n\t * Whether to trigger the callback when an element's ResizeObserver is\r\n\t * first set up, including when the target element changes.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tfireOnElementInit?: boolean;\r\n};\r\n\r\n/**\r\n * Tracks an element's \"rect\" (size and position) and fires `onRect` for all\r\n * of its discrete values. The element can be changed dynamically and **it\r\n * must not be stored in a ref**. Instead, it should be stored in a React\r\n * state or equivalent.\r\n *\r\n * By default, `onRect` is called initially for the target element (including\r\n * when the target element changes), not only on size or position updates.\r\n * This allows consumers of the hook to always be in sync with all rect values\r\n * of the target element throughout its lifetime. This behavior can be\r\n * disabled by setting the `fireOnElementInit` option to `false`.\r\n *\r\n * Under the hood, it sets up a `ResizeObserver` that tracks the element. The\r\n * target element can be changed dynamically, and the observer will be\r\n * updated accordingly.\r\n *\r\n * @example\r\n *\r\n * ```tsx\r\n * const [ targetElement, setTargetElement ] = useState< HTMLElement | null >();\r\n *\r\n * useTrackElementRectUpdates( targetElement, ( element ) => {\r\n *   console.log( 'Element resized:', element );\r\n * } );\r\n *\r\n * <div ref={ setTargetElement } />;\r\n * ```\r\n */\r\nexport function useTrackElementRectUpdates(\r\n\t/**\r\n\t * The target element to observe. It can be changed dynamically.\r\n\t */\r\n\ttargetElement: HTMLElement | undefined | null,\r\n\t/**\r\n\t * Callback to fire when the element is resized. It will also be\r\n\t * called when the observer is set up, unless `fireOnElementInit` is\r\n\t * set to `false`.\r\n\t */\r\n\tonRect: (\r\n\t\t/**\r\n\t\t * The element being tracked at the time of this update.\r\n\t\t */\r\n\t\telement: HTMLElement,\r\n\t\t/**\r\n\t\t * The list of\r\n\t\t * [`ResizeObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry)\r\n\t\t * objects passed to the `ResizeObserver.observe` callback. This list\r\n\t\t * won't be available when the observer is set up, and only on updates.\r\n\t\t */\r\n\t\tresizeObserverEntries?: ResizeObserverEntry[]\r\n\t) => void,\r\n\t{ fireOnElementInit = true }: UseTrackElementRectUpdatesOptions = {}\r\n) {\r\n\tconst onRectEvent = useEvent( onRect );\r\n\r\n\tconst observedElementRef = useRef< HTMLElement | null >();\r\n\tconst resizeObserverRef = useRef< ResizeObserver >();\r\n\r\n\t// TODO: could this be a layout effect?\r\n\tuseEffect( () => {\r\n\t\tif ( targetElement === observedElementRef.current ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tobservedElementRef.current = targetElement;\r\n\r\n\t\t// Set up a ResizeObserver.\r\n\t\tif ( ! resizeObserverRef.current ) {\r\n\t\t\tresizeObserverRef.current = new ResizeObserver( ( entries ) => {\r\n\t\t\t\tif ( observedElementRef.current ) {\r\n\t\t\t\t\tonRectEvent( observedElementRef.current, entries );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\t\tconst { current: resizeObserver } = resizeObserverRef;\r\n\r\n\t\t// Observe new element.\r\n\t\tif ( targetElement ) {\r\n\t\t\tif ( fireOnElementInit ) {\r\n\t\t\t\t// TODO: investigate if this can be removed,\r\n\t\t\t\t// see: https://stackoverflow.com/a/60026394\r\n\t\t\t\tonRectEvent( targetElement );\r\n\t\t\t}\r\n\t\t\tresizeObserver.observe( targetElement );\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\t// Unobserve previous element.\r\n\t\t\tif ( observedElementRef.current ) {\r\n\t\t\t\tresizeObserver.unobserve( observedElementRef.current );\r\n\t\t\t}\r\n\t\t};\r\n\t}, [ fireOnElementInit, onRectEvent, targetElement ] );\r\n}\r\n\r\n/**\r\n * The position and dimensions of an element, relative to its offset parent.\r\n */\r\nexport type ElementOffsetRect = {\r\n\t/**\r\n\t * The distance from the left edge of the offset parent to the left edge of\r\n\t * the element.\r\n\t */\r\n\tleft: number;\r\n\t/**\r\n\t * The distance from the top edge of the offset parent to the top edge of\r\n\t * the element.\r\n\t */\r\n\ttop: number;\r\n\t/**\r\n\t * The width of the element.\r\n\t */\r\n\twidth: number;\r\n\t/**\r\n\t * The height of the element.\r\n\t */\r\n\theight: number;\r\n};\r\n\r\n/**\r\n * An `ElementOffsetRect` object with all values set to zero.\r\n */\r\nexport const NULL_ELEMENT_OFFSET_RECT = {\r\n\tleft: 0,\r\n\ttop: 0,\r\n\twidth: 0,\r\n\theight: 0,\r\n} satisfies ElementOffsetRect;\r\n\r\n/**\r\n * Returns the position and dimensions of an element, relative to its offset\r\n * parent. This is useful in contexts where `getBoundingClientRect` is not\r\n * suitable, such as when the element is transformed.\r\n *\r\n * **Note:** the `left` and `right` values are adjusted due to a limitation\r\n * in the way the browser calculates the offset position of the element,\r\n * which can cause unwanted scrollbars to appear. This adjustment makes the\r\n * values potentially inaccurate within a range of 1 pixel.\r\n */\r\nexport function getElementOffsetRect(\r\n\telement: HTMLElement\r\n): ElementOffsetRect {\r\n\treturn {\r\n\t\t// The adjustments mentioned in the documentation above are necessary\r\n\t\t// because `offsetLeft` and `offsetTop` are rounded to the nearest pixel,\r\n\t\t// which can result in a position mismatch that causes unwanted overflow.\r\n\t\t// For context, see: https://github.com/WordPress/gutenberg/pull/61979\r\n\t\tleft: Math.max( element.offsetLeft - 1, 0 ),\r\n\t\ttop: Math.max( element.offsetTop - 1, 0 ),\r\n\t\t// This is a workaround to obtain these values with a sub-pixel precision,\r\n\t\t// since `offsetWidth` and `offsetHeight` are rounded to the nearest pixel.\r\n\t\twidth: parseFloat( getComputedStyle( element ).width ),\r\n\t\theight: parseFloat( getComputedStyle( element ).height ),\r\n\t};\r\n}\r\n\r\n/**\r\n * Tracks the position and dimensions of an element, relative to its offset\r\n * parent. The element can be changed dynamically.\r\n */\r\nexport function useTrackElementOffsetRect(\r\n\ttargetElement: HTMLElement | undefined | null\r\n) {\r\n\tconst [ indicatorPosition, setIndicatorPosition ] =\r\n\t\tuseState< ElementOffsetRect >( NULL_ELEMENT_OFFSET_RECT );\r\n\r\n\tuseTrackElementRectUpdates( targetElement, ( element ) =>\r\n\t\tsetIndicatorPosition( getElementOffsetRect( element ) )\r\n\t);\r\n\r\n\treturn indicatorPosition;\r\n}\r\n\r\n/* eslint-enable jsdoc/require-param */\r\n"],"mappings":"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","ignoreList":[]}