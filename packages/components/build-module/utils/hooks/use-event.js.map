{"version":3,"names":["useRef","useInsertionEffect","useCallback","useEvent","callback","ref","Error","current","args"],"sources":["@wordpress/components/src/utils/hooks/use-event.ts"],"sourcesContent":["/* eslint-disable jsdoc/require-param */\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { useRef, useInsertionEffect, useCallback } from '@wordpress/element';\r\n\r\n/**\r\n * Any function.\r\n */\r\nexport type AnyFunction = ( ...args: any ) => any;\r\n\r\n/**\r\n * Creates a stable callback function that has access to the latest state and\r\n * can be used within event handlers and effect callbacks. Throws when used in\r\n * the render phase.\r\n *\r\n * @example\r\n *\r\n * ```tsx\r\n * function Component(props) {\r\n *   const onClick = useEvent(props.onClick);\r\n *   React.useEffect(() => {}, [onClick]);\r\n * }\r\n * ```\r\n */\r\nexport function useEvent< T extends AnyFunction >( callback?: T ) {\r\n\tconst ref = useRef< AnyFunction | undefined >( () => {\r\n\t\tthrow new Error( 'Cannot call an event handler while rendering.' );\r\n\t} );\r\n\tuseInsertionEffect( () => {\r\n\t\tref.current = callback;\r\n\t} );\r\n\treturn useCallback< AnyFunction >(\r\n\t\t( ...args ) => ref.current?.( ...args ),\r\n\t\t[]\r\n\t) as T;\r\n}\r\n/* eslint-enable jsdoc/require-param */\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,MAAM,EAAEC,kBAAkB,EAAEC,WAAW,QAAQ,oBAAoB;;AAE5E;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAA2BC,QAAY,EAAG;EACjE,MAAMC,GAAG,GAAGL,MAAM,CAA6B,MAAM;IACpD,MAAM,IAAIM,KAAK,CAAE,+CAAgD,CAAC;EACnE,CAAE,CAAC;EACHL,kBAAkB,CAAE,MAAM;IACzBI,GAAG,CAACE,OAAO,GAAGH,QAAQ;EACvB,CAAE,CAAC;EACH,OAAOF,WAAW,CACjB,CAAE,GAAGM,IAAI,KAAMH,GAAG,CAACE,OAAO,GAAI,GAAGC,IAAK,CAAC,EACvC,EACD,CAAC;AACF;AACA","ignoreList":[]}