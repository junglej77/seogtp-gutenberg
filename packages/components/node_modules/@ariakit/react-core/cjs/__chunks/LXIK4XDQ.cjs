"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";


var _GDXQYUZDcjs = require('./GDXQYUZD.cjs');


var _RMSWSIPTcjs = require('./RMSWSIPT.cjs');



var _AMARRBCFcjs = require('./AMARRBCF.cjs');




var _M5IWBORBcjs = require('./M5IWBORB.cjs');



var _WT6AUJWVcjs = require('./WT6AUJWV.cjs');




var _3IVNQNIVcjs = require('./3IVNQNIV.cjs');

// src/popover/popover-disclosure.tsx
var _misc = require('@ariakit/core/utils/misc');
var _jsxruntime = require('react/jsx-runtime');
var TagName = "button";
var usePopoverDisclosure = _M5IWBORBcjs.createHook.call(void 0, function usePopoverDisclosure2(_a) {
  var _b = _a, { store } = _b, props = _3IVNQNIVcjs.__objRest.call(void 0, _b, ["store"]);
  const context = _AMARRBCFcjs.usePopoverProviderContext.call(void 0, );
  store = store || context;
  _misc.invariant.call(void 0, 
    store,
    process.env.NODE_ENV !== "production" && "PopoverDisclosure must receive a `store` prop or be wrapped in a PopoverProvider component."
  );
  const onClickProp = props.onClick;
  const onClick = _WT6AUJWVcjs.useEvent.call(void 0, (event) => {
    store == null ? void 0 : store.setAnchorElement(event.currentTarget);
    onClickProp == null ? void 0 : onClickProp(event);
  });
  props = _WT6AUJWVcjs.useWrapElement.call(void 0, 
    props,
    (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _AMARRBCFcjs.PopoverScopedContextProvider, { value: store, children: element }),
    [store]
  );
  props = _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {}, props), {
    onClick
  });
  props = _RMSWSIPTcjs.usePopoverAnchor.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, { store }, props));
  props = _GDXQYUZDcjs.useDialogDisclosure.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, { store }, props));
  return props;
});
var PopoverDisclosure = _M5IWBORBcjs.forwardRef.call(void 0, function PopoverDisclosure2(props) {
  const htmlProps = usePopoverDisclosure(props);
  return _M5IWBORBcjs.createElement.call(void 0, TagName, htmlProps);
});




exports.usePopoverDisclosure = usePopoverDisclosure; exports.PopoverDisclosure = PopoverDisclosure;
