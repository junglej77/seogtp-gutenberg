"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";


var _WAXJ4YD7cjs = require('../__chunks/WAXJ4YD7.cjs');


var _TTVWSMCCcjs = require('../__chunks/TTVWSMCC.cjs');
require('../__chunks/O3ON5SWH.cjs');
require('../__chunks/PUMYQXTD.cjs');
require('../__chunks/VPKU3AVX.cjs');
require('../__chunks/BV5PE6PZ.cjs');
require('../__chunks/3MQN464L.cjs');
require('../__chunks/32EK4BGY.cjs');


var _B7ZXMKTZcjs = require('../__chunks/B7ZXMKTZ.cjs');
require('../__chunks/3HGFVGHB.cjs');
require('../__chunks/6HSWYGH7.cjs');


var _LSIE3AZTcjs = require('../__chunks/LSIE3AZT.cjs');
require('../__chunks/5KP7SROC.cjs');
require('../__chunks/OZFFK5VS.cjs');
require('../__chunks/NMKMMUOR.cjs');
require('../__chunks/67WF5W26.cjs');
require('../__chunks/TJR4NN4V.cjs');
require('../__chunks/DRV5RKI2.cjs');
require('../__chunks/PNSA4OTL.cjs');
require('../__chunks/6IUEXB4L.cjs');
require('../__chunks/JF225FQ5.cjs');
require('../__chunks/MUQXBDUR.cjs');
require('../__chunks/MTP72GGY.cjs');
require('../__chunks/OVBWMHNO.cjs');
require('../__chunks/YS72JDSE.cjs');
require('../__chunks/WQXPJKQO.cjs');
require('../__chunks/4S6ECZOG.cjs');
require('../__chunks/FAFAXYUE.cjs');
require('../__chunks/QMBTS2OC.cjs');
require('../__chunks/K32UV4VJ.cjs');
require('../__chunks/4LJ6O7GM.cjs');
require('../__chunks/3LZQUHIB.cjs');
require('../__chunks/VRPZ4HD5.cjs');
require('../__chunks/6UCNERDT.cjs');
require('../__chunks/ZBR3CZBX.cjs');
require('../__chunks/AMARRBCF.cjs');
require('../__chunks/HHTQYHYL.cjs');
require('../__chunks/7K2RM2SD.cjs');
require('../__chunks/YGEHBXGA.cjs');
require('../__chunks/DYIDES27.cjs');
require('../__chunks/2P4N5BIR.cjs');




var _M5IWBORBcjs = require('../__chunks/M5IWBORB.cjs');
require('../__chunks/SDBASOGF.cjs');
require('../__chunks/C55AGIGA.cjs');


var _DMH7HONVcjs = require('../__chunks/DMH7HONV.cjs');


var _WT6AUJWVcjs = require('../__chunks/WT6AUJWV.cjs');
require('../__chunks/54XFMNDS.cjs');




var _3IVNQNIVcjs = require('../__chunks/3IVNQNIV.cjs');

// src/menu/menu.tsx
var _events = require('@ariakit/core/utils/events');
var _focus = require('@ariakit/core/utils/focus');
var _misc = require('@ariakit/core/utils/misc');
var _react = require('react');
var TagName = "div";
var useMenu = _M5IWBORBcjs.createHook.call(void 0, function useMenu2(_a) {
  var _b = _a, {
    store,
    modal: modalProp = false,
    portal = !!modalProp,
    hideOnEscape = true,
    autoFocusOnShow = true,
    hideOnHoverOutside,
    alwaysVisible
  } = _b, props = _3IVNQNIVcjs.__objRest.call(void 0, _b, [
    "store",
    "modal",
    "portal",
    "hideOnEscape",
    "autoFocusOnShow",
    "hideOnHoverOutside",
    "alwaysVisible"
  ]);
  const context = _TTVWSMCCcjs.useMenuProviderContext.call(void 0, );
  store = store || context;
  _misc.invariant.call(void 0, 
    store,
    process.env.NODE_ENV !== "production" && "Menu must receive a `store` prop or be wrapped in a MenuProvider component."
  );
  const ref = _react.useRef.call(void 0, null);
  const parentMenu = store.parent;
  const parentMenubar = store.menubar;
  const hasParentMenu = !!parentMenu;
  const parentIsMenubar = !!parentMenubar && !hasParentMenu;
  props = _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {}, props), {
    ref: _WT6AUJWVcjs.useMergeRefs.call(void 0, ref, props.ref)
  });
  const _a2 = _WAXJ4YD7cjs.useMenuList.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {
    store,
    alwaysVisible
  }, props)), { "aria-labelledby": ariaLabelledBy } = _a2, menuListProps = _3IVNQNIVcjs.__objRest.call(void 0, _a2, ["aria-labelledby"]);
  props = menuListProps;
  const [initialFocusRef, setInitialFocusRef] = _react.useState.call(void 0, );
  const autoFocusOnShowState = store.useState("autoFocusOnShow");
  const initialFocus = store.useState("initialFocus");
  const baseElement = store.useState("baseElement");
  const items = store.useState("renderedItems");
  _react.useEffect.call(void 0, () => {
    let cleaning = false;
    setInitialFocusRef((prevInitialFocusRef) => {
      var _a3, _b2, _c;
      if (cleaning) return;
      if (!autoFocusOnShowState) return;
      if ((_a3 = prevInitialFocusRef == null ? void 0 : prevInitialFocusRef.current) == null ? void 0 : _a3.isConnected) return prevInitialFocusRef;
      const ref2 = _react.createRef.call(void 0, );
      switch (initialFocus) {
        case "first":
          ref2.current = ((_b2 = items.find((item) => !item.disabled && item.element)) == null ? void 0 : _b2.element) || null;
          break;
        case "last":
          ref2.current = ((_c = [...items].reverse().find((item) => !item.disabled && item.element)) == null ? void 0 : _c.element) || null;
          break;
        default:
          ref2.current = baseElement;
      }
      return ref2;
    });
    return () => {
      cleaning = true;
    };
  }, [store, autoFocusOnShowState, initialFocus, items, baseElement]);
  const modal = hasParentMenu ? false : modalProp;
  const mayAutoFocusOnShow = !!autoFocusOnShow;
  const canAutoFocusOnShow = !!initialFocusRef || !!props.initialFocus || !!modal;
  const contentElement = _DMH7HONVcjs.useStoreState.call(void 0, 
    store.combobox || store,
    "contentElement"
  );
  const parentContentElement = _DMH7HONVcjs.useStoreState.call(void 0, 
    (parentMenu == null ? void 0 : parentMenu.combobox) || parentMenu,
    "contentElement"
  );
  const preserveTabOrderAnchor = _react.useMemo.call(void 0, () => {
    if (!parentContentElement) return;
    if (!contentElement) return;
    const role = contentElement.getAttribute("role");
    const parentRole = parentContentElement.getAttribute("role");
    const parentIsMenuOrMenubar = parentRole === "menu" || parentRole === "menubar";
    if (parentIsMenuOrMenubar && role === "menu") return;
    return parentContentElement;
  }, [contentElement, parentContentElement]);
  if (preserveTabOrderAnchor !== void 0) {
    props = _3IVNQNIVcjs.__spreadValues.call(void 0, {
      preserveTabOrderAnchor
    }, props);
  }
  props = _B7ZXMKTZcjs.useHovercard.call(void 0, _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {
    store,
    alwaysVisible,
    initialFocus: initialFocusRef,
    autoFocusOnShow: mayAutoFocusOnShow ? canAutoFocusOnShow && autoFocusOnShow : autoFocusOnShowState || !!modal
  }, props), {
    hideOnEscape(event) {
      if (_misc.isFalsyBooleanCallback.call(void 0, hideOnEscape, event)) return false;
      store == null ? void 0 : store.hideAll();
      return true;
    },
    hideOnHoverOutside(event) {
      const disclosureElement = store == null ? void 0 : store.getState().disclosureElement;
      const getHideOnHoverOutside = () => {
        if (typeof hideOnHoverOutside === "function") {
          return hideOnHoverOutside(event);
        }
        if (hideOnHoverOutside != null) return hideOnHoverOutside;
        if (hasParentMenu) return true;
        if (!parentIsMenubar) return false;
        if (!disclosureElement) return true;
        if (_focus.hasFocusWithin.call(void 0, disclosureElement)) return false;
        return true;
      };
      if (!getHideOnHoverOutside()) return false;
      if (event.defaultPrevented) return true;
      if (!hasParentMenu) return true;
      if (!disclosureElement) return true;
      _events.fireEvent.call(void 0, disclosureElement, "mouseout", event);
      if (!_focus.hasFocusWithin.call(void 0, disclosureElement)) return true;
      requestAnimationFrame(() => {
        if (_focus.hasFocusWithin.call(void 0, disclosureElement)) return;
        store == null ? void 0 : store.hide();
      });
      return false;
    },
    modal,
    portal,
    backdrop: hasParentMenu ? false : props.backdrop
  }));
  props = _3IVNQNIVcjs.__spreadValues.call(void 0, {
    "aria-labelledby": ariaLabelledBy
  }, props);
  return props;
});
var Menu = _LSIE3AZTcjs.createDialogComponent.call(void 0, 
  _M5IWBORBcjs.forwardRef.call(void 0, function Menu2(props) {
    const htmlProps = useMenu(props);
    return _M5IWBORBcjs.createElement.call(void 0, TagName, htmlProps);
  }),
  _TTVWSMCCcjs.useMenuProviderContext
);



exports.Menu = Menu; exports.useMenu = useMenu;
