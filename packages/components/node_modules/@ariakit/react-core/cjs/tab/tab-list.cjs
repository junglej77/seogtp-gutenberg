"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";



var _PSYRVXCOcjs = require('../__chunks/PSYRVXCO.cjs');


var _VPKU3AVXcjs = require('../__chunks/VPKU3AVX.cjs');
require('../__chunks/BV5PE6PZ.cjs');
require('../__chunks/3MQN464L.cjs');
require('../__chunks/32EK4BGY.cjs');
require('../__chunks/YGEHBXGA.cjs');
require('../__chunks/DYIDES27.cjs');




var _M5IWBORBcjs = require('../__chunks/M5IWBORB.cjs');


var _WT6AUJWVcjs = require('../__chunks/WT6AUJWV.cjs');
require('../__chunks/54XFMNDS.cjs');



var _3IVNQNIVcjs = require('../__chunks/3IVNQNIV.cjs');

// src/tab/tab-list.tsx
var _misc = require('@ariakit/core/utils/misc');
var _jsxruntime = require('react/jsx-runtime');
var TagName = "div";
var useTabList = _M5IWBORBcjs.createHook.call(void 0, 
  function useTabList2(_a) {
    var _b = _a, { store } = _b, props = _3IVNQNIVcjs.__objRest.call(void 0, _b, ["store"]);
    const context = _PSYRVXCOcjs.useTabProviderContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "TabList must receive a `store` prop or be wrapped in a TabProvider component."
    );
    const orientation = store.useState(
      (state) => state.orientation === "both" ? void 0 : state.orientation
    );
    props = _WT6AUJWVcjs.useWrapElement.call(void 0, 
      props,
      (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _PSYRVXCOcjs.TabScopedContextProvider, { value: store, children: element }),
      [store]
    );
    if (store.composite) {
      props = _3IVNQNIVcjs.__spreadValues.call(void 0, {
        focusable: false
      }, props);
    }
    props = _3IVNQNIVcjs.__spreadValues.call(void 0, {
      role: "tablist",
      "aria-orientation": orientation
    }, props);
    props = _VPKU3AVXcjs.useComposite.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, { store }, props));
    return props;
  }
);
var TabList = _M5IWBORBcjs.forwardRef.call(void 0, function TabList2(props) {
  const htmlProps = useTabList(props);
  return _M5IWBORBcjs.createElement.call(void 0, TagName, htmlProps);
});



exports.TabList = TabList; exports.useTabList = useTabList;
