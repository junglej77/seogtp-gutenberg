"use client";
import {
  useTagContext
} from "./P2OTTZSX.js";
import {
  useCompositeStoreProps
} from "./UVQLZ7T5.js";
import {
  usePopoverStoreProps
} from "./CBC47ZYL.js";
import {
  useStore,
  useStoreProps
} from "./2GXGCHW6.js";
import {
  useUpdateEffect
} from "./Z32BISHQ.js";
import {
  __spreadProps,
  __spreadValues
} from "./3YLGPPWQ.js";

// src/combobox/combobox-store.ts
import * as Core from "@ariakit/core/combobox/combobox-store";
function useComboboxStoreProps(store, update, props) {
  useUpdateEffect(update, [props.tag]);
  useStoreProps(store, props, "value", "setValue");
  useStoreProps(store, props, "selectedValue", "setSelectedValue");
  useStoreProps(store, props, "resetValueOnHide");
  useStoreProps(store, props, "resetValueOnSelect");
  return Object.assign(
    useCompositeStoreProps(
      usePopoverStoreProps(store, update, props),
      update,
      props
    ),
    { tag: props.tag }
  );
}
function useComboboxStore(props = {}) {
  const tag = useTagContext();
  props = __spreadProps(__spreadValues({}, props), {
    tag: props.tag !== void 0 ? props.tag : tag
  });
  const [store, update] = useStore(Core.createComboboxStore, props);
  return useComboboxStoreProps(store, update, props);
}

export {
  useComboboxStoreProps,
  useComboboxStore
};
