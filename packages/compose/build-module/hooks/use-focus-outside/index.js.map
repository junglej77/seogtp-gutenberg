{"version":3,"names":["useCallback","useEffect","useRef","INPUT_BUTTON_TYPES","isFocusNormalizedButton","eventTarget","window","HTMLElement","nodeName","includes","type","useFocusOutside","onFocusOutside","currentOnFocusOutsideRef","current","preventBlurCheckRef","blurCheckTimeoutIdRef","cancelBlurCheck","clearTimeout","normalizeButtonFocus","event","target","isInteractionEnd","queueBlurCheck","persist","ignoreForRelatedTarget","getAttribute","relatedTarget","closest","setTimeout","document","hasFocus","preventDefault","onFocus","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","onBlur"],"sources":["@wordpress/compose/src/hooks/use-focus-outside/index.ts"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useCallback, useEffect, useRef } from '@wordpress/element';\r\n\r\n/**\r\n * Input types which are classified as button types, for use in considering\r\n * whether element is a (focus-normalized) button.\r\n */\r\nconst INPUT_BUTTON_TYPES = [ 'button', 'submit' ];\r\n\r\n/**\r\n * List of HTML button elements subject to focus normalization\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\r\n */\r\ntype FocusNormalizedButton =\r\n\t| HTMLButtonElement\r\n\t| HTMLLinkElement\r\n\t| HTMLInputElement;\r\n\r\n/**\r\n * Returns true if the given element is a button element subject to focus\r\n * normalization, or false otherwise.\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\r\n *\r\n * @param eventTarget The target from a mouse or touch event.\r\n *\r\n * @return Whether the element is a button element subject to focus normalization.\r\n */\r\nfunction isFocusNormalizedButton(\r\n\teventTarget: EventTarget\r\n): eventTarget is FocusNormalizedButton {\r\n\tif ( ! ( eventTarget instanceof window.HTMLElement ) ) {\r\n\t\treturn false;\r\n\t}\r\n\tswitch ( eventTarget.nodeName ) {\r\n\t\tcase 'A':\r\n\t\tcase 'BUTTON':\r\n\t\t\treturn true;\r\n\r\n\t\tcase 'INPUT':\r\n\t\t\treturn INPUT_BUTTON_TYPES.includes(\r\n\t\t\t\t( eventTarget as HTMLInputElement ).type\r\n\t\t\t);\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\ntype UseFocusOutsideReturn = {\r\n\tonFocus: React.FocusEventHandler;\r\n\tonMouseDown: React.MouseEventHandler;\r\n\tonMouseUp: React.MouseEventHandler;\r\n\tonTouchStart: React.TouchEventHandler;\r\n\tonTouchEnd: React.TouchEventHandler;\r\n\tonBlur: React.FocusEventHandler;\r\n};\r\n\r\n/**\r\n * A react hook that can be used to check whether focus has moved outside the\r\n * element the event handlers are bound to.\r\n *\r\n * @param onFocusOutside A callback triggered when focus moves outside\r\n *                       the element the event handlers are bound to.\r\n *\r\n * @return An object containing event handlers. Bind the event handlers to a\r\n * wrapping element element to capture when focus moves outside that element.\r\n */\r\nexport default function useFocusOutside(\r\n\tonFocusOutside: ( ( event: React.FocusEvent ) => void ) | undefined\r\n): UseFocusOutsideReturn {\r\n\tconst currentOnFocusOutsideRef = useRef( onFocusOutside );\r\n\tuseEffect( () => {\r\n\t\tcurrentOnFocusOutsideRef.current = onFocusOutside;\r\n\t}, [ onFocusOutside ] );\r\n\r\n\tconst preventBlurCheckRef = useRef( false );\r\n\r\n\tconst blurCheckTimeoutIdRef = useRef< number | undefined >();\r\n\r\n\t/**\r\n\t * Cancel a blur check timeout.\r\n\t */\r\n\tconst cancelBlurCheck = useCallback( () => {\r\n\t\tclearTimeout( blurCheckTimeoutIdRef.current );\r\n\t}, [] );\r\n\r\n\t// Cancel blur checks on unmount.\r\n\tuseEffect( () => {\r\n\t\treturn () => cancelBlurCheck();\r\n\t}, [] );\r\n\r\n\t// Cancel a blur check if the callback or ref is no longer provided.\r\n\tuseEffect( () => {\r\n\t\tif ( ! onFocusOutside ) {\r\n\t\t\tcancelBlurCheck();\r\n\t\t}\r\n\t}, [ onFocusOutside, cancelBlurCheck ] );\r\n\r\n\t/**\r\n\t * Handles a mousedown or mouseup event to respectively assign and\r\n\t * unassign a flag for preventing blur check on button elements. Some\r\n\t * browsers, namely Firefox and Safari, do not emit a focus event on\r\n\t * button elements when clicked, while others do. The logic here\r\n\t * intends to normalize this as treating click on buttons as focus.\r\n\t *\r\n\t * @param event\r\n\t * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#Clicking_and_focus\r\n\t */\r\n\tconst normalizeButtonFocus: React.EventHandler<\r\n\t\tReact.MouseEvent | React.TouchEvent\r\n\t> = useCallback( ( event ) => {\r\n\t\tconst { type, target } = event;\r\n\t\tconst isInteractionEnd = [ 'mouseup', 'touchend' ].includes( type );\r\n\r\n\t\tif ( isInteractionEnd ) {\r\n\t\t\tpreventBlurCheckRef.current = false;\r\n\t\t} else if ( isFocusNormalizedButton( target ) ) {\r\n\t\t\tpreventBlurCheckRef.current = true;\r\n\t\t}\r\n\t}, [] );\r\n\r\n\t/**\r\n\t * A callback triggered when a blur event occurs on the element the handler\r\n\t * is bound to.\r\n\t *\r\n\t * Calls the `onFocusOutside` callback in an immediate timeout if focus has\r\n\t * move outside the bound element and is still within the document.\r\n\t */\r\n\tconst queueBlurCheck: React.FocusEventHandler = useCallback( ( event ) => {\r\n\t\t// React does not allow using an event reference asynchronously\r\n\t\t// due to recycling behavior, except when explicitly persisted.\r\n\t\tevent.persist();\r\n\r\n\t\t// Skip blur check if clicking button. See `normalizeButtonFocus`.\r\n\t\tif ( preventBlurCheckRef.current ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// The usage of this attribute should be avoided. The only use case\r\n\t\t// would be when we load modals that are not React components and\r\n\t\t// therefore don't exist in the React tree. An example is opening\r\n\t\t// the Media Library modal from another dialog.\r\n\t\t// This attribute should contain a selector of the related target\r\n\t\t// we want to ignore, because we still need to trigger the blur event\r\n\t\t// on all other cases.\r\n\t\tconst ignoreForRelatedTarget = event.target.getAttribute(\r\n\t\t\t'data-unstable-ignore-focus-outside-for-relatedtarget'\r\n\t\t);\r\n\t\tif (\r\n\t\t\tignoreForRelatedTarget &&\r\n\t\t\tevent.relatedTarget?.closest( ignoreForRelatedTarget )\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tblurCheckTimeoutIdRef.current = setTimeout( () => {\r\n\t\t\t// If document is not focused then focus should remain\r\n\t\t\t// inside the wrapped component and therefore we cancel\r\n\t\t\t// this blur event thereby leaving focus in place.\r\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Document/hasFocus.\r\n\t\t\tif ( ! document.hasFocus() ) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( 'function' === typeof currentOnFocusOutsideRef.current ) {\r\n\t\t\t\tcurrentOnFocusOutsideRef.current( event );\r\n\t\t\t}\r\n\t\t}, 0 );\r\n\t}, [] );\r\n\r\n\treturn {\r\n\t\tonFocus: cancelBlurCheck,\r\n\t\tonMouseDown: normalizeButtonFocus,\r\n\t\tonMouseUp: normalizeButtonFocus,\r\n\t\tonTouchStart: normalizeButtonFocus,\r\n\t\tonTouchEnd: normalizeButtonFocus,\r\n\t\tonBlur: queueBlurCheck,\r\n\t};\r\n}\r\n"],"mappings":"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","ignoreList":[]}