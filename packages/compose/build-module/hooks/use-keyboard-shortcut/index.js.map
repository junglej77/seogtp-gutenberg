{"version":3,"names":["Mousetrap","useEffect","useRef","isAppleOS","useKeyboardShortcut","shortcuts","callback","bindGlobal","eventName","isDisabled","target","currentCallbackRef","current","mousetrap","document","shortcutsArray","Array","isArray","forEach","shortcut","keys","split","modifiers","Set","filter","value","length","hasAlt","has","hasShift","size","Error","bindFn","args","reset"],"sources":["@wordpress/compose/src/hooks/use-keyboard-shortcut/index.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport Mousetrap from 'mousetrap';\r\nimport 'mousetrap/plugins/global-bind/mousetrap-global-bind';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { useEffect, useRef } from '@wordpress/element';\r\nimport { isAppleOS } from '@wordpress/keycodes';\r\n\r\n/**\r\n * A block selection object.\r\n *\r\n * @typedef {Object} WPKeyboardShortcutConfig\r\n *\r\n * @property {boolean}                                [bindGlobal] Handle keyboard events anywhere including inside textarea/input fields.\r\n * @property {string}                                 [eventName]  Event name used to trigger the handler, defaults to keydown.\r\n * @property {boolean}                                [isDisabled] Disables the keyboard handler if the value is true.\r\n * @property {import('react').RefObject<HTMLElement>} [target]     React reference to the DOM element used to catch the keyboard event.\r\n */\r\n\r\n/* eslint-disable jsdoc/valid-types */\r\n/**\r\n * Attach a keyboard shortcut handler.\r\n *\r\n * @see https://craig.is/killing/mice#api.bind for information about the `callback` parameter.\r\n *\r\n * @param {string[]|string}                                                       shortcuts Keyboard Shortcuts.\r\n * @param {(e: import('mousetrap').ExtendedKeyboardEvent, combo: string) => void} callback  Shortcut callback.\r\n * @param {WPKeyboardShortcutConfig}                                              options   Shortcut options.\r\n */\r\nfunction useKeyboardShortcut(\r\n\t/* eslint-enable jsdoc/valid-types */\r\n\tshortcuts,\r\n\tcallback,\r\n\t{\r\n\t\tbindGlobal = false,\r\n\t\teventName = 'keydown',\r\n\t\tisDisabled = false, // This is important for performance considerations.\r\n\t\ttarget,\r\n\t} = {}\r\n) {\r\n\tconst currentCallbackRef = useRef( callback );\r\n\tuseEffect( () => {\r\n\t\tcurrentCallbackRef.current = callback;\r\n\t}, [ callback ] );\r\n\r\n\tuseEffect( () => {\r\n\t\tif ( isDisabled ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst mousetrap = new Mousetrap(\r\n\t\t\ttarget && target.current\r\n\t\t\t\t? target.current\r\n\t\t\t\t: // We were passing `document` here previously, so to successfully cast it to Element we must cast it first to `unknown`.\r\n\t\t\t\t  // Not sure if this is a mistake but it was the behavior previous to the addition of types so we're just doing what's\r\n\t\t\t\t  // necessary to maintain the existing behavior.\r\n\t\t\t\t  /** @type {Element} */ ( /** @type {unknown} */ ( document ) )\r\n\t\t);\r\n\t\tconst shortcutsArray = Array.isArray( shortcuts )\r\n\t\t\t? shortcuts\r\n\t\t\t: [ shortcuts ];\r\n\t\tshortcutsArray.forEach( ( shortcut ) => {\r\n\t\t\tconst keys = shortcut.split( '+' );\r\n\t\t\t// Determines whether a key is a modifier by the length of the string.\r\n\t\t\t// E.g. if I add a pass a shortcut Shift+Cmd+M, it'll determine that\r\n\t\t\t// the modifiers are Shift and Cmd because they're not a single character.\r\n\t\t\tconst modifiers = new Set(\r\n\t\t\t\tkeys.filter( ( value ) => value.length > 1 )\r\n\t\t\t);\r\n\t\t\tconst hasAlt = modifiers.has( 'alt' );\r\n\t\t\tconst hasShift = modifiers.has( 'shift' );\r\n\r\n\t\t\t// This should be better moved to the shortcut registration instead.\r\n\t\t\tif (\r\n\t\t\t\tisAppleOS() &&\r\n\t\t\t\t( ( modifiers.size === 1 && hasAlt ) ||\r\n\t\t\t\t\t( modifiers.size === 2 && hasAlt && hasShift ) )\r\n\t\t\t) {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t`Cannot bind ${ shortcut }. Alt and Shift+Alt modifiers are reserved for character input.`\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tconst bindFn = bindGlobal ? 'bindGlobal' : 'bind';\r\n\t\t\t// @ts-ignore `bindGlobal` is an undocumented property\r\n\t\t\tmousetrap[ bindFn ](\r\n\t\t\t\tshortcut,\r\n\t\t\t\t(\r\n\t\t\t\t\t/* eslint-disable jsdoc/valid-types */\r\n\t\t\t\t\t/** @type {[e: import('mousetrap').ExtendedKeyboardEvent, combo: string]} */ ...args\r\n\t\t\t\t) =>\r\n\t\t\t\t\t/* eslint-enable jsdoc/valid-types */\r\n\t\t\t\t\tcurrentCallbackRef.current( ...args ),\r\n\t\t\t\teventName\r\n\t\t\t);\r\n\t\t} );\r\n\r\n\t\treturn () => {\r\n\t\t\tmousetrap.reset();\r\n\t\t};\r\n\t}, [ shortcuts, bindGlobal, eventName, target, isDisabled ] );\r\n}\r\n\r\nexport default useKeyboardShortcut;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,SAAS,MAAM,WAAW;AACjC,OAAO,qDAAqD;;AAE5D;AACA;AACA;AACA,SAASC,SAAS,EAAEC,MAAM,QAAQ,oBAAoB;AACtD,SAASC,SAAS,QAAQ,qBAAqB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmBA,CAAA,CAC3B;AACAC,SAAS,EACTC,QAAQ,EACR;EACCC,UAAU,GAAG,KAAK;EAClBC,SAAS,GAAG,SAAS;EACrBC,UAAU,GAAG,KAAK;EAAE;EACpBC;AACD,CAAC,GAAG,CAAC,CAAC,EACL;EACD,MAAMC,kBAAkB,GAAGT,MAAM,CAAEI,QAAS,CAAC;EAC7CL,SAAS,CAAE,MAAM;IAChBU,kBAAkB,CAACC,OAAO,GAAGN,QAAQ;EACtC,CAAC,EAAE,CAAEA,QAAQ,CAAG,CAAC;EAEjBL,SAAS,CAAE,MAAM;IAChB,IAAKQ,UAAU,EAAG;MACjB;IACD;IACA,MAAMI,SAAS,GAAG,IAAIb,SAAS,CAC9BU,MAAM,IAAIA,MAAM,CAACE,OAAO,GACrBF,MAAM,CAACE,OAAO;IACd;IACA;IACA;IACA,uBAAyB;IAAyBE,QACtD,CAAC;IACD,MAAMC,cAAc,GAAGC,KAAK,CAACC,OAAO,CAAEZ,SAAU,CAAC,GAC9CA,SAAS,GACT,CAAEA,SAAS,CAAE;IAChBU,cAAc,CAACG,OAAO,CAAIC,QAAQ,IAAM;MACvC,MAAMC,IAAI,GAAGD,QAAQ,CAACE,KAAK,CAAE,GAAI,CAAC;MAClC;MACA;MACA;MACA,MAAMC,SAAS,GAAG,IAAIC,GAAG,CACxBH,IAAI,CAACI,MAAM,CAAIC,KAAK,IAAMA,KAAK,CAACC,MAAM,GAAG,CAAE,CAC5C,CAAC;MACD,MAAMC,MAAM,GAAGL,SAAS,CAACM,GAAG,CAAE,KAAM,CAAC;MACrC,MAAMC,QAAQ,GAAGP,SAAS,CAACM,GAAG,CAAE,OAAQ,CAAC;;MAEzC;MACA,IACCzB,SAAS,CAAC,CAAC,KACPmB,SAAS,CAACQ,IAAI,KAAK,CAAC,IAAIH,MAAM,IAC/BL,SAAS,CAACQ,IAAI,KAAK,CAAC,IAAIH,MAAM,IAAIE,QAAU,CAAE,EAChD;QACD,MAAM,IAAIE,KAAK,CACb,eAAeZ,QAAU,iEAC3B,CAAC;MACF;MAEA,MAAMa,MAAM,GAAGzB,UAAU,GAAG,YAAY,GAAG,MAAM;MACjD;MACAM,SAAS,CAAEmB,MAAM,CAAE,CAClBb,QAAQ,EACR,EACC;MACA,4EAA6E,GAAGc,IAAI,KAEpF;MACAtB,kBAAkB,CAACC,OAAO,CAAE,GAAGqB,IAAK,CAAC,EACtCzB,SACD,CAAC;IACF,CAAE,CAAC;IAEH,OAAO,MAAM;MACZK,SAAS,CAACqB,KAAK,CAAC,CAAC;IAClB,CAAC;EACF,CAAC,EAAE,CAAE7B,SAAS,EAAEE,UAAU,EAAEC,SAAS,EAAEE,MAAM,EAAED,UAAU,CAAG,CAAC;AAC9D;AAEA,eAAeL,mBAAmB","ignoreList":[]}