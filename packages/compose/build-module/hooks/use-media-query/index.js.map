{"version":3,"names":["useMemo","useSyncExternalStore","matchMediaCache","Map","getMediaQueryList","query","match","get","window","matchMedia","set","useMediaQuery","source","mediaQueryList","subscribe","onStoreChange","addEventListener","removeEventListener","getValue","_mediaQueryList$match","matches"],"sources":["@wordpress/compose/src/hooks/use-media-query/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useMemo, useSyncExternalStore } from '@wordpress/element';\r\n\r\nconst matchMediaCache = new Map();\r\n\r\n/**\r\n * A new MediaQueryList object for the media query\r\n *\r\n * @param {string} [query] Media Query.\r\n * @return {MediaQueryList|null} A new object for the media query\r\n */\r\nfunction getMediaQueryList( query ) {\r\n\tif ( ! query ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tlet match = matchMediaCache.get( query );\r\n\r\n\tif ( match ) {\r\n\t\treturn match;\r\n\t}\r\n\r\n\tif (\r\n\t\ttypeof window !== 'undefined' &&\r\n\t\ttypeof window.matchMedia === 'function'\r\n\t) {\r\n\t\tmatch = window.matchMedia( query );\r\n\t\tmatchMediaCache.set( query, match );\r\n\t\treturn match;\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n\r\n/**\r\n * Runs a media query and returns its value when it changes.\r\n *\r\n * @param {string} [query] Media Query.\r\n * @return {boolean} return value of the media query.\r\n */\r\nexport default function useMediaQuery( query ) {\r\n\tconst source = useMemo( () => {\r\n\t\tconst mediaQueryList = getMediaQueryList( query );\r\n\r\n\t\treturn {\r\n\t\t\t/** @type {(onStoreChange: () => void) => () => void} */\r\n\t\t\tsubscribe( onStoreChange ) {\r\n\t\t\t\tif ( ! mediaQueryList ) {\r\n\t\t\t\t\treturn () => {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Avoid a fatal error when browsers don't support `addEventListener` on MediaQueryList.\r\n\t\t\t\tmediaQueryList.addEventListener?.( 'change', onStoreChange );\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\tmediaQueryList.removeEventListener?.(\r\n\t\t\t\t\t\t'change',\r\n\t\t\t\t\t\tonStoreChange\r\n\t\t\t\t\t);\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tgetValue() {\r\n\t\t\t\treturn mediaQueryList?.matches ?? false;\r\n\t\t\t},\r\n\t\t};\r\n\t}, [ query ] );\r\n\r\n\treturn useSyncExternalStore(\r\n\t\tsource.subscribe,\r\n\t\tsource.getValue,\r\n\t\t() => false\r\n\t);\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,OAAO,EAAEC,oBAAoB,QAAQ,oBAAoB;AAElE,MAAMC,eAAe,GAAG,IAAIC,GAAG,CAAC,CAAC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,iBAAiBA,CAAEC,KAAK,EAAG;EACnC,IAAK,CAAEA,KAAK,EAAG;IACd,OAAO,IAAI;EACZ;EAEA,IAAIC,KAAK,GAAGJ,eAAe,CAACK,GAAG,CAAEF,KAAM,CAAC;EAExC,IAAKC,KAAK,EAAG;IACZ,OAAOA,KAAK;EACb;EAEA,IACC,OAAOE,MAAM,KAAK,WAAW,IAC7B,OAAOA,MAAM,CAACC,UAAU,KAAK,UAAU,EACtC;IACDH,KAAK,GAAGE,MAAM,CAACC,UAAU,CAAEJ,KAAM,CAAC;IAClCH,eAAe,CAACQ,GAAG,CAAEL,KAAK,EAAEC,KAAM,CAAC;IACnC,OAAOA,KAAK;EACb;EAEA,OAAO,IAAI;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASK,aAAaA,CAAEN,KAAK,EAAG;EAC9C,MAAMO,MAAM,GAAGZ,OAAO,CAAE,MAAM;IAC7B,MAAMa,cAAc,GAAGT,iBAAiB,CAAEC,KAAM,CAAC;IAEjD,OAAO;MACN;MACAS,SAASA,CAAEC,aAAa,EAAG;QAC1B,IAAK,CAAEF,cAAc,EAAG;UACvB,OAAO,MAAM,CAAC,CAAC;QAChB;;QAEA;QACAA,cAAc,CAACG,gBAAgB,GAAI,QAAQ,EAAED,aAAc,CAAC;QAC5D,OAAO,MAAM;UACZF,cAAc,CAACI,mBAAmB,GACjC,QAAQ,EACRF,aACD,CAAC;QACF,CAAC;MACF,CAAC;MACDG,QAAQA,CAAA,EAAG;QAAA,IAAAC,qBAAA;QACV,QAAAA,qBAAA,GAAON,cAAc,EAAEO,OAAO,cAAAD,qBAAA,cAAAA,qBAAA,GAAI,KAAK;MACxC;IACD,CAAC;EACF,CAAC,EAAE,CAAEd,KAAK,CAAG,CAAC;EAEd,OAAOJ,oBAAoB,CAC1BW,MAAM,CAACE,SAAS,EAChBF,MAAM,CAACM,QAAQ,EACf,MAAM,KACP,CAAC;AACF","ignoreList":[]}