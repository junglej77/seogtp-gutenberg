{"version":3,"names":["usePreferredColorScheme","usePreferredColorSchemeStyle","lightStyle","darkStyle","colorScheme","isDarkMode"],"sources":["@wordpress/compose/src/hooks/use-preferred-color-scheme-style/index.native.js"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport usePreferredColorScheme from '../use-preferred-color-scheme';\r\n\r\n/**\r\n * Selects which of the passed style objects should be applied depending on the\r\n * user's preferred color scheme.\r\n *\r\n * The \"light\" color schemed is assumed to be the default, and its styles are\r\n * always applied. The \"dark\" styles will always extend those defined for the\r\n * light case.\r\n *\r\n * @example\r\n * const light = { padding: 10, backgroundColor: 'white' };\r\n * const dark = { backgroundColor: 'black' };\r\n * usePreferredColorSchemeStyle( light, dark);\r\n * // On light mode:\r\n * // => { padding: 10, backgroundColor: 'white' }\r\n * // On dark mode:\r\n * // => { padding: 10, backgroundColor: 'black' }\r\n * @param {Object} lightStyle\r\n * @param {Object} darkStyle\r\n * @return {Object} the combined styles depending on the current color scheme\r\n */\r\nconst usePreferredColorSchemeStyle = ( lightStyle, darkStyle ) => {\r\n\tconst colorScheme = usePreferredColorScheme();\r\n\tconst isDarkMode = colorScheme === 'dark';\r\n\r\n\treturn isDarkMode ? { ...lightStyle, ...darkStyle } : lightStyle;\r\n};\r\n\r\nexport default usePreferredColorSchemeStyle;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,uBAAuB,MAAM,+BAA+B;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,4BAA4B,GAAGA,CAAEC,UAAU,EAAEC,SAAS,KAAM;EACjE,MAAMC,WAAW,GAAGJ,uBAAuB,CAAC,CAAC;EAC7C,MAAMK,UAAU,GAAGD,WAAW,KAAK,MAAM;EAEzC,OAAOC,UAAU,GAAG;IAAE,GAAGH,UAAU;IAAE,GAAGC;EAAU,CAAC,GAAGD,UAAU;AACjE,CAAC;AAED,eAAeD,4BAA4B","ignoreList":[]}