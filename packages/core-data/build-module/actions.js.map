{"version":3,"names":["fastDeepEqual","v4","uuid","apiFetch","addQueryArgs","deprecated","getNestedValue","setNestedValue","receiveItems","removeItems","receiveQueriedItems","getOrLoadEntitiesConfig","DEFAULT_ENTITY_KEY","createBatch","STORE_NAME","getSyncProvider","receiveUserQuery","queryID","users","type","Array","isArray","receiveCurrentUser","currentUser","addEntities","entities","receiveEntityRecords","kind","name","records","query","invalidateCache","edits","meta","map","record","status","title","action","receiveCurrentTheme","currentTheme","__experimentalReceiveCurrentGlobalStylesId","currentGlobalStylesId","id","__experimentalReceiveThemeBaseGlobalStyles","stylesheet","globalStyles","__experimentalReceiveThemeGlobalStyleVariations","variations","receiveThemeSupports","since","receiveThemeGlobalStyleRevisions","currentId","revisions","alternative","receiveEmbedPreview","url","preview","deleteEntityRecord","recordId","__unstableFetch","throwOnError","dispatch","configs","entityConfig","find","config","error","deletedRecord","lock","__unstableAcquireStoreLock","exclusive","hasError","path","baseURL","method","_error","__unstableReleaseStoreLock","editEntityRecord","options","select","getEntityConfig","Error","mergedEdits","getRawEntityRecord","editedRecord","getEditedEntityRecord","edit","Object","keys","reduce","acc","key","recordValue","editedRecordValue","value","undefined","window","__experimentalEnableSync","syncConfig","globalThis","IS_GUTENBERG_PLUGIN","objectId","getSyncObjectId","update","syncObjectType","undoIgnore","getUndoManager","addRecord","changes","from","to","isCached","undo","undoRecord","redo","redoRecord","__unstableCreateUndoLevel","saveEntityRecord","isAutosave","resolveSelect","entityIdKey","entries","evaluatedValue","updatedRecord","persistedRecord","getCurrentUser","currentUserId","autosavePost","getAutosave","data","includes","newRecord","receiveAutosaves","__unstablePrePersist","__experimentalBatch","requests","batch","api","add","saveEditedEntityRecord","resultPromises","request","results","Promise","all","run","hasEditsForEntityRecord","getEntityRecordNonTransientEdits","__experimentalSaveSpecifiedEntityEdits","itemsToSave","editsToSave","item","receiveUploadPermissions","hasUploadPermissions","receiveUserPermission","isAllowed","receiveUserPermissions","permissions","postId","autosaves","receiveNavigationFallbackId","fallbackId","receiveDefaultTemplateId","templateId","receiveRevisions","recordKey","revisionKey","items"],"sources":["@wordpress/core-data/src/actions.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport fastDeepEqual from 'fast-deep-equal/es6';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport { addQueryArgs } from '@wordpress/url';\r\nimport deprecated from '@wordpress/deprecated';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { getNestedValue, setNestedValue } from './utils';\r\nimport { receiveItems, removeItems, receiveQueriedItems } from './queried-data';\r\nimport { getOrLoadEntitiesConfig, DEFAULT_ENTITY_KEY } from './entities';\r\nimport { createBatch } from './batch';\r\nimport { STORE_NAME } from './name';\r\nimport { getSyncProvider } from './sync';\r\n\r\n/**\r\n * Returns an action object used in signalling that authors have been received.\r\n * Ignored from documentation as it's internal to the data store.\r\n *\r\n * @ignore\r\n *\r\n * @param {string}       queryID Query ID.\r\n * @param {Array|Object} users   Users received.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function receiveUserQuery( queryID, users ) {\r\n\treturn {\r\n\t\ttype: 'RECEIVE_USER_QUERY',\r\n\t\tusers: Array.isArray( users ) ? users : [ users ],\r\n\t\tqueryID,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action used in signalling that the current user has been received.\r\n * Ignored from documentation as it's internal to the data store.\r\n *\r\n * @ignore\r\n *\r\n * @param {Object} currentUser Current user object.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function receiveCurrentUser( currentUser ) {\r\n\treturn {\r\n\t\ttype: 'RECEIVE_CURRENT_USER',\r\n\t\tcurrentUser,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in adding new entities.\r\n *\r\n * @param {Array} entities Entities received.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function addEntities( entities ) {\r\n\treturn {\r\n\t\ttype: 'ADD_ENTITIES',\r\n\t\tentities,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that entity records have been received.\r\n *\r\n * @param {string}       kind            Kind of the received entity record.\r\n * @param {string}       name            Name of the received entity record.\r\n * @param {Array|Object} records         Records received.\r\n * @param {?Object}      query           Query Object.\r\n * @param {?boolean}     invalidateCache Should invalidate query caches.\r\n * @param {?Object}      edits           Edits to reset.\r\n * @param {?Object}      meta            Meta information about pagination.\r\n * @return {Object} Action object.\r\n */\r\nexport function receiveEntityRecords(\r\n\tkind,\r\n\tname,\r\n\trecords,\r\n\tquery,\r\n\tinvalidateCache = false,\r\n\tedits,\r\n\tmeta\r\n) {\r\n\t// Auto drafts should not have titles, but some plugins rely on them so we can't filter this\r\n\t// on the server.\r\n\tif ( kind === 'postType' ) {\r\n\t\trecords = ( Array.isArray( records ) ? records : [ records ] ).map(\r\n\t\t\t( record ) =>\r\n\t\t\t\trecord.status === 'auto-draft'\r\n\t\t\t\t\t? { ...record, title: '' }\r\n\t\t\t\t\t: record\r\n\t\t);\r\n\t}\r\n\tlet action;\r\n\tif ( query ) {\r\n\t\taction = receiveQueriedItems( records, query, edits, meta );\r\n\t} else {\r\n\t\taction = receiveItems( records, edits, meta );\r\n\t}\r\n\r\n\treturn {\r\n\t\t...action,\r\n\t\tkind,\r\n\t\tname,\r\n\t\tinvalidateCache,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that the current theme has been received.\r\n * Ignored from documentation as it's internal to the data store.\r\n *\r\n * @ignore\r\n *\r\n * @param {Object} currentTheme The current theme.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function receiveCurrentTheme( currentTheme ) {\r\n\treturn {\r\n\t\ttype: 'RECEIVE_CURRENT_THEME',\r\n\t\tcurrentTheme,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that the current global styles id has been received.\r\n * Ignored from documentation as it's internal to the data store.\r\n *\r\n * @ignore\r\n *\r\n * @param {string} currentGlobalStylesId The current global styles id.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function __experimentalReceiveCurrentGlobalStylesId(\r\n\tcurrentGlobalStylesId\r\n) {\r\n\treturn {\r\n\t\ttype: 'RECEIVE_CURRENT_GLOBAL_STYLES_ID',\r\n\t\tid: currentGlobalStylesId,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that the theme base global styles have been received\r\n * Ignored from documentation as it's internal to the data store.\r\n *\r\n * @ignore\r\n *\r\n * @param {string} stylesheet   The theme's identifier\r\n * @param {Object} globalStyles The global styles object.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function __experimentalReceiveThemeBaseGlobalStyles(\r\n\tstylesheet,\r\n\tglobalStyles\r\n) {\r\n\treturn {\r\n\t\ttype: 'RECEIVE_THEME_GLOBAL_STYLES',\r\n\t\tstylesheet,\r\n\t\tglobalStyles,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that the theme global styles variations have been received.\r\n * Ignored from documentation as it's internal to the data store.\r\n *\r\n * @ignore\r\n *\r\n * @param {string} stylesheet The theme's identifier\r\n * @param {Array}  variations The global styles variations.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function __experimentalReceiveThemeGlobalStyleVariations(\r\n\tstylesheet,\r\n\tvariations\r\n) {\r\n\treturn {\r\n\t\ttype: 'RECEIVE_THEME_GLOBAL_STYLE_VARIATIONS',\r\n\t\tstylesheet,\r\n\t\tvariations,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that the index has been received.\r\n *\r\n * @deprecated since WP 5.9, this is not useful anymore, use the selector directly.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function receiveThemeSupports() {\r\n\tdeprecated( \"wp.data.dispatch( 'core' ).receiveThemeSupports\", {\r\n\t\tsince: '5.9',\r\n\t} );\r\n\r\n\treturn {\r\n\t\ttype: 'DO_NOTHING',\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that the theme global styles CPT post revisions have been received.\r\n * Ignored from documentation as it's internal to the data store.\r\n *\r\n * @deprecated since WordPress 6.5.0. Callers should use `dispatch( 'core' ).receiveRevision` instead.\r\n *\r\n * @ignore\r\n *\r\n * @param {number} currentId The post id.\r\n * @param {Array}  revisions The global styles revisions.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function receiveThemeGlobalStyleRevisions( currentId, revisions ) {\r\n\tdeprecated(\r\n\t\t\"wp.data.dispatch( 'core' ).receiveThemeGlobalStyleRevisions()\",\r\n\t\t{\r\n\t\t\tsince: '6.5.0',\r\n\t\t\talternative: \"wp.data.dispatch( 'core' ).receiveRevisions\",\r\n\t\t}\r\n\t);\r\n\treturn {\r\n\t\ttype: 'RECEIVE_THEME_GLOBAL_STYLE_REVISIONS',\r\n\t\tcurrentId,\r\n\t\trevisions,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that the preview data for\r\n * a given URl has been received.\r\n * Ignored from documentation as it's internal to the data store.\r\n *\r\n * @ignore\r\n *\r\n * @param {string} url     URL to preview the embed for.\r\n * @param {*}      preview Preview data.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function receiveEmbedPreview( url, preview ) {\r\n\treturn {\r\n\t\ttype: 'RECEIVE_EMBED_PREVIEW',\r\n\t\turl,\r\n\t\tpreview,\r\n\t};\r\n}\r\n\r\n/**\r\n * Action triggered to delete an entity record.\r\n *\r\n * @param {string}        kind                         Kind of the deleted entity.\r\n * @param {string}        name                         Name of the deleted entity.\r\n * @param {number|string} recordId                     Record ID of the deleted entity.\r\n * @param {?Object}       query                        Special query parameters for the\r\n *                                                     DELETE API call.\r\n * @param {Object}        [options]                    Delete options.\r\n * @param {Function}      [options.__unstableFetch]    Internal use only. Function to\r\n *                                                     call instead of `apiFetch()`.\r\n *                                                     Must return a promise.\r\n * @param {boolean}       [options.throwOnError=false] If false, this action suppresses all\r\n *                                                     the exceptions. Defaults to false.\r\n */\r\nexport const deleteEntityRecord =\r\n\t(\r\n\t\tkind,\r\n\t\tname,\r\n\t\trecordId,\r\n\t\tquery,\r\n\t\t{ __unstableFetch = apiFetch, throwOnError = false } = {}\r\n\t) =>\r\n\tasync ( { dispatch } ) => {\r\n\t\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind, name ) );\r\n\t\tconst entityConfig = configs.find(\r\n\t\t\t( config ) => config.kind === kind && config.name === name\r\n\t\t);\r\n\t\tlet error;\r\n\t\tlet deletedRecord = false;\r\n\t\tif ( ! entityConfig ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst lock = await dispatch.__unstableAcquireStoreLock(\r\n\t\t\tSTORE_NAME,\r\n\t\t\t[ 'entities', 'records', kind, name, recordId ],\r\n\t\t\t{ exclusive: true }\r\n\t\t);\r\n\r\n\t\ttry {\r\n\t\t\tdispatch( {\r\n\t\t\t\ttype: 'DELETE_ENTITY_RECORD_START',\r\n\t\t\t\tkind,\r\n\t\t\t\tname,\r\n\t\t\t\trecordId,\r\n\t\t\t} );\r\n\r\n\t\t\tlet hasError = false;\r\n\t\t\ttry {\r\n\t\t\t\tlet path = `${ entityConfig.baseURL }/${ recordId }`;\r\n\r\n\t\t\t\tif ( query ) {\r\n\t\t\t\t\tpath = addQueryArgs( path, query );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdeletedRecord = await __unstableFetch( {\r\n\t\t\t\t\tpath,\r\n\t\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tawait dispatch( removeItems( kind, name, recordId, true ) );\r\n\t\t\t} catch ( _error ) {\r\n\t\t\t\thasError = true;\r\n\t\t\t\terror = _error;\r\n\t\t\t}\r\n\r\n\t\t\tdispatch( {\r\n\t\t\t\ttype: 'DELETE_ENTITY_RECORD_FINISH',\r\n\t\t\t\tkind,\r\n\t\t\t\tname,\r\n\t\t\t\trecordId,\r\n\t\t\t\terror,\r\n\t\t\t} );\r\n\r\n\t\t\tif ( hasError && throwOnError ) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\r\n\t\t\treturn deletedRecord;\r\n\t\t} finally {\r\n\t\t\tdispatch.__unstableReleaseStoreLock( lock );\r\n\t\t}\r\n\t};\r\n\r\n/**\r\n * Returns an action object that triggers an\r\n * edit to an entity record.\r\n *\r\n * @param {string}        kind                 Kind of the edited entity record.\r\n * @param {string}        name                 Name of the edited entity record.\r\n * @param {number|string} recordId             Record ID of the edited entity record.\r\n * @param {Object}        edits                The edits.\r\n * @param {Object}        options              Options for the edit.\r\n * @param {boolean}       [options.undoIgnore] Whether to ignore the edit in undo history or not.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const editEntityRecord =\r\n\t( kind, name, recordId, edits, options = {} ) =>\r\n\t( { select, dispatch } ) => {\r\n\t\tconst entityConfig = select.getEntityConfig( kind, name );\r\n\t\tif ( ! entityConfig ) {\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`The entity being edited (${ kind }, ${ name }) does not have a loaded config.`\r\n\t\t\t);\r\n\t\t}\r\n\t\tconst { mergedEdits = {} } = entityConfig;\r\n\t\tconst record = select.getRawEntityRecord( kind, name, recordId );\r\n\t\tconst editedRecord = select.getEditedEntityRecord(\r\n\t\t\tkind,\r\n\t\t\tname,\r\n\t\t\trecordId\r\n\t\t);\r\n\r\n\t\tconst edit = {\r\n\t\t\tkind,\r\n\t\t\tname,\r\n\t\t\trecordId,\r\n\t\t\t// Clear edits when they are equal to their persisted counterparts\r\n\t\t\t// so that the property is not considered dirty.\r\n\t\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\r\n\t\t\t\tconst recordValue = record[ key ];\r\n\t\t\t\tconst editedRecordValue = editedRecord[ key ];\r\n\t\t\t\tconst value = mergedEdits[ key ]\r\n\t\t\t\t\t? { ...editedRecordValue, ...edits[ key ] }\r\n\t\t\t\t\t: edits[ key ];\r\n\t\t\t\tacc[ key ] = fastDeepEqual( recordValue, value )\r\n\t\t\t\t\t? undefined\r\n\t\t\t\t\t: value;\r\n\t\t\t\treturn acc;\r\n\t\t\t}, {} ),\r\n\t\t};\r\n\t\tif ( window.__experimentalEnableSync && entityConfig.syncConfig ) {\r\n\t\t\tif ( globalThis.IS_GUTENBERG_PLUGIN ) {\r\n\t\t\t\tconst objectId = entityConfig.getSyncObjectId( recordId );\r\n\t\t\t\tgetSyncProvider().update(\r\n\t\t\t\t\tentityConfig.syncObjectType + '--edit',\r\n\t\t\t\t\tobjectId,\r\n\t\t\t\t\tedit.edits\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif ( ! options.undoIgnore ) {\r\n\t\t\t\tselect.getUndoManager().addRecord(\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tid: { kind, name, recordId },\r\n\t\t\t\t\t\t\tchanges: Object.keys( edits ).reduce(\r\n\t\t\t\t\t\t\t\t( acc, key ) => {\r\n\t\t\t\t\t\t\t\t\tacc[ key ] = {\r\n\t\t\t\t\t\t\t\t\t\tfrom: editedRecord[ key ],\r\n\t\t\t\t\t\t\t\t\t\tto: edits[ key ],\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\treturn acc;\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{}\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\toptions.isCached\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tdispatch( {\r\n\t\t\t\ttype: 'EDIT_ENTITY_RECORD',\r\n\t\t\t\t...edit,\r\n\t\t\t} );\r\n\t\t}\r\n\t};\r\n\r\n/**\r\n * Action triggered to undo the last edit to\r\n * an entity record, if any.\r\n */\r\nexport const undo =\r\n\t() =>\r\n\t( { select, dispatch } ) => {\r\n\t\tconst undoRecord = select.getUndoManager().undo();\r\n\t\tif ( ! undoRecord ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdispatch( {\r\n\t\t\ttype: 'UNDO',\r\n\t\t\trecord: undoRecord,\r\n\t\t} );\r\n\t};\r\n\r\n/**\r\n * Action triggered to redo the last undoed\r\n * edit to an entity record, if any.\r\n */\r\nexport const redo =\r\n\t() =>\r\n\t( { select, dispatch } ) => {\r\n\t\tconst redoRecord = select.getUndoManager().redo();\r\n\t\tif ( ! redoRecord ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdispatch( {\r\n\t\t\ttype: 'REDO',\r\n\t\t\trecord: redoRecord,\r\n\t\t} );\r\n\t};\r\n\r\n/**\r\n * Forces the creation of a new undo level.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const __unstableCreateUndoLevel =\r\n\t() =>\r\n\t( { select } ) => {\r\n\t\tselect.getUndoManager().addRecord();\r\n\t};\r\n\r\n/**\r\n * Action triggered to save an entity record.\r\n *\r\n * @param {string}   kind                         Kind of the received entity.\r\n * @param {string}   name                         Name of the received entity.\r\n * @param {Object}   record                       Record to be saved.\r\n * @param {Object}   options                      Saving options.\r\n * @param {boolean}  [options.isAutosave=false]   Whether this is an autosave.\r\n * @param {Function} [options.__unstableFetch]    Internal use only. Function to\r\n *                                                call instead of `apiFetch()`.\r\n *                                                Must return a promise.\r\n * @param {boolean}  [options.throwOnError=false] If false, this action suppresses all\r\n *                                                the exceptions. Defaults to false.\r\n */\r\nexport const saveEntityRecord =\r\n\t(\r\n\t\tkind,\r\n\t\tname,\r\n\t\trecord,\r\n\t\t{\r\n\t\t\tisAutosave = false,\r\n\t\t\t__unstableFetch = apiFetch,\r\n\t\t\tthrowOnError = false,\r\n\t\t} = {}\r\n\t) =>\r\n\tasync ( { select, resolveSelect, dispatch } ) => {\r\n\t\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind, name ) );\r\n\t\tconst entityConfig = configs.find(\r\n\t\t\t( config ) => config.kind === kind && config.name === name\r\n\t\t);\r\n\t\tif ( ! entityConfig ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst entityIdKey = entityConfig.key || DEFAULT_ENTITY_KEY;\r\n\t\tconst recordId = record[ entityIdKey ];\r\n\r\n\t\tconst lock = await dispatch.__unstableAcquireStoreLock(\r\n\t\t\tSTORE_NAME,\r\n\t\t\t[ 'entities', 'records', kind, name, recordId || uuid() ],\r\n\t\t\t{ exclusive: true }\r\n\t\t);\r\n\r\n\t\ttry {\r\n\t\t\t// Evaluate optimized edits.\r\n\t\t\t// (Function edits that should be evaluated on save to avoid expensive computations on every edit.)\r\n\t\t\tfor ( const [ key, value ] of Object.entries( record ) ) {\r\n\t\t\t\tif ( typeof value === 'function' ) {\r\n\t\t\t\t\tconst evaluatedValue = value(\r\n\t\t\t\t\t\tselect.getEditedEntityRecord( kind, name, recordId )\r\n\t\t\t\t\t);\r\n\t\t\t\t\tdispatch.editEntityRecord(\r\n\t\t\t\t\t\tkind,\r\n\t\t\t\t\t\tname,\r\n\t\t\t\t\t\trecordId,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t[ key ]: evaluatedValue,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{ undoIgnore: true }\r\n\t\t\t\t\t);\r\n\t\t\t\t\trecord[ key ] = evaluatedValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdispatch( {\r\n\t\t\t\ttype: 'SAVE_ENTITY_RECORD_START',\r\n\t\t\t\tkind,\r\n\t\t\t\tname,\r\n\t\t\t\trecordId,\r\n\t\t\t\tisAutosave,\r\n\t\t\t} );\r\n\t\t\tlet updatedRecord;\r\n\t\t\tlet error;\r\n\t\t\tlet hasError = false;\r\n\t\t\ttry {\r\n\t\t\t\tconst path = `${ entityConfig.baseURL }${\r\n\t\t\t\t\trecordId ? '/' + recordId : ''\r\n\t\t\t\t}`;\r\n\t\t\t\tconst persistedRecord = select.getRawEntityRecord(\r\n\t\t\t\t\tkind,\r\n\t\t\t\t\tname,\r\n\t\t\t\t\trecordId\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif ( isAutosave ) {\r\n\t\t\t\t\t// Most of this autosave logic is very specific to posts.\r\n\t\t\t\t\t// This is fine for now as it is the only supported autosave,\r\n\t\t\t\t\t// but ideally this should all be handled in the back end,\r\n\t\t\t\t\t// so the client just sends and receives objects.\r\n\t\t\t\t\tconst currentUser = select.getCurrentUser();\r\n\t\t\t\t\tconst currentUserId = currentUser\r\n\t\t\t\t\t\t? currentUser.id\r\n\t\t\t\t\t\t: undefined;\r\n\t\t\t\t\tconst autosavePost = await resolveSelect.getAutosave(\r\n\t\t\t\t\t\tpersistedRecord.type,\r\n\t\t\t\t\t\tpersistedRecord.id,\r\n\t\t\t\t\t\tcurrentUserId\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// Autosaves need all expected fields to be present.\r\n\t\t\t\t\t// So we fallback to the previous autosave and then\r\n\t\t\t\t\t// to the actual persisted entity if the edits don't\r\n\t\t\t\t\t// have a value.\r\n\t\t\t\t\tlet data = {\r\n\t\t\t\t\t\t...persistedRecord,\r\n\t\t\t\t\t\t...autosavePost,\r\n\t\t\t\t\t\t...record,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tdata = Object.keys( data ).reduce(\r\n\t\t\t\t\t\t( acc, key ) => {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t'title',\r\n\t\t\t\t\t\t\t\t\t'excerpt',\r\n\t\t\t\t\t\t\t\t\t'content',\r\n\t\t\t\t\t\t\t\t\t'meta',\r\n\t\t\t\t\t\t\t\t].includes( key )\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tacc[ key ] = data[ key ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn acc;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// Do not update the `status` if we have edited it when auto saving.\r\n\t\t\t\t\t\t\t// It's very important to let the user explicitly save this change,\r\n\t\t\t\t\t\t\t// because it can lead to unexpected results. An example would be to\r\n\t\t\t\t\t\t\t// have a draft post and change the status to publish.\r\n\t\t\t\t\t\t\tstatus:\r\n\t\t\t\t\t\t\t\tdata.status === 'auto-draft'\r\n\t\t\t\t\t\t\t\t\t? 'draft'\r\n\t\t\t\t\t\t\t\t\t: undefined,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tupdatedRecord = await __unstableFetch( {\r\n\t\t\t\t\t\tpath: `${ path }/autosaves`,\r\n\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\tdata,\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t// An autosave may be processed by the server as a regular save\r\n\t\t\t\t\t// when its update is requested by the author and the post had\r\n\t\t\t\t\t// draft or auto-draft status.\r\n\t\t\t\t\tif ( persistedRecord.id === updatedRecord.id ) {\r\n\t\t\t\t\t\tlet newRecord = {\r\n\t\t\t\t\t\t\t...persistedRecord,\r\n\t\t\t\t\t\t\t...data,\r\n\t\t\t\t\t\t\t...updatedRecord,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tnewRecord = Object.keys( newRecord ).reduce(\r\n\t\t\t\t\t\t\t( acc, key ) => {\r\n\t\t\t\t\t\t\t\t// These properties are persisted in autosaves.\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t[ 'title', 'excerpt', 'content' ].includes(\r\n\t\t\t\t\t\t\t\t\t\tkey\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\tacc[ key ] = newRecord[ key ];\r\n\t\t\t\t\t\t\t\t} else if ( key === 'status' ) {\r\n\t\t\t\t\t\t\t\t\t// Status is only persisted in autosaves when going from\r\n\t\t\t\t\t\t\t\t\t// \"auto-draft\" to \"draft\".\r\n\t\t\t\t\t\t\t\t\tacc[ key ] =\r\n\t\t\t\t\t\t\t\t\t\tpersistedRecord.status ===\r\n\t\t\t\t\t\t\t\t\t\t\t'auto-draft' &&\r\n\t\t\t\t\t\t\t\t\t\tnewRecord.status === 'draft'\r\n\t\t\t\t\t\t\t\t\t\t\t? newRecord.status\r\n\t\t\t\t\t\t\t\t\t\t\t: persistedRecord.status;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// These properties are not persisted in autosaves.\r\n\t\t\t\t\t\t\t\t\tacc[ key ] = persistedRecord[ key ];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn acc;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tdispatch.receiveEntityRecords(\r\n\t\t\t\t\t\t\tkind,\r\n\t\t\t\t\t\t\tname,\r\n\t\t\t\t\t\t\tnewRecord,\r\n\t\t\t\t\t\t\tundefined,\r\n\t\t\t\t\t\t\ttrue\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdispatch.receiveAutosaves(\r\n\t\t\t\t\t\t\tpersistedRecord.id,\r\n\t\t\t\t\t\t\tupdatedRecord\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet edits = record;\r\n\t\t\t\t\tif ( entityConfig.__unstablePrePersist ) {\r\n\t\t\t\t\t\tedits = {\r\n\t\t\t\t\t\t\t...edits,\r\n\t\t\t\t\t\t\t...entityConfig.__unstablePrePersist(\r\n\t\t\t\t\t\t\t\tpersistedRecord,\r\n\t\t\t\t\t\t\t\tedits\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdatedRecord = await __unstableFetch( {\r\n\t\t\t\t\t\tpath,\r\n\t\t\t\t\t\tmethod: recordId ? 'PUT' : 'POST',\r\n\t\t\t\t\t\tdata: edits,\r\n\t\t\t\t\t} );\r\n\t\t\t\t\tdispatch.receiveEntityRecords(\r\n\t\t\t\t\t\tkind,\r\n\t\t\t\t\t\tname,\r\n\t\t\t\t\t\tupdatedRecord,\r\n\t\t\t\t\t\tundefined,\r\n\t\t\t\t\t\ttrue,\r\n\t\t\t\t\t\tedits\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t} catch ( _error ) {\r\n\t\t\t\thasError = true;\r\n\t\t\t\terror = _error;\r\n\t\t\t}\r\n\t\t\tdispatch( {\r\n\t\t\t\ttype: 'SAVE_ENTITY_RECORD_FINISH',\r\n\t\t\t\tkind,\r\n\t\t\t\tname,\r\n\t\t\t\trecordId,\r\n\t\t\t\terror,\r\n\t\t\t\tisAutosave,\r\n\t\t\t} );\r\n\r\n\t\t\tif ( hasError && throwOnError ) {\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\r\n\t\t\treturn updatedRecord;\r\n\t\t} finally {\r\n\t\t\tdispatch.__unstableReleaseStoreLock( lock );\r\n\t\t}\r\n\t};\r\n\r\n/**\r\n * Runs multiple core-data actions at the same time using one API request.\r\n *\r\n * Example:\r\n *\r\n * ```\r\n * const [ savedRecord, updatedRecord, deletedRecord ] =\r\n *   await dispatch( 'core' ).__experimentalBatch( [\r\n *     ( { saveEntityRecord } ) => saveEntityRecord( 'root', 'widget', widget ),\r\n *     ( { saveEditedEntityRecord } ) => saveEntityRecord( 'root', 'widget', 123 ),\r\n *     ( { deleteEntityRecord } ) => deleteEntityRecord( 'root', 'widget', 123, null ),\r\n *   ] );\r\n * ```\r\n *\r\n * @param {Array} requests Array of functions which are invoked simultaneously.\r\n *                         Each function is passed an object containing\r\n *                         `saveEntityRecord`, `saveEditedEntityRecord`, and\r\n *                         `deleteEntityRecord`.\r\n *\r\n * @return {(thunkArgs: Object) => Promise} A promise that resolves to an array containing the return\r\n *                                          values of each function given in `requests`.\r\n */\r\nexport const __experimentalBatch =\r\n\t( requests ) =>\r\n\tasync ( { dispatch } ) => {\r\n\t\tconst batch = createBatch();\r\n\t\tconst api = {\r\n\t\t\tsaveEntityRecord( kind, name, record, options ) {\r\n\t\t\t\treturn batch.add( ( add ) =>\r\n\t\t\t\t\tdispatch.saveEntityRecord( kind, name, record, {\r\n\t\t\t\t\t\t...options,\r\n\t\t\t\t\t\t__unstableFetch: add,\r\n\t\t\t\t\t} )\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\tsaveEditedEntityRecord( kind, name, recordId, options ) {\r\n\t\t\t\treturn batch.add( ( add ) =>\r\n\t\t\t\t\tdispatch.saveEditedEntityRecord( kind, name, recordId, {\r\n\t\t\t\t\t\t...options,\r\n\t\t\t\t\t\t__unstableFetch: add,\r\n\t\t\t\t\t} )\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\tdeleteEntityRecord( kind, name, recordId, query, options ) {\r\n\t\t\t\treturn batch.add( ( add ) =>\r\n\t\t\t\t\tdispatch.deleteEntityRecord( kind, name, recordId, query, {\r\n\t\t\t\t\t\t...options,\r\n\t\t\t\t\t\t__unstableFetch: add,\r\n\t\t\t\t\t} )\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t};\r\n\t\tconst resultPromises = requests.map( ( request ) => request( api ) );\r\n\t\tconst [ , ...results ] = await Promise.all( [\r\n\t\t\tbatch.run(),\r\n\t\t\t...resultPromises,\r\n\t\t] );\r\n\t\treturn results;\r\n\t};\r\n\r\n/**\r\n * Action triggered to save an entity record's edits.\r\n *\r\n * @param {string}  kind     Kind of the entity.\r\n * @param {string}  name     Name of the entity.\r\n * @param {Object}  recordId ID of the record.\r\n * @param {Object=} options  Saving options.\r\n */\r\nexport const saveEditedEntityRecord =\r\n\t( kind, name, recordId, options ) =>\r\n\tasync ( { select, dispatch } ) => {\r\n\t\tif ( ! select.hasEditsForEntityRecord( kind, name, recordId ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind, name ) );\r\n\t\tconst entityConfig = configs.find(\r\n\t\t\t( config ) => config.kind === kind && config.name === name\r\n\t\t);\r\n\t\tif ( ! entityConfig ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst entityIdKey = entityConfig.key || DEFAULT_ENTITY_KEY;\r\n\r\n\t\tconst edits = select.getEntityRecordNonTransientEdits(\r\n\t\t\tkind,\r\n\t\t\tname,\r\n\t\t\trecordId\r\n\t\t);\r\n\t\tconst record = { [ entityIdKey ]: recordId, ...edits };\r\n\t\treturn await dispatch.saveEntityRecord( kind, name, record, options );\r\n\t};\r\n/**\r\n * Action triggered to save only specified properties for the entity.\r\n *\r\n * @param {string}        kind        Kind of the entity.\r\n * @param {string}        name        Name of the entity.\r\n * @param {number|string} recordId    ID of the record.\r\n * @param {Array}         itemsToSave List of entity properties or property paths to save.\r\n * @param {Object}        options     Saving options.\r\n */\r\nexport const __experimentalSaveSpecifiedEntityEdits =\r\n\t( kind, name, recordId, itemsToSave, options ) =>\r\n\tasync ( { select, dispatch } ) => {\r\n\t\tif ( ! select.hasEditsForEntityRecord( kind, name, recordId ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst edits = select.getEntityRecordNonTransientEdits(\r\n\t\t\tkind,\r\n\t\t\tname,\r\n\t\t\trecordId\r\n\t\t);\r\n\t\tconst editsToSave = {};\r\n\r\n\t\tfor ( const item of itemsToSave ) {\r\n\t\t\tsetNestedValue( editsToSave, item, getNestedValue( edits, item ) );\r\n\t\t}\r\n\r\n\t\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind, name ) );\r\n\t\tconst entityConfig = configs.find(\r\n\t\t\t( config ) => config.kind === kind && config.name === name\r\n\t\t);\r\n\r\n\t\tconst entityIdKey = entityConfig?.key || DEFAULT_ENTITY_KEY;\r\n\r\n\t\t// If a record key is provided then update the existing record.\r\n\t\t// This necessitates providing `recordKey` to saveEntityRecord as part of the\r\n\t\t// `record` argument (here called `editsToSave`) to stop that action creating\r\n\t\t// a new record and instead cause it to update the existing record.\r\n\t\tif ( recordId ) {\r\n\t\t\teditsToSave[ entityIdKey ] = recordId;\r\n\t\t}\r\n\t\treturn await dispatch.saveEntityRecord(\r\n\t\t\tkind,\r\n\t\t\tname,\r\n\t\t\teditsToSave,\r\n\t\t\toptions\r\n\t\t);\r\n\t};\r\n\r\n/**\r\n * Returns an action object used in signalling that Upload permissions have been received.\r\n *\r\n * @deprecated since WP 5.9, use receiveUserPermission instead.\r\n *\r\n * @param {boolean} hasUploadPermissions Does the user have permission to upload files?\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function receiveUploadPermissions( hasUploadPermissions ) {\r\n\tdeprecated( \"wp.data.dispatch( 'core' ).receiveUploadPermissions\", {\r\n\t\tsince: '5.9',\r\n\t\talternative: 'receiveUserPermission',\r\n\t} );\r\n\r\n\treturn receiveUserPermission( 'create/media', hasUploadPermissions );\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that the current user has\r\n * permission to perform an action on a REST resource.\r\n * Ignored from documentation as it's internal to the data store.\r\n *\r\n * @ignore\r\n *\r\n * @param {string}  key       A key that represents the action and REST resource.\r\n * @param {boolean} isAllowed Whether or not the user can perform the action.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function receiveUserPermission( key, isAllowed ) {\r\n\treturn {\r\n\t\ttype: 'RECEIVE_USER_PERMISSION',\r\n\t\tkey,\r\n\t\tisAllowed,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that the current user has\r\n * permission to perform an action on a REST resource. Ignored from\r\n * documentation as it's internal to the data store.\r\n *\r\n * @ignore\r\n *\r\n * @param {Object<string, boolean>} permissions An object where keys represent\r\n *                                              actions and REST resources, and\r\n *                                              values indicate whether the user\r\n *                                              is allowed to perform the\r\n *                                              action.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function receiveUserPermissions( permissions ) {\r\n\treturn {\r\n\t\ttype: 'RECEIVE_USER_PERMISSIONS',\r\n\t\tpermissions,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that the autosaves for a\r\n * post have been received.\r\n * Ignored from documentation as it's internal to the data store.\r\n *\r\n * @ignore\r\n *\r\n * @param {number}       postId    The id of the post that is parent to the autosave.\r\n * @param {Array|Object} autosaves An array of autosaves or singular autosave object.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function receiveAutosaves( postId, autosaves ) {\r\n\treturn {\r\n\t\ttype: 'RECEIVE_AUTOSAVES',\r\n\t\tpostId,\r\n\t\tautosaves: Array.isArray( autosaves ) ? autosaves : [ autosaves ],\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object signalling that the fallback Navigation\r\n * Menu id has been received.\r\n *\r\n * @param {integer} fallbackId the id of the fallback Navigation Menu\r\n * @return {Object} Action object.\r\n */\r\nexport function receiveNavigationFallbackId( fallbackId ) {\r\n\treturn {\r\n\t\ttype: 'RECEIVE_NAVIGATION_FALLBACK_ID',\r\n\t\tfallbackId,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used to set the template for a given query.\r\n *\r\n * @param {Object} query      The lookup query.\r\n * @param {string} templateId The resolved template id.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function receiveDefaultTemplateId( query, templateId ) {\r\n\treturn {\r\n\t\ttype: 'RECEIVE_DEFAULT_TEMPLATE',\r\n\t\tquery,\r\n\t\ttemplateId,\r\n\t};\r\n}\r\n\r\n/**\r\n * Action triggered to receive revision items.\r\n *\r\n * @param {string}        kind            Kind of the received entity record revisions.\r\n * @param {string}        name            Name of the received entity record revisions.\r\n * @param {number|string} recordKey       The key of the entity record whose revisions you want to fetch.\r\n * @param {Array|Object}  records         Revisions received.\r\n * @param {?Object}       query           Query Object.\r\n * @param {?boolean}      invalidateCache Should invalidate query caches.\r\n * @param {?Object}       meta            Meta information about pagination.\r\n */\r\nexport const receiveRevisions =\r\n\t( kind, name, recordKey, records, query, invalidateCache = false, meta ) =>\r\n\tasync ( { dispatch } ) => {\r\n\t\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind, name ) );\r\n\t\tconst entityConfig = configs.find(\r\n\t\t\t( config ) => config.kind === kind && config.name === name\r\n\t\t);\r\n\t\tconst key =\r\n\t\t\tentityConfig && entityConfig?.revisionKey\r\n\t\t\t\t? entityConfig.revisionKey\r\n\t\t\t\t: DEFAULT_ENTITY_KEY;\r\n\r\n\t\tdispatch( {\r\n\t\t\ttype: 'RECEIVE_ITEM_REVISIONS',\r\n\t\t\tkey,\r\n\t\t\titems: Array.isArray( records ) ? records : [ records ],\r\n\t\t\trecordKey,\r\n\t\t\tmeta,\r\n\t\t\tquery,\r\n\t\t\tkind,\r\n\t\t\tname,\r\n\t\t\tinvalidateCache,\r\n\t\t} );\r\n\t};\r\n"],"mappings":"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","ignoreList":[]}