{"version":3,"names":["apiFetch","maxItems","chunk","arr","chunkSize","tmp","cache","length","push","splice","defaultProcessor","requests","preflightResponse","path","method","endpoints","args","results","batchRequests","batchResponse","data","validation","map","request","body","headers","batchResults","failed","responses","response","error","result","status","output"],"sources":["@wordpress/core-data/src/batch/default-processor.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport apiFetch from '@wordpress/api-fetch';\r\n\r\n/**\r\n * Maximum number of requests to place in a single batch request. Obtained by\r\n * sending a preflight OPTIONS request to /batch/v1/.\r\n *\r\n * @type {number?}\r\n */\r\nlet maxItems = null;\r\n\r\nfunction chunk( arr, chunkSize ) {\r\n\tconst tmp = [ ...arr ];\r\n\tconst cache = [];\r\n\twhile ( tmp.length ) {\r\n\t\tcache.push( tmp.splice( 0, chunkSize ) );\r\n\t}\r\n\r\n\treturn cache;\r\n}\r\n\r\n/**\r\n * Default batch processor. Sends its input requests to /batch/v1.\r\n *\r\n * @param {Array} requests List of API requests to perform at once.\r\n *\r\n * @return {Promise} Promise that resolves to a list of objects containing\r\n *                   either `output` (if that request was successful) or `error`\r\n *                   (if not ).\r\n */\r\nexport default async function defaultProcessor( requests ) {\r\n\tif ( maxItems === null ) {\r\n\t\tconst preflightResponse = await apiFetch( {\r\n\t\t\tpath: '/batch/v1',\r\n\t\t\tmethod: 'OPTIONS',\r\n\t\t} );\r\n\t\tmaxItems = preflightResponse.endpoints[ 0 ].args.requests.maxItems;\r\n\t}\r\n\r\n\tconst results = [];\r\n\r\n\t// @ts-ignore We would have crashed or never gotten to this point if we hadn't received the maxItems count.\r\n\tfor ( const batchRequests of chunk( requests, maxItems ) ) {\r\n\t\tconst batchResponse = await apiFetch( {\r\n\t\t\tpath: '/batch/v1',\r\n\t\t\tmethod: 'POST',\r\n\t\t\tdata: {\r\n\t\t\t\tvalidation: 'require-all-validate',\r\n\t\t\t\trequests: batchRequests.map( ( request ) => ( {\r\n\t\t\t\t\tpath: request.path,\r\n\t\t\t\t\tbody: request.data, // Rename 'data' to 'body'.\r\n\t\t\t\t\tmethod: request.method,\r\n\t\t\t\t\theaders: request.headers,\r\n\t\t\t\t} ) ),\r\n\t\t\t},\r\n\t\t} );\r\n\r\n\t\tlet batchResults;\r\n\r\n\t\tif ( batchResponse.failed ) {\r\n\t\t\tbatchResults = batchResponse.responses.map( ( response ) => ( {\r\n\t\t\t\terror: response?.body,\r\n\t\t\t} ) );\r\n\t\t} else {\r\n\t\t\tbatchResults = batchResponse.responses.map( ( response ) => {\r\n\t\t\t\tconst result = {};\r\n\t\t\t\tif ( response.status >= 200 && response.status < 300 ) {\r\n\t\t\t\t\tresult.output = response.body;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.error = response.body;\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tresults.push( ...batchResults );\r\n\t}\r\n\r\n\treturn results;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,QAAQ,MAAM,sBAAsB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,QAAQ,GAAG,IAAI;AAEnB,SAASC,KAAKA,CAAEC,GAAG,EAAEC,SAAS,EAAG;EAChC,MAAMC,GAAG,GAAG,CAAE,GAAGF,GAAG,CAAE;EACtB,MAAMG,KAAK,GAAG,EAAE;EAChB,OAAQD,GAAG,CAACE,MAAM,EAAG;IACpBD,KAAK,CAACE,IAAI,CAAEH,GAAG,CAACI,MAAM,CAAE,CAAC,EAAEL,SAAU,CAAE,CAAC;EACzC;EAEA,OAAOE,KAAK;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAeI,gBAAgBA,CAAEC,QAAQ,EAAG;EAC1D,IAAKV,QAAQ,KAAK,IAAI,EAAG;IACxB,MAAMW,iBAAiB,GAAG,MAAMZ,QAAQ,CAAE;MACzCa,IAAI,EAAE,WAAW;MACjBC,MAAM,EAAE;IACT,CAAE,CAAC;IACHb,QAAQ,GAAGW,iBAAiB,CAACG,SAAS,CAAE,CAAC,CAAE,CAACC,IAAI,CAACL,QAAQ,CAACV,QAAQ;EACnE;EAEA,MAAMgB,OAAO,GAAG,EAAE;;EAElB;EACA,KAAM,MAAMC,aAAa,IAAIhB,KAAK,CAAES,QAAQ,EAAEV,QAAS,CAAC,EAAG;IAC1D,MAAMkB,aAAa,GAAG,MAAMnB,QAAQ,CAAE;MACrCa,IAAI,EAAE,WAAW;MACjBC,MAAM,EAAE,MAAM;MACdM,IAAI,EAAE;QACLC,UAAU,EAAE,sBAAsB;QAClCV,QAAQ,EAAEO,aAAa,CAACI,GAAG,CAAIC,OAAO,KAAQ;UAC7CV,IAAI,EAAEU,OAAO,CAACV,IAAI;UAClBW,IAAI,EAAED,OAAO,CAACH,IAAI;UAAE;UACpBN,MAAM,EAAES,OAAO,CAACT,MAAM;UACtBW,OAAO,EAAEF,OAAO,CAACE;QAClB,CAAC,CAAG;MACL;IACD,CAAE,CAAC;IAEH,IAAIC,YAAY;IAEhB,IAAKP,aAAa,CAACQ,MAAM,EAAG;MAC3BD,YAAY,GAAGP,aAAa,CAACS,SAAS,CAACN,GAAG,CAAIO,QAAQ,KAAQ;QAC7DC,KAAK,EAAED,QAAQ,EAAEL;MAClB,CAAC,CAAG,CAAC;IACN,CAAC,MAAM;MACNE,YAAY,GAAGP,aAAa,CAACS,SAAS,CAACN,GAAG,CAAIO,QAAQ,IAAM;QAC3D,MAAME,MAAM,GAAG,CAAC,CAAC;QACjB,IAAKF,QAAQ,CAACG,MAAM,IAAI,GAAG,IAAIH,QAAQ,CAACG,MAAM,GAAG,GAAG,EAAG;UACtDD,MAAM,CAACE,MAAM,GAAGJ,QAAQ,CAACL,IAAI;QAC9B,CAAC,MAAM;UACNO,MAAM,CAACD,KAAK,GAAGD,QAAQ,CAACL,IAAI;QAC7B;QACA,OAAOO,MAAM;MACd,CAAE,CAAC;IACJ;IAEAd,OAAO,CAACT,IAAI,CAAE,GAAGkB,YAAa,CAAC;EAChC;EAEA,OAAOT,OAAO;AACf","ignoreList":[]}