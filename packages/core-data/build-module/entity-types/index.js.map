{"version":3,"names":[],"sources":["@wordpress/core-data/src/entity-types/index.ts"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport type { Context, Updatable } from './helpers';\r\nimport type { Attachment } from './attachment';\r\nimport type { Comment } from './comment';\r\nimport type { GlobalStylesRevision } from './global-styles-revision';\r\nimport type { MenuLocation } from './menu-location';\r\nimport type { NavMenu } from './nav-menu';\r\nimport type { NavMenuItem } from './nav-menu-item';\r\nimport type { Page } from './page';\r\nimport type { Plugin } from './plugin';\r\nimport type { Post } from './post';\r\nimport type { PostRevision } from './post-revision';\r\nimport type { Settings } from './settings';\r\nimport type { Sidebar } from './sidebar';\r\nimport type { Taxonomy } from './taxonomy';\r\nimport type { Theme } from './theme';\r\nimport type { User } from './user';\r\nimport type { Type } from './type';\r\nimport type { Widget } from './widget';\r\nimport type { WidgetType } from './widget-type';\r\nimport type { WpTemplate } from './wp-template';\r\nimport type { WpTemplatePart } from './wp-template-part';\r\n\r\nexport type { BaseEntityRecords } from './base-entity-records';\r\n\r\nexport type {\r\n\tAttachment,\r\n\tComment,\r\n\tContext,\r\n\tGlobalStylesRevision,\r\n\tMenuLocation,\r\n\tNavMenu,\r\n\tNavMenuItem,\r\n\tPage,\r\n\tPlugin,\r\n\tPost,\r\n\tPostRevision,\r\n\tSettings,\r\n\tSidebar,\r\n\tTaxonomy,\r\n\tTheme,\r\n\tUpdatable,\r\n\tUser,\r\n\tType,\r\n\tWidget,\r\n\tWidgetType,\r\n\tWpTemplate,\r\n\tWpTemplatePart,\r\n};\r\n\r\n/**\r\n * An interface that may be extended to add types for new entities. Each entry\r\n * must be a union of entity definitions adhering to the EntityInterface type.\r\n *\r\n * Example:\r\n *\r\n * ```ts\r\n * import type { Context } from '@wordpress/core-data';\r\n * // ...\r\n *\r\n * interface Client {\r\n *   id: number;\r\n *   name: string;\r\n *   // ...\r\n * }\r\n *\r\n * interface Order< C extends Context > {\r\n *   id: number;\r\n *   name: string;\r\n *   // ...\r\n * }\r\n *\r\n * declare module '@wordpress/core-data' {\r\n *     export interface PerPackageEntityRecords< C extends Context > {\r\n *         myPlugin: Client | Order<C>>\r\n *     }\r\n * }\r\n *\r\n * const c = getEntityRecord<Order>( 'myPlugin', 'order', 15 );\r\n * // c is of the type Order\r\n * ```\r\n */\r\nexport interface PerPackageEntityRecords< C extends Context > {\r\n\tcore:\r\n\t\t| Attachment< C >\r\n\t\t| Comment< C >\r\n\t\t| GlobalStylesRevision< C >\r\n\t\t| MenuLocation< C >\r\n\t\t| NavMenu< C >\r\n\t\t| NavMenuItem< C >\r\n\t\t| Page< C >\r\n\t\t| Plugin< C >\r\n\t\t| Post< C >\r\n\t\t| PostRevision< C >\r\n\t\t| Settings< C >\r\n\t\t| Sidebar< C >\r\n\t\t| Taxonomy< C >\r\n\t\t| Theme< C >\r\n\t\t| User< C >\r\n\t\t| Type< C >\r\n\t\t| Widget< C >\r\n\t\t| WidgetType< C >\r\n\t\t| WpTemplate< C >\r\n\t\t| WpTemplatePart< C >;\r\n}\r\n\r\n/**\r\n * A union of all known record types.\r\n */\r\nexport type EntityRecord< C extends Context = 'edit' > =\r\n\tPerPackageEntityRecords< C >[ keyof PerPackageEntityRecords< C > ];\r\n"],"mappings":"","ignoreList":[]}