{"version":3,"names":[],"sources":["@wordpress/core-data/src/entity-types/type.ts"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport type { Context, ContextualField, OmitNevers } from './helpers';\r\n\r\nimport type { BaseEntityRecords as _BaseEntityRecords } from './base-entity-records';\r\n\r\ndeclare module './base-entity-records' {\r\n\texport namespace BaseEntityRecords {\r\n\t\texport interface Type< C extends Context > {\r\n\t\t\t/**\r\n\t\t\t * All capabilities used by the post type.\r\n\t\t\t */\r\n\t\t\tcapabilities: ContextualField<\r\n\t\t\t\tRecord< string, string >,\r\n\t\t\t\t'edit',\r\n\t\t\t\tC\r\n\t\t\t>;\r\n\t\t\t/**\r\n\t\t\t * A human-readable description of the post type.\r\n\t\t\t */\r\n\t\t\tdescription: ContextualField< string, 'view' | 'edit', C >;\r\n\t\t\t/**\r\n\t\t\t * Whether or not the post type should have children.\r\n\t\t\t */\r\n\t\t\thierarchical: ContextualField< boolean, 'view' | 'edit', C >;\r\n\t\t\t/**\r\n\t\t\t * Whether or not the post type can be viewed.\r\n\t\t\t */\r\n\t\t\tviewable: ContextualField< boolean, 'edit', C >;\r\n\t\t\t/**\r\n\t\t\t * Human-readable labels for the post type for various contexts.\r\n\t\t\t */\r\n\t\t\tlabels: ContextualField< Record< string, string >, 'edit', C >;\r\n\t\t\t/**\r\n\t\t\t * The title for the post type.\r\n\t\t\t */\r\n\t\t\tname: string;\r\n\t\t\t/**\r\n\t\t\t * An alphanumeric identifier for the post type.\r\n\t\t\t */\r\n\t\t\tslug: string;\r\n\t\t\t/**\r\n\t\t\t * All features, supported by the post type.\r\n\t\t\t */\r\n\t\t\tsupports: ContextualField< Record< string, string >, 'edit', C >;\r\n\t\t\t/**\r\n\t\t\t * Taxonomies associated with post type.\r\n\t\t\t */\r\n\t\t\ttaxonomies: ContextualField< string[], 'view' | 'edit', C >;\r\n\t\t\t/**\r\n\t\t\t * REST base route for the post type.\r\n\t\t\t */\r\n\t\t\trest_base: string;\r\n\t\t\t/**\r\n\t\t\t * REST route's namespace for the post type.\r\n\t\t\t */\r\n\t\t\trest_namespace: string;\r\n\t\t\t/**\r\n\t\t\t * The visibility settings for the post type.\r\n\t\t\t */\r\n\t\t\tvisibility: ContextualField< TypeVisibility, 'edit', C >;\r\n\t\t}\r\n\r\n\t\tinterface TypeVisibility {\r\n\t\t\t/**\r\n\t\t\t * Whether to generate a default UI for managing this post type.\r\n\t\t\t */\r\n\t\t\tshow_ui: boolean;\r\n\t\t\t/**\r\n\t\t\t * Whether to make the post type is available for selection in navigation menus.\r\n\t\t\t */\r\n\t\t\tshow_in_nav_menus: boolean;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport type Type< C extends Context = 'edit' > = OmitNevers<\r\n\t_BaseEntityRecords.Type< C >\r\n>;\r\n"],"mappings":"","ignoreList":[]}