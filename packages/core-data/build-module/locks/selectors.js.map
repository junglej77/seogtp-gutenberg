{"version":3,"names":["iterateDescendants","iteratePath","hasConflictingLock","getNode","getPendingLockRequests","state","requests","isLockAvailable","store","path","exclusive","storePath","locks","tree","node","descendant"],"sources":["@wordpress/core-data/src/locks/selectors.js"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport {\r\n\titerateDescendants,\r\n\titeratePath,\r\n\thasConflictingLock,\r\n\tgetNode,\r\n} from './utils';\r\n\r\nexport function getPendingLockRequests( state ) {\r\n\treturn state.requests;\r\n}\r\n\r\nexport function isLockAvailable( state, store, path, { exclusive } ) {\r\n\tconst storePath = [ store, ...path ];\r\n\tconst locks = state.tree;\r\n\r\n\t// Validate all parents and the node itself\r\n\tfor ( const node of iteratePath( locks, storePath ) ) {\r\n\t\tif ( hasConflictingLock( { exclusive }, node.locks ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t// iteratePath terminates early if path is unreachable, let's\r\n\t// re-fetch the node and check it exists in the tree.\r\n\tconst node = getNode( locks, storePath );\r\n\tif ( ! node ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Validate all nested nodes\r\n\tfor ( const descendant of iterateDescendants( node ) ) {\r\n\t\tif ( hasConflictingLock( { exclusive }, descendant.locks ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SACCA,kBAAkB,EAClBC,WAAW,EACXC,kBAAkB,EAClBC,OAAO,QACD,SAAS;AAEhB,OAAO,SAASC,sBAAsBA,CAAEC,KAAK,EAAG;EAC/C,OAAOA,KAAK,CAACC,QAAQ;AACtB;AAEA,OAAO,SAASC,eAAeA,CAAEF,KAAK,EAAEG,KAAK,EAAEC,IAAI,EAAE;EAAEC;AAAU,CAAC,EAAG;EACpE,MAAMC,SAAS,GAAG,CAAEH,KAAK,EAAE,GAAGC,IAAI,CAAE;EACpC,MAAMG,KAAK,GAAGP,KAAK,CAACQ,IAAI;;EAExB;EACA,KAAM,MAAMC,IAAI,IAAIb,WAAW,CAAEW,KAAK,EAAED,SAAU,CAAC,EAAG;IACrD,IAAKT,kBAAkB,CAAE;MAAEQ;IAAU,CAAC,EAAEI,IAAI,CAACF,KAAM,CAAC,EAAG;MACtD,OAAO,KAAK;IACb;EACD;;EAEA;EACA;EACA,MAAME,IAAI,GAAGX,OAAO,CAAES,KAAK,EAAED,SAAU,CAAC;EACxC,IAAK,CAAEG,IAAI,EAAG;IACb,OAAO,IAAI;EACZ;;EAEA;EACA,KAAM,MAAMC,UAAU,IAAIf,kBAAkB,CAAEc,IAAK,CAAC,EAAG;IACtD,IAAKZ,kBAAkB,CAAE;MAAEQ;IAAU,CAAC,EAAEK,UAAU,CAACH,KAAM,CAAC,EAAG;MAC5D,OAAO,KAAK;IACb;EACD;EAEA,OAAO,IAAI;AACZ","ignoreList":[]}