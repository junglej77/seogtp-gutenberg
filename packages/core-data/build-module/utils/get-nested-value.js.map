{"version":3,"names":["getNestedValue","object","path","defaultValue","Array","isArray","normalizedPath","split","value","forEach","fieldName","undefined"],"sources":["@wordpress/core-data/src/utils/get-nested-value.js"],"sourcesContent":["/**\r\n * Helper util to return a value from a certain path of the object.\r\n * Path is specified as either:\r\n * - a string of properties, separated by dots, for example: \"x.y\".\r\n * - an array of properties, for example `[ 'x', 'y' ]`.\r\n * You can also specify a default value in case the result is nullish.\r\n *\r\n * @param {Object}       object       Input object.\r\n * @param {string|Array} path         Path to the object property.\r\n * @param {*}            defaultValue Default value if the value at the specified path is undefined.\r\n * @return {*} Value of the object property at the specified path.\r\n */\r\nexport default function getNestedValue( object, path, defaultValue ) {\r\n\tif (\r\n\t\t! object ||\r\n\t\ttypeof object !== 'object' ||\r\n\t\t( typeof path !== 'string' && ! Array.isArray( path ) )\r\n\t) {\r\n\t\treturn object;\r\n\t}\r\n\tconst normalizedPath = Array.isArray( path ) ? path : path.split( '.' );\r\n\tlet value = object;\r\n\tnormalizedPath.forEach( ( fieldName ) => {\r\n\t\tvalue = value?.[ fieldName ];\r\n\t} );\r\n\treturn value !== undefined ? value : defaultValue;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,cAAcA,CAAEC,MAAM,EAAEC,IAAI,EAAEC,YAAY,EAAG;EACpE,IACC,CAAEF,MAAM,IACR,OAAOA,MAAM,KAAK,QAAQ,IACxB,OAAOC,IAAI,KAAK,QAAQ,IAAI,CAAEE,KAAK,CAACC,OAAO,CAAEH,IAAK,CAAG,EACtD;IACD,OAAOD,MAAM;EACd;EACA,MAAMK,cAAc,GAAGF,KAAK,CAACC,OAAO,CAAEH,IAAK,CAAC,GAAGA,IAAI,GAAGA,IAAI,CAACK,KAAK,CAAE,GAAI,CAAC;EACvE,IAAIC,KAAK,GAAGP,MAAM;EAClBK,cAAc,CAACG,OAAO,CAAIC,SAAS,IAAM;IACxCF,KAAK,GAAGA,KAAK,GAAIE,SAAS,CAAE;EAC7B,CAAE,CAAC;EACH,OAAOF,KAAK,KAAKG,SAAS,GAAGH,KAAK,GAAGL,YAAY;AAClD","ignoreList":[]}