{"version":3,"names":["onSubKey","actionProperty","reducer","state","action","key","undefined","nextKeyState"],"sources":["@wordpress/core-data/src/utils/on-sub-key.js"],"sourcesContent":["/** @typedef {import('../types').AnyFunction} AnyFunction */\r\n\r\n/**\r\n * Higher-order reducer creator which creates a combined reducer object, keyed\r\n * by a property on the action object.\r\n *\r\n * @param {string} actionProperty Action property by which to key object.\r\n *\r\n * @return {AnyFunction} Higher-order reducer.\r\n */\r\nexport const onSubKey =\r\n\t( actionProperty ) =>\r\n\t( reducer ) =>\r\n\t( state = {}, action ) => {\r\n\t\t// Retrieve subkey from action. Do not track if undefined; useful for cases\r\n\t\t// where reducer is scoped by action shape.\r\n\t\tconst key = action[ actionProperty ];\r\n\t\tif ( key === undefined ) {\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\t// Avoid updating state if unchanged. Note that this also accounts for a\r\n\t\t// reducer which returns undefined on a key which is not yet tracked.\r\n\t\tconst nextKeyState = reducer( state[ key ], action );\r\n\t\tif ( nextKeyState === state[ key ] ) {\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\t[ key ]: nextKeyState,\r\n\t\t};\r\n\t};\r\n\r\nexport default onSubKey;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,QAAQ,GAClBC,cAAc,IACdC,OAAO,IACT,CAAEC,KAAK,GAAG,CAAC,CAAC,EAAEC,MAAM,KAAM;EACzB;EACA;EACA,MAAMC,GAAG,GAAGD,MAAM,CAAEH,cAAc,CAAE;EACpC,IAAKI,GAAG,KAAKC,SAAS,EAAG;IACxB,OAAOH,KAAK;EACb;;EAEA;EACA;EACA,MAAMI,YAAY,GAAGL,OAAO,CAAEC,KAAK,CAAEE,GAAG,CAAE,EAAED,MAAO,CAAC;EACpD,IAAKG,YAAY,KAAKJ,KAAK,CAAEE,GAAG,CAAE,EAAG;IACpC,OAAOF,KAAK;EACb;EAEA,OAAO;IACN,GAAGA,KAAK;IACR,CAAEE,GAAG,GAAIE;EACV,CAAC;AACF,CAAC;AAEF,eAAeP,QAAQ","ignoreList":[]}