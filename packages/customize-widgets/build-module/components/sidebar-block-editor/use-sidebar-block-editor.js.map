{"version":3,"names":["fastDeepEqual","useState","useEffect","useCallback","isShallowEqual","getWidgetIdFromBlock","addWidgetIdToBlock","blockToWidget","widgetToBlock","widgetsToBlocks","widgets","map","widget","useSidebarBlockEditor","sidebar","blocks","setBlocks","getWidgets","subscribe","prevWidgets","nextWidgets","prevBlocks","prevWidgetsMap","Map","id","prevBlocksMap","block","nextBlocks","nextWidget","prevWidget","get","onChangeBlocks","nextBlock","widgetId","has","prevBlock","getWidget","addedWidgetIds","setWidgets","reduce","updatedNextBlocks","index","addedWidgetId","slice"],"sources":["@wordpress/customize-widgets/src/components/sidebar-block-editor/use-sidebar-block-editor.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport fastDeepEqual from 'fast-deep-equal/es6';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { useState, useEffect, useCallback } from '@wordpress/element';\r\nimport isShallowEqual from '@wordpress/is-shallow-equal';\r\nimport { getWidgetIdFromBlock, addWidgetIdToBlock } from '@wordpress/widgets';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { blockToWidget, widgetToBlock } from '../../utils';\r\n\r\nfunction widgetsToBlocks( widgets ) {\r\n\treturn widgets.map( ( widget ) => widgetToBlock( widget ) );\r\n}\r\n\r\nexport default function useSidebarBlockEditor( sidebar ) {\r\n\tconst [ blocks, setBlocks ] = useState( () =>\r\n\t\twidgetsToBlocks( sidebar.getWidgets() )\r\n\t);\r\n\r\n\tuseEffect( () => {\r\n\t\treturn sidebar.subscribe( ( prevWidgets, nextWidgets ) => {\r\n\t\t\tsetBlocks( ( prevBlocks ) => {\r\n\t\t\t\tconst prevWidgetsMap = new Map(\r\n\t\t\t\t\tprevWidgets.map( ( widget ) => [ widget.id, widget ] )\r\n\t\t\t\t);\r\n\t\t\t\tconst prevBlocksMap = new Map(\r\n\t\t\t\t\tprevBlocks.map( ( block ) => [\r\n\t\t\t\t\t\tgetWidgetIdFromBlock( block ),\r\n\t\t\t\t\t\tblock,\r\n\t\t\t\t\t] )\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst nextBlocks = nextWidgets.map( ( nextWidget ) => {\r\n\t\t\t\t\tconst prevWidget = prevWidgetsMap.get( nextWidget.id );\r\n\r\n\t\t\t\t\t// Bail out updates.\r\n\t\t\t\t\tif ( prevWidget && prevWidget === nextWidget ) {\r\n\t\t\t\t\t\treturn prevBlocksMap.get( nextWidget.id );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn widgetToBlock( nextWidget );\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// Bail out updates.\r\n\t\t\t\tif ( isShallowEqual( prevBlocks, nextBlocks ) ) {\r\n\t\t\t\t\treturn prevBlocks;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn nextBlocks;\r\n\t\t\t} );\r\n\t\t} );\r\n\t}, [ sidebar ] );\r\n\r\n\tconst onChangeBlocks = useCallback(\r\n\t\t( nextBlocks ) => {\r\n\t\t\tsetBlocks( ( prevBlocks ) => {\r\n\t\t\t\tif ( isShallowEqual( prevBlocks, nextBlocks ) ) {\r\n\t\t\t\t\treturn prevBlocks;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst prevBlocksMap = new Map(\r\n\t\t\t\t\tprevBlocks.map( ( block ) => [\r\n\t\t\t\t\t\tgetWidgetIdFromBlock( block ),\r\n\t\t\t\t\t\tblock,\r\n\t\t\t\t\t] )\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst nextWidgets = nextBlocks.map( ( nextBlock ) => {\r\n\t\t\t\t\tconst widgetId = getWidgetIdFromBlock( nextBlock );\r\n\r\n\t\t\t\t\t// Update existing widgets.\r\n\t\t\t\t\tif ( widgetId && prevBlocksMap.has( widgetId ) ) {\r\n\t\t\t\t\t\tconst prevBlock = prevBlocksMap.get( widgetId );\r\n\t\t\t\t\t\tconst prevWidget = sidebar.getWidget( widgetId );\r\n\r\n\t\t\t\t\t\t// Bail out updates by returning the previous widgets.\r\n\t\t\t\t\t\t// Deep equality is necessary until the block editor's internals changes.\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tfastDeepEqual( nextBlock, prevBlock ) &&\r\n\t\t\t\t\t\t\tprevWidget\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn prevWidget;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn blockToWidget( nextBlock, prevWidget );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Add a new widget.\r\n\t\t\t\t\treturn blockToWidget( nextBlock );\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// Bail out updates if the updated widgets are the same.\r\n\t\t\t\tif ( isShallowEqual( sidebar.getWidgets(), nextWidgets ) ) {\r\n\t\t\t\t\treturn prevBlocks;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst addedWidgetIds = sidebar.setWidgets( nextWidgets );\r\n\r\n\t\t\t\treturn nextBlocks.reduce(\r\n\t\t\t\t\t( updatedNextBlocks, nextBlock, index ) => {\r\n\t\t\t\t\t\tconst addedWidgetId = addedWidgetIds[ index ];\r\n\r\n\t\t\t\t\t\tif ( addedWidgetId !== null ) {\r\n\t\t\t\t\t\t\t// Only create a new instance if necessary to prevent\r\n\t\t\t\t\t\t\t// the whole editor from re-rendering on every edit.\r\n\t\t\t\t\t\t\tif ( updatedNextBlocks === nextBlocks ) {\r\n\t\t\t\t\t\t\t\tupdatedNextBlocks = nextBlocks.slice();\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tupdatedNextBlocks[ index ] = addWidgetIdToBlock(\r\n\t\t\t\t\t\t\t\tnextBlock,\r\n\t\t\t\t\t\t\t\taddedWidgetId\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn updatedNextBlocks;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tnextBlocks\r\n\t\t\t\t);\r\n\t\t\t} );\r\n\t\t},\r\n\t\t[ sidebar ]\r\n\t);\r\n\r\n\treturn [ blocks, onChangeBlocks, onChangeBlocks ];\r\n}\r\n"],"mappings":"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","ignoreList":[]}