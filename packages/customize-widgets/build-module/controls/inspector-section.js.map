{"version":3,"names":["getInspectorSection","wp","customize","window","InspectorSection","Section","constructor","id","options","parentSection","returnFocusWhenClose","_isOpen","isOpen","value","triggerActiveCallbacks","ready","contentContainer","classList","add","isContextuallyActive","onChangeExpanded","expanded","args","unchanged","collapse","manualTransition","expand","completeCallback","contains","focus","open","allowMultiple","close","active","callbacks","fireWith"],"sources":["@wordpress/customize-widgets/src/controls/inspector-section.js"],"sourcesContent":["export default function getInspectorSection() {\r\n\tconst {\r\n\t\twp: { customize },\r\n\t} = window;\r\n\r\n\treturn class InspectorSection extends customize.Section {\r\n\t\tconstructor( id, options ) {\r\n\t\t\tsuper( id, options );\r\n\r\n\t\t\tthis.parentSection = options.parentSection;\r\n\r\n\t\t\tthis.returnFocusWhenClose = null;\r\n\t\t\tthis._isOpen = false;\r\n\t\t}\r\n\t\tget isOpen() {\r\n\t\t\treturn this._isOpen;\r\n\t\t}\r\n\t\tset isOpen( value ) {\r\n\t\t\tthis._isOpen = value;\r\n\t\t\tthis.triggerActiveCallbacks();\r\n\t\t}\r\n\t\tready() {\r\n\t\t\tthis.contentContainer[ 0 ].classList.add(\r\n\t\t\t\t'customize-widgets-layout__inspector'\r\n\t\t\t);\r\n\t\t}\r\n\t\tisContextuallyActive() {\r\n\t\t\treturn this.isOpen;\r\n\t\t}\r\n\t\tonChangeExpanded( expanded, args ) {\r\n\t\t\tsuper.onChangeExpanded( expanded, args );\r\n\r\n\t\t\tif ( this.parentSection && ! args.unchanged ) {\r\n\t\t\t\tif ( expanded ) {\r\n\t\t\t\t\tthis.parentSection.collapse( {\r\n\t\t\t\t\t\tmanualTransition: true,\r\n\t\t\t\t\t} );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.parentSection.expand( {\r\n\t\t\t\t\t\tmanualTransition: true,\r\n\t\t\t\t\t\tcompleteCallback: () => {\r\n\t\t\t\t\t\t\t// Return focus after finishing the transition.\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tthis.returnFocusWhenClose &&\r\n\t\t\t\t\t\t\t\t! this.contentContainer[ 0 ].contains(\r\n\t\t\t\t\t\t\t\t\tthis.returnFocusWhenClose\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tthis.returnFocusWhenClose.focus();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\topen( { returnFocusWhenClose } = {} ) {\r\n\t\t\tthis.isOpen = true;\r\n\t\t\tthis.returnFocusWhenClose = returnFocusWhenClose;\r\n\r\n\t\t\tthis.expand( {\r\n\t\t\t\tallowMultiple: true,\r\n\t\t\t} );\r\n\t\t}\r\n\t\tclose() {\r\n\t\t\tthis.collapse( {\r\n\t\t\t\tallowMultiple: true,\r\n\t\t\t} );\r\n\t\t}\r\n\t\tcollapse( options ) {\r\n\t\t\t// Overridden collapse() function. Mostly call the parent collapse(), but also\r\n\t\t\t// move our .isOpen to false.\r\n\t\t\t// Initially, I tried tracking this with onChangeExpanded(), but it doesn't work\r\n\t\t\t// because the block settings sidebar is a layer \"on top of\" the G editor sidebar.\r\n\t\t\t//\r\n\t\t\t// For example, when closing the block settings sidebar, the G\r\n\t\t\t// editor sidebar would display, and onChangeExpanded in\r\n\t\t\t// inspector-section would run with expanded=true, but I want\r\n\t\t\t// isOpen to be false when the block settings is closed.\r\n\t\t\tthis.isOpen = false;\r\n\t\t\tsuper.collapse( options );\r\n\t\t}\r\n\t\ttriggerActiveCallbacks() {\r\n\t\t\t// Manually fire the callbacks associated with moving this.active\r\n\t\t\t// from false to true.  \"active\" is always true for this section,\r\n\t\t\t// and \"isContextuallyActive\" reflects if the block settings\r\n\t\t\t// sidebar is currently visible, that is, it has replaced the main\r\n\t\t\t// Gutenberg view.\r\n\t\t\t// The WP customizer only checks \".isContextuallyActive()\" when\r\n\t\t\t// \".active\" changes values. But our \".active\" never changes value.\r\n\t\t\t// The WP customizer never foresaw a section being used a way we\r\n\t\t\t// fit the block settings sidebar into a section. By manually\r\n\t\t\t// triggering the \"this.active\" callbacks, we force the WP\r\n\t\t\t// customizer to query our .isContextuallyActive() function and\r\n\t\t\t// update its view of our status.\r\n\t\t\tthis.active.callbacks.fireWith( this.active, [ false, true ] );\r\n\t\t}\r\n\t};\r\n}\r\n"],"mappings":"AAAA,eAAe,SAASA,mBAAmBA,CAAA,EAAG;EAC7C,MAAM;IACLC,EAAE,EAAE;MAAEC;IAAU;EACjB,CAAC,GAAGC,MAAM;EAEV,OAAO,MAAMC,gBAAgB,SAASF,SAAS,CAACG,OAAO,CAAC;IACvDC,WAAWA,CAAEC,EAAE,EAAEC,OAAO,EAAG;MAC1B,KAAK,CAAED,EAAE,EAAEC,OAAQ,CAAC;MAEpB,IAAI,CAACC,aAAa,GAAGD,OAAO,CAACC,aAAa;MAE1C,IAAI,CAACC,oBAAoB,GAAG,IAAI;MAChC,IAAI,CAACC,OAAO,GAAG,KAAK;IACrB;IACA,IAAIC,MAAMA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACD,OAAO;IACpB;IACA,IAAIC,MAAMA,CAAEC,KAAK,EAAG;MACnB,IAAI,CAACF,OAAO,GAAGE,KAAK;MACpB,IAAI,CAACC,sBAAsB,CAAC,CAAC;IAC9B;IACAC,KAAKA,CAAA,EAAG;MACP,IAAI,CAACC,gBAAgB,CAAE,CAAC,CAAE,CAACC,SAAS,CAACC,GAAG,CACvC,qCACD,CAAC;IACF;IACAC,oBAAoBA,CAAA,EAAG;MACtB,OAAO,IAAI,CAACP,MAAM;IACnB;IACAQ,gBAAgBA,CAAEC,QAAQ,EAAEC,IAAI,EAAG;MAClC,KAAK,CAACF,gBAAgB,CAAEC,QAAQ,EAAEC,IAAK,CAAC;MAExC,IAAK,IAAI,CAACb,aAAa,IAAI,CAAEa,IAAI,CAACC,SAAS,EAAG;QAC7C,IAAKF,QAAQ,EAAG;UACf,IAAI,CAACZ,aAAa,CAACe,QAAQ,CAAE;YAC5BC,gBAAgB,EAAE;UACnB,CAAE,CAAC;QACJ,CAAC,MAAM;UACN,IAAI,CAAChB,aAAa,CAACiB,MAAM,CAAE;YAC1BD,gBAAgB,EAAE,IAAI;YACtBE,gBAAgB,EAAEA,CAAA,KAAM;cACvB;cACA,IACC,IAAI,CAACjB,oBAAoB,IACzB,CAAE,IAAI,CAACM,gBAAgB,CAAE,CAAC,CAAE,CAACY,QAAQ,CACpC,IAAI,CAAClB,oBACN,CAAC,EACA;gBACD,IAAI,CAACA,oBAAoB,CAACmB,KAAK,CAAC,CAAC;cAClC;YACD;UACD,CAAE,CAAC;QACJ;MACD;IACD;IACAC,IAAIA,CAAE;MAAEpB;IAAqB,CAAC,GAAG,CAAC,CAAC,EAAG;MACrC,IAAI,CAACE,MAAM,GAAG,IAAI;MAClB,IAAI,CAACF,oBAAoB,GAAGA,oBAAoB;MAEhD,IAAI,CAACgB,MAAM,CAAE;QACZK,aAAa,EAAE;MAChB,CAAE,CAAC;IACJ;IACAC,KAAKA,CAAA,EAAG;MACP,IAAI,CAACR,QAAQ,CAAE;QACdO,aAAa,EAAE;MAChB,CAAE,CAAC;IACJ;IACAP,QAAQA,CAAEhB,OAAO,EAAG;MACnB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAI,CAACI,MAAM,GAAG,KAAK;MACnB,KAAK,CAACY,QAAQ,CAAEhB,OAAQ,CAAC;IAC1B;IACAM,sBAAsBA,CAAA,EAAG;MACxB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAI,CAACmB,MAAM,CAACC,SAAS,CAACC,QAAQ,CAAE,IAAI,CAACF,MAAM,EAAE,CAAE,KAAK,EAAE,IAAI,CAAG,CAAC;IAC/D;EACD,CAAC;AACF","ignoreList":[]}