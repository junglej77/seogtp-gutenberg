{"version":3,"names":["createHigherOrderComponent","pure","useSelect","jsx","_jsx","withSelect","mapSelectToProps","WrappedComponent","ownProps","mapSelect","select","registry","mergeProps"],"sources":["@wordpress/data/src/components/with-select/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { createHigherOrderComponent, pure } from '@wordpress/compose';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport useSelect from '../use-select';\r\n\r\n/** @typedef {import('react').ComponentType} ComponentType */\r\n\r\n/**\r\n * Higher-order component used to inject state-derived props using registered\r\n * selectors.\r\n *\r\n * @param {Function} mapSelectToProps Function called on every state change,\r\n *                                    expected to return object of props to\r\n *                                    merge with the component's own props.\r\n *\r\n * @example\r\n * ```js\r\n * import { withSelect } from '@wordpress/data';\r\n * import { store as myCustomStore } from 'my-custom-store';\r\n *\r\n * function PriceDisplay( { price, currency } ) {\r\n * \treturn new Intl.NumberFormat( 'en-US', {\r\n * \t\tstyle: 'currency',\r\n * \t\tcurrency,\r\n * \t} ).format( price );\r\n * }\r\n *\r\n * const HammerPriceDisplay = withSelect( ( select, ownProps ) => {\r\n * \tconst { getPrice } = select( myCustomStore );\r\n * \tconst { currency } = ownProps;\r\n *\r\n * \treturn {\r\n * \t\tprice: getPrice( 'hammer', currency ),\r\n * \t};\r\n * } )( PriceDisplay );\r\n *\r\n * // Rendered in the application:\r\n * //\r\n * //  <HammerPriceDisplay currency=\"USD\" />\r\n * ```\r\n * In the above example, when `HammerPriceDisplay` is rendered into an\r\n * application, it will pass the price into the underlying `PriceDisplay`\r\n * component and update automatically if the price of a hammer ever changes in\r\n * the store.\r\n *\r\n * @return {ComponentType} Enhanced component with merged state data props.\r\n */\r\nconst withSelect = ( mapSelectToProps ) =>\r\n\tcreateHigherOrderComponent(\r\n\t\t( WrappedComponent ) =>\r\n\t\t\tpure( ( ownProps ) => {\r\n\t\t\t\tconst mapSelect = ( select, registry ) =>\r\n\t\t\t\t\tmapSelectToProps( select, ownProps, registry );\r\n\t\t\t\tconst mergeProps = useSelect( mapSelect );\r\n\t\t\t\treturn <WrappedComponent { ...ownProps } { ...mergeProps } />;\r\n\t\t\t} ),\r\n\t\t'withSelect'\r\n\t);\r\n\r\nexport default withSelect;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,0BAA0B,EAAEC,IAAI,QAAQ,oBAAoB;;AAErE;AACA;AACA;AACA,OAAOC,SAAS,MAAM,eAAe;;AAErC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvCA,SAAAC,GAAA,IAAAC,IAAA;AAwCA,MAAMC,UAAU,GAAKC,gBAAgB,IACpCN,0BAA0B,CACvBO,gBAAgB,IACjBN,IAAI,CAAIO,QAAQ,IAAM;EACrB,MAAMC,SAAS,GAAGA,CAAEC,MAAM,EAAEC,QAAQ,KACnCL,gBAAgB,CAAEI,MAAM,EAAEF,QAAQ,EAAEG,QAAS,CAAC;EAC/C,MAAMC,UAAU,GAAGV,SAAS,CAAEO,SAAU,CAAC;EACzC,oBAAOL,IAAA,CAACG,gBAAgB;IAAA,GAAMC,QAAQ;IAAA,GAAQI;EAAU,CAAI,CAAC;AAC9D,CAAE,CAAC,EACJ,YACD,CAAC;AAEF,eAAeP,UAAU","ignoreList":[]}