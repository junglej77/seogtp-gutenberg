{"version":3,"names":["createRegistryControl","SELECT","RESOLVE_SELECT","DISPATCH","isObject","object","select","storeNameOrDescriptor","selectorName","args","type","storeKey","name","resolveSelect","dispatch","actionName","controls","builtinControls","registry","method","hasResolver"],"sources":["@wordpress/data/src/controls.js"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport { createRegistryControl } from './factory';\r\n\r\n/** @typedef {import('./types').StoreDescriptor} StoreDescriptor */\r\n\r\nconst SELECT = '@@data/SELECT';\r\nconst RESOLVE_SELECT = '@@data/RESOLVE_SELECT';\r\nconst DISPATCH = '@@data/DISPATCH';\r\n\r\nfunction isObject( object ) {\r\n\treturn object !== null && typeof object === 'object';\r\n}\r\n\r\n/**\r\n * Dispatches a control action for triggering a synchronous registry select.\r\n *\r\n * Note: This control synchronously returns the current selector value, triggering the\r\n * resolution, but not waiting for it.\r\n *\r\n * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\r\n * @param {string}                 selectorName          The name of the selector.\r\n * @param {Array}                  args                  Arguments for the selector.\r\n *\r\n * @example\r\n * ```js\r\n * import { controls } from '@wordpress/data';\r\n *\r\n * // Action generator using `select`.\r\n * export function* myAction() {\r\n *   const isEditorSideBarOpened = yield controls.select( 'core/edit-post', 'isEditorSideBarOpened' );\r\n *   // Do stuff with the result from the `select`.\r\n * }\r\n * ```\r\n *\r\n * @return {Object} The control descriptor.\r\n */\r\nfunction select( storeNameOrDescriptor, selectorName, ...args ) {\r\n\treturn {\r\n\t\ttype: SELECT,\r\n\t\tstoreKey: isObject( storeNameOrDescriptor )\r\n\t\t\t? storeNameOrDescriptor.name\r\n\t\t\t: storeNameOrDescriptor,\r\n\t\tselectorName,\r\n\t\targs,\r\n\t};\r\n}\r\n\r\n/**\r\n * Dispatches a control action for triggering and resolving a registry select.\r\n *\r\n * Note: when this control action is handled, it automatically considers\r\n * selectors that may have a resolver. In such case, it will return a `Promise` that resolves\r\n * after the selector finishes resolving, with the final result value.\r\n *\r\n * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\r\n * @param {string}                 selectorName          The name of the selector\r\n * @param {Array}                  args                  Arguments for the selector.\r\n *\r\n * @example\r\n * ```js\r\n * import { controls } from '@wordpress/data';\r\n *\r\n * // Action generator using resolveSelect\r\n * export function* myAction() {\r\n * \tconst isSidebarOpened = yield controls.resolveSelect( 'core/edit-post', 'isEditorSideBarOpened' );\r\n * \t// do stuff with the result from the select.\r\n * }\r\n * ```\r\n *\r\n * @return {Object} The control descriptor.\r\n */\r\nfunction resolveSelect( storeNameOrDescriptor, selectorName, ...args ) {\r\n\treturn {\r\n\t\ttype: RESOLVE_SELECT,\r\n\t\tstoreKey: isObject( storeNameOrDescriptor )\r\n\t\t\t? storeNameOrDescriptor.name\r\n\t\t\t: storeNameOrDescriptor,\r\n\t\tselectorName,\r\n\t\targs,\r\n\t};\r\n}\r\n\r\n/**\r\n * Dispatches a control action for triggering a registry dispatch.\r\n *\r\n * @param {string|StoreDescriptor} storeNameOrDescriptor Unique namespace identifier for the store\r\n * @param {string}                 actionName            The name of the action to dispatch\r\n * @param {Array}                  args                  Arguments for the dispatch action.\r\n *\r\n * @example\r\n * ```js\r\n * import { controls } from '@wordpress/data-controls';\r\n *\r\n * // Action generator using dispatch\r\n * export function* myAction() {\r\n *   yield controls.dispatch( 'core/editor', 'togglePublishSidebar' );\r\n *   // do some other things.\r\n * }\r\n * ```\r\n *\r\n * @return {Object}  The control descriptor.\r\n */\r\nfunction dispatch( storeNameOrDescriptor, actionName, ...args ) {\r\n\treturn {\r\n\t\ttype: DISPATCH,\r\n\t\tstoreKey: isObject( storeNameOrDescriptor )\r\n\t\t\t? storeNameOrDescriptor.name\r\n\t\t\t: storeNameOrDescriptor,\r\n\t\tactionName,\r\n\t\targs,\r\n\t};\r\n}\r\n\r\nexport const controls = { select, resolveSelect, dispatch };\r\n\r\nexport const builtinControls = {\r\n\t[ SELECT ]: createRegistryControl(\r\n\t\t( registry ) =>\r\n\t\t\t( { storeKey, selectorName, args } ) =>\r\n\t\t\t\tregistry.select( storeKey )[ selectorName ]( ...args )\r\n\t),\r\n\t[ RESOLVE_SELECT ]: createRegistryControl(\r\n\t\t( registry ) =>\r\n\t\t\t( { storeKey, selectorName, args } ) => {\r\n\t\t\t\tconst method = registry.select( storeKey )[ selectorName ]\r\n\t\t\t\t\t.hasResolver\r\n\t\t\t\t\t? 'resolveSelect'\r\n\t\t\t\t\t: 'select';\r\n\t\t\t\treturn registry[ method ]( storeKey )[ selectorName ](\r\n\t\t\t\t\t...args\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t),\r\n\t[ DISPATCH ]: createRegistryControl(\r\n\t\t( registry ) =>\r\n\t\t\t( { storeKey, actionName, args } ) =>\r\n\t\t\t\tregistry.dispatch( storeKey )[ actionName ]( ...args )\r\n\t),\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,qBAAqB,QAAQ,WAAW;;AAEjD;;AAEA,MAAMC,MAAM,GAAG,eAAe;AAC9B,MAAMC,cAAc,GAAG,uBAAuB;AAC9C,MAAMC,QAAQ,GAAG,iBAAiB;AAElC,SAASC,QAAQA,CAAEC,MAAM,EAAG;EAC3B,OAAOA,MAAM,KAAK,IAAI,IAAI,OAAOA,MAAM,KAAK,QAAQ;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,MAAMA,CAAEC,qBAAqB,EAAEC,YAAY,EAAE,GAAGC,IAAI,EAAG;EAC/D,OAAO;IACNC,IAAI,EAAET,MAAM;IACZU,QAAQ,EAAEP,QAAQ,CAAEG,qBAAsB,CAAC,GACxCA,qBAAqB,CAACK,IAAI,GAC1BL,qBAAqB;IACxBC,YAAY;IACZC;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,aAAaA,CAAEN,qBAAqB,EAAEC,YAAY,EAAE,GAAGC,IAAI,EAAG;EACtE,OAAO;IACNC,IAAI,EAAER,cAAc;IACpBS,QAAQ,EAAEP,QAAQ,CAAEG,qBAAsB,CAAC,GACxCA,qBAAqB,CAACK,IAAI,GAC1BL,qBAAqB;IACxBC,YAAY;IACZC;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,QAAQA,CAAEP,qBAAqB,EAAEQ,UAAU,EAAE,GAAGN,IAAI,EAAG;EAC/D,OAAO;IACNC,IAAI,EAAEP,QAAQ;IACdQ,QAAQ,EAAEP,QAAQ,CAAEG,qBAAsB,CAAC,GACxCA,qBAAqB,CAACK,IAAI,GAC1BL,qBAAqB;IACxBQ,UAAU;IACVN;EACD,CAAC;AACF;AAEA,OAAO,MAAMO,QAAQ,GAAG;EAAEV,MAAM;EAAEO,aAAa;EAAEC;AAAS,CAAC;AAE3D,OAAO,MAAMG,eAAe,GAAG;EAC9B,CAAEhB,MAAM,GAAID,qBAAqB,CAC9BkB,QAAQ,IACT,CAAE;IAAEP,QAAQ;IAAEH,YAAY;IAAEC;EAAK,CAAC,KACjCS,QAAQ,CAACZ,MAAM,CAAEK,QAAS,CAAC,CAAEH,YAAY,CAAE,CAAE,GAAGC,IAAK,CACxD,CAAC;EACD,CAAEP,cAAc,GAAIF,qBAAqB,CACtCkB,QAAQ,IACT,CAAE;IAAEP,QAAQ;IAAEH,YAAY;IAAEC;EAAK,CAAC,KAAM;IACvC,MAAMU,MAAM,GAAGD,QAAQ,CAACZ,MAAM,CAAEK,QAAS,CAAC,CAAEH,YAAY,CAAE,CACxDY,WAAW,GACV,eAAe,GACf,QAAQ;IACX,OAAOF,QAAQ,CAAEC,MAAM,CAAE,CAAER,QAAS,CAAC,CAAEH,YAAY,CAAE,CACpD,GAAGC,IACJ,CAAC;EACF,CACF,CAAC;EACD,CAAEN,QAAQ,GAAIH,qBAAqB,CAChCkB,QAAQ,IACT,CAAE;IAAEP,QAAQ;IAAEI,UAAU;IAAEN;EAAK,CAAC,KAC/BS,QAAQ,CAACJ,QAAQ,CAAEH,QAAS,CAAC,CAAEI,UAAU,CAAE,CAAE,GAAGN,IAAK,CACxD;AACD,CAAC","ignoreList":[]}