{"version":3,"names":["combineReducers","reducers","keys","Object","combinedReducer","state","action","nextState","hasChanged","key","reducer","prevStateForKey","nextStateForKey"],"sources":["@wordpress/data/src/redux-store/combine-reducers.js"],"sourcesContent":["export function combineReducers( reducers ) {\r\n\tconst keys = Object.keys( reducers );\r\n\r\n\treturn function combinedReducer( state = {}, action ) {\r\n\t\tconst nextState = {};\r\n\t\tlet hasChanged = false;\r\n\t\tfor ( const key of keys ) {\r\n\t\t\tconst reducer = reducers[ key ];\r\n\t\t\tconst prevStateForKey = state[ key ];\r\n\t\t\tconst nextStateForKey = reducer( prevStateForKey, action );\r\n\t\t\tnextState[ key ] = nextStateForKey;\r\n\t\t\thasChanged = hasChanged || nextStateForKey !== prevStateForKey;\r\n\t\t}\r\n\r\n\t\treturn hasChanged ? nextState : state;\r\n\t};\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,eAAeA,CAAEC,QAAQ,EAAG;EAC3C,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAAED,QAAS,CAAC;EAEpC,OAAO,SAASG,eAAeA,CAAEC,KAAK,GAAG,CAAC,CAAC,EAAEC,MAAM,EAAG;IACrD,MAAMC,SAAS,GAAG,CAAC,CAAC;IACpB,IAAIC,UAAU,GAAG,KAAK;IACtB,KAAM,MAAMC,GAAG,IAAIP,IAAI,EAAG;MACzB,MAAMQ,OAAO,GAAGT,QAAQ,CAAEQ,GAAG,CAAE;MAC/B,MAAME,eAAe,GAAGN,KAAK,CAAEI,GAAG,CAAE;MACpC,MAAMG,eAAe,GAAGF,OAAO,CAAEC,eAAe,EAAEL,MAAO,CAAC;MAC1DC,SAAS,CAAEE,GAAG,CAAE,GAAGG,eAAe;MAClCJ,UAAU,GAAGA,UAAU,IAAII,eAAe,KAAKD,eAAe;IAC/D;IAEA,OAAOH,UAAU,GAAGD,SAAS,GAAGF,KAAK;EACtC,CAAC;AACF","ignoreList":[]}