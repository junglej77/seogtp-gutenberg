{"version":3,"names":["createStore","applyMiddleware","EquivalentKeyMap","createReduxRoutineMiddleware","compose","combineReducers","builtinControls","lock","promise","createResolversCacheMiddleware","createThunkMiddleware","metadataReducer","metadataSelectors","metadataActions","trimUndefinedValues","array","result","i","length","undefined","splice","mapValues","obj","callback","Object","fromEntries","entries","map","key","value","devToolsReplacer","state","Map","window","HTMLElement","createResolversCache","cache","isRunning","selectorName","args","get","clear","delete","markAsRunning","set","createBindingCache","bind","WeakMap","item","itemName","boundItem","createReduxStore","options","privateActions","privateSelectors","privateRegistrationFunctions","registerPrivateActions","actions","assign","registerPrivateSelectors","selectors","storeDescriptor","name","instantiate","registry","listeners","Set","reducer","thunkArgs","dispatch","thunkActions","select","thunkSelectors","resolveSelect","getResolveSelectors","store","instantiateReduxStore","resolversCache","bindAction","action","Promise","resolve","boundPrivateActions","allActions","Proxy","target","prop","privateAction","apply","thisArg","resolvers","mapResolvers","bindSelector","selector","isRegistrySelector","boundSelector","normalize","__unstableOriginalGetState","root","__unstableNormalizeArgs","resolver","hasResolver","mapSelectorWithResolver","bindMetadataSelector","metaDataSelector","originalSelectorName","originalSelectorArgs","targetSelector","metadata","boundPrivateSelectors","allSelectors","privateSelector","resolveSelectors","mapResolveSelectors","suspendSelectors","mapSuspendSelectors","getSelectors","getActions","getSuspendSelectors","getState","subscribe","listener","add","lastState","hasChanged","controls","normalizedControls","control","isRegistryControl","middlewares","enhancers","__REDUX_DEVTOOLS_EXTENSION__","push","instanceId","serialize","replacer","initialState","enhancedReducer","getIsResolving","hasStartedResolution","hasFinishedResolution","hasResolutionFailed","isResolving","getCachedResolvers","getResolutionState","getResolutionError","hasResolvingSelectors","countSelectorsByStatus","storeSelectors","reject","hasFinished","finalize","hasFailed","error","getResult","unsubscribe","fulfill","fulfillSelector","isFulfilled","setTimeout","startResolution","finishResolution","failResolution","selectorResolver"],"sources":["@wordpress/data/src/redux-store/index.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport EquivalentKeyMap from 'equivalent-key-map';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport createReduxRoutineMiddleware from '@wordpress/redux-routine';\r\nimport { compose } from '@wordpress/compose';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { combineReducers } from './combine-reducers';\r\nimport { builtinControls } from '../controls';\r\nimport { lock } from '../lock-unlock';\r\nimport promise from '../promise-middleware';\r\nimport createResolversCacheMiddleware from '../resolvers-cache-middleware';\r\nimport createThunkMiddleware from './thunk-middleware';\r\nimport metadataReducer from './metadata/reducer';\r\nimport * as metadataSelectors from './metadata/selectors';\r\nimport * as metadataActions from './metadata/actions';\r\n\r\nexport { combineReducers };\r\n\r\n/** @typedef {import('../types').DataRegistry} DataRegistry */\r\n/** @typedef {import('../types').ListenerFunction} ListenerFunction */\r\n/**\r\n * @typedef {import('../types').StoreDescriptor<C>} StoreDescriptor\r\n * @template {import('../types').AnyConfig} C\r\n */\r\n/**\r\n * @typedef {import('../types').ReduxStoreConfig<State,Actions,Selectors>} ReduxStoreConfig\r\n * @template State\r\n * @template {Record<string,import('../types').ActionCreator>} Actions\r\n * @template Selectors\r\n */\r\n\r\nconst trimUndefinedValues = ( array ) => {\r\n\tconst result = [ ...array ];\r\n\tfor ( let i = result.length - 1; i >= 0; i-- ) {\r\n\t\tif ( result[ i ] === undefined ) {\r\n\t\t\tresult.splice( i, 1 );\r\n\t\t}\r\n\t}\r\n\treturn result;\r\n};\r\n\r\n/**\r\n * Creates a new object with the same keys, but with `callback()` called as\r\n * a transformer function on each of the values.\r\n *\r\n * @param {Object}   obj      The object to transform.\r\n * @param {Function} callback The function to transform each object value.\r\n * @return {Array} Transformed object.\r\n */\r\nconst mapValues = ( obj, callback ) =>\r\n\tObject.fromEntries(\r\n\t\tObject.entries( obj ?? {} ).map( ( [ key, value ] ) => [\r\n\t\t\tkey,\r\n\t\t\tcallback( value, key ),\r\n\t\t] )\r\n\t);\r\n\r\n// Convert  non serializable types to plain objects\r\nconst devToolsReplacer = ( key, state ) => {\r\n\tif ( state instanceof Map ) {\r\n\t\treturn Object.fromEntries( state );\r\n\t}\r\n\r\n\tif ( state instanceof window.HTMLElement ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn state;\r\n};\r\n\r\n/**\r\n * Create a cache to track whether resolvers started running or not.\r\n *\r\n * @return {Object} Resolvers Cache.\r\n */\r\nfunction createResolversCache() {\r\n\tconst cache = {};\r\n\treturn {\r\n\t\tisRunning( selectorName, args ) {\r\n\t\t\treturn (\r\n\t\t\t\tcache[ selectorName ] &&\r\n\t\t\t\tcache[ selectorName ].get( trimUndefinedValues( args ) )\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tclear( selectorName, args ) {\r\n\t\t\tif ( cache[ selectorName ] ) {\r\n\t\t\t\tcache[ selectorName ].delete( trimUndefinedValues( args ) );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmarkAsRunning( selectorName, args ) {\r\n\t\t\tif ( ! cache[ selectorName ] ) {\r\n\t\t\t\tcache[ selectorName ] = new EquivalentKeyMap();\r\n\t\t\t}\r\n\r\n\t\t\tcache[ selectorName ].set( trimUndefinedValues( args ), true );\r\n\t\t},\r\n\t};\r\n}\r\n\r\nfunction createBindingCache( bind ) {\r\n\tconst cache = new WeakMap();\r\n\r\n\treturn {\r\n\t\tget( item, itemName ) {\r\n\t\t\tlet boundItem = cache.get( item );\r\n\t\t\tif ( ! boundItem ) {\r\n\t\t\t\tboundItem = bind( item, itemName );\r\n\t\t\t\tcache.set( item, boundItem );\r\n\t\t\t}\r\n\t\t\treturn boundItem;\r\n\t\t},\r\n\t};\r\n}\r\n\r\n/**\r\n * Creates a data store descriptor for the provided Redux store configuration containing\r\n * properties describing reducer, actions, selectors, controls and resolvers.\r\n *\r\n * @example\r\n * ```js\r\n * import { createReduxStore } from '@wordpress/data';\r\n *\r\n * const store = createReduxStore( 'demo', {\r\n *     reducer: ( state = 'OK' ) => state,\r\n *     selectors: {\r\n *         getValue: ( state ) => state,\r\n *     },\r\n * } );\r\n * ```\r\n *\r\n * @template State\r\n * @template {Record<string,import('../types').ActionCreator>} Actions\r\n * @template Selectors\r\n * @param {string}                                    key     Unique namespace identifier.\r\n * @param {ReduxStoreConfig<State,Actions,Selectors>} options Registered store options, with properties\r\n *                                                            describing reducer, actions, selectors,\r\n *                                                            and resolvers.\r\n *\r\n * @return   {StoreDescriptor<ReduxStoreConfig<State,Actions,Selectors>>} Store Object.\r\n */\r\nexport default function createReduxStore( key, options ) {\r\n\tconst privateActions = {};\r\n\tconst privateSelectors = {};\r\n\tconst privateRegistrationFunctions = {\r\n\t\tprivateActions,\r\n\t\tregisterPrivateActions: ( actions ) => {\r\n\t\t\tObject.assign( privateActions, actions );\r\n\t\t},\r\n\t\tprivateSelectors,\r\n\t\tregisterPrivateSelectors: ( selectors ) => {\r\n\t\t\tObject.assign( privateSelectors, selectors );\r\n\t\t},\r\n\t};\r\n\tconst storeDescriptor = {\r\n\t\tname: key,\r\n\t\tinstantiate: ( registry ) => {\r\n\t\t\t/**\r\n\t\t\t * Stores listener functions registered with `subscribe()`.\r\n\t\t\t *\r\n\t\t\t * When functions register to listen to store changes with\r\n\t\t\t * `subscribe()` they get added here. Although Redux offers\r\n\t\t\t * its own `subscribe()` function directly, by wrapping the\r\n\t\t\t * subscription in this store instance it's possible to\r\n\t\t\t * optimize checking if the state has changed before calling\r\n\t\t\t * each listener.\r\n\t\t\t *\r\n\t\t\t * @type {Set<ListenerFunction>}\r\n\t\t\t */\r\n\t\t\tconst listeners = new Set();\r\n\t\t\tconst reducer = options.reducer;\r\n\t\t\tconst thunkArgs = {\r\n\t\t\t\tregistry,\r\n\t\t\t\tget dispatch() {\r\n\t\t\t\t\treturn thunkActions;\r\n\t\t\t\t},\r\n\t\t\t\tget select() {\r\n\t\t\t\t\treturn thunkSelectors;\r\n\t\t\t\t},\r\n\t\t\t\tget resolveSelect() {\r\n\t\t\t\t\treturn getResolveSelectors();\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\tconst store = instantiateReduxStore(\r\n\t\t\t\tkey,\r\n\t\t\t\toptions,\r\n\t\t\t\tregistry,\r\n\t\t\t\tthunkArgs\r\n\t\t\t);\r\n\t\t\t// Expose the private registration functions on the store\r\n\t\t\t// so they can be copied to a sub registry in registry.js.\r\n\t\t\tlock( store, privateRegistrationFunctions );\r\n\t\t\tconst resolversCache = createResolversCache();\r\n\r\n\t\t\tfunction bindAction( action ) {\r\n\t\t\t\treturn ( ...args ) =>\r\n\t\t\t\t\tPromise.resolve( store.dispatch( action( ...args ) ) );\r\n\t\t\t}\r\n\r\n\t\t\tconst actions = {\r\n\t\t\t\t...mapValues( metadataActions, bindAction ),\r\n\t\t\t\t...mapValues( options.actions, bindAction ),\r\n\t\t\t};\r\n\r\n\t\t\tconst boundPrivateActions = createBindingCache( bindAction );\r\n\t\t\tconst allActions = new Proxy( () => {}, {\r\n\t\t\t\tget: ( target, prop ) => {\r\n\t\t\t\t\tconst privateAction = privateActions[ prop ];\r\n\t\t\t\t\treturn privateAction\r\n\t\t\t\t\t\t? boundPrivateActions.get( privateAction, prop )\r\n\t\t\t\t\t\t: actions[ prop ];\r\n\t\t\t\t},\r\n\t\t\t} );\r\n\r\n\t\t\tconst thunkActions = new Proxy( allActions, {\r\n\t\t\t\tapply: ( target, thisArg, [ action ] ) =>\r\n\t\t\t\t\tstore.dispatch( action ),\r\n\t\t\t} );\r\n\r\n\t\t\tlock( actions, allActions );\r\n\r\n\t\t\tconst resolvers = options.resolvers\r\n\t\t\t\t? mapResolvers( options.resolvers )\r\n\t\t\t\t: {};\r\n\r\n\t\t\tfunction bindSelector( selector, selectorName ) {\r\n\t\t\t\tif ( selector.isRegistrySelector ) {\r\n\t\t\t\t\tselector.registry = registry;\r\n\t\t\t\t}\r\n\t\t\t\tconst boundSelector = ( ...args ) => {\r\n\t\t\t\t\targs = normalize( selector, args );\r\n\t\t\t\t\tconst state = store.__unstableOriginalGetState();\r\n\t\t\t\t\t// Before calling the selector, switch to the correct\r\n\t\t\t\t\t// registry.\r\n\t\t\t\t\tif ( selector.isRegistrySelector ) {\r\n\t\t\t\t\t\tselector.registry = registry;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn selector( state.root, ...args );\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Expose normalization method on the bound selector\r\n\t\t\t\t// in order that it can be called when fullfilling\r\n\t\t\t\t// the resolver.\r\n\t\t\t\tboundSelector.__unstableNormalizeArgs =\r\n\t\t\t\t\tselector.__unstableNormalizeArgs;\r\n\r\n\t\t\t\tconst resolver = resolvers[ selectorName ];\r\n\r\n\t\t\t\tif ( ! resolver ) {\r\n\t\t\t\t\tboundSelector.hasResolver = false;\r\n\t\t\t\t\treturn boundSelector;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn mapSelectorWithResolver(\r\n\t\t\t\t\tboundSelector,\r\n\t\t\t\t\tselectorName,\r\n\t\t\t\t\tresolver,\r\n\t\t\t\t\tstore,\r\n\t\t\t\t\tresolversCache\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tfunction bindMetadataSelector( metaDataSelector ) {\r\n\t\t\t\tconst boundSelector = ( ...args ) => {\r\n\t\t\t\t\tconst state = store.__unstableOriginalGetState();\r\n\r\n\t\t\t\t\tconst originalSelectorName = args && args[ 0 ];\r\n\t\t\t\t\tconst originalSelectorArgs = args && args[ 1 ];\r\n\t\t\t\t\tconst targetSelector =\r\n\t\t\t\t\t\toptions?.selectors?.[ originalSelectorName ];\r\n\r\n\t\t\t\t\t// Normalize the arguments passed to the target selector.\r\n\t\t\t\t\tif ( originalSelectorName && targetSelector ) {\r\n\t\t\t\t\t\targs[ 1 ] = normalize(\r\n\t\t\t\t\t\t\ttargetSelector,\r\n\t\t\t\t\t\t\toriginalSelectorArgs\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn metaDataSelector( state.metadata, ...args );\r\n\t\t\t\t};\r\n\t\t\t\tboundSelector.hasResolver = false;\r\n\t\t\t\treturn boundSelector;\r\n\t\t\t}\r\n\r\n\t\t\tconst selectors = {\r\n\t\t\t\t...mapValues( metadataSelectors, bindMetadataSelector ),\r\n\t\t\t\t...mapValues( options.selectors, bindSelector ),\r\n\t\t\t};\r\n\r\n\t\t\tconst boundPrivateSelectors = createBindingCache( bindSelector );\r\n\r\n\t\t\t// Pre-bind the private selectors that have been registered by the time of\r\n\t\t\t// instantiation, so that registry selectors are bound to the registry.\r\n\t\t\tfor ( const [ selectorName, selector ] of Object.entries(\r\n\t\t\t\tprivateSelectors\r\n\t\t\t) ) {\r\n\t\t\t\tboundPrivateSelectors.get( selector, selectorName );\r\n\t\t\t}\r\n\r\n\t\t\tconst allSelectors = new Proxy( () => {}, {\r\n\t\t\t\tget: ( target, prop ) => {\r\n\t\t\t\t\tconst privateSelector = privateSelectors[ prop ];\r\n\t\t\t\t\treturn privateSelector\r\n\t\t\t\t\t\t? boundPrivateSelectors.get( privateSelector, prop )\r\n\t\t\t\t\t\t: selectors[ prop ];\r\n\t\t\t\t},\r\n\t\t\t} );\r\n\r\n\t\t\tconst thunkSelectors = new Proxy( allSelectors, {\r\n\t\t\t\tapply: ( target, thisArg, [ selector ] ) =>\r\n\t\t\t\t\tselector( store.__unstableOriginalGetState() ),\r\n\t\t\t} );\r\n\r\n\t\t\tlock( selectors, allSelectors );\r\n\r\n\t\t\tconst resolveSelectors = mapResolveSelectors( selectors, store );\r\n\t\t\tconst suspendSelectors = mapSuspendSelectors( selectors, store );\r\n\r\n\t\t\tconst getSelectors = () => selectors;\r\n\t\t\tconst getActions = () => actions;\r\n\t\t\tconst getResolveSelectors = () => resolveSelectors;\r\n\t\t\tconst getSuspendSelectors = () => suspendSelectors;\r\n\r\n\t\t\t// We have some modules monkey-patching the store object\r\n\t\t\t// It's wrong to do so but until we refactor all of our effects to controls\r\n\t\t\t// We need to keep the same \"store\" instance here.\r\n\t\t\tstore.__unstableOriginalGetState = store.getState;\r\n\t\t\tstore.getState = () => store.__unstableOriginalGetState().root;\r\n\r\n\t\t\t// Customize subscribe behavior to call listeners only on effective change,\r\n\t\t\t// not on every dispatch.\r\n\t\t\tconst subscribe =\r\n\t\t\t\tstore &&\r\n\t\t\t\t( ( listener ) => {\r\n\t\t\t\t\tlisteners.add( listener );\r\n\r\n\t\t\t\t\treturn () => listeners.delete( listener );\r\n\t\t\t\t} );\r\n\r\n\t\t\tlet lastState = store.__unstableOriginalGetState();\r\n\t\t\tstore.subscribe( () => {\r\n\t\t\t\tconst state = store.__unstableOriginalGetState();\r\n\t\t\t\tconst hasChanged = state !== lastState;\r\n\t\t\t\tlastState = state;\r\n\r\n\t\t\t\tif ( hasChanged ) {\r\n\t\t\t\t\tfor ( const listener of listeners ) {\r\n\t\t\t\t\t\tlistener();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// This can be simplified to just { subscribe, getSelectors, getActions }\r\n\t\t\t// Once we remove the use function.\r\n\t\t\treturn {\r\n\t\t\t\treducer,\r\n\t\t\t\tstore,\r\n\t\t\t\tactions,\r\n\t\t\t\tselectors,\r\n\t\t\t\tresolvers,\r\n\t\t\t\tgetSelectors,\r\n\t\t\t\tgetResolveSelectors,\r\n\t\t\t\tgetSuspendSelectors,\r\n\t\t\t\tgetActions,\r\n\t\t\t\tsubscribe,\r\n\t\t\t};\r\n\t\t},\r\n\t};\r\n\r\n\t// Expose the private registration functions on the store\r\n\t// descriptor. That's a natural choice since that's where the\r\n\t// public actions and selectors are stored .\r\n\tlock( storeDescriptor, privateRegistrationFunctions );\r\n\r\n\treturn storeDescriptor;\r\n}\r\n\r\n/**\r\n * Creates a redux store for a namespace.\r\n *\r\n * @param {string}       key       Unique namespace identifier.\r\n * @param {Object}       options   Registered store options, with properties\r\n *                                 describing reducer, actions, selectors,\r\n *                                 and resolvers.\r\n * @param {DataRegistry} registry  Registry reference.\r\n * @param {Object}       thunkArgs Argument object for the thunk middleware.\r\n * @return {Object} Newly created redux store.\r\n */\r\nfunction instantiateReduxStore( key, options, registry, thunkArgs ) {\r\n\tconst controls = {\r\n\t\t...options.controls,\r\n\t\t...builtinControls,\r\n\t};\r\n\r\n\tconst normalizedControls = mapValues( controls, ( control ) =>\r\n\t\tcontrol.isRegistryControl ? control( registry ) : control\r\n\t);\r\n\r\n\tconst middlewares = [\r\n\t\tcreateResolversCacheMiddleware( registry, key ),\r\n\t\tpromise,\r\n\t\tcreateReduxRoutineMiddleware( normalizedControls ),\r\n\t\tcreateThunkMiddleware( thunkArgs ),\r\n\t];\r\n\r\n\tconst enhancers = [ applyMiddleware( ...middlewares ) ];\r\n\tif (\r\n\t\ttypeof window !== 'undefined' &&\r\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__\r\n\t) {\r\n\t\tenhancers.push(\r\n\t\t\twindow.__REDUX_DEVTOOLS_EXTENSION__( {\r\n\t\t\t\tname: key,\r\n\t\t\t\tinstanceId: key,\r\n\t\t\t\tserialize: {\r\n\t\t\t\t\treplacer: devToolsReplacer,\r\n\t\t\t\t},\r\n\t\t\t} )\r\n\t\t);\r\n\t}\r\n\r\n\tconst { reducer, initialState } = options;\r\n\tconst enhancedReducer = combineReducers( {\r\n\t\tmetadata: metadataReducer,\r\n\t\troot: reducer,\r\n\t} );\r\n\r\n\treturn createStore(\r\n\t\tenhancedReducer,\r\n\t\t{ root: initialState },\r\n\t\tcompose( enhancers )\r\n\t);\r\n}\r\n\r\n/**\r\n * Maps selectors to functions that return a resolution promise for them\r\n *\r\n * @param {Object} selectors Selectors to map.\r\n * @param {Object} store     The redux store the selectors select from.\r\n *\r\n * @return {Object} Selectors mapped to their resolution functions.\r\n */\r\nfunction mapResolveSelectors( selectors, store ) {\r\n\tconst {\r\n\t\tgetIsResolving,\r\n\t\thasStartedResolution,\r\n\t\thasFinishedResolution,\r\n\t\thasResolutionFailed,\r\n\t\tisResolving,\r\n\t\tgetCachedResolvers,\r\n\t\tgetResolutionState,\r\n\t\tgetResolutionError,\r\n\t\thasResolvingSelectors,\r\n\t\tcountSelectorsByStatus,\r\n\t\t...storeSelectors\r\n\t} = selectors;\r\n\r\n\treturn mapValues( storeSelectors, ( selector, selectorName ) => {\r\n\t\t// If the selector doesn't have a resolver, just convert the return value\r\n\t\t// (including exceptions) to a Promise, no additional extra behavior is needed.\r\n\t\tif ( ! selector.hasResolver ) {\r\n\t\t\treturn async ( ...args ) => selector.apply( null, args );\r\n\t\t}\r\n\r\n\t\treturn ( ...args ) => {\r\n\t\t\treturn new Promise( ( resolve, reject ) => {\r\n\t\t\t\tconst hasFinished = () =>\r\n\t\t\t\t\tselectors.hasFinishedResolution( selectorName, args );\r\n\t\t\t\tconst finalize = ( result ) => {\r\n\t\t\t\t\tconst hasFailed = selectors.hasResolutionFailed(\r\n\t\t\t\t\t\tselectorName,\r\n\t\t\t\t\t\targs\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif ( hasFailed ) {\r\n\t\t\t\t\t\tconst error = selectors.getResolutionError(\r\n\t\t\t\t\t\t\tselectorName,\r\n\t\t\t\t\t\t\targs\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\treject( error );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresolve( result );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tconst getResult = () => selector.apply( null, args );\r\n\t\t\t\t// Trigger the selector (to trigger the resolver)\r\n\t\t\t\tconst result = getResult();\r\n\t\t\t\tif ( hasFinished() ) {\r\n\t\t\t\t\treturn finalize( result );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst unsubscribe = store.subscribe( () => {\r\n\t\t\t\t\tif ( hasFinished() ) {\r\n\t\t\t\t\t\tunsubscribe();\r\n\t\t\t\t\t\tfinalize( getResult() );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t} );\r\n\t\t};\r\n\t} );\r\n}\r\n\r\n/**\r\n * Maps selectors to functions that throw a suspense promise if not yet resolved.\r\n *\r\n * @param {Object} selectors Selectors to map.\r\n * @param {Object} store     The redux store the selectors select from.\r\n *\r\n * @return {Object} Selectors mapped to their suspense functions.\r\n */\r\nfunction mapSuspendSelectors( selectors, store ) {\r\n\treturn mapValues( selectors, ( selector, selectorName ) => {\r\n\t\t// Selector without a resolver doesn't have any extra suspense behavior.\r\n\t\tif ( ! selector.hasResolver ) {\r\n\t\t\treturn selector;\r\n\t\t}\r\n\r\n\t\treturn ( ...args ) => {\r\n\t\t\tconst result = selector.apply( null, args );\r\n\r\n\t\t\tif ( selectors.hasFinishedResolution( selectorName, args ) ) {\r\n\t\t\t\tif ( selectors.hasResolutionFailed( selectorName, args ) ) {\r\n\t\t\t\t\tthrow selectors.getResolutionError( selectorName, args );\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Promise( ( resolve ) => {\r\n\t\t\t\tconst unsubscribe = store.subscribe( () => {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tselectors.hasFinishedResolution( selectorName, args )\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\tunsubscribe();\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t} );\r\n\t\t};\r\n\t} );\r\n}\r\n\r\n/**\r\n * Convert resolvers to a normalized form, an object with `fulfill` method and\r\n * optional methods like `isFulfilled`.\r\n *\r\n * @param {Object} resolvers Resolver to convert\r\n */\r\nfunction mapResolvers( resolvers ) {\r\n\treturn mapValues( resolvers, ( resolver ) => {\r\n\t\tif ( resolver.fulfill ) {\r\n\t\t\treturn resolver;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\t...resolver, // Copy the enumerable properties of the resolver function.\r\n\t\t\tfulfill: resolver, // Add the fulfill method.\r\n\t\t};\r\n\t} );\r\n}\r\n\r\n/**\r\n * Returns a selector with a matched resolver.\r\n * Resolvers are side effects invoked once per argument set of a given selector call,\r\n * used in ensuring that the data needs for the selector are satisfied.\r\n *\r\n * @param {Object} selector       The selector function to be bound.\r\n * @param {string} selectorName   The selector name.\r\n * @param {Object} resolver       Resolver to call.\r\n * @param {Object} store          The redux store to which the resolvers should be mapped.\r\n * @param {Object} resolversCache Resolvers Cache.\r\n */\r\nfunction mapSelectorWithResolver(\r\n\tselector,\r\n\tselectorName,\r\n\tresolver,\r\n\tstore,\r\n\tresolversCache\r\n) {\r\n\tfunction fulfillSelector( args ) {\r\n\t\tconst state = store.getState();\r\n\r\n\t\tif (\r\n\t\t\tresolversCache.isRunning( selectorName, args ) ||\r\n\t\t\t( typeof resolver.isFulfilled === 'function' &&\r\n\t\t\t\tresolver.isFulfilled( state, ...args ) )\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst { metadata } = store.__unstableOriginalGetState();\r\n\r\n\t\tif (\r\n\t\t\tmetadataSelectors.hasStartedResolution(\r\n\t\t\t\tmetadata,\r\n\t\t\t\tselectorName,\r\n\t\t\t\targs\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tresolversCache.markAsRunning( selectorName, args );\r\n\r\n\t\tsetTimeout( async () => {\r\n\t\t\tresolversCache.clear( selectorName, args );\r\n\t\t\tstore.dispatch(\r\n\t\t\t\tmetadataActions.startResolution( selectorName, args )\r\n\t\t\t);\r\n\t\t\ttry {\r\n\t\t\t\tconst action = resolver.fulfill( ...args );\r\n\t\t\t\tif ( action ) {\r\n\t\t\t\t\tawait store.dispatch( action );\r\n\t\t\t\t}\r\n\t\t\t\tstore.dispatch(\r\n\t\t\t\t\tmetadataActions.finishResolution( selectorName, args )\r\n\t\t\t\t);\r\n\t\t\t} catch ( error ) {\r\n\t\t\t\tstore.dispatch(\r\n\t\t\t\t\tmetadataActions.failResolution( selectorName, args, error )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}, 0 );\r\n\t}\r\n\r\n\tconst selectorResolver = ( ...args ) => {\r\n\t\targs = normalize( selector, args );\r\n\t\tfulfillSelector( args );\r\n\t\treturn selector( ...args );\r\n\t};\r\n\tselectorResolver.hasResolver = true;\r\n\treturn selectorResolver;\r\n}\r\n\r\n/**\r\n * Applies selector's normalization function to the given arguments\r\n * if it exists.\r\n *\r\n * @param {Object} selector The selector potentially with a normalization method property.\r\n * @param {Array}  args     selector arguments to normalize.\r\n * @return {Array} Potentially normalized arguments.\r\n */\r\nfunction normalize( selector, args ) {\r\n\tif (\r\n\t\tselector.__unstableNormalizeArgs &&\r\n\t\ttypeof selector.__unstableNormalizeArgs === 'function' &&\r\n\t\targs?.length\r\n\t) {\r\n\t\treturn selector.__unstableNormalizeArgs( args );\r\n\t}\r\n\treturn args;\r\n}\r\n"],"mappings":"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","ignoreList":[]}