{"version":3,"names":["startResolution","selectorName","args","type","finishResolution","failResolution","error","startResolutions","finishResolutions","failResolutions","errors","invalidateResolution","invalidateResolutionForStore","invalidateResolutionForStoreSelector"],"sources":["@wordpress/data/src/redux-store/metadata/actions.js"],"sourcesContent":["/**\r\n * Returns an action object used in signalling that selector resolution has\r\n * started.\r\n *\r\n * @param {string}    selectorName Name of selector for which resolver triggered.\r\n * @param {unknown[]} args         Arguments to associate for uniqueness.\r\n *\r\n * @return {{ type: 'START_RESOLUTION', selectorName: string, args: unknown[] }} Action object.\r\n */\r\nexport function startResolution( selectorName, args ) {\r\n\treturn {\r\n\t\ttype: 'START_RESOLUTION',\r\n\t\tselectorName,\r\n\t\targs,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that selector resolution has\r\n * completed.\r\n *\r\n * @param {string}    selectorName Name of selector for which resolver triggered.\r\n * @param {unknown[]} args         Arguments to associate for uniqueness.\r\n *\r\n * @return {{ type: 'FINISH_RESOLUTION', selectorName: string, args: unknown[] }} Action object.\r\n */\r\nexport function finishResolution( selectorName, args ) {\r\n\treturn {\r\n\t\ttype: 'FINISH_RESOLUTION',\r\n\t\tselectorName,\r\n\t\targs,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that selector resolution has\r\n * failed.\r\n *\r\n * @param {string}        selectorName Name of selector for which resolver triggered.\r\n * @param {unknown[]}     args         Arguments to associate for uniqueness.\r\n * @param {Error|unknown} error        The error that caused the failure.\r\n *\r\n * @return {{ type: 'FAIL_RESOLUTION', selectorName: string, args: unknown[], error: Error|unknown }} Action object.\r\n */\r\nexport function failResolution( selectorName, args, error ) {\r\n\treturn {\r\n\t\ttype: 'FAIL_RESOLUTION',\r\n\t\tselectorName,\r\n\t\targs,\r\n\t\terror,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that a batch of selector resolutions has\r\n * started.\r\n *\r\n * @param {string}      selectorName Name of selector for which resolver triggered.\r\n * @param {unknown[][]} args         Array of arguments to associate for uniqueness, each item\r\n *                                   is associated to a resolution.\r\n *\r\n * @return {{ type: 'START_RESOLUTIONS', selectorName: string, args: unknown[][] }} Action object.\r\n */\r\nexport function startResolutions( selectorName, args ) {\r\n\treturn {\r\n\t\ttype: 'START_RESOLUTIONS',\r\n\t\tselectorName,\r\n\t\targs,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that a batch of selector resolutions has\r\n * completed.\r\n *\r\n * @param {string}      selectorName Name of selector for which resolver triggered.\r\n * @param {unknown[][]} args         Array of arguments to associate for uniqueness, each item\r\n *                                   is associated to a resolution.\r\n *\r\n * @return {{ type: 'FINISH_RESOLUTIONS', selectorName: string, args: unknown[][] }} Action object.\r\n */\r\nexport function finishResolutions( selectorName, args ) {\r\n\treturn {\r\n\t\ttype: 'FINISH_RESOLUTIONS',\r\n\t\tselectorName,\r\n\t\targs,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that a batch of selector resolutions has\r\n * completed and at least one of them has failed.\r\n *\r\n * @param {string}            selectorName Name of selector for which resolver triggered.\r\n * @param {unknown[]}         args         Array of arguments to associate for uniqueness, each item\r\n *                                         is associated to a resolution.\r\n * @param {(Error|unknown)[]} errors       Array of errors to associate for uniqueness, each item\r\n *                                         is associated to a resolution.\r\n * @return {{ type: 'FAIL_RESOLUTIONS', selectorName: string, args: unknown[], errors: Array<Error|unknown> }} Action object.\r\n */\r\nexport function failResolutions( selectorName, args, errors ) {\r\n\treturn {\r\n\t\ttype: 'FAIL_RESOLUTIONS',\r\n\t\tselectorName,\r\n\t\targs,\r\n\t\terrors,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that we should invalidate the resolution cache.\r\n *\r\n * @param {string}    selectorName Name of selector for which resolver should be invalidated.\r\n * @param {unknown[]} args         Arguments to associate for uniqueness.\r\n *\r\n * @return {{ type: 'INVALIDATE_RESOLUTION', selectorName: string, args: any[] }} Action object.\r\n */\r\nexport function invalidateResolution( selectorName, args ) {\r\n\treturn {\r\n\t\ttype: 'INVALIDATE_RESOLUTION',\r\n\t\tselectorName,\r\n\t\targs,\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that the resolution\r\n * should be invalidated.\r\n *\r\n * @return {{ type: 'INVALIDATE_RESOLUTION_FOR_STORE' }} Action object.\r\n */\r\nexport function invalidateResolutionForStore() {\r\n\treturn {\r\n\t\ttype: 'INVALIDATE_RESOLUTION_FOR_STORE',\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used in signalling that the resolution cache for a\r\n * given selectorName should be invalidated.\r\n *\r\n * @param {string} selectorName Name of selector for which all resolvers should\r\n *                              be invalidated.\r\n *\r\n * @return  {{ type: 'INVALIDATE_RESOLUTION_FOR_STORE_SELECTOR', selectorName: string }} Action object.\r\n */\r\nexport function invalidateResolutionForStoreSelector( selectorName ) {\r\n\treturn {\r\n\t\ttype: 'INVALIDATE_RESOLUTION_FOR_STORE_SELECTOR',\r\n\t\tselectorName,\r\n\t};\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,eAAeA,CAAEC,YAAY,EAAEC,IAAI,EAAG;EACrD,OAAO;IACNC,IAAI,EAAE,kBAAkB;IACxBF,YAAY;IACZC;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,gBAAgBA,CAAEH,YAAY,EAAEC,IAAI,EAAG;EACtD,OAAO;IACNC,IAAI,EAAE,mBAAmB;IACzBF,YAAY;IACZC;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,cAAcA,CAAEJ,YAAY,EAAEC,IAAI,EAAEI,KAAK,EAAG;EAC3D,OAAO;IACNH,IAAI,EAAE,iBAAiB;IACvBF,YAAY;IACZC,IAAI;IACJI;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAAEN,YAAY,EAAEC,IAAI,EAAG;EACtD,OAAO;IACNC,IAAI,EAAE,mBAAmB;IACzBF,YAAY;IACZC;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASM,iBAAiBA,CAAEP,YAAY,EAAEC,IAAI,EAAG;EACvD,OAAO;IACNC,IAAI,EAAE,oBAAoB;IAC1BF,YAAY;IACZC;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASO,eAAeA,CAAER,YAAY,EAAEC,IAAI,EAAEQ,MAAM,EAAG;EAC7D,OAAO;IACNP,IAAI,EAAE,kBAAkB;IACxBF,YAAY;IACZC,IAAI;IACJQ;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,oBAAoBA,CAAEV,YAAY,EAAEC,IAAI,EAAG;EAC1D,OAAO;IACNC,IAAI,EAAE,uBAAuB;IAC7BF,YAAY;IACZC;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASU,4BAA4BA,CAAA,EAAG;EAC9C,OAAO;IACNT,IAAI,EAAE;EACP,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASU,oCAAoCA,CAAEZ,YAAY,EAAG;EACpE,OAAO;IACNE,IAAI,EAAE,0CAA0C;IAChDF;EACD,CAAC;AACF","ignoreList":[]}