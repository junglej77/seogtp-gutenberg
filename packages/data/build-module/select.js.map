{"version":3,"names":["defaultRegistry","select","storeNameOrDescriptor"],"sources":["@wordpress/data/src/select.ts"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport type { AnyConfig, CurriedSelectorsOf, StoreDescriptor } from './types';\r\nimport defaultRegistry from './default-registry';\r\n\r\n/**\r\n * Given a store descriptor, returns an object of the store's selectors.\r\n * The selector functions are been pre-bound to pass the current state automatically.\r\n * As a consumer, you need only pass arguments of the selector, if applicable.\r\n *\r\n *\r\n * @param storeNameOrDescriptor The store descriptor. The legacy calling convention\r\n *                              of passing the store name is also supported.\r\n *\r\n * @example\r\n * ```js\r\n * import { select } from '@wordpress/data';\r\n * import { store as myCustomStore } from 'my-custom-store';\r\n *\r\n * select( myCustomStore ).getPrice( 'hammer' );\r\n * ```\r\n *\r\n * @return Object containing the store's selectors.\r\n */\r\nexport function select< T extends StoreDescriptor< AnyConfig > >(\r\n\tstoreNameOrDescriptor: string | T\r\n): CurriedSelectorsOf< T > {\r\n\treturn defaultRegistry.select( storeNameOrDescriptor );\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAOA,eAAe,MAAM,oBAAoB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CACrBC,qBAAiC,EACP;EAC1B,OAAOF,eAAe,CAACC,MAAM,CAAEC,qBAAsB,CAAC;AACvD","ignoreList":[]}