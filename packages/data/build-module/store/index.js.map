{"version":3,"names":["coreDataStore","name","instantiate","registry","getCoreDataSelector","selectorName","key","args","select","getCoreDataAction","actionName","dispatch","getSelectors","Object","fromEntries","map","getActions","subscribe"],"sources":["@wordpress/data/src/store/index.js"],"sourcesContent":["const coreDataStore = {\r\n\tname: 'core/data',\r\n\tinstantiate( registry ) {\r\n\t\tconst getCoreDataSelector =\r\n\t\t\t( selectorName ) =>\r\n\t\t\t( key, ...args ) => {\r\n\t\t\t\treturn registry.select( key )[ selectorName ]( ...args );\r\n\t\t\t};\r\n\r\n\t\tconst getCoreDataAction =\r\n\t\t\t( actionName ) =>\r\n\t\t\t( key, ...args ) => {\r\n\t\t\t\treturn registry.dispatch( key )[ actionName ]( ...args );\r\n\t\t\t};\r\n\r\n\t\treturn {\r\n\t\t\tgetSelectors() {\r\n\t\t\t\treturn Object.fromEntries(\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t'getIsResolving',\r\n\t\t\t\t\t\t'hasStartedResolution',\r\n\t\t\t\t\t\t'hasFinishedResolution',\r\n\t\t\t\t\t\t'isResolving',\r\n\t\t\t\t\t\t'getCachedResolvers',\r\n\t\t\t\t\t].map( ( selectorName ) => [\r\n\t\t\t\t\t\tselectorName,\r\n\t\t\t\t\t\tgetCoreDataSelector( selectorName ),\r\n\t\t\t\t\t] )\r\n\t\t\t\t);\r\n\t\t\t},\r\n\r\n\t\t\tgetActions() {\r\n\t\t\t\treturn Object.fromEntries(\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t'startResolution',\r\n\t\t\t\t\t\t'finishResolution',\r\n\t\t\t\t\t\t'invalidateResolution',\r\n\t\t\t\t\t\t'invalidateResolutionForStore',\r\n\t\t\t\t\t\t'invalidateResolutionForStoreSelector',\r\n\t\t\t\t\t].map( ( actionName ) => [\r\n\t\t\t\t\t\tactionName,\r\n\t\t\t\t\t\tgetCoreDataAction( actionName ),\r\n\t\t\t\t\t] )\r\n\t\t\t\t);\r\n\t\t\t},\r\n\r\n\t\t\tsubscribe() {\r\n\t\t\t\t// There's no reasons to trigger any listener when we subscribe to this store\r\n\t\t\t\t// because there's no state stored in this store that need to retrigger selectors\r\n\t\t\t\t// if a change happens, the corresponding store where the tracking stated live\r\n\t\t\t\t// would have already triggered a \"subscribe\" call.\r\n\t\t\t\treturn () => () => {};\r\n\t\t\t},\r\n\t\t};\r\n\t},\r\n};\r\n\r\nexport default coreDataStore;\r\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG;EACrBC,IAAI,EAAE,WAAW;EACjBC,WAAWA,CAAEC,QAAQ,EAAG;IACvB,MAAMC,mBAAmB,GACtBC,YAAY,IACd,CAAEC,GAAG,EAAE,GAAGC,IAAI,KAAM;MACnB,OAAOJ,QAAQ,CAACK,MAAM,CAAEF,GAAI,CAAC,CAAED,YAAY,CAAE,CAAE,GAAGE,IAAK,CAAC;IACzD,CAAC;IAEF,MAAME,iBAAiB,GACpBC,UAAU,IACZ,CAAEJ,GAAG,EAAE,GAAGC,IAAI,KAAM;MACnB,OAAOJ,QAAQ,CAACQ,QAAQ,CAAEL,GAAI,CAAC,CAAEI,UAAU,CAAE,CAAE,GAAGH,IAAK,CAAC;IACzD,CAAC;IAEF,OAAO;MACNK,YAAYA,CAAA,EAAG;QACd,OAAOC,MAAM,CAACC,WAAW,CACxB,CACC,gBAAgB,EAChB,sBAAsB,EACtB,uBAAuB,EACvB,aAAa,EACb,oBAAoB,CACpB,CAACC,GAAG,CAAIV,YAAY,IAAM,CAC1BA,YAAY,EACZD,mBAAmB,CAAEC,YAAa,CAAC,CAClC,CACH,CAAC;MACF,CAAC;MAEDW,UAAUA,CAAA,EAAG;QACZ,OAAOH,MAAM,CAACC,WAAW,CACxB,CACC,iBAAiB,EACjB,kBAAkB,EAClB,sBAAsB,EACtB,8BAA8B,EAC9B,sCAAsC,CACtC,CAACC,GAAG,CAAIL,UAAU,IAAM,CACxBA,UAAU,EACVD,iBAAiB,CAAEC,UAAW,CAAC,CAC9B,CACH,CAAC;MACF,CAAC;MAEDO,SAASA,CAAA,EAAG;QACX;QACA;QACA;QACA;QACA,OAAO,MAAM,MAAM,CAAC,CAAC;MACtB;IACD,CAAC;EACF;AACD,CAAC;AAED,eAAejB,aAAa","ignoreList":[]}