"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";



var _TTVWSMCCcjs = require('./TTVWSMCC.cjs');


var _PUMYQXTDcjs = require('./PUMYQXTD.cjs');


var _VPKU3AVXcjs = require('./VPKU3AVX.cjs');


var _VRPZ4HD5cjs = require('./VRPZ4HD5.cjs');




var _M5IWBORBcjs = require('./M5IWBORB.cjs');


var _DMH7HONVcjs = require('./DMH7HONV.cjs');





var _WT6AUJWVcjs = require('./WT6AUJWV.cjs');




var _3IVNQNIVcjs = require('./3IVNQNIV.cjs');

// src/menu/menu-list.tsx
var _misc = require('@ariakit/core/utils/misc');
var _react = require('react');
var _jsxruntime = require('react/jsx-runtime');
var TagName = "div";
function useAriaLabelledBy(_a) {
  var _b = _a, { store } = _b, props = _3IVNQNIVcjs.__objRest.call(void 0, _b, ["store"]);
  const [id, setId] = _react.useState.call(void 0, void 0);
  const label = props["aria-label"];
  const disclosureElement = _DMH7HONVcjs.useStoreState.call(void 0, store, "disclosureElement");
  const contentElement = _DMH7HONVcjs.useStoreState.call(void 0, store, "contentElement");
  _react.useEffect.call(void 0, () => {
    const disclosure = disclosureElement;
    if (!disclosure) return;
    const menu = contentElement;
    if (!menu) return;
    const menuLabel = label || menu.hasAttribute("aria-label");
    if (menuLabel) {
      setId(void 0);
    } else if (disclosure.id) {
      setId(disclosure.id);
    }
  }, [label, disclosureElement, contentElement]);
  return id;
}
var useMenuList = _M5IWBORBcjs.createHook.call(void 0, 
  function useMenuList2(_a) {
    var _b = _a, { store, alwaysVisible, composite } = _b, props = _3IVNQNIVcjs.__objRest.call(void 0, _b, ["store", "alwaysVisible", "composite"]);
    const context = _TTVWSMCCcjs.useMenuProviderContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "MenuList must receive a `store` prop or be wrapped in a MenuProvider component."
    );
    const parentMenu = store.parent;
    const parentMenubar = store.menubar;
    const hasParentMenu = !!parentMenu;
    const id = _WT6AUJWVcjs.useId.call(void 0, props.id);
    const onKeyDownProp = props.onKeyDown;
    const dir = store.useState(
      (state) => state.placement.split("-")[0]
    );
    const orientation = store.useState(
      (state) => state.orientation === "both" ? void 0 : state.orientation
    );
    const isHorizontal = orientation !== "vertical";
    const isMenubarHorizontal = _DMH7HONVcjs.useStoreState.call(void 0, 
      parentMenubar,
      (state) => !!state && state.orientation !== "vertical"
    );
    const onKeyDown = _WT6AUJWVcjs.useEvent.call(void 0, (event) => {
      onKeyDownProp == null ? void 0 : onKeyDownProp(event);
      if (event.defaultPrevented) return;
      if (hasParentMenu || parentMenubar && !isHorizontal) {
        const hideMap = {
          ArrowRight: () => dir === "left" && !isHorizontal,
          ArrowLeft: () => dir === "right" && !isHorizontal,
          ArrowUp: () => dir === "bottom" && isHorizontal,
          ArrowDown: () => dir === "top" && isHorizontal
        };
        const action = hideMap[event.key];
        if (action == null ? void 0 : action()) {
          event.stopPropagation();
          event.preventDefault();
          return store == null ? void 0 : store.hide();
        }
      }
      if (parentMenubar) {
        const keyMap = {
          ArrowRight: () => {
            if (!isMenubarHorizontal) return;
            return parentMenubar.next();
          },
          ArrowLeft: () => {
            if (!isMenubarHorizontal) return;
            return parentMenubar.previous();
          },
          ArrowDown: () => {
            if (isMenubarHorizontal) return;
            return parentMenubar.next();
          },
          ArrowUp: () => {
            if (isMenubarHorizontal) return;
            return parentMenubar.previous();
          }
        };
        const action = keyMap[event.key];
        const id2 = action == null ? void 0 : action();
        if (id2 !== void 0) {
          event.stopPropagation();
          event.preventDefault();
          parentMenubar.move(id2);
        }
      }
    });
    props = _WT6AUJWVcjs.useWrapElement.call(void 0, 
      props,
      (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _TTVWSMCCcjs.MenuScopedContextProvider, { value: store, children: element }),
      [store]
    );
    const ariaLabelledBy = useAriaLabelledBy(_3IVNQNIVcjs.__spreadValues.call(void 0, { store }, props));
    const mounted = store.useState("mounted");
    const hidden = _VRPZ4HD5cjs.isHidden.call(void 0, mounted, props.hidden, alwaysVisible);
    const style = hidden ? _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {}, props.style), { display: "none" }) : props.style;
    props = _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {
      id,
      "aria-labelledby": ariaLabelledBy,
      hidden
    }, props), {
      ref: _WT6AUJWVcjs.useMergeRefs.call(void 0, id ? store.setContentElement : null, props.ref),
      style,
      onKeyDown
    });
    const hasCombobox = !!store.combobox;
    composite = composite != null ? composite : !hasCombobox;
    if (composite) {
      props = _3IVNQNIVcjs.__spreadValues.call(void 0, {
        role: "menu",
        "aria-orientation": orientation
      }, props);
    }
    props = _VPKU3AVXcjs.useComposite.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, { store, composite }, props));
    props = _PUMYQXTDcjs.useCompositeTypeahead.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, { store, typeahead: !hasCombobox }, props));
    return props;
  }
);
var MenuList = _M5IWBORBcjs.forwardRef.call(void 0, function MenuList2(props) {
  const htmlProps = useMenuList(props);
  return _M5IWBORBcjs.createElement.call(void 0, TagName, htmlProps);
});




exports.useMenuList = useMenuList; exports.MenuList = MenuList;
