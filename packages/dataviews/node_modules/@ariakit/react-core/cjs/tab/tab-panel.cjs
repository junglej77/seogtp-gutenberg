"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";



var _PSYRVXCOcjs = require('../__chunks/PSYRVXCO.cjs');


var _RRCMCI3Icjs = require('../__chunks/RRCMCI3I.cjs');
require('../__chunks/3MQN464L.cjs');
require('../__chunks/32EK4BGY.cjs');


var _VRPZ4HD5cjs = require('../__chunks/VRPZ4HD5.cjs');
require('../__chunks/HHTQYHYL.cjs');
require('../__chunks/7K2RM2SD.cjs');


var _YGEHBXGAcjs = require('../__chunks/YGEHBXGA.cjs');
require('../__chunks/DYIDES27.cjs');




var _M5IWBORBcjs = require('../__chunks/M5IWBORB.cjs');


var _C55AGIGAcjs = require('../__chunks/C55AGIGA.cjs');
require('../__chunks/DMH7HONV.cjs');





var _WT6AUJWVcjs = require('../__chunks/WT6AUJWV.cjs');
require('../__chunks/54XFMNDS.cjs');




var _3IVNQNIVcjs = require('../__chunks/3IVNQNIV.cjs');

// src/tab/tab-panel.tsx
var _tabstore = require('@ariakit/core/tab/tab-store');
var _focus = require('@ariakit/core/utils/focus');
var _misc = require('@ariakit/core/utils/misc');
var _react = require('react');
var _jsxruntime = require('react/jsx-runtime');
var TagName = "div";
var useTabPanel = _M5IWBORBcjs.createHook.call(void 0, 
  function useTabPanel2(_a) {
    var _b = _a, {
      store,
      unmountOnHide,
      tabId: tabIdProp,
      getItem: getItemProp
    } = _b, props = _3IVNQNIVcjs.__objRest.call(void 0, _b, [
      "store",
      "unmountOnHide",
      "tabId",
      "getItem"
    ]);
    const context = _PSYRVXCOcjs.useTabProviderContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "TabPanel must receive a `store` prop or be wrapped in a TabProvider component."
    );
    const ref = _react.useRef.call(void 0, null);
    const id = _WT6AUJWVcjs.useId.call(void 0, props.id);
    const [hasTabbableChildren, setHasTabbableChildren] = _react.useState.call(void 0, false);
    _react.useEffect.call(void 0, () => {
      const element = ref.current;
      if (!element) return;
      const tabbable = _focus.getAllTabbableIn.call(void 0, element);
      setHasTabbableChildren(!!tabbable.length);
    }, []);
    const getItem = _react.useCallback.call(void 0, 
      (item) => {
        const nextItem = _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {}, item), { id: id || item.id, tabId: tabIdProp });
        if (getItemProp) {
          return getItemProp(nextItem);
        }
        return nextItem;
      },
      [id, tabIdProp, getItemProp]
    );
    const onKeyDownProp = props.onKeyDown;
    const onKeyDown = _WT6AUJWVcjs.useEvent.call(void 0, (event) => {
      onKeyDownProp == null ? void 0 : onKeyDownProp(event);
      if (event.defaultPrevented) return;
      if (!(store == null ? void 0 : store.composite)) return;
      const state = store.getState();
      const tab = _tabstore.createTabStore.call(void 0, _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {}, state), { activeId: state.selectedId }));
      tab.setState("renderedItems", state.renderedItems);
      const keyMap = {
        ArrowLeft: tab.previous,
        ArrowRight: tab.next,
        Home: tab.first,
        End: tab.last
      };
      const action = keyMap[event.key];
      if (!action) return;
      const nextId = action();
      if (!nextId) return;
      event.preventDefault();
      store.move(nextId);
    });
    props = _WT6AUJWVcjs.useWrapElement.call(void 0, 
      props,
      (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _PSYRVXCOcjs.TabScopedContextProvider, { value: store, children: element }),
      [store]
    );
    const tabId = store.panels.useState(
      () => {
        var _a2;
        return tabIdProp || ((_a2 = store == null ? void 0 : store.panels.item(id)) == null ? void 0 : _a2.tabId);
      }
    );
    const open = store.useState(
      (state) => !!tabId && state.selectedId === tabId
    );
    const disclosure = _C55AGIGAcjs.useDisclosureStore.call(void 0, { open });
    const mounted = disclosure.useState("mounted");
    props = _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {
      id,
      role: "tabpanel",
      "aria-labelledby": tabId || void 0
    }, props), {
      children: unmountOnHide && !mounted ? null : props.children,
      ref: _WT6AUJWVcjs.useMergeRefs.call(void 0, ref, props.ref),
      onKeyDown
    });
    props = _YGEHBXGAcjs.useFocusable.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, {
      // If the tab panel is rendered as part of another composite widget such
      // as combobox, it should not be focusable.
      focusable: !store.composite && !hasTabbableChildren
    }, props));
    props = _VRPZ4HD5cjs.useDisclosureContent.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, { store: disclosure }, props));
    props = _RRCMCI3Icjs.useCollectionItem.call(void 0, _3IVNQNIVcjs.__spreadProps.call(void 0, _3IVNQNIVcjs.__spreadValues.call(void 0, { store: store.panels }, props), { getItem }));
    return props;
  }
);
var TabPanel = _M5IWBORBcjs.forwardRef.call(void 0, function TabPanel2(props) {
  const htmlProps = useTabPanel(props);
  return _M5IWBORBcjs.createElement.call(void 0, TagName, htmlProps);
});



exports.TabPanel = TabPanel; exports.useTabPanel = useTabPanel;
