{"version":3,"names":["momentLib","deprecated","WP_ZONE","VALID_UTC_OFFSET","settings","l10n","locale","months","monthsShort","weekdays","weekdaysShort","meridiem","am","pm","AM","PM","relative","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","startOfWeek","formats","time","date","datetime","datetimeAbbreviated","timezone","offset","offsetFormatted","string","abbr","setSettings","dateSettings","setupWPTimezone","locales","includes","localeData","longDateFormat","defineLocale","currentLocale","parentLocale","hour","minute","isLowercase","LT","LTS","L","LL","LLL","LLLL","relativeTime","getSettings","__experimentalGetSettings","since","alternative","currentTimezone","tz","zone","add","pack","name","abbrs","untils","offsets","MINUTE_IN_SECONDS","HOUR_IN_MINUTES","HOUR_IN_SECONDS","formatMap","D","j","l","N","S","momentDate","num","format","withOrdinal","replace","w","z","parseInt","toString","W","F","n","t","daysInMonth","isLeapYear","o","Y","a","A","B","timezoned","utcOffset","seconds","minutes","hours","g","G","H","i","u","v","e","I","isDST","O","P","T","Z","sign","parts","substring","split","map","c","r","U","dateFormat","dateValue","Date","char","newFormat","length","push","formatter","join","dateMoment","buildMoment","gmdate","utc","dateI18n","gmdateI18n","undefined","isInTheFuture","now","momentObject","isAfter","getDate","dateString","toDate","humanTimeDiff","from","to","fromMoment","toMoment","isUTCOffset","test"],"sources":["@wordpress/date/src/index.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport momentLib from 'moment';\r\nimport 'moment-timezone/moment-timezone';\r\nimport 'moment-timezone/moment-timezone-utils';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport deprecated from '@wordpress/deprecated';\r\n\r\n/** @typedef {import('moment').Moment} Moment */\r\n/** @typedef {import('moment').LocaleSpecification} MomentLocaleSpecification */\r\n\r\n/**\r\n * @typedef MeridiemConfig\r\n * @property {string} am Lowercase AM.\r\n * @property {string} AM Uppercase AM.\r\n * @property {string} pm Lowercase PM.\r\n * @property {string} PM Uppercase PM.\r\n */\r\n\r\n/**\r\n * @typedef FormatsConfig\r\n * @property {string} time                Time format.\r\n * @property {string} date                Date format.\r\n * @property {string} datetime            Datetime format.\r\n * @property {string} datetimeAbbreviated Abbreviated datetime format.\r\n */\r\n\r\n/**\r\n * @typedef TimezoneConfig\r\n * @property {string} offset          Offset setting.\r\n * @property {string} offsetFormatted Offset setting with decimals formatted to minutes.\r\n * @property {string} string          The timezone as a string (e.g., `'America/Los_Angeles'`).\r\n * @property {string} abbr            Abbreviation for the timezone.\r\n */\r\n\r\n/* eslint-disable jsdoc/valid-types */\r\n/**\r\n * @typedef L10nSettings\r\n * @property {string}                                     locale        Moment locale.\r\n * @property {MomentLocaleSpecification['months']}        months        Locale months.\r\n * @property {MomentLocaleSpecification['monthsShort']}   monthsShort   Locale months short.\r\n * @property {MomentLocaleSpecification['weekdays']}      weekdays      Locale weekdays.\r\n * @property {MomentLocaleSpecification['weekdaysShort']} weekdaysShort Locale weekdays short.\r\n * @property {MeridiemConfig}                             meridiem      Meridiem config.\r\n * @property {MomentLocaleSpecification['relativeTime']}  relative      Relative time config.\r\n * @property {0|1|2|3|4|5|6}                              startOfWeek   Day that the week starts on.\r\n */\r\n/* eslint-enable jsdoc/valid-types */\r\n\r\n/**\r\n * @typedef DateSettings\r\n * @property {L10nSettings}   l10n     Localization settings.\r\n * @property {FormatsConfig}  formats  Date/time formats config.\r\n * @property {TimezoneConfig} timezone Timezone settings.\r\n */\r\n\r\nconst WP_ZONE = 'WP';\r\n\r\n// This regular expression tests positive for UTC offsets as described in ISO 8601.\r\n// See: https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC\r\nconst VALID_UTC_OFFSET = /^[+-][0-1][0-9](:?[0-9][0-9])?$/;\r\n\r\n// Changes made here will likely need to be synced with Core in the file\r\n// src/wp-includes/script-loader.php in `wp_default_packages_inline_scripts()`.\r\n/** @type {DateSettings} */\r\nlet settings = {\r\n\tl10n: {\r\n\t\tlocale: 'en',\r\n\t\tmonths: [\r\n\t\t\t'January',\r\n\t\t\t'February',\r\n\t\t\t'March',\r\n\t\t\t'April',\r\n\t\t\t'May',\r\n\t\t\t'June',\r\n\t\t\t'July',\r\n\t\t\t'August',\r\n\t\t\t'September',\r\n\t\t\t'October',\r\n\t\t\t'November',\r\n\t\t\t'December',\r\n\t\t],\r\n\t\tmonthsShort: [\r\n\t\t\t'Jan',\r\n\t\t\t'Feb',\r\n\t\t\t'Mar',\r\n\t\t\t'Apr',\r\n\t\t\t'May',\r\n\t\t\t'Jun',\r\n\t\t\t'Jul',\r\n\t\t\t'Aug',\r\n\t\t\t'Sep',\r\n\t\t\t'Oct',\r\n\t\t\t'Nov',\r\n\t\t\t'Dec',\r\n\t\t],\r\n\t\tweekdays: [\r\n\t\t\t'Sunday',\r\n\t\t\t'Monday',\r\n\t\t\t'Tuesday',\r\n\t\t\t'Wednesday',\r\n\t\t\t'Thursday',\r\n\t\t\t'Friday',\r\n\t\t\t'Saturday',\r\n\t\t],\r\n\t\tweekdaysShort: [ 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat' ],\r\n\t\tmeridiem: { am: 'am', pm: 'pm', AM: 'AM', PM: 'PM' },\r\n\t\trelative: {\r\n\t\t\tfuture: '%s from now',\r\n\t\t\tpast: '%s ago',\r\n\t\t\ts: 'a few seconds',\r\n\t\t\tss: '%d seconds',\r\n\t\t\tm: 'a minute',\r\n\t\t\tmm: '%d minutes',\r\n\t\t\th: 'an hour',\r\n\t\t\thh: '%d hours',\r\n\t\t\td: 'a day',\r\n\t\t\tdd: '%d days',\r\n\t\t\tM: 'a month',\r\n\t\t\tMM: '%d months',\r\n\t\t\ty: 'a year',\r\n\t\t\tyy: '%d years',\r\n\t\t},\r\n\t\tstartOfWeek: 0,\r\n\t},\r\n\tformats: {\r\n\t\ttime: 'g: i a',\r\n\t\tdate: 'F j, Y',\r\n\t\tdatetime: 'F j, Y g: i a',\r\n\t\tdatetimeAbbreviated: 'M j, Y g: i a',\r\n\t},\r\n\ttimezone: { offset: '0', offsetFormatted: '0', string: '', abbr: '' },\r\n};\r\n\r\n/**\r\n * Adds a locale to moment, using the format supplied by `wp_localize_script()`.\r\n *\r\n * @param {DateSettings} dateSettings Settings, including locale data.\r\n */\r\nexport function setSettings( dateSettings ) {\r\n\tsettings = dateSettings;\r\n\r\n\tsetupWPTimezone();\r\n\r\n\t// Does moment already have a locale with the right name?\r\n\tif ( momentLib.locales().includes( dateSettings.l10n.locale ) ) {\r\n\t\t// Is that locale misconfigured, e.g. because we are on a site running\r\n\t\t// WordPress < 6.0?\r\n\t\tif (\r\n\t\t\tmomentLib\r\n\t\t\t\t.localeData( dateSettings.l10n.locale )\r\n\t\t\t\t.longDateFormat( 'LTS' ) === null\r\n\t\t) {\r\n\t\t\t// Delete the misconfigured locale.\r\n\t\t\t// @ts-ignore Type definitions are incorrect - null is permitted.\r\n\t\t\tmomentLib.defineLocale( dateSettings.l10n.locale, null );\r\n\t\t} else {\r\n\t\t\t// We have a properly configured locale, so no need to create one.\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t// defineLocale() will modify the current locale, so back it up.\r\n\tconst currentLocale = momentLib.locale();\r\n\r\n\t// Create locale.\r\n\tmomentLib.defineLocale( dateSettings.l10n.locale, {\r\n\t\t// Inherit anything missing from English. We don't load\r\n\t\t// moment-with-locales.js so English is all there is.\r\n\t\tparentLocale: 'en',\r\n\t\tmonths: dateSettings.l10n.months,\r\n\t\tmonthsShort: dateSettings.l10n.monthsShort,\r\n\t\tweekdays: dateSettings.l10n.weekdays,\r\n\t\tweekdaysShort: dateSettings.l10n.weekdaysShort,\r\n\t\tmeridiem( hour, minute, isLowercase ) {\r\n\t\t\tif ( hour < 12 ) {\r\n\t\t\t\treturn isLowercase\r\n\t\t\t\t\t? dateSettings.l10n.meridiem.am\r\n\t\t\t\t\t: dateSettings.l10n.meridiem.AM;\r\n\t\t\t}\r\n\t\t\treturn isLowercase\r\n\t\t\t\t? dateSettings.l10n.meridiem.pm\r\n\t\t\t\t: dateSettings.l10n.meridiem.PM;\r\n\t\t},\r\n\t\tlongDateFormat: {\r\n\t\t\tLT: dateSettings.formats.time,\r\n\t\t\tLTS: momentLib.localeData( 'en' ).longDateFormat( 'LTS' ),\r\n\t\t\tL: momentLib.localeData( 'en' ).longDateFormat( 'L' ),\r\n\t\t\tLL: dateSettings.formats.date,\r\n\t\t\tLLL: dateSettings.formats.datetime,\r\n\t\t\tLLLL: momentLib.localeData( 'en' ).longDateFormat( 'LLLL' ),\r\n\t\t},\r\n\t\t// From human_time_diff?\r\n\t\t// Set to `(number, withoutSuffix, key, isFuture) => {}` instead.\r\n\t\trelativeTime: dateSettings.l10n.relative,\r\n\t} );\r\n\r\n\t// Restore the locale to what it was.\r\n\tmomentLib.locale( currentLocale );\r\n}\r\n\r\n/**\r\n * Returns the currently defined date settings.\r\n *\r\n * @return {DateSettings} Settings, including locale data.\r\n */\r\nexport function getSettings() {\r\n\treturn settings;\r\n}\r\n\r\n/**\r\n * Returns the currently defined date settings.\r\n *\r\n * @deprecated\r\n * @return {DateSettings} Settings, including locale data.\r\n */\r\nexport function __experimentalGetSettings() {\r\n\tdeprecated( 'wp.date.__experimentalGetSettings', {\r\n\t\tsince: '6.1',\r\n\t\talternative: 'wp.date.getSettings',\r\n\t} );\r\n\treturn getSettings();\r\n}\r\n\r\nfunction setupWPTimezone() {\r\n\t// Get the current timezone settings from the WP timezone string.\r\n\tconst currentTimezone = momentLib.tz.zone( settings.timezone.string );\r\n\r\n\t// Check to see if we have a valid TZ data, if so, use it for the custom WP_ZONE timezone, otherwise just use the offset.\r\n\tif ( currentTimezone ) {\r\n\t\t// Create WP timezone based off settings.timezone.string.  We need to include the additional data so that we\r\n\t\t// don't lose information about daylight savings time and other items.\r\n\t\t// See https://github.com/WordPress/gutenberg/pull/48083\r\n\t\tmomentLib.tz.add(\r\n\t\t\tmomentLib.tz.pack( {\r\n\t\t\t\tname: WP_ZONE,\r\n\t\t\t\tabbrs: currentTimezone.abbrs,\r\n\t\t\t\tuntils: currentTimezone.untils,\r\n\t\t\t\toffsets: currentTimezone.offsets,\r\n\t\t\t} )\r\n\t\t);\r\n\t} else {\r\n\t\t// Create WP timezone based off dateSettings.\r\n\t\tmomentLib.tz.add(\r\n\t\t\tmomentLib.tz.pack( {\r\n\t\t\t\tname: WP_ZONE,\r\n\t\t\t\tabbrs: [ WP_ZONE ],\r\n\t\t\t\tuntils: [ null ],\r\n\t\t\t\toffsets: [ -settings.timezone.offset * 60 || 0 ],\r\n\t\t\t} )\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// Date constants.\r\n/**\r\n * Number of seconds in one minute.\r\n *\r\n * @type {number}\r\n */\r\nconst MINUTE_IN_SECONDS = 60;\r\n/**\r\n * Number of minutes in one hour.\r\n *\r\n * @type {number}\r\n */\r\nconst HOUR_IN_MINUTES = 60;\r\n/**\r\n * Number of seconds in one hour.\r\n *\r\n * @type {number}\r\n */\r\nconst HOUR_IN_SECONDS = 60 * MINUTE_IN_SECONDS;\r\n\r\n/**\r\n * Map of PHP formats to Moment.js formats.\r\n *\r\n * These are used internally by {@link wp.date.format}, and are either\r\n * a string representing the corresponding Moment.js format code, or a\r\n * function which returns the formatted string.\r\n *\r\n * This should only be used through {@link wp.date.format}, not\r\n * directly.\r\n */\r\nconst formatMap = {\r\n\t// Day.\r\n\td: 'DD',\r\n\tD: 'ddd',\r\n\tj: 'D',\r\n\tl: 'dddd',\r\n\tN: 'E',\r\n\r\n\t/**\r\n\t * Gets the ordinal suffix.\r\n\t *\r\n\t * @param {Moment} momentDate Moment instance.\r\n\t *\r\n\t * @return {string} Formatted date.\r\n\t */\r\n\tS( momentDate ) {\r\n\t\t// Do - D.\r\n\t\tconst num = momentDate.format( 'D' );\r\n\t\tconst withOrdinal = momentDate.format( 'Do' );\r\n\t\treturn withOrdinal.replace( num, '' );\r\n\t},\r\n\r\n\tw: 'd',\r\n\t/**\r\n\t * Gets the day of the year (zero-indexed).\r\n\t *\r\n\t * @param {Moment} momentDate Moment instance.\r\n\t *\r\n\t * @return {string} Formatted date.\r\n\t */\r\n\tz( momentDate ) {\r\n\t\t// DDD - 1.\r\n\t\treturn ( parseInt( momentDate.format( 'DDD' ), 10 ) - 1 ).toString();\r\n\t},\r\n\r\n\t// Week.\r\n\tW: 'W',\r\n\r\n\t// Month.\r\n\tF: 'MMMM',\r\n\tm: 'MM',\r\n\tM: 'MMM',\r\n\tn: 'M',\r\n\t/**\r\n\t * Gets the days in the month.\r\n\t *\r\n\t * @param {Moment} momentDate Moment instance.\r\n\t *\r\n\t * @return {number} Formatted date.\r\n\t */\r\n\tt( momentDate ) {\r\n\t\treturn momentDate.daysInMonth();\r\n\t},\r\n\r\n\t// Year.\r\n\t/**\r\n\t * Gets whether the current year is a leap year.\r\n\t *\r\n\t * @param {Moment} momentDate Moment instance.\r\n\t *\r\n\t * @return {string} Formatted date.\r\n\t */\r\n\tL( momentDate ) {\r\n\t\treturn momentDate.isLeapYear() ? '1' : '0';\r\n\t},\r\n\to: 'GGGG',\r\n\tY: 'YYYY',\r\n\ty: 'YY',\r\n\r\n\t// Time.\r\n\ta: 'a',\r\n\tA: 'A',\r\n\t/**\r\n\t * Gets the current time in Swatch Internet Time (.beats).\r\n\t *\r\n\t * @param {Moment} momentDate Moment instance.\r\n\t *\r\n\t * @return {number} Formatted date.\r\n\t */\r\n\tB( momentDate ) {\r\n\t\tconst timezoned = momentLib( momentDate ).utcOffset( 60 );\r\n\t\tconst seconds = parseInt( timezoned.format( 's' ), 10 ),\r\n\t\t\tminutes = parseInt( timezoned.format( 'm' ), 10 ),\r\n\t\t\thours = parseInt( timezoned.format( 'H' ), 10 );\r\n\t\treturn parseInt(\r\n\t\t\t(\r\n\t\t\t\t( seconds +\r\n\t\t\t\t\tminutes * MINUTE_IN_SECONDS +\r\n\t\t\t\t\thours * HOUR_IN_SECONDS ) /\r\n\t\t\t\t86.4\r\n\t\t\t).toString(),\r\n\t\t\t10\r\n\t\t);\r\n\t},\r\n\tg: 'h',\r\n\tG: 'H',\r\n\th: 'hh',\r\n\tH: 'HH',\r\n\ti: 'mm',\r\n\ts: 'ss',\r\n\tu: 'SSSSSS',\r\n\tv: 'SSS',\r\n\t// Timezone.\r\n\te: 'zz',\r\n\t/**\r\n\t * Gets whether the timezone is in DST currently.\r\n\t *\r\n\t * @param {Moment} momentDate Moment instance.\r\n\t *\r\n\t * @return {string} Formatted date.\r\n\t */\r\n\tI( momentDate ) {\r\n\t\treturn momentDate.isDST() ? '1' : '0';\r\n\t},\r\n\tO: 'ZZ',\r\n\tP: 'Z',\r\n\tT: 'z',\r\n\t/**\r\n\t * Gets the timezone offset in seconds.\r\n\t *\r\n\t * @param {Moment} momentDate Moment instance.\r\n\t *\r\n\t * @return {number} Formatted date.\r\n\t */\r\n\tZ( momentDate ) {\r\n\t\t// Timezone offset in seconds.\r\n\t\tconst offset = momentDate.format( 'Z' );\r\n\t\tconst sign = offset[ 0 ] === '-' ? -1 : 1;\r\n\t\tconst parts = offset\r\n\t\t\t.substring( 1 )\r\n\t\t\t.split( ':' )\r\n\t\t\t.map( ( n ) => parseInt( n, 10 ) );\r\n\t\treturn (\r\n\t\t\tsign *\r\n\t\t\t( parts[ 0 ] * HOUR_IN_MINUTES + parts[ 1 ] ) *\r\n\t\t\tMINUTE_IN_SECONDS\r\n\t\t);\r\n\t},\r\n\t// Full date/time.\r\n\tc: 'YYYY-MM-DDTHH:mm:ssZ', // .toISOString.\r\n\t/**\r\n\t * Formats the date as RFC2822.\r\n\t *\r\n\t * @param {Moment} momentDate Moment instance.\r\n\t *\r\n\t * @return {string} Formatted date.\r\n\t */\r\n\tr( momentDate ) {\r\n\t\treturn momentDate\r\n\t\t\t.locale( 'en' )\r\n\t\t\t.format( 'ddd, DD MMM YYYY HH:mm:ss ZZ' );\r\n\t},\r\n\tU: 'X',\r\n};\r\n\r\n/**\r\n * Formats a date. Does not alter the date's timezone.\r\n *\r\n * @param {string}                             dateFormat PHP-style formatting string.\r\n *                                                        See php.net/date.\r\n * @param {Moment | Date | string | undefined} dateValue  Date object or string,\r\n *                                                        parsable by moment.js.\r\n *\r\n * @return {string} Formatted date.\r\n */\r\nexport function format( dateFormat, dateValue = new Date() ) {\r\n\tlet i, char;\r\n\tconst newFormat = [];\r\n\tconst momentDate = momentLib( dateValue );\r\n\tfor ( i = 0; i < dateFormat.length; i++ ) {\r\n\t\tchar = dateFormat[ i ];\r\n\t\t// Is this an escape?\r\n\t\tif ( '\\\\' === char ) {\r\n\t\t\t// Add next character, then move on.\r\n\t\t\ti++;\r\n\t\t\tnewFormat.push( '[' + dateFormat[ i ] + ']' );\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif ( char in formatMap ) {\r\n\t\t\tconst formatter =\r\n\t\t\t\tformatMap[ /** @type {keyof formatMap} */ ( char ) ];\r\n\t\t\tif ( typeof formatter !== 'string' ) {\r\n\t\t\t\t// If the format is a function, call it.\r\n\t\t\t\tnewFormat.push( '[' + formatter( momentDate ) + ']' );\r\n\t\t\t} else {\r\n\t\t\t\t// Otherwise, add as a formatting string.\r\n\t\t\t\tnewFormat.push( formatter );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnewFormat.push( '[' + char + ']' );\r\n\t\t}\r\n\t}\r\n\t// Join with [] between to separate characters, and replace\r\n\t// unneeded separators with static text.\r\n\treturn momentDate.format( newFormat.join( '[]' ) );\r\n}\r\n\r\n/**\r\n * Formats a date (like `date()` in PHP).\r\n *\r\n * @param {string}                             dateFormat PHP-style formatting string.\r\n *                                                        See php.net/date.\r\n * @param {Moment | Date | string | undefined} dateValue  Date object or string, parsable\r\n *                                                        by moment.js.\r\n * @param {string | number | undefined}        timezone   Timezone to output result in or a\r\n *                                                        UTC offset. Defaults to timezone from\r\n *                                                        site.\r\n *\r\n * @see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\r\n * @see https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC\r\n *\r\n * @return {string} Formatted date in English.\r\n */\r\nexport function date( dateFormat, dateValue = new Date(), timezone ) {\r\n\tconst dateMoment = buildMoment( dateValue, timezone );\r\n\treturn format( dateFormat, dateMoment );\r\n}\r\n\r\n/**\r\n * Formats a date (like `date()` in PHP), in the UTC timezone.\r\n *\r\n * @param {string}                             dateFormat PHP-style formatting string.\r\n *                                                        See php.net/date.\r\n * @param {Moment | Date | string | undefined} dateValue  Date object or string,\r\n *                                                        parsable by moment.js.\r\n *\r\n * @return {string} Formatted date in English.\r\n */\r\nexport function gmdate( dateFormat, dateValue = new Date() ) {\r\n\tconst dateMoment = momentLib( dateValue ).utc();\r\n\treturn format( dateFormat, dateMoment );\r\n}\r\n\r\n/**\r\n * Formats a date (like `wp_date()` in PHP), translating it into site's locale.\r\n *\r\n * Backward Compatibility Notice: if `timezone` is set to `true`, the function\r\n * behaves like `gmdateI18n`.\r\n *\r\n * @param {string}                                dateFormat PHP-style formatting string.\r\n *                                                           See php.net/date.\r\n * @param {Moment | Date | string | undefined}    dateValue  Date object or string, parsable by\r\n *                                                           moment.js.\r\n * @param {string | number | boolean | undefined} timezone   Timezone to output result in or a\r\n *                                                           UTC offset. Defaults to timezone from\r\n *                                                           site. Notice: `boolean` is effectively\r\n *                                                           deprecated, but still supported for\r\n *                                                           backward compatibility reasons.\r\n *\r\n * @see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\r\n * @see https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC\r\n *\r\n * @return {string} Formatted date.\r\n */\r\nexport function dateI18n( dateFormat, dateValue = new Date(), timezone ) {\r\n\tif ( true === timezone ) {\r\n\t\treturn gmdateI18n( dateFormat, dateValue );\r\n\t}\r\n\r\n\tif ( false === timezone ) {\r\n\t\ttimezone = undefined;\r\n\t}\r\n\r\n\tconst dateMoment = buildMoment( dateValue, timezone );\r\n\tdateMoment.locale( settings.l10n.locale );\r\n\treturn format( dateFormat, dateMoment );\r\n}\r\n\r\n/**\r\n * Formats a date (like `wp_date()` in PHP), translating it into site's locale\r\n * and using the UTC timezone.\r\n *\r\n * @param {string}                             dateFormat PHP-style formatting string.\r\n *                                                        See php.net/date.\r\n * @param {Moment | Date | string | undefined} dateValue  Date object or string,\r\n *                                                        parsable by moment.js.\r\n *\r\n * @return {string} Formatted date.\r\n */\r\nexport function gmdateI18n( dateFormat, dateValue = new Date() ) {\r\n\tconst dateMoment = momentLib( dateValue ).utc();\r\n\tdateMoment.locale( settings.l10n.locale );\r\n\treturn format( dateFormat, dateMoment );\r\n}\r\n\r\n/**\r\n * Check whether a date is considered in the future according to the WordPress settings.\r\n *\r\n * @param {string} dateValue Date String or Date object in the Defined WP Timezone.\r\n *\r\n * @return {boolean} Is in the future.\r\n */\r\nexport function isInTheFuture( dateValue ) {\r\n\tconst now = momentLib.tz( WP_ZONE );\r\n\tconst momentObject = momentLib.tz( dateValue, WP_ZONE );\r\n\r\n\treturn momentObject.isAfter( now );\r\n}\r\n\r\n/**\r\n * Create and return a JavaScript Date Object from a date string in the WP timezone.\r\n *\r\n * @param {string?} dateString Date formatted in the WP timezone.\r\n *\r\n * @return {Date} Date\r\n */\r\nexport function getDate( dateString ) {\r\n\tif ( ! dateString ) {\r\n\t\treturn momentLib.tz( WP_ZONE ).toDate();\r\n\t}\r\n\r\n\treturn momentLib.tz( dateString, WP_ZONE ).toDate();\r\n}\r\n\r\n/**\r\n * Returns a human-readable time difference between two dates, like human_time_diff() in PHP.\r\n *\r\n * @param {Moment | Date | string}             from From date, in the WP timezone.\r\n * @param {Moment | Date | string | undefined} to   To date, formatted in the WP timezone.\r\n *\r\n * @return {string} Human-readable time difference.\r\n */\r\nexport function humanTimeDiff( from, to ) {\r\n\tconst fromMoment = momentLib.tz( from, WP_ZONE );\r\n\tconst toMoment = to ? momentLib.tz( to, WP_ZONE ) : momentLib.tz( WP_ZONE );\r\n\treturn fromMoment.from( toMoment );\r\n}\r\n\r\n/**\r\n * Creates a moment instance using the given timezone or, if none is provided, using global settings.\r\n *\r\n * @param {Moment | Date | string | undefined} dateValue Date object or string, parsable\r\n *                                                       by moment.js.\r\n * @param {string | number | undefined}        timezone  Timezone to output result in or a\r\n *                                                       UTC offset. Defaults to timezone from\r\n *                                                       site.\r\n *\r\n * @see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\r\n * @see https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC\r\n *\r\n * @return {Moment} a moment instance.\r\n */\r\nfunction buildMoment( dateValue, timezone = '' ) {\r\n\tconst dateMoment = momentLib( dateValue );\r\n\r\n\tif ( timezone && ! isUTCOffset( timezone ) ) {\r\n\t\t// The ! isUTCOffset() check guarantees that timezone is a string.\r\n\t\treturn dateMoment.tz( /** @type {string} */ ( timezone ) );\r\n\t}\r\n\r\n\tif ( timezone && isUTCOffset( timezone ) ) {\r\n\t\treturn dateMoment.utcOffset( timezone );\r\n\t}\r\n\r\n\tif ( settings.timezone.string ) {\r\n\t\treturn dateMoment.tz( settings.timezone.string );\r\n\t}\r\n\r\n\treturn dateMoment.utcOffset( +settings.timezone.offset );\r\n}\r\n\r\n/**\r\n * Returns whether a certain UTC offset is valid or not.\r\n *\r\n * @param {number|string} offset a UTC offset.\r\n *\r\n * @return {boolean} whether a certain UTC offset is valid or not.\r\n */\r\nfunction isUTCOffset( offset ) {\r\n\tif ( 'number' === typeof offset ) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn VALID_UTC_OFFSET.test( offset );\r\n}\r\n\r\nsetupWPTimezone();\r\n"],"mappings":"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","ignoreList":[]}