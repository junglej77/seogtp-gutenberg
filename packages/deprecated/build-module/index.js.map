{"version":3,"names":["doAction","logged","Object","create","deprecated","feature","options","since","version","alternative","plugin","link","hint","pluginMessage","sinceMessage","versionMessage","useInsteadMessage","linkMessage","hintMessage","message","console","warn"],"sources":["@wordpress/deprecated/src/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { doAction } from '@wordpress/hooks';\r\n\r\n/**\r\n * Object map tracking messages which have been logged, for use in ensuring a\r\n * message is only logged once.\r\n *\r\n * @type {Record<string, true | undefined>}\r\n */\r\nexport const logged = Object.create( null );\r\n\r\n/**\r\n * Logs a message to notify developers about a deprecated feature.\r\n *\r\n * @param {string} feature               Name of the deprecated feature.\r\n * @param {Object} [options]             Personalisation options\r\n * @param {string} [options.since]       Version in which the feature was deprecated.\r\n * @param {string} [options.version]     Version in which the feature will be removed.\r\n * @param {string} [options.alternative] Feature to use instead\r\n * @param {string} [options.plugin]      Plugin name if it's a plugin feature\r\n * @param {string} [options.link]        Link to documentation\r\n * @param {string} [options.hint]        Additional message to help transition away from the deprecated feature.\r\n *\r\n * @example\r\n * ```js\r\n * import deprecated from '@wordpress/deprecated';\r\n *\r\n * deprecated( 'Eating meat', {\r\n * \tsince: '2019.01.01'\r\n * \tversion: '2020.01.01',\r\n * \talternative: 'vegetables',\r\n * \tplugin: 'the earth',\r\n * \thint: 'You may find it beneficial to transition gradually.',\r\n * } );\r\n *\r\n * // Logs: 'Eating meat is deprecated since version 2019.01.01 and will be removed from the earth in version 2020.01.01. Please use vegetables instead. Note: You may find it beneficial to transition gradually.'\r\n * ```\r\n */\r\nexport default function deprecated( feature, options = {} ) {\r\n\tconst { since, version, alternative, plugin, link, hint } = options;\r\n\r\n\tconst pluginMessage = plugin ? ` from ${ plugin }` : '';\r\n\tconst sinceMessage = since ? ` since version ${ since }` : '';\r\n\tconst versionMessage = version\r\n\t\t? ` and will be removed${ pluginMessage } in version ${ version }`\r\n\t\t: '';\r\n\tconst useInsteadMessage = alternative\r\n\t\t? ` Please use ${ alternative } instead.`\r\n\t\t: '';\r\n\tconst linkMessage = link ? ` See: ${ link }` : '';\r\n\tconst hintMessage = hint ? ` Note: ${ hint }` : '';\r\n\tconst message = `${ feature } is deprecated${ sinceMessage }${ versionMessage }.${ useInsteadMessage }${ linkMessage }${ hintMessage }`;\r\n\r\n\t// Skip if already logged.\r\n\tif ( message in logged ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Fires whenever a deprecated feature is encountered\r\n\t *\r\n\t * @param {string}  feature             Name of the deprecated feature.\r\n\t * @param {?Object} options             Personalisation options\r\n\t * @param {string}  options.since       Version in which the feature was deprecated.\r\n\t * @param {?string} options.version     Version in which the feature will be removed.\r\n\t * @param {?string} options.alternative Feature to use instead\r\n\t * @param {?string} options.plugin      Plugin name if it's a plugin feature\r\n\t * @param {?string} options.link        Link to documentation\r\n\t * @param {?string} options.hint        Additional message to help transition away from the deprecated feature.\r\n\t * @param {?string} message             Message sent to console.warn\r\n\t */\r\n\tdoAction( 'deprecated', feature, options, message );\r\n\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.warn( message );\r\n\r\n\tlogged[ message ] = true;\r\n}\r\n\r\n/** @typedef {import('utility-types').NonUndefined<Parameters<typeof deprecated>[1]>} DeprecatedOptions */\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,QAAQ,QAAQ,kBAAkB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAAE,IAAK,CAAC;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,UAAUA,CAAEC,OAAO,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAG;EAC3D,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC,WAAW;IAAEC,MAAM;IAAEC,IAAI;IAAEC;EAAK,CAAC,GAAGN,OAAO;EAEnE,MAAMO,aAAa,GAAGH,MAAM,GAAI,SAASA,MAAQ,EAAC,GAAG,EAAE;EACvD,MAAMI,YAAY,GAAGP,KAAK,GAAI,kBAAkBA,KAAO,EAAC,GAAG,EAAE;EAC7D,MAAMQ,cAAc,GAAGP,OAAO,GAC1B,uBAAuBK,aAAe,eAAeL,OAAS,EAAC,GAChE,EAAE;EACL,MAAMQ,iBAAiB,GAAGP,WAAW,GACjC,eAAeA,WAAa,WAAU,GACvC,EAAE;EACL,MAAMQ,WAAW,GAAGN,IAAI,GAAI,SAASA,IAAM,EAAC,GAAG,EAAE;EACjD,MAAMO,WAAW,GAAGN,IAAI,GAAI,UAAUA,IAAM,EAAC,GAAG,EAAE;EAClD,MAAMO,OAAO,GAAI,GAAGd,OAAS,iBAAiBS,YAAc,GAAGC,cAAgB,IAAIC,iBAAmB,GAAGC,WAAa,GAAGC,WAAa,EAAC;;EAEvI;EACA,IAAKC,OAAO,IAAIlB,MAAM,EAAG;IACxB;EACD;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCD,QAAQ,CAAE,YAAY,EAAEK,OAAO,EAAEC,OAAO,EAAEa,OAAQ,CAAC;;EAEnD;EACAC,OAAO,CAACC,IAAI,CAAEF,OAAQ,CAAC;EAEvBlB,MAAM,CAAEkB,OAAO,CAAE,GAAG,IAAI;AACzB;;AAEA","ignoreList":[]}