{"version":3,"names":["isTextField","isHTMLInputElement","inputFieldHasUncollapsedSelection","element","selectionStart","selectionEnd","error"],"sources":["@wordpress/dom/src/dom/input-field-has-uncollapsed-selection.js"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport isTextField from './is-text-field';\r\nimport isHTMLInputElement from './is-html-input-element';\r\n\r\n/**\r\n * Check whether the given input field or textarea contains a (uncollapsed)\r\n * selection of text.\r\n *\r\n * CAVEAT: Only specific text-based HTML inputs support the selection APIs\r\n * needed to determine whether they have a collapsed or uncollapsed selection.\r\n * This function defaults to returning `true` when the selection cannot be\r\n * inspected, such as with `<input type=\"time\">`. The rationale is that this\r\n * should cause the block editor to defer to the browser's native selection\r\n * handling (e.g. copying and pasting), thereby reducing friction for the user.\r\n *\r\n * See: https://html.spec.whatwg.org/multipage/input.html#do-not-apply\r\n *\r\n * @param {Element} element The HTML element.\r\n *\r\n * @return {boolean} Whether the input/textareaa element has some \"selection\".\r\n */\r\nexport default function inputFieldHasUncollapsedSelection( element ) {\r\n\tif ( ! isHTMLInputElement( element ) && ! isTextField( element ) ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Safari throws a type error when trying to get `selectionStart` and\r\n\t// `selectionEnd` on non-text <input> elements, so a try/catch construct is\r\n\t// necessary.\r\n\ttry {\r\n\t\tconst { selectionStart, selectionEnd } =\r\n\t\t\t/** @type {HTMLInputElement | HTMLTextAreaElement} */ ( element );\r\n\t\treturn (\r\n\t\t\t// `null` means the input type doesn't implement selection, thus we\r\n\t\t\t// cannot determine whether the selection is collapsed, so we\r\n\t\t\t// default to true.\r\n\t\t\tselectionStart === null ||\r\n\t\t\t// when not null, compare the two points\r\n\t\t\tselectionStart !== selectionEnd\r\n\t\t);\r\n\t} catch ( error ) {\r\n\t\t// This is Safari's way of saying that the input type doesn't implement\r\n\t\t// selection, so we default to true.\r\n\t\treturn true;\r\n\t}\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,WAAW,MAAM,iBAAiB;AACzC,OAAOC,kBAAkB,MAAM,yBAAyB;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,iCAAiCA,CAAEC,OAAO,EAAG;EACpE,IAAK,CAAEF,kBAAkB,CAAEE,OAAQ,CAAC,IAAI,CAAEH,WAAW,CAAEG,OAAQ,CAAC,EAAG;IAClE,OAAO,KAAK;EACb;;EAEA;EACA;EACA;EACA,IAAI;IACH,MAAM;MAAEC,cAAc;MAAEC;IAAa,CAAC,GACrC,qDAAwDF,OAAS;IAClE;MACC;MACA;MACA;MACAC,cAAc,KAAK,IAAI;MACvB;MACAA,cAAc,KAAKC;IAAY;EAEjC,CAAC,CAAC,OAAQC,KAAK,EAAG;IACjB;IACA;IACA,OAAO,IAAI;EACZ;AACD","ignoreList":[]}