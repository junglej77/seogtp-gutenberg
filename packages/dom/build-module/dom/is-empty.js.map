{"version":3,"names":["isEmpty","element","nodeType","TEXT_NODE","test","nodeValue","ELEMENT_NODE","hasAttributes","hasChildNodes","Array","from","childNodes","every"],"sources":["@wordpress/dom/src/dom/is-empty.js"],"sourcesContent":["/**\r\n * Recursively checks if an element is empty. An element is not empty if it\r\n * contains text or contains elements with attributes such as images.\r\n *\r\n * @param {Element} element The element to check.\r\n *\r\n * @return {boolean} Whether or not the element is empty.\r\n */\r\nexport default function isEmpty( element ) {\r\n\tswitch ( element.nodeType ) {\r\n\t\tcase element.TEXT_NODE:\r\n\t\t\t// We cannot use \\s since it includes special spaces which we want\r\n\t\t\t// to preserve.\r\n\t\t\treturn /^[ \\f\\n\\r\\t\\v\\u00a0]*$/.test( element.nodeValue || '' );\r\n\t\tcase element.ELEMENT_NODE:\r\n\t\t\tif ( element.hasAttributes() ) {\r\n\t\t\t\treturn false;\r\n\t\t\t} else if ( ! element.hasChildNodes() ) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn /** @type {Element[]} */ (\r\n\t\t\t\tArray.from( element.childNodes )\r\n\t\t\t).every( isEmpty );\r\n\t\tdefault:\r\n\t\t\treturn true;\r\n\t}\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,OAAOA,CAAEC,OAAO,EAAG;EAC1C,QAASA,OAAO,CAACC,QAAQ;IACxB,KAAKD,OAAO,CAACE,SAAS;MACrB;MACA;MACA,OAAO,wBAAwB,CAACC,IAAI,CAAEH,OAAO,CAACI,SAAS,IAAI,EAAG,CAAC;IAChE,KAAKJ,OAAO,CAACK,YAAY;MACxB,IAAKL,OAAO,CAACM,aAAa,CAAC,CAAC,EAAG;QAC9B,OAAO,KAAK;MACb,CAAC,MAAM,IAAK,CAAEN,OAAO,CAACO,aAAa,CAAC,CAAC,EAAG;QACvC,OAAO,IAAI;MACZ;MAEA,OAAO,wBACNC,KAAK,CAACC,IAAI,CAAET,OAAO,CAACU,UAAW,CAAC,CAC/BC,KAAK,CAAEZ,OAAQ,CAAC;IACnB;MACC,OAAO,IAAI;EACb;AACD","ignoreList":[]}