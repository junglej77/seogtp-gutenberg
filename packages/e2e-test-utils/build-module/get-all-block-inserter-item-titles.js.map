{"version":3,"names":["getAllBlockInserterItemTitles","page","waitForTimeout","inserterItemTitles","evaluate","Array","from","document","querySelectorAll","map","inserterItem","innerText","Set"],"sources":["@wordpress/e2e-test-utils/src/get-all-block-inserter-item-titles.js"],"sourcesContent":["/**\r\n * Returns an array of strings with all inserter item titles.\r\n *\r\n * @return {Promise} Promise resolving with an array containing all inserter item titles.\r\n */\r\nexport async function getAllBlockInserterItemTitles() {\r\n\t// The inserter render lazy renders the list of blocks\r\n\t// meaning we should wait for the browser to be completed idle.\r\n\t// Ideally, we shouldn't use a timeout and instead check the browser is idle for\r\n\t// a specific duration, but didn't manage to find a simple way to do that.\r\n\t// eslint-disable-next-line no-restricted-syntax\r\n\tawait page.waitForTimeout( 500 );\r\n\r\n\tconst inserterItemTitles = await page.evaluate( () => {\r\n\t\treturn Array.from(\r\n\t\t\tdocument.querySelectorAll(\r\n\t\t\t\t'.block-editor-block-types-list__item-title'\r\n\t\t\t)\r\n\t\t).map( ( inserterItem ) => {\r\n\t\t\treturn inserterItem.innerText;\r\n\t\t} );\r\n\t} );\r\n\treturn [ ...new Set( inserterItemTitles ) ];\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeA,6BAA6BA,CAAA,EAAG;EACrD;EACA;EACA;EACA;EACA;EACA,MAAMC,IAAI,CAACC,cAAc,CAAE,GAAI,CAAC;EAEhC,MAAMC,kBAAkB,GAAG,MAAMF,IAAI,CAACG,QAAQ,CAAE,MAAM;IACrD,OAAOC,KAAK,CAACC,IAAI,CAChBC,QAAQ,CAACC,gBAAgB,CACxB,4CACD,CACD,CAAC,CAACC,GAAG,CAAIC,YAAY,IAAM;MAC1B,OAAOA,YAAY,CAACC,SAAS;IAC9B,CAAE,CAAC;EACJ,CAAE,CAAC;EACH,OAAO,CAAE,GAAG,IAAIC,GAAG,CAAET,kBAAmB,CAAC,CAAE;AAC5C","ignoreList":[]}