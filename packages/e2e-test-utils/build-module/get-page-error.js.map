{"version":3,"names":["REGEXP_PHP_ERROR","getPageError","content","page","match"],"sources":["@wordpress/e2e-test-utils/src/get-page-error.js"],"sourcesContent":["/**\r\n * Regular expression matching a displayed PHP error within a markup string.\r\n *\r\n * @see https://github.com/php/php-src/blob/598175e/main/main.c#L1257-L1297\r\n *\r\n * @type {RegExp}\r\n */\r\nconst REGEXP_PHP_ERROR =\r\n\t/(<b>)?(Fatal error|Recoverable fatal error|Warning|Parse error|Notice|Strict Standards|Deprecated|Unknown error)(<\\/b>)?: (.*?) in (.*?) on line (<b>)?\\d+(<\\/b>)?/;\r\n\r\n/**\r\n * Returns a promise resolving to one of either a string or null. A string will\r\n * be resolved if an error message is present in the contents of the page. If no\r\n * error is present, a null value will be resolved instead. This requires the\r\n * environment be configured to display errors.\r\n *\r\n * @see http://php.net/manual/en/function.error-reporting.php\r\n *\r\n * @return {Promise<?string>} Promise resolving to a string or null, depending\r\n *                            whether a page error is present.\r\n */\r\nexport async function getPageError() {\r\n\tconst content = await page.content();\r\n\tconst match = content.match( REGEXP_PHP_ERROR );\r\n\treturn match ? match[ 0 ] : null;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,gBAAgB,GACrB,oKAAoK;;AAErK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeC,YAAYA,CAAA,EAAG;EACpC,MAAMC,OAAO,GAAG,MAAMC,IAAI,CAACD,OAAO,CAAC,CAAC;EACpC,MAAME,KAAK,GAAGF,OAAO,CAACE,KAAK,CAAEJ,gBAAiB,CAAC;EAC/C,OAAOI,KAAK,GAAGA,KAAK,CAAE,CAAC,CAAE,GAAG,IAAI;AACjC","ignoreList":[]}