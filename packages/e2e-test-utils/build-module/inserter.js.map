{"version":3,"names":["ElementHandle","pressKeyWithModifier","canvas","INSERTER_SEARCH_SELECTOR","openGlobalBlockInserter","isGlobalInserterOpen","toggleGlobalBlockInserter","page","waitForSelector","closeGlobalBlockInserter","evaluate","document","querySelector","click","selectGlobalInserterTab","label","tabs","$","activeTab","activeTabLabel","el","innerText","labelSelector","targetTab","waitForXPath","focusSelectedBlock","wp","data","dispatch","selectBlock","select","getSelectedBlockClientId","waitForInserterCloseAndContentFocus","waitForFunction","activeElement","closest","searchGlobalInserter","category","searchTerm","focus","keyboard","type","hidden","waitForInsertElement","waitForNoResults","Promise","resolve","setTimeout","race","insertFromGlobalInserter","insertButton","includes","$x","error","Error","searchForBlock","searchForPattern","searchForReusableBlock","searchForBlockDirectoryBlock","insertBlock","insertPattern","insertBlockDirectoryBlock"],"sources":["@wordpress/e2e-test-utils/src/inserter.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport { ElementHandle } from 'puppeteer-core';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { pressKeyWithModifier } from './press-key-with-modifier';\r\nimport { canvas } from './canvas';\r\n\r\n// This selector is written to support the current and old inserter markup\r\n// because the performance tests need to be able to run across versions.\r\nconst INSERTER_SEARCH_SELECTOR =\r\n\t'.block-editor-inserter__search input,.block-editor-inserter__search-input,input.block-editor-inserter__search';\r\n\r\n/**\r\n * Opens the global inserter.\r\n */\r\nexport async function openGlobalBlockInserter() {\r\n\tif ( ! ( await isGlobalInserterOpen() ) ) {\r\n\t\tawait toggleGlobalBlockInserter();\r\n\r\n\t\t// Waiting here is necessary because sometimes the inserter takes more\r\n\t\t// time to render than Puppeteer takes to complete the 'click' action.\r\n\t\tawait page.waitForSelector( '.block-editor-inserter__menu' );\r\n\t}\r\n}\r\n\r\n/**\r\n * Closes the global inserter.\r\n */\r\nexport async function closeGlobalBlockInserter() {\r\n\tif ( await isGlobalInserterOpen() ) {\r\n\t\tawait toggleGlobalBlockInserter();\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks if the global inserter is open.\r\n *\r\n * @return {Promise<boolean>} Whether the inserter is open or not.\r\n */\r\nasync function isGlobalInserterOpen() {\r\n\treturn await page.evaluate( () => {\r\n\t\t// \"Add block\" selector is required to make sure performance comparison\r\n\t\t// doesn't fail on older branches where we still had \"Add block\" as\r\n\t\t// label.\r\n\t\treturn !! document.querySelector(\r\n\t\t\t'.edit-post-header [aria-label=\"Add block\"].is-pressed,' +\r\n\t\t\t\t'.edit-site-header-edit-mode [aria-label=\"Add block\"].is-pressed,' +\r\n\t\t\t\t'.edit-post-header [aria-label=\"Toggle block inserter\"].is-pressed,' +\r\n\t\t\t\t'.edit-site-header [aria-label=\"Toggle block inserter\"].is-pressed,' +\r\n\t\t\t\t'.edit-widgets-header [aria-label=\"Toggle block inserter\"].is-pressed,' +\r\n\t\t\t\t'.edit-widgets-header [aria-label=\"Add block\"].is-pressed,' +\r\n\t\t\t\t'.edit-site-header-edit-mode__inserter-toggle.is-pressed,' +\r\n\t\t\t\t'.editor-header [aria-label=\"Toggle block inserter\"].is-pressed'\r\n\t\t);\r\n\t} );\r\n}\r\n/**\r\n * Toggles the global inserter.\r\n */\r\nexport async function toggleGlobalBlockInserter() {\r\n\t// \"Add block\" selector is required to make sure performance comparison\r\n\t// doesn't fail on older branches where we still had \"Add block\" as label.\r\n\tawait page.click(\r\n\t\t'.editor-document-tools__inserter-toggle,' +\r\n\t\t\t'.edit-post-header [aria-label=\"Add block\"],' +\r\n\t\t\t'.edit-site-header [aria-label=\"Add block\"],' +\r\n\t\t\t'.edit-post-header [aria-label=\"Toggle block inserter\"],' +\r\n\t\t\t'.edit-site-header [aria-label=\"Toggle block inserter\"],' +\r\n\t\t\t'.edit-widgets-header [aria-label=\"Add block\"],' +\r\n\t\t\t'.edit-widgets-header [aria-label=\"Toggle block inserter\"],' +\r\n\t\t\t'.edit-site-header-edit-mode__inserter-toggle'\r\n\t);\r\n}\r\n\r\n/**\r\n * Selects the global inserter tab/category, unless it's already selected.\r\n *\r\n * @param {string} label The label of the tab to select.\r\n */\r\nexport async function selectGlobalInserterTab( label ) {\r\n\tconst tabs = await page.$( '.block-editor-inserter__tabs' );\r\n\tif ( ! tabs ) {\r\n\t\treturn; // Do nothing if tabs are unavailable (e.g. for inner blocks).\r\n\t}\r\n\r\n\tconst activeTab = await page.waitForSelector(\r\n\t\t// Targeting a class name is necessary here, because there are likely\r\n\t\t// two implementations of the `Tabs` component visible to this test, and\r\n\t\t// we want to confirm that it's waiting for the correct one.\r\n\t\t'.block-editor-inserter__tabs [role=\"tab\"][aria-selected=\"true\"]'\r\n\t);\r\n\r\n\tconst activeTabLabel = await page.evaluate(\r\n\t\t( el ) => el.innerText,\r\n\t\tactiveTab\r\n\t);\r\n\r\n\tif ( activeTabLabel === label ) {\r\n\t\treturn; // Do nothing if the target tab is already active.\r\n\t}\r\n\r\n\tlet labelSelector;\r\n\r\n\tswitch ( label ) {\r\n\t\tcase 'Blocks':\r\n\t\tcase 'Patterns':\r\n\t\tcase 'Media':\r\n\t\t\tlabelSelector = `. = \"${ label }\"`;\r\n\t\t\tbreak;\r\n\t\tcase 'Synced patterns':\r\n\t\t\t// Synced patterns tab label is an icon, hence the different selector.\r\n\t\t\tlabelSelector = `@aria-label = \"${ label }\"`;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tconst targetTab = await page.waitForXPath(\r\n\t\t`//div[contains(@class, \"block-editor-inserter__tabs\")]//button[${ labelSelector }]`\r\n\t);\r\n\r\n\tawait targetTab.click();\r\n}\r\n\r\n/**\r\n * Moves focus to the selected block.\r\n */\r\nasync function focusSelectedBlock() {\r\n\t// Ideally, there should be a UI way to focus the selected block.\r\n\tawait page.evaluate( () => {\r\n\t\twp.data\r\n\t\t\t.dispatch( 'core/block-editor' )\r\n\t\t\t.selectBlock(\r\n\t\t\t\twp.data\r\n\t\t\t\t\t.select( 'core/block-editor' )\r\n\t\t\t\t\t.getSelectedBlockClientId(),\r\n\t\t\t\t0\r\n\t\t\t);\r\n\t} );\r\n}\r\n\r\n/**\r\n * Retrieves the document container by css class and checks to make sure the\r\n * document's active element is within it.\r\n */\r\nasync function waitForInserterCloseAndContentFocus() {\r\n\tawait canvas().waitForFunction(\r\n\t\t() =>\r\n\t\t\tdocument.activeElement.closest(\r\n\t\t\t\t'.block-editor-block-list__layout'\r\n\t\t\t) !== null\r\n\t);\r\n}\r\n\r\n/**\r\n * Searches for an entity matching given category and term via the global\r\n * inserter. If nothing is found, null will be returned.\r\n *\r\n * Available categories: Blocks, Patterns, Reusable and Block Directory.\r\n *\r\n * @param {string} category   The category to search within.\r\n * @param {string} searchTerm The term to search the inserter for.\r\n * @return {Promise<ElementHandle|null>} The handle of the element to be\r\n * inserted or null if nothing was found.\r\n */\r\nexport async function searchGlobalInserter( category, searchTerm ) {\r\n\tawait openGlobalBlockInserter();\r\n\tawait page.waitForSelector( INSERTER_SEARCH_SELECTOR );\r\n\tawait page.focus( INSERTER_SEARCH_SELECTOR );\r\n\tawait pressKeyWithModifier( 'primary', 'a' );\r\n\tawait page.keyboard.type( searchTerm );\r\n\r\n\t// Wait for the default block list to disappear to prevent its items from\r\n\t// being considered as search results. This is needed since we're debouncing\r\n\t// search request.\r\n\tawait page.waitForSelector( '.block-editor-inserter__block-list', {\r\n\t\thidden: true,\r\n\t} );\r\n\r\n\tlet waitForInsertElement;\r\n\tlet waitForNoResults;\r\n\r\n\tswitch ( category ) {\r\n\t\tcase 'Blocks':\r\n\t\tcase 'Patterns':\r\n\t\tcase 'Synced patterns': {\r\n\t\t\twaitForInsertElement = async () => {\r\n\t\t\t\treturn await page.waitForXPath(\r\n\t\t\t\t\t`//*[@role='option' and contains(., '${ searchTerm }')]`\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t\t\twaitForNoResults = async () => {\r\n\t\t\t\tawait page.waitForSelector(\r\n\t\t\t\t\t'.block-editor-inserter__no-results'\r\n\t\t\t\t);\r\n\t\t\t\treturn null;\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'Block Directory': {\r\n\t\t\twaitForInsertElement = async () => {\r\n\t\t\t\t// Return the first item from the Block Directory search results.\r\n\t\t\t\treturn await page.waitForSelector(\r\n\t\t\t\t\t'.block-directory-downloadable-blocks-list button:first-child'\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t\t\twaitForNoResults = async () => {\r\n\t\t\t\t// Use a soft timeout if Block Directory doesn't return anything\r\n\t\t\t\t// within 5 seconds, as there's no \"empty results\" element being\r\n\t\t\t\t// rendered when nothing is found.\r\n\t\t\t\treturn await new Promise( ( resolve ) =>\r\n\t\t\t\t\tsetTimeout( () => resolve( null ), 5000 )\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\treturn await Promise.race( [ waitForInsertElement(), waitForNoResults() ] );\r\n}\r\n\r\n/**\r\n * Inserts an entity matching given category and term via the global inserter.\r\n * If the entity is not instantly available in the open inserter, a search will\r\n * be performed. If the search returns no results, an error will be thrown.\r\n *\r\n * Available categories: Blocks, Patterns, Synced patterns and Block Directory.\r\n *\r\n * @param {string} category   The category to insert from.\r\n * @param {string} searchTerm The term by which to find the entity to insert.\r\n */\r\nexport async function insertFromGlobalInserter( category, searchTerm ) {\r\n\tawait openGlobalBlockInserter();\r\n\tawait selectGlobalInserterTab( category );\r\n\r\n\tlet insertButton;\r\n\r\n\tif ( [ 'Blocks', 'Synced patterns' ].includes( category ) ) {\r\n\t\t// If it's a block, see if it's insertable without searching...\r\n\t\ttry {\r\n\t\t\tinsertButton = (\r\n\t\t\t\tawait page.$x(\r\n\t\t\t\t\t`//*[@role='option' and contains(., '${ searchTerm }')]`\r\n\t\t\t\t)\r\n\t\t\t)[ 0 ];\r\n\t\t} catch ( error ) {\r\n\t\t\t// noop\r\n\t\t}\r\n\t}\r\n\r\n\t// ...and if not, perform a global search.\r\n\tif ( ! insertButton ) {\r\n\t\tinsertButton = await searchGlobalInserter( category, searchTerm );\r\n\t}\r\n\r\n\t// Throw an error if nothing was found.\r\n\tif ( ! insertButton ) {\r\n\t\tthrow new Error(\r\n\t\t\t`Couldn't find \"${ searchTerm }\" in the ${ category } category.`\r\n\t\t);\r\n\t}\r\n\r\n\t// Insert found entity.\r\n\tawait insertButton.click();\r\n\r\n\t// Extra wait for the reusable block to be ready.\r\n\tif ( category === 'Synced patterns' ) {\r\n\t\tawait canvas().waitForSelector(\r\n\t\t\t'.block-library-block__reusable-block-container'\r\n\t\t);\r\n\t}\r\n\r\n\t// Extra wait for the Block Directory block to be ready.\r\n\tif ( category === 'Block Directory' ) {\r\n\t\tawait page.waitForSelector(\r\n\t\t\t'.block-directory-downloadable-blocks-list button:first-child:not(.is-busy)'\r\n\t\t);\r\n\t}\r\n\r\n\tawait focusSelectedBlock();\r\n\tawait waitForInserterCloseAndContentFocus();\r\n}\r\n\r\n/**\r\n * Searches for a block via the global inserter.\r\n *\r\n * @param {string} searchTerm The term to search the inserter for.\r\n * @return {Promise<ElementHandle|null>} The handle of block to be\r\n * inserted or null if nothing was found.\r\n */\r\nexport async function searchForBlock( searchTerm ) {\r\n\treturn await searchGlobalInserter( 'Blocks', searchTerm );\r\n}\r\n\r\n/**\r\n * Searches for a pattern via the global inserter.\r\n *\r\n * @param {string} searchTerm The term to search the inserter for.\r\n * @return {Promise<ElementHandle|null>} The handle of the pattern to be\r\n * inserted or null if nothing was found.\r\n */\r\nexport async function searchForPattern( searchTerm ) {\r\n\treturn await searchGlobalInserter( 'Patterns', searchTerm );\r\n}\r\n\r\n/**\r\n * Searches for a reusable block via the global inserter.\r\n *\r\n * @param {string} searchTerm The term to search the inserter for.\r\n * @return {Promise<ElementHandle|null>} The handle of the reusable block to be\r\n * inserted or null if nothing was found.\r\n */\r\nexport async function searchForReusableBlock( searchTerm ) {\r\n\treturn await searchGlobalInserter( 'Reusable', searchTerm );\r\n}\r\n\r\n/**\r\n * Searches for a Block Directory block via the global inserter.\r\n *\r\n * @param {string} searchTerm The term to search the inserter for.\r\n * @return {Promise<ElementHandle|null>} The handle of the Block Directory block\r\n * to be inserted or null if nothing was found.\r\n */\r\nexport async function searchForBlockDirectoryBlock( searchTerm ) {\r\n\treturn await searchGlobalInserter( 'Block Directory', searchTerm );\r\n}\r\n\r\n/**\r\n * Inserts a block matching a given search term via the global inserter.\r\n *\r\n * @param {string} searchTerm The term by which to find the block to insert.\r\n */\r\nexport async function insertBlock( searchTerm ) {\r\n\tawait insertFromGlobalInserter( 'Blocks', searchTerm );\r\n}\r\n\r\n/**\r\n * Inserts a pattern matching a given search term via the global inserter.\r\n *\r\n * @param {string} searchTerm The term by which to find the pattern to insert.\r\n */\r\nexport async function insertPattern( searchTerm ) {\r\n\tawait insertFromGlobalInserter( 'Patterns', searchTerm );\r\n}\r\n\r\n/**\r\n * Inserts a Block Directory block matching a given search term via the global\r\n * inserter.\r\n *\r\n * @param {string} searchTerm The term by which to find the Block Directory\r\n *                            block to insert.\r\n */\r\nexport async function insertBlockDirectoryBlock( searchTerm ) {\r\n\treturn await insertFromGlobalInserter( 'Block Directory', searchTerm );\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,gBAAgB;;AAE9C;AACA;AACA;AACA,SAASC,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,MAAM,QAAQ,UAAU;;AAEjC;AACA;AACA,MAAMC,wBAAwB,GAC7B,+GAA+G;;AAEhH;AACA;AACA;AACA,OAAO,eAAeC,uBAAuBA,CAAA,EAAG;EAC/C,IAAK,EAAI,MAAMC,oBAAoB,CAAC,CAAC,CAAE,EAAG;IACzC,MAAMC,yBAAyB,CAAC,CAAC;;IAEjC;IACA;IACA,MAAMC,IAAI,CAACC,eAAe,CAAE,8BAA+B,CAAC;EAC7D;AACD;;AAEA;AACA;AACA;AACA,OAAO,eAAeC,wBAAwBA,CAAA,EAAG;EAChD,IAAK,MAAMJ,oBAAoB,CAAC,CAAC,EAAG;IACnC,MAAMC,yBAAyB,CAAC,CAAC;EAClC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAeD,oBAAoBA,CAAA,EAAG;EACrC,OAAO,MAAME,IAAI,CAACG,QAAQ,CAAE,MAAM;IACjC;IACA;IACA;IACA,OAAO,CAAC,CAAEC,QAAQ,CAACC,aAAa,CAC/B,wDAAwD,GACvD,kEAAkE,GAClE,oEAAoE,GACpE,oEAAoE,GACpE,uEAAuE,GACvE,2DAA2D,GAC3D,0DAA0D,GAC1D,gEACF,CAAC;EACF,CAAE,CAAC;AACJ;AACA;AACA;AACA;AACA,OAAO,eAAeN,yBAAyBA,CAAA,EAAG;EACjD;EACA;EACA,MAAMC,IAAI,CAACM,KAAK,CACf,0CAA0C,GACzC,6CAA6C,GAC7C,6CAA6C,GAC7C,yDAAyD,GACzD,yDAAyD,GACzD,gDAAgD,GAChD,4DAA4D,GAC5D,8CACF,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeC,uBAAuBA,CAAEC,KAAK,EAAG;EACtD,MAAMC,IAAI,GAAG,MAAMT,IAAI,CAACU,CAAC,CAAE,8BAA+B,CAAC;EAC3D,IAAK,CAAED,IAAI,EAAG;IACb,OAAO,CAAC;EACT;EAEA,MAAME,SAAS,GAAG,MAAMX,IAAI,CAACC,eAAe;EAC3C;EACA;EACA;EACA,iEACD,CAAC;EAED,MAAMW,cAAc,GAAG,MAAMZ,IAAI,CAACG,QAAQ,CACvCU,EAAE,IAAMA,EAAE,CAACC,SAAS,EACtBH,SACD,CAAC;EAED,IAAKC,cAAc,KAAKJ,KAAK,EAAG;IAC/B,OAAO,CAAC;EACT;EAEA,IAAIO,aAAa;EAEjB,QAASP,KAAK;IACb,KAAK,QAAQ;IACb,KAAK,UAAU;IACf,KAAK,OAAO;MACXO,aAAa,GAAI,QAAQP,KAAO,GAAE;MAClC;IACD,KAAK,iBAAiB;MACrB;MACAO,aAAa,GAAI,kBAAkBP,KAAO,GAAE;MAC5C;EACF;EAEA,MAAMQ,SAAS,GAAG,MAAMhB,IAAI,CAACiB,YAAY,CACvC,kEAAkEF,aAAe,GACnF,CAAC;EAED,MAAMC,SAAS,CAACV,KAAK,CAAC,CAAC;AACxB;;AAEA;AACA;AACA;AACA,eAAeY,kBAAkBA,CAAA,EAAG;EACnC;EACA,MAAMlB,IAAI,CAACG,QAAQ,CAAE,MAAM;IAC1BgB,EAAE,CAACC,IAAI,CACLC,QAAQ,CAAE,mBAAoB,CAAC,CAC/BC,WAAW,CACXH,EAAE,CAACC,IAAI,CACLG,MAAM,CAAE,mBAAoB,CAAC,CAC7BC,wBAAwB,CAAC,CAAC,EAC5B,CACD,CAAC;EACH,CAAE,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA,eAAeC,mCAAmCA,CAAA,EAAG;EACpD,MAAM9B,MAAM,CAAC,CAAC,CAAC+B,eAAe,CAC7B,MACCtB,QAAQ,CAACuB,aAAa,CAACC,OAAO,CAC7B,kCACD,CAAC,KAAK,IACR,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeC,oBAAoBA,CAAEC,QAAQ,EAAEC,UAAU,EAAG;EAClE,MAAMlC,uBAAuB,CAAC,CAAC;EAC/B,MAAMG,IAAI,CAACC,eAAe,CAAEL,wBAAyB,CAAC;EACtD,MAAMI,IAAI,CAACgC,KAAK,CAAEpC,wBAAyB,CAAC;EAC5C,MAAMF,oBAAoB,CAAE,SAAS,EAAE,GAAI,CAAC;EAC5C,MAAMM,IAAI,CAACiC,QAAQ,CAACC,IAAI,CAAEH,UAAW,CAAC;;EAEtC;EACA;EACA;EACA,MAAM/B,IAAI,CAACC,eAAe,CAAE,oCAAoC,EAAE;IACjEkC,MAAM,EAAE;EACT,CAAE,CAAC;EAEH,IAAIC,oBAAoB;EACxB,IAAIC,gBAAgB;EAEpB,QAASP,QAAQ;IAChB,KAAK,QAAQ;IACb,KAAK,UAAU;IACf,KAAK,iBAAiB;MAAE;QACvBM,oBAAoB,GAAG,MAAAA,CAAA,KAAY;UAClC,OAAO,MAAMpC,IAAI,CAACiB,YAAY,CAC5B,uCAAuCc,UAAY,KACrD,CAAC;QACF,CAAC;QACDM,gBAAgB,GAAG,MAAAA,CAAA,KAAY;UAC9B,MAAMrC,IAAI,CAACC,eAAe,CACzB,oCACD,CAAC;UACD,OAAO,IAAI;QACZ,CAAC;QACD;MACD;IACA,KAAK,iBAAiB;MAAE;QACvBmC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;UAClC;UACA,OAAO,MAAMpC,IAAI,CAACC,eAAe,CAChC,8DACD,CAAC;QACF,CAAC;QACDoC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;UAC9B;UACA;UACA;UACA,OAAO,MAAM,IAAIC,OAAO,CAAIC,OAAO,IAClCC,UAAU,CAAE,MAAMD,OAAO,CAAE,IAAK,CAAC,EAAE,IAAK,CACzC,CAAC;QACF,CAAC;MACF;EACD;EAEA,OAAO,MAAMD,OAAO,CAACG,IAAI,CAAE,CAAEL,oBAAoB,CAAC,CAAC,EAAEC,gBAAgB,CAAC,CAAC,CAAG,CAAC;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeK,wBAAwBA,CAAEZ,QAAQ,EAAEC,UAAU,EAAG;EACtE,MAAMlC,uBAAuB,CAAC,CAAC;EAC/B,MAAMU,uBAAuB,CAAEuB,QAAS,CAAC;EAEzC,IAAIa,YAAY;EAEhB,IAAK,CAAE,QAAQ,EAAE,iBAAiB,CAAE,CAACC,QAAQ,CAAEd,QAAS,CAAC,EAAG;IAC3D;IACA,IAAI;MACHa,YAAY,GAAG,CACd,MAAM3C,IAAI,CAAC6C,EAAE,CACX,uCAAuCd,UAAY,KACrD,CAAC,EACC,CAAC,CAAE;IACP,CAAC,CAAC,OAAQe,KAAK,EAAG;MACjB;IAAA;EAEF;;EAEA;EACA,IAAK,CAAEH,YAAY,EAAG;IACrBA,YAAY,GAAG,MAAMd,oBAAoB,CAAEC,QAAQ,EAAEC,UAAW,CAAC;EAClE;;EAEA;EACA,IAAK,CAAEY,YAAY,EAAG;IACrB,MAAM,IAAII,KAAK,CACb,kBAAkBhB,UAAY,YAAYD,QAAU,YACtD,CAAC;EACF;;EAEA;EACA,MAAMa,YAAY,CAACrC,KAAK,CAAC,CAAC;;EAE1B;EACA,IAAKwB,QAAQ,KAAK,iBAAiB,EAAG;IACrC,MAAMnC,MAAM,CAAC,CAAC,CAACM,eAAe,CAC7B,gDACD,CAAC;EACF;;EAEA;EACA,IAAK6B,QAAQ,KAAK,iBAAiB,EAAG;IACrC,MAAM9B,IAAI,CAACC,eAAe,CACzB,4EACD,CAAC;EACF;EAEA,MAAMiB,kBAAkB,CAAC,CAAC;EAC1B,MAAMO,mCAAmC,CAAC,CAAC;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeuB,cAAcA,CAAEjB,UAAU,EAAG;EAClD,OAAO,MAAMF,oBAAoB,CAAE,QAAQ,EAAEE,UAAW,CAAC;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAekB,gBAAgBA,CAAElB,UAAU,EAAG;EACpD,OAAO,MAAMF,oBAAoB,CAAE,UAAU,EAAEE,UAAW,CAAC;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAemB,sBAAsBA,CAAEnB,UAAU,EAAG;EAC1D,OAAO,MAAMF,oBAAoB,CAAE,UAAU,EAAEE,UAAW,CAAC;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeoB,4BAA4BA,CAAEpB,UAAU,EAAG;EAChE,OAAO,MAAMF,oBAAoB,CAAE,iBAAiB,EAAEE,UAAW,CAAC;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeqB,WAAWA,CAAErB,UAAU,EAAG;EAC/C,MAAMW,wBAAwB,CAAE,QAAQ,EAAEX,UAAW,CAAC;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAesB,aAAaA,CAAEtB,UAAU,EAAG;EACjD,MAAMW,wBAAwB,CAAE,UAAU,EAAEX,UAAW,CAAC;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeuB,yBAAyBA,CAAEvB,UAAU,EAAG;EAC7D,OAAO,MAAMW,wBAAwB,CAAE,iBAAiB,EAAEX,UAAW,CAAC;AACvE","ignoreList":[]}