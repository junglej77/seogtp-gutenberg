{"version":3,"names":["isInDefaultBlock","page","evaluate","activeElement","document","closestElementWithDataTpe","closest","activeBlockName","getAttribute","defaultBlockName","window","wp","blocks","getDefaultBlockName"],"sources":["@wordpress/e2e-test-utils/src/is-in-default-block.js"],"sourcesContent":["/**\r\n * Checks if the block that is focused is the default block.\r\n *\r\n * @return {Promise} Promise resolving with a boolean indicating if the focused block is the default block.\r\n */\r\nexport function isInDefaultBlock() {\r\n\treturn page.evaluate( () => {\r\n\t\tconst activeElement = document.activeElement;\r\n\t\t// activeElement may be null in that case we should return false.\r\n\t\tif ( ! activeElement ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tconst closestElementWithDataTpe =\r\n\t\t\tactiveElement.closest( '[data-type]' );\r\n\t\tif ( ! closestElementWithDataTpe ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tconst activeBlockName =\r\n\t\t\tclosestElementWithDataTpe.getAttribute( 'data-type' );\r\n\t\tconst defaultBlockName = window.wp.blocks.getDefaultBlockName();\r\n\r\n\t\treturn activeBlockName === defaultBlockName;\r\n\t} );\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,gBAAgBA,CAAA,EAAG;EAClC,OAAOC,IAAI,CAACC,QAAQ,CAAE,MAAM;IAC3B,MAAMC,aAAa,GAAGC,QAAQ,CAACD,aAAa;IAC5C;IACA,IAAK,CAAEA,aAAa,EAAG;MACtB,OAAO,KAAK;IACb;IACA,MAAME,yBAAyB,GAC9BF,aAAa,CAACG,OAAO,CAAE,aAAc,CAAC;IACvC,IAAK,CAAED,yBAAyB,EAAG;MAClC,OAAO,KAAK;IACb;IACA,MAAME,eAAe,GACpBF,yBAAyB,CAACG,YAAY,CAAE,WAAY,CAAC;IACtD,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,EAAE,CAACC,MAAM,CAACC,mBAAmB,CAAC,CAAC;IAE/D,OAAON,eAAe,KAAKE,gBAAgB;EAC5C,CAAE,CAAC;AACJ","ignoreList":[]}