{"version":3,"names":["join","parameterEquals","parameterName","value","request","URL","url","searchParams","get","isRESTRoute","path","pathname","endsWith","createEmbeddingMatcher"],"sources":["@wordpress/e2e-test-utils/src/mocks/create-embedding-matcher.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport { join } from 'path';\r\n\r\n/**\r\n * Creates a function to determine if a request has a parameter with a certain value.\r\n *\r\n * @param {string} parameterName The query parameter to check.\r\n * @param {string} value         The value to check for.\r\n * @return {Function} Function that determines if a request's query parameter is the specified value.\r\n */\r\nfunction parameterEquals( parameterName, value ) {\r\n\treturn ( request ) =>\r\n\t\tnew URL( request.url() ).searchParams.get( parameterName ) === value;\r\n}\r\n\r\n/**\r\n * Creates a function to determine if a request is a REST request of a given\r\n * path, accounting for variance in site permalink configuration.\r\n *\r\n * @param {string} path REST path to test.\r\n *\r\n * @return {Function} Function that determines if a request is a REST request of\r\n *                    a given path, accounting for variance in site permalink\r\n *                    configuration.\r\n */\r\nfunction isRESTRoute( path ) {\r\n\treturn ( request ) =>\r\n\t\tparameterEquals( 'rest_route', path )( request ) ||\r\n\t\tnew URL( request.url() ).pathname.endsWith( join( '/wp-json', path ) );\r\n}\r\n\r\n/**\r\n * Creates a function to determine if a request is embedding a certain URL.\r\n *\r\n * @param {string} url The URL to check against a request.\r\n * @return {Function} Function that determines if a request is for the embed API, embedding a specific URL.\r\n */\r\nexport function createEmbeddingMatcher( url ) {\r\n\treturn ( request ) =>\r\n\t\tisRESTRoute( '/oembed/1.0/proxy' )( request ) &&\r\n\t\tparameterEquals( 'url', url )( request );\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,IAAI,QAAQ,MAAM;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAAEC,aAAa,EAAEC,KAAK,EAAG;EAChD,OAASC,OAAO,IACf,IAAIC,GAAG,CAAED,OAAO,CAACE,GAAG,CAAC,CAAE,CAAC,CAACC,YAAY,CAACC,GAAG,CAAEN,aAAc,CAAC,KAAKC,KAAK;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,WAAWA,CAAEC,IAAI,EAAG;EAC5B,OAASN,OAAO,IACfH,eAAe,CAAE,YAAY,EAAES,IAAK,CAAC,CAAEN,OAAQ,CAAC,IAChD,IAAIC,GAAG,CAAED,OAAO,CAACE,GAAG,CAAC,CAAE,CAAC,CAACK,QAAQ,CAACC,QAAQ,CAAEZ,IAAI,CAAE,UAAU,EAAEU,IAAK,CAAE,CAAC;AACxE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,sBAAsBA,CAAEP,GAAG,EAAG;EAC7C,OAASF,OAAO,IACfK,WAAW,CAAE,mBAAoB,CAAC,CAAEL,OAAQ,CAAC,IAC7CH,eAAe,CAAE,KAAK,EAAEK,GAAI,CAAC,CAAEF,OAAQ,CAAC;AAC1C","ignoreList":[]}