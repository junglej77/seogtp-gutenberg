{"version":3,"names":["Component","withSelect","addQueryArgs","store","editorStore","getPostEditURL","postId","post","action","getPostTrashedURL","postType","trashed","post_type","ids","BrowserURL","constructor","arguments","state","historyId","componentDidUpdate","prevProps","postStatus","isSavingPost","hasHistory","props","setTrashURL","setBrowserURL","window","location","href","history","replaceState","id","setState","render","select","getCurrentPost","status","type","isTemplate","includes","wp_id"],"sources":["@wordpress/edit-post/src/components/browser-url/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { Component } from '@wordpress/element';\r\nimport { withSelect } from '@wordpress/data';\r\nimport { addQueryArgs } from '@wordpress/url';\r\nimport { store as editorStore } from '@wordpress/editor';\r\n\r\n/**\r\n * Returns the Post's Edit URL.\r\n *\r\n * @param {number} postId Post ID.\r\n *\r\n * @return {string} Post edit URL.\r\n */\r\nexport function getPostEditURL( postId ) {\r\n\treturn addQueryArgs( 'post.php', { post: postId, action: 'edit' } );\r\n}\r\n\r\n/**\r\n * Returns the Post's Trashed URL.\r\n *\r\n * @param {number} postId   Post ID.\r\n * @param {string} postType Post Type.\r\n *\r\n * @return {string} Post trashed URL.\r\n */\r\nexport function getPostTrashedURL( postId, postType ) {\r\n\treturn addQueryArgs( 'edit.php', {\r\n\t\ttrashed: 1,\r\n\t\tpost_type: postType,\r\n\t\tids: postId,\r\n\t} );\r\n}\r\n\r\nexport class BrowserURL extends Component {\r\n\tconstructor() {\r\n\t\tsuper( ...arguments );\r\n\r\n\t\tthis.state = {\r\n\t\t\thistoryId: null,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidUpdate( prevProps ) {\r\n\t\tconst { postId, postStatus, postType, isSavingPost, hasHistory } =\r\n\t\t\tthis.props;\r\n\t\tconst { historyId } = this.state;\r\n\r\n\t\t// Posts are still dirty while saving so wait for saving to finish\r\n\t\t// to avoid the unsaved changes warning when trashing posts.\r\n\t\tif ( postStatus === 'trash' && ! isSavingPost ) {\r\n\t\t\tthis.setTrashURL( postId, postType );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t( postId !== prevProps.postId || postId !== historyId ) &&\r\n\t\t\tpostStatus !== 'auto-draft' &&\r\n\t\t\tpostId &&\r\n\t\t\t! hasHistory\r\n\t\t) {\r\n\t\t\tthis.setBrowserURL( postId );\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Navigates the browser to the post trashed URL to show a notice about the trashed post.\r\n\t *\r\n\t * @param {number} postId   Post ID.\r\n\t * @param {string} postType Post Type.\r\n\t */\r\n\tsetTrashURL( postId, postType ) {\r\n\t\twindow.location.href = getPostTrashedURL( postId, postType );\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces the browser URL with a post editor link for the given post ID.\r\n\t *\r\n\t * Note it is important that, since this function may be called when the\r\n\t * editor first loads, the result generated `getPostEditURL` matches that\r\n\t * produced by the server. Otherwise, the URL will change unexpectedly.\r\n\t *\r\n\t * @param {number} postId Post ID for which to generate post editor URL.\r\n\t */\r\n\tsetBrowserURL( postId ) {\r\n\t\twindow.history.replaceState(\r\n\t\t\t{ id: postId },\r\n\t\t\t'Post ' + postId,\r\n\t\t\tgetPostEditURL( postId )\r\n\t\t);\r\n\r\n\t\tthis.setState( () => ( {\r\n\t\t\thistoryId: postId,\r\n\t\t} ) );\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport default withSelect( ( select ) => {\r\n\tconst { getCurrentPost, isSavingPost } = select( editorStore );\r\n\tconst post = getCurrentPost();\r\n\tlet { id, status, type } = post;\r\n\tconst isTemplate = [ 'wp_template', 'wp_template_part' ].includes( type );\r\n\tif ( isTemplate ) {\r\n\t\tid = post.wp_id;\r\n\t}\r\n\r\n\treturn {\r\n\t\tpostId: id,\r\n\t\tpostStatus: status,\r\n\t\tpostType: type,\r\n\t\tisSavingPost: isSavingPost(),\r\n\t};\r\n} )( BrowserURL );\r\n"],"mappings":"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","ignoreList":[]}