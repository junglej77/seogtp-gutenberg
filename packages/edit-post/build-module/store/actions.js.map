{"version":3,"names":["apiFetch","store","preferencesStore","editorStore","privateApis","editorPrivateApis","deprecated","addFilter","coreStore","getMetaBoxContainer","unlock","interfaceStore","openGeneralSidebar","name","registry","dispatch","enableComplementaryArea","closeGeneralSidebar","disableComplementaryArea","openModal","since","alternative","closeModal","openPublishSidebar","closePublishSidebar","togglePublishSidebar","toggleEditorPanelEnabled","panelName","toggleEditorPanelOpened","removeEditorPanel","toggleFeature","feature","toggle","switchEditorMode","mode","togglePinnedPluginItem","pluginName","isPinned","select","isItemPinned","updatePreferredStyleVariations","hint","type","showBlockTypes","blockNames","hideBlockTypes","setAvailableMetaBoxesPerLocation","metaBoxesPerLocation","requestMetaBoxUpdates","window","tinyMCE","triggerSave","baseFormData","FormData","document","querySelector","postId","get","postType","post","getEditedEntityRecord","additionalData","comment_status","ping_status","sticky","author","filter","Boolean","activeMetaBoxLocations","getActiveMetaBoxLocations","formDataToMerge","map","location","formData","reduce","memo","currentFormData","key","value","append","forEach","url","_wpMetaBoxUrl","method","body","parse","metaBoxUpdatesSuccess","metaBoxUpdatesFailure","__experimentalSetPreviewDeviceType","deviceType","version","setDeviceType","setIsInserterOpened","setIsListViewOpened","isOpen","setIsEditingTemplate","__unstableCreateTemplate","metaBoxesInitialized","initializeMetaBoxes","isEditorReady","__unstableIsEditorReady","getCurrentPostType","postboxes","page","add_postbox_toggles","previous","options","then","isAutosave","hasMetaBoxes","toggleDistractionFree"],"sources":["@wordpress/edit-post/src/store/actions.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport { store as preferencesStore } from '@wordpress/preferences';\r\nimport {\r\n\tstore as editorStore,\r\n\tprivateApis as editorPrivateApis,\r\n} from '@wordpress/editor';\r\nimport deprecated from '@wordpress/deprecated';\r\nimport { addFilter } from '@wordpress/hooks';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { getMetaBoxContainer } from '../utils/meta-boxes';\r\nimport { unlock } from '../lock-unlock';\r\n\r\nconst { interfaceStore } = unlock( editorPrivateApis );\r\n\r\n/**\r\n * Returns an action object used in signalling that the user opened an editor sidebar.\r\n *\r\n * @param {?string} name Sidebar name to be opened.\r\n */\r\nexport const openGeneralSidebar =\r\n\t( name ) =>\r\n\t( { registry } ) => {\r\n\t\tregistry\r\n\t\t\t.dispatch( interfaceStore )\r\n\t\t\t.enableComplementaryArea( 'core', name );\r\n\t};\r\n\r\n/**\r\n * Returns an action object signalling that the user closed the sidebar.\r\n */\r\nexport const closeGeneralSidebar =\r\n\t() =>\r\n\t( { registry } ) =>\r\n\t\tregistry.dispatch( interfaceStore ).disableComplementaryArea( 'core' );\r\n\r\n/**\r\n * Returns an action object used in signalling that the user opened a modal.\r\n *\r\n * @deprecated since WP 6.3 use `core/interface` store's action with the same name instead.\r\n *\r\n *\r\n * @param {string} name A string that uniquely identifies the modal.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const openModal =\r\n\t( name ) =>\r\n\t( { registry } ) => {\r\n\t\tdeprecated( \"select( 'core/edit-post' ).openModal( name )\", {\r\n\t\t\tsince: '6.3',\r\n\t\t\talternative: \"select( 'core/interface').openModal( name )\",\r\n\t\t} );\r\n\t\treturn registry.dispatch( interfaceStore ).openModal( name );\r\n\t};\r\n\r\n/**\r\n * Returns an action object signalling that the user closed a modal.\r\n *\r\n * @deprecated since WP 6.3 use `core/interface` store's action with the same name instead.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const closeModal =\r\n\t() =>\r\n\t( { registry } ) => {\r\n\t\tdeprecated( \"select( 'core/edit-post' ).closeModal()\", {\r\n\t\t\tsince: '6.3',\r\n\t\t\talternative: \"select( 'core/interface').closeModal()\",\r\n\t\t} );\r\n\t\treturn registry.dispatch( interfaceStore ).closeModal();\r\n\t};\r\n\r\n/**\r\n * Returns an action object used in signalling that the user opened the publish\r\n * sidebar.\r\n * @deprecated\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const openPublishSidebar =\r\n\t() =>\r\n\t( { registry } ) => {\r\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).openPublishSidebar\", {\r\n\t\t\tsince: '6.6',\r\n\t\t\talternative: \"dispatch( 'core/editor').openPublishSidebar\",\r\n\t\t} );\r\n\t\tregistry.dispatch( editorStore ).openPublishSidebar();\r\n\t};\r\n\r\n/**\r\n * Returns an action object used in signalling that the user closed the\r\n * publish sidebar.\r\n * @deprecated\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const closePublishSidebar =\r\n\t() =>\r\n\t( { registry } ) => {\r\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).closePublishSidebar\", {\r\n\t\t\tsince: '6.6',\r\n\t\t\talternative: \"dispatch( 'core/editor').closePublishSidebar\",\r\n\t\t} );\r\n\t\tregistry.dispatch( editorStore ).closePublishSidebar();\r\n\t};\r\n\r\n/**\r\n * Returns an action object used in signalling that the user toggles the publish sidebar.\r\n * @deprecated\r\n *\r\n * @return {Object} Action object\r\n */\r\nexport const togglePublishSidebar =\r\n\t() =>\r\n\t( { registry } ) => {\r\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).togglePublishSidebar\", {\r\n\t\t\tsince: '6.6',\r\n\t\t\talternative: \"dispatch( 'core/editor').togglePublishSidebar\",\r\n\t\t} );\r\n\t\tregistry.dispatch( editorStore ).togglePublishSidebar();\r\n\t};\r\n\r\n/**\r\n * Returns an action object used to enable or disable a panel in the editor.\r\n *\r\n * @deprecated\r\n *\r\n * @param {string} panelName A string that identifies the panel to enable or disable.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const toggleEditorPanelEnabled =\r\n\t( panelName ) =>\r\n\t( { registry } ) => {\r\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).toggleEditorPanelEnabled\", {\r\n\t\t\tsince: '6.5',\r\n\t\t\talternative: \"dispatch( 'core/editor').toggleEditorPanelEnabled\",\r\n\t\t} );\r\n\t\tregistry.dispatch( editorStore ).toggleEditorPanelEnabled( panelName );\r\n\t};\r\n\r\n/**\r\n * Opens a closed panel and closes an open panel.\r\n *\r\n * @deprecated\r\n *\r\n * @param {string} panelName A string that identifies the panel to open or close.\r\n */\r\nexport const toggleEditorPanelOpened =\r\n\t( panelName ) =>\r\n\t( { registry } ) => {\r\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).toggleEditorPanelOpened\", {\r\n\t\t\tsince: '6.5',\r\n\t\t\talternative: \"dispatch( 'core/editor').toggleEditorPanelOpened\",\r\n\t\t} );\r\n\t\tregistry.dispatch( editorStore ).toggleEditorPanelOpened( panelName );\r\n\t};\r\n\r\n/**\r\n * Returns an action object used to remove a panel from the editor.\r\n *\r\n * @deprecated\r\n *\r\n * @param {string} panelName A string that identifies the panel to remove.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport const removeEditorPanel =\r\n\t( panelName ) =>\r\n\t( { registry } ) => {\r\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).removeEditorPanel\", {\r\n\t\t\tsince: '6.5',\r\n\t\t\talternative: \"dispatch( 'core/editor').removeEditorPanel\",\r\n\t\t} );\r\n\t\tregistry.dispatch( editorStore ).removeEditorPanel( panelName );\r\n\t};\r\n\r\n/**\r\n * Triggers an action used to toggle a feature flag.\r\n *\r\n * @param {string} feature Feature name.\r\n */\r\nexport const toggleFeature =\r\n\t( feature ) =>\r\n\t( { registry } ) =>\r\n\t\tregistry\r\n\t\t\t.dispatch( preferencesStore )\r\n\t\t\t.toggle( 'core/edit-post', feature );\r\n\r\n/**\r\n * Triggers an action used to switch editor mode.\r\n *\r\n * @deprecated\r\n *\r\n * @param {string} mode The editor mode.\r\n */\r\nexport const switchEditorMode =\r\n\t( mode ) =>\r\n\t( { registry } ) => {\r\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).switchEditorMode\", {\r\n\t\t\tsince: '6.6',\r\n\t\t\talternative: \"dispatch( 'core/editor').switchEditorMode\",\r\n\t\t} );\r\n\t\tregistry.dispatch( editorStore ).switchEditorMode( mode );\r\n\t};\r\n\r\n/**\r\n * Triggers an action object used to toggle a plugin name flag.\r\n *\r\n * @param {string} pluginName Plugin name.\r\n */\r\nexport const togglePinnedPluginItem =\r\n\t( pluginName ) =>\r\n\t( { registry } ) => {\r\n\t\tconst isPinned = registry\r\n\t\t\t.select( interfaceStore )\r\n\t\t\t.isItemPinned( 'core', pluginName );\r\n\r\n\t\tregistry\r\n\t\t\t.dispatch( interfaceStore )\r\n\t\t\t[ isPinned ? 'unpinItem' : 'pinItem' ]( 'core', pluginName );\r\n\t};\r\n\r\n/**\r\n * Returns an action object used in signaling that a style should be auto-applied when a block is created.\r\n *\r\n * @deprecated\r\n */\r\nexport function updatePreferredStyleVariations() {\r\n\tdeprecated( \"dispatch( 'core/edit-post' ).updatePreferredStyleVariations\", {\r\n\t\tsince: '6.6',\r\n\t\thint: 'Preferred Style Variations are not supported anymore.',\r\n\t} );\r\n\treturn { type: 'NOTHING' };\r\n}\r\n\r\n/**\r\n * Update the provided block types to be visible.\r\n *\r\n * @param {string[]} blockNames Names of block types to show.\r\n */\r\nexport const showBlockTypes =\r\n\t( blockNames ) =>\r\n\t( { registry } ) => {\r\n\t\tunlock( registry.dispatch( editorStore ) ).showBlockTypes( blockNames );\r\n\t};\r\n\r\n/**\r\n * Update the provided block types to be hidden.\r\n *\r\n * @param {string[]} blockNames Names of block types to hide.\r\n */\r\nexport const hideBlockTypes =\r\n\t( blockNames ) =>\r\n\t( { registry } ) => {\r\n\t\tunlock( registry.dispatch( editorStore ) ).hideBlockTypes( blockNames );\r\n\t};\r\n\r\n/**\r\n * Stores info about which Meta boxes are available in which location.\r\n *\r\n * @param {Object} metaBoxesPerLocation Meta boxes per location.\r\n */\r\nexport function setAvailableMetaBoxesPerLocation( metaBoxesPerLocation ) {\r\n\treturn {\r\n\t\ttype: 'SET_META_BOXES_PER_LOCATIONS',\r\n\t\tmetaBoxesPerLocation,\r\n\t};\r\n}\r\n\r\n/**\r\n * Update a metabox.\r\n */\r\nexport const requestMetaBoxUpdates =\r\n\t() =>\r\n\tasync ( { registry, select, dispatch } ) => {\r\n\t\tdispatch( {\r\n\t\t\ttype: 'REQUEST_META_BOX_UPDATES',\r\n\t\t} );\r\n\r\n\t\t// Saves the wp_editor fields.\r\n\t\tif ( window.tinyMCE ) {\r\n\t\t\twindow.tinyMCE.triggerSave();\r\n\t\t}\r\n\r\n\t\t// We gather the base form data.\r\n\t\tconst baseFormData = new window.FormData(\r\n\t\t\tdocument.querySelector( '.metabox-base-form' )\r\n\t\t);\r\n\r\n\t\tconst postId = baseFormData.get( 'post_ID' );\r\n\t\tconst postType = baseFormData.get( 'post_type' );\r\n\r\n\t\t// Additional data needed for backward compatibility.\r\n\t\t// If we do not provide this data, the post will be overridden with the default values.\r\n\t\t// We cannot rely on getCurrentPost because right now on the editor we may be editing a pattern or a template.\r\n\t\t// We need to retrieve the post that the base form data is referring to.\r\n\t\tconst post = registry\r\n\t\t\t.select( coreStore )\r\n\t\t\t.getEditedEntityRecord( 'postType', postType, postId );\r\n\t\tconst additionalData = [\r\n\t\t\tpost.comment_status\r\n\t\t\t\t? [ 'comment_status', post.comment_status ]\r\n\t\t\t\t: false,\r\n\t\t\tpost.ping_status ? [ 'ping_status', post.ping_status ] : false,\r\n\t\t\tpost.sticky ? [ 'sticky', post.sticky ] : false,\r\n\t\t\tpost.author ? [ 'post_author', post.author ] : false,\r\n\t\t].filter( Boolean );\r\n\r\n\t\t// We gather all the metaboxes locations.\r\n\t\tconst activeMetaBoxLocations = select.getActiveMetaBoxLocations();\r\n\t\tconst formDataToMerge = [\r\n\t\t\tbaseFormData,\r\n\t\t\t...activeMetaBoxLocations.map(\r\n\t\t\t\t( location ) =>\r\n\t\t\t\t\tnew window.FormData( getMetaBoxContainer( location ) )\r\n\t\t\t),\r\n\t\t];\r\n\r\n\t\t// Merge all form data objects into a single one.\r\n\t\tconst formData = formDataToMerge.reduce( ( memo, currentFormData ) => {\r\n\t\t\tfor ( const [ key, value ] of currentFormData ) {\r\n\t\t\t\tmemo.append( key, value );\r\n\t\t\t}\r\n\t\t\treturn memo;\r\n\t\t}, new window.FormData() );\r\n\t\tadditionalData.forEach( ( [ key, value ] ) =>\r\n\t\t\tformData.append( key, value )\r\n\t\t);\r\n\r\n\t\ttry {\r\n\t\t\t// Save the metaboxes.\r\n\t\t\tawait apiFetch( {\r\n\t\t\t\turl: window._wpMetaBoxUrl,\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: formData,\r\n\t\t\t\tparse: false,\r\n\t\t\t} );\r\n\t\t\tdispatch.metaBoxUpdatesSuccess();\r\n\t\t} catch {\r\n\t\t\tdispatch.metaBoxUpdatesFailure();\r\n\t\t}\r\n\t};\r\n\r\n/**\r\n * Returns an action object used to signal a successful meta box update.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function metaBoxUpdatesSuccess() {\r\n\treturn {\r\n\t\ttype: 'META_BOX_UPDATES_SUCCESS',\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an action object used to signal a failed meta box update.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function metaBoxUpdatesFailure() {\r\n\treturn {\r\n\t\ttype: 'META_BOX_UPDATES_FAILURE',\r\n\t};\r\n}\r\n\r\n/**\r\n * Action that changes the width of the editing canvas.\r\n *\r\n * @deprecated\r\n *\r\n * @param {string} deviceType\r\n */\r\nexport const __experimentalSetPreviewDeviceType =\r\n\t( deviceType ) =>\r\n\t( { registry } ) => {\r\n\t\tdeprecated(\r\n\t\t\t\"dispatch( 'core/edit-post' ).__experimentalSetPreviewDeviceType\",\r\n\t\t\t{\r\n\t\t\t\tsince: '6.5',\r\n\t\t\t\tversion: '6.7',\r\n\t\t\t\thint: 'registry.dispatch( editorStore ).setDeviceType',\r\n\t\t\t}\r\n\t\t);\r\n\t\tregistry.dispatch( editorStore ).setDeviceType( deviceType );\r\n\t};\r\n\r\n/**\r\n * Returns an action object used to open/close the inserter.\r\n *\r\n * @deprecated\r\n *\r\n * @param {boolean|Object} value Whether the inserter should be opened (true) or closed (false).\r\n */\r\nexport const setIsInserterOpened =\r\n\t( value ) =>\r\n\t( { registry } ) => {\r\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).setIsInserterOpened\", {\r\n\t\t\tsince: '6.5',\r\n\t\t\talternative: \"dispatch( 'core/editor').setIsInserterOpened\",\r\n\t\t} );\r\n\t\tregistry.dispatch( editorStore ).setIsInserterOpened( value );\r\n\t};\r\n\r\n/**\r\n * Returns an action object used to open/close the list view.\r\n *\r\n * @deprecated\r\n *\r\n * @param {boolean} isOpen A boolean representing whether the list view should be opened or closed.\r\n */\r\nexport const setIsListViewOpened =\r\n\t( isOpen ) =>\r\n\t( { registry } ) => {\r\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).setIsListViewOpened\", {\r\n\t\t\tsince: '6.5',\r\n\t\t\talternative: \"dispatch( 'core/editor').setIsListViewOpened\",\r\n\t\t} );\r\n\t\tregistry.dispatch( editorStore ).setIsListViewOpened( isOpen );\r\n\t};\r\n\r\n/**\r\n * Returns an action object used to switch to template editing.\r\n *\r\n * @deprecated\r\n */\r\nexport function setIsEditingTemplate() {\r\n\tdeprecated( \"dispatch( 'core/edit-post' ).setIsEditingTemplate\", {\r\n\t\tsince: '6.5',\r\n\t\talternative: \"dispatch( 'core/editor').setRenderingMode\",\r\n\t} );\r\n\treturn { type: 'NOTHING' };\r\n}\r\n\r\n/**\r\n * Create a block based template.\r\n *\r\n * @deprecated\r\n */\r\nexport function __unstableCreateTemplate() {\r\n\tdeprecated( \"dispatch( 'core/edit-post' ).__unstableCreateTemplate\", {\r\n\t\tsince: '6.5',\r\n\t} );\r\n\treturn { type: 'NOTHING' };\r\n}\r\n\r\nlet metaBoxesInitialized = false;\r\n\r\n/**\r\n * Initializes WordPress `postboxes` script and the logic for saving meta boxes.\r\n */\r\nexport const initializeMetaBoxes =\r\n\t() =>\r\n\t( { registry, select, dispatch } ) => {\r\n\t\tconst isEditorReady = registry\r\n\t\t\t.select( editorStore )\r\n\t\t\t.__unstableIsEditorReady();\r\n\r\n\t\tif ( ! isEditorReady ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Only initialize once.\r\n\t\tif ( metaBoxesInitialized ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst postType = registry.select( editorStore ).getCurrentPostType();\r\n\t\tif ( window.postboxes.page !== postType ) {\r\n\t\t\twindow.postboxes.add_postbox_toggles( postType );\r\n\t\t}\r\n\r\n\t\tmetaBoxesInitialized = true;\r\n\r\n\t\t// Save metaboxes on save completion, except for autosaves.\r\n\t\taddFilter(\r\n\t\t\t'editor.__unstableSavePost',\r\n\t\t\t'core/edit-post/save-metaboxes',\r\n\t\t\t( previous, options ) =>\r\n\t\t\t\tprevious.then( () => {\r\n\t\t\t\t\tif ( options.isAutosave ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! select.hasMetaBoxes() ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn dispatch.requestMetaBoxUpdates();\r\n\t\t\t\t} )\r\n\t\t);\r\n\r\n\t\tdispatch( {\r\n\t\t\ttype: 'META_BOXES_INITIALIZED',\r\n\t\t} );\r\n\t};\r\n\r\n/**\r\n * Action that toggles Distraction free mode.\r\n * Distraction free mode expects there are no sidebars, as due to the\r\n * z-index values set, you can't close sidebars.\r\n *\r\n * @deprecated\r\n */\r\nexport const toggleDistractionFree =\r\n\t() =>\r\n\t( { registry } ) => {\r\n\t\tdeprecated( \"dispatch( 'core/edit-post' ).toggleDistractionFree\", {\r\n\t\t\tsince: '6.6',\r\n\t\t\talternative: \"dispatch( 'core/editor').toggleDistractionFree\",\r\n\t\t} );\r\n\t\tregistry.dispatch( editorStore ).toggleDistractionFree();\r\n\t};\r\n"],"mappings":"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","ignoreList":[]}