{"version":3,"names":["DropdownMenu","useState","useRef","__","sprintf","symbol","symbolFilled","upload","useSelect","useDispatch","privateApis","routerPrivateApis","editPatternsPrivateApis","store","patternsStore","noticesStore","coreStore","editorPrivateApis","unlock","PATTERN_TYPES","PATTERN_DEFAULT_CATEGORY","TEMPLATE_PART_POST_TYPE","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","useHistory","CreatePatternModal","useAddPatternCategory","CreateTemplatePartModal","AddNewPattern","history","showPatternModal","setShowPatternModal","showTemplatePartModal","setShowTemplatePartModal","createPatternFromFile","createSuccessNotice","createErrorNotice","patternUploadInputRef","isBlockBasedTheme","addNewPatternLabel","addNewTemplatePartLabel","canCreatePattern","canCreateTemplatePart","select","getCurrentTheme","getPostType","canUser","is_block_theme","user","labels","add_new_item","kind","name","handleCreatePattern","pattern","push","postId","id","postType","canvas","handleCreateTemplatePart","templatePart","handleError","controls","icon","onClick","title","current","click","categoryMap","findOrCreateTerm","length","children","toggleProps","variant","showTooltip","__next40pxDefaultSize","text","label","onClose","onSuccess","onError","closeModal","blocks","onCreate","type","accept","hidden","ref","onChange","event","file","target","files","params","categoryId","getLocationWithParams","currentCategoryId","currentCategory","Array","from","values","find","term","undefined","raw","err","message","value"],"sources":["@wordpress/edit-site/src/components/add-new-pattern/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { DropdownMenu } from '@wordpress/components';\r\nimport { useState, useRef } from '@wordpress/element';\r\nimport { __, sprintf } from '@wordpress/i18n';\r\nimport { symbol, symbolFilled, upload } from '@wordpress/icons';\r\nimport { useSelect, useDispatch } from '@wordpress/data';\r\nimport { privateApis as routerPrivateApis } from '@wordpress/router';\r\nimport {\r\n\tprivateApis as editPatternsPrivateApis,\r\n\tstore as patternsStore,\r\n} from '@wordpress/patterns';\r\nimport { store as noticesStore } from '@wordpress/notices';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\nimport { privateApis as editorPrivateApis } from '@wordpress/editor';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { unlock } from '../../lock-unlock';\r\nimport {\r\n\tPATTERN_TYPES,\r\n\tPATTERN_DEFAULT_CATEGORY,\r\n\tTEMPLATE_PART_POST_TYPE,\r\n} from '../../utils/constants';\r\n\r\nconst { useHistory } = unlock( routerPrivateApis );\r\nconst { CreatePatternModal, useAddPatternCategory } = unlock(\r\n\teditPatternsPrivateApis\r\n);\r\nconst { CreateTemplatePartModal } = unlock( editorPrivateApis );\r\n\r\nexport default function AddNewPattern() {\r\n\tconst history = useHistory();\r\n\tconst [ showPatternModal, setShowPatternModal ] = useState( false );\r\n\tconst [ showTemplatePartModal, setShowTemplatePartModal ] =\r\n\t\tuseState( false );\r\n\t// eslint-disable-next-line @wordpress/no-unused-vars-before-return\r\n\tconst { createPatternFromFile } = unlock( useDispatch( patternsStore ) );\r\n\tconst { createSuccessNotice, createErrorNotice } =\r\n\t\tuseDispatch( noticesStore );\r\n\tconst patternUploadInputRef = useRef();\r\n\tconst {\r\n\t\tisBlockBasedTheme,\r\n\t\taddNewPatternLabel,\r\n\t\taddNewTemplatePartLabel,\r\n\t\tcanCreatePattern,\r\n\t\tcanCreateTemplatePart,\r\n\t} = useSelect( ( select ) => {\r\n\t\tconst { getCurrentTheme, getPostType, canUser } = select( coreStore );\r\n\t\treturn {\r\n\t\t\tisBlockBasedTheme: getCurrentTheme()?.is_block_theme,\r\n\t\t\taddNewPatternLabel: getPostType( PATTERN_TYPES.user )?.labels\r\n\t\t\t\t?.add_new_item,\r\n\t\t\taddNewTemplatePartLabel: getPostType( TEMPLATE_PART_POST_TYPE )\r\n\t\t\t\t?.labels?.add_new_item,\r\n\t\t\t// Blocks refers to the wp_block post type, this checks the ability to create a post of that type.\r\n\t\t\tcanCreatePattern: canUser( 'create', {\r\n\t\t\t\tkind: 'postType',\r\n\t\t\t\tname: PATTERN_TYPES.user,\r\n\t\t\t} ),\r\n\t\t\tcanCreateTemplatePart: canUser( 'create', {\r\n\t\t\t\tkind: 'postType',\r\n\t\t\t\tname: TEMPLATE_PART_POST_TYPE,\r\n\t\t\t} ),\r\n\t\t};\r\n\t}, [] );\r\n\r\n\tfunction handleCreatePattern( { pattern } ) {\r\n\t\tsetShowPatternModal( false );\r\n\r\n\t\thistory.push( {\r\n\t\t\tpostId: pattern.id,\r\n\t\t\tpostType: PATTERN_TYPES.user,\r\n\t\t\tcanvas: 'edit',\r\n\t\t} );\r\n\t}\r\n\r\n\tfunction handleCreateTemplatePart( templatePart ) {\r\n\t\tsetShowTemplatePartModal( false );\r\n\r\n\t\t// Navigate to the created template part editor.\r\n\t\thistory.push( {\r\n\t\t\tpostId: templatePart.id,\r\n\t\t\tpostType: TEMPLATE_PART_POST_TYPE,\r\n\t\t\tcanvas: 'edit',\r\n\t\t} );\r\n\t}\r\n\r\n\tfunction handleError() {\r\n\t\tsetShowPatternModal( false );\r\n\t\tsetShowTemplatePartModal( false );\r\n\t}\r\n\r\n\tconst controls = [];\r\n\tif ( canCreatePattern ) {\r\n\t\tcontrols.push( {\r\n\t\t\ticon: symbol,\r\n\t\t\tonClick: () => setShowPatternModal( true ),\r\n\t\t\ttitle: addNewPatternLabel,\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( isBlockBasedTheme && canCreateTemplatePart ) {\r\n\t\tcontrols.push( {\r\n\t\t\ticon: symbolFilled,\r\n\t\t\tonClick: () => setShowTemplatePartModal( true ),\r\n\t\t\ttitle: addNewTemplatePartLabel,\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( canCreatePattern ) {\r\n\t\tcontrols.push( {\r\n\t\t\ticon: upload,\r\n\t\t\tonClick: () => {\r\n\t\t\t\tpatternUploadInputRef.current.click();\r\n\t\t\t},\r\n\t\t\ttitle: __( 'Import pattern from JSON' ),\r\n\t\t} );\r\n\t}\r\n\r\n\tconst { categoryMap, findOrCreateTerm } = useAddPatternCategory();\r\n\tif ( controls.length === 0 ) {\r\n\t\treturn null;\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{ addNewPatternLabel && (\r\n\t\t\t\t<DropdownMenu\r\n\t\t\t\t\tcontrols={ controls }\r\n\t\t\t\t\ticon={ null }\r\n\t\t\t\t\ttoggleProps={ {\r\n\t\t\t\t\t\tvariant: 'primary',\r\n\t\t\t\t\t\tshowTooltip: false,\r\n\t\t\t\t\t\t__next40pxDefaultSize: true,\r\n\t\t\t\t\t} }\r\n\t\t\t\t\ttext={ addNewPatternLabel }\r\n\t\t\t\t\tlabel={ addNewPatternLabel }\r\n\t\t\t\t/>\r\n\t\t\t) }\r\n\t\t\t{ showPatternModal && (\r\n\t\t\t\t<CreatePatternModal\r\n\t\t\t\t\tonClose={ () => setShowPatternModal( false ) }\r\n\t\t\t\t\tonSuccess={ handleCreatePattern }\r\n\t\t\t\t\tonError={ handleError }\r\n\t\t\t\t/>\r\n\t\t\t) }\r\n\t\t\t{ showTemplatePartModal && (\r\n\t\t\t\t<CreateTemplatePartModal\r\n\t\t\t\t\tcloseModal={ () => setShowTemplatePartModal( false ) }\r\n\t\t\t\t\tblocks={ [] }\r\n\t\t\t\t\tonCreate={ handleCreateTemplatePart }\r\n\t\t\t\t\tonError={ handleError }\r\n\t\t\t\t/>\r\n\t\t\t) }\r\n\r\n\t\t\t<input\r\n\t\t\t\ttype=\"file\"\r\n\t\t\t\taccept=\".json\"\r\n\t\t\t\thidden\r\n\t\t\t\tref={ patternUploadInputRef }\r\n\t\t\t\tonChange={ async ( event ) => {\r\n\t\t\t\t\tconst file = event.target.files?.[ 0 ];\r\n\t\t\t\t\tif ( ! file ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst {\r\n\t\t\t\t\t\t\tparams: { postType, categoryId },\r\n\t\t\t\t\t\t} = history.getLocationWithParams();\r\n\t\t\t\t\t\tlet currentCategoryId;\r\n\t\t\t\t\t\t// When we're not handling template parts, we should\r\n\t\t\t\t\t\t// add or create the proper pattern category.\r\n\t\t\t\t\t\tif ( postType !== TEMPLATE_PART_POST_TYPE ) {\r\n\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t * categoryMap.values() returns an iterator.\r\n\t\t\t\t\t\t\t * Iterator.prototype.find() is not yet widely supported.\r\n\t\t\t\t\t\t\t * Convert to array to use the Array.prototype.find method.\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\tconst currentCategory = Array.from(\r\n\t\t\t\t\t\t\t\tcategoryMap.values()\r\n\t\t\t\t\t\t\t).find( ( term ) => term.name === categoryId );\r\n\t\t\t\t\t\t\tif ( currentCategory ) {\r\n\t\t\t\t\t\t\t\tcurrentCategoryId =\r\n\t\t\t\t\t\t\t\t\tcurrentCategory.id ||\r\n\t\t\t\t\t\t\t\t\t( await findOrCreateTerm(\r\n\t\t\t\t\t\t\t\t\t\tcurrentCategory.label\r\n\t\t\t\t\t\t\t\t\t) );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst pattern = await createPatternFromFile(\r\n\t\t\t\t\t\t\tfile,\r\n\t\t\t\t\t\t\tcurrentCategoryId\r\n\t\t\t\t\t\t\t\t? [ currentCategoryId ]\r\n\t\t\t\t\t\t\t\t: undefined\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t// Navigate to the All patterns category for the newly created pattern\r\n\t\t\t\t\t\t// if we're not on that page already and if we're not in the `my-patterns`\r\n\t\t\t\t\t\t// category.\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t! currentCategoryId &&\r\n\t\t\t\t\t\t\tcategoryId !== 'my-patterns'\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\thistory.push( {\r\n\t\t\t\t\t\t\t\tpostType: PATTERN_TYPES.user,\r\n\t\t\t\t\t\t\t\tcategoryId: PATTERN_DEFAULT_CATEGORY,\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcreateSuccessNotice(\r\n\t\t\t\t\t\t\tsprintf(\r\n\t\t\t\t\t\t\t\t// translators: %s: The imported pattern's title.\r\n\t\t\t\t\t\t\t\t__( 'Imported \"%s\" from JSON.' ),\r\n\t\t\t\t\t\t\t\tpattern.title.raw\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttype: 'snackbar',\r\n\t\t\t\t\t\t\t\tid: 'import-pattern-success',\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} catch ( err ) {\r\n\t\t\t\t\t\tcreateErrorNotice( err.message, {\r\n\t\t\t\t\t\t\ttype: 'snackbar',\r\n\t\t\t\t\t\t\tid: 'import-pattern-error',\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tevent.target.value = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t} }\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]}