{"version":3,"names":["useEffect","useSelect","useDispatch","privateApis","blockEditorPrivateApis","store","editSiteStore","unlock","TEMPLATE_POST_TYPE","useGlobalStylesOutput","useGlobalStylesRenderer","postType","select","getEditedPostType","styles","settings","getSettings","updateSettings","_currentStoreSettings","currentStoreSettings","nonGlobalStyles","Object","values","filter","style","isGlobalStyles","__experimentalFeatures","GlobalStylesRenderer"],"sources":["@wordpress/edit-site/src/components/global-styles-renderer/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useEffect } from '@wordpress/element';\r\nimport { useSelect, useDispatch } from '@wordpress/data';\r\nimport { privateApis as blockEditorPrivateApis } from '@wordpress/block-editor';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as editSiteStore } from '../../store';\r\nimport { unlock } from '../../lock-unlock';\r\nimport { TEMPLATE_POST_TYPE } from '../../utils/constants';\r\n\r\nconst { useGlobalStylesOutput } = unlock( blockEditorPrivateApis );\r\n\r\nfunction useGlobalStylesRenderer() {\r\n\tconst postType = useSelect( ( select ) => {\r\n\t\treturn select( editSiteStore ).getEditedPostType();\r\n\t} );\r\n\tconst [ styles, settings ] = useGlobalStylesOutput(\r\n\t\tpostType !== TEMPLATE_POST_TYPE\r\n\t);\r\n\tconst { getSettings } = useSelect( editSiteStore );\r\n\tconst { updateSettings } = useDispatch( editSiteStore );\r\n\r\n\tuseEffect( () => {\r\n\t\tif ( ! styles || ! settings ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst currentStoreSettings = getSettings();\r\n\t\tconst nonGlobalStyles = Object.values(\r\n\t\t\tcurrentStoreSettings.styles ?? []\r\n\t\t).filter( ( style ) => ! style.isGlobalStyles );\r\n\t\tupdateSettings( {\r\n\t\t\t...currentStoreSettings,\r\n\t\t\tstyles: [ ...nonGlobalStyles, ...styles ],\r\n\t\t\t__experimentalFeatures: settings,\r\n\t\t} );\r\n\t}, [ styles, settings, updateSettings, getSettings ] );\r\n}\r\n\r\nexport function GlobalStylesRenderer() {\r\n\tuseGlobalStylesRenderer();\r\n\r\n\treturn null;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,SAAS,EAAEC,WAAW,QAAQ,iBAAiB;AACxD,SAASC,WAAW,IAAIC,sBAAsB,QAAQ,yBAAyB;;AAE/E;AACA;AACA;AACA,SAASC,KAAK,IAAIC,aAAa,QAAQ,aAAa;AACpD,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,kBAAkB,QAAQ,uBAAuB;AAE1D,MAAM;EAAEC;AAAsB,CAAC,GAAGF,MAAM,CAAEH,sBAAuB,CAAC;AAElE,SAASM,uBAAuBA,CAAA,EAAG;EAClC,MAAMC,QAAQ,GAAGV,SAAS,CAAIW,MAAM,IAAM;IACzC,OAAOA,MAAM,CAAEN,aAAc,CAAC,CAACO,iBAAiB,CAAC,CAAC;EACnD,CAAE,CAAC;EACH,MAAM,CAAEC,MAAM,EAAEC,QAAQ,CAAE,GAAGN,qBAAqB,CACjDE,QAAQ,KAAKH,kBACd,CAAC;EACD,MAAM;IAAEQ;EAAY,CAAC,GAAGf,SAAS,CAAEK,aAAc,CAAC;EAClD,MAAM;IAAEW;EAAe,CAAC,GAAGf,WAAW,CAAEI,aAAc,CAAC;EAEvDN,SAAS,CAAE,MAAM;IAAA,IAAAkB,qBAAA;IAChB,IAAK,CAAEJ,MAAM,IAAI,CAAEC,QAAQ,EAAG;MAC7B;IACD;IAEA,MAAMI,oBAAoB,GAAGH,WAAW,CAAC,CAAC;IAC1C,MAAMI,eAAe,GAAGC,MAAM,CAACC,MAAM,EAAAJ,qBAAA,GACpCC,oBAAoB,CAACL,MAAM,cAAAI,qBAAA,cAAAA,qBAAA,GAAI,EAChC,CAAC,CAACK,MAAM,CAAIC,KAAK,IAAM,CAAEA,KAAK,CAACC,cAAe,CAAC;IAC/CR,cAAc,CAAE;MACf,GAAGE,oBAAoB;MACvBL,MAAM,EAAE,CAAE,GAAGM,eAAe,EAAE,GAAGN,MAAM,CAAE;MACzCY,sBAAsB,EAAEX;IACzB,CAAE,CAAC;EACJ,CAAC,EAAE,CAAED,MAAM,EAAEC,QAAQ,EAAEE,cAAc,EAAED,WAAW,CAAG,CAAC;AACvD;AAEA,OAAO,SAASW,oBAAoBA,CAAA,EAAG;EACtCjB,uBAAuB,CAAC,CAAC;EAEzB,OAAO,IAAI;AACZ","ignoreList":[]}