{"version":3,"names":["__","__experimentalSpacer","Spacer","__experimentalText","Text","__experimentalVStack","VStack","Button","DropZone","Notice","FormFileUpload","FlexItem","ProgressBar","useContext","useState","ALLOWED_FILE_EXTENSIONS","FontLibraryContext","Font","makeFamiliesFromFaces","loadFontFaceInBrowser","jsx","_jsx","jsxs","_jsxs","UploadFonts","installFonts","isUploading","setIsUploading","notice","setNotice","handleDropZone","files","handleFilesUpload","onFilesUpload","event","target","uniqueFilenames","Set","selectedFiles","hasInvalidFiles","checkFilesPromises","map","file","isFont","isFontFile","has","name","fileExtension","split","pop","toLowerCase","includes","add","allowedFiles","Promise","all","filter","length","loadFiles","message","type","fontFacesLoaded","fontFile","fontFaceData","getFontFaceMetadata","handleInstall","font","buffer","readFileAsArrayBuffer","fromDataBuffer","error","resolve","reject","reader","window","FileReader","readAsArrayBuffer","onload","result","onerror","fontObj","onloadEvent","detail","opentype","tables","fontName","get","isItalic","fontWeight","usWeightClass","isVariable","fvar","weightAxis","axes","find","tag","weightRange","minValue","maxValue","fontFamily","fontStyle","fontFaces","fontFamilies","errors","installationErrors","className","children","onFilesDrop","status","__unstableHTML","onRemove","index","accept","ext","join","multiple","onChange","render","openFileDialog","__next40pxDefaultSize","onClick","margin"],"sources":["@wordpress/edit-site/src/components/global-styles/font-library-modal/upload-fonts.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\nimport {\r\n\t__experimentalSpacer as Spacer,\r\n\t__experimentalText as Text,\r\n\t__experimentalVStack as VStack,\r\n\tButton,\r\n\tDropZone,\r\n\tNotice,\r\n\tFormFileUpload,\r\n\tFlexItem,\r\n\tProgressBar,\r\n} from '@wordpress/components';\r\nimport { useContext, useState } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { ALLOWED_FILE_EXTENSIONS } from './utils/constants';\r\nimport { FontLibraryContext } from './context';\r\nimport { Font } from '../../../../lib/lib-font.browser';\r\nimport makeFamiliesFromFaces from './utils/make-families-from-faces';\r\nimport { loadFontFaceInBrowser } from './utils';\r\n\r\nfunction UploadFonts() {\r\n\tconst { installFonts } = useContext( FontLibraryContext );\r\n\tconst [ isUploading, setIsUploading ] = useState( false );\r\n\tconst [ notice, setNotice ] = useState( false );\r\n\r\n\tconst handleDropZone = ( files ) => {\r\n\t\thandleFilesUpload( files );\r\n\t};\r\n\tconst onFilesUpload = ( event ) => {\r\n\t\thandleFilesUpload( event.target.files );\r\n\t};\r\n\r\n\t/**\r\n\t * Filters the selected files to only allow the ones with the allowed extensions\r\n\t *\r\n\t * @param {Array} files The files to be filtered\r\n\t * @return {void}\r\n\t */\r\n\tconst handleFilesUpload = async ( files ) => {\r\n\t\tsetNotice( null );\r\n\t\tsetIsUploading( true );\r\n\t\tconst uniqueFilenames = new Set();\r\n\t\tconst selectedFiles = [ ...files ];\r\n\t\tlet hasInvalidFiles = false;\r\n\r\n\t\t// Use map to create a promise for each file check, then filter with Promise.all.\r\n\t\tconst checkFilesPromises = selectedFiles.map( async ( file ) => {\r\n\t\t\tconst isFont = await isFontFile( file );\r\n\t\t\tif ( ! isFont ) {\r\n\t\t\t\thasInvalidFiles = true;\r\n\t\t\t\treturn null; // Return null for invalid files.\r\n\t\t\t}\r\n\t\t\t// Check for duplicates\r\n\t\t\tif ( uniqueFilenames.has( file.name ) ) {\r\n\t\t\t\treturn null; // Return null for duplicates.\r\n\t\t\t}\r\n\t\t\t// Check if the file extension is allowed.\r\n\t\t\tconst fileExtension = file.name.split( '.' ).pop().toLowerCase();\r\n\t\t\tif ( ALLOWED_FILE_EXTENSIONS.includes( fileExtension ) ) {\r\n\t\t\t\tuniqueFilenames.add( file.name );\r\n\t\t\t\treturn file; // Return the file if it passes all checks.\r\n\t\t\t}\r\n\t\t\treturn null; // Return null for disallowed file extensions.\r\n\t\t} );\r\n\r\n\t\t// Filter out the nulls after all promises have resolved.\r\n\t\tconst allowedFiles = ( await Promise.all( checkFilesPromises ) ).filter(\r\n\t\t\t( file ) => null !== file\r\n\t\t);\r\n\r\n\t\tif ( allowedFiles.length > 0 ) {\r\n\t\t\tloadFiles( allowedFiles );\r\n\t\t} else {\r\n\t\t\tconst message = hasInvalidFiles\r\n\t\t\t\t? __( '对不起，您不允许上传此文件类型。' )\r\n\t\t\t\t: __( '没有找到要安装的字体。' );\r\n\r\n\t\t\tsetNotice( {\r\n\t\t\t\ttype: 'error',\r\n\t\t\t\tmessage,\r\n\t\t\t} );\r\n\t\t\tsetIsUploading( false );\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Loads the selected files and reads the font metadata\r\n\t *\r\n\t * @param {Array} files The files to be loaded\r\n\t * @return {void}\r\n\t */\r\n\tconst loadFiles = async ( files ) => {\r\n\t\tconst fontFacesLoaded = await Promise.all(\r\n\t\t\tfiles.map( async ( fontFile ) => {\r\n\t\t\t\tconst fontFaceData = await getFontFaceMetadata( fontFile );\r\n\t\t\t\tawait loadFontFaceInBrowser(\r\n\t\t\t\t\tfontFaceData,\r\n\t\t\t\t\tfontFaceData.file,\r\n\t\t\t\t\t'all'\r\n\t\t\t\t);\r\n\t\t\t\treturn fontFaceData;\r\n\t\t\t} )\r\n\t\t);\r\n\t\thandleInstall( fontFacesLoaded );\r\n\t};\r\n\r\n\t/**\r\n\t * Checks if a file is a valid Font file.\r\n\t *\r\n\t * @param {File} file The file to be checked.\r\n\t * @return {boolean} Whether the file is a valid font file.\r\n\t */\r\n\tasync function isFontFile( file ) {\r\n\t\tconst font = new Font( 'Uploaded Font' );\r\n\t\ttry {\r\n\t\t\tconst buffer = await readFileAsArrayBuffer( file );\r\n\t\t\tawait font.fromDataBuffer( buffer, 'font' );\r\n\t\t\treturn true;\r\n\t\t} catch ( error ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t// Create a function to read the file as array buffer\r\n\tasync function readFileAsArrayBuffer( file ) {\r\n\t\treturn new Promise( ( resolve, reject ) => {\r\n\t\t\tconst reader = new window.FileReader();\r\n\t\t\treader.readAsArrayBuffer( file );\r\n\t\t\treader.onload = () => resolve( reader.result );\r\n\t\t\treader.onerror = reject;\r\n\t\t} );\r\n\t}\r\n\r\n\tconst getFontFaceMetadata = async ( fontFile ) => {\r\n\t\tconst buffer = await readFileAsArrayBuffer( fontFile );\r\n\t\tconst fontObj = new Font( 'Uploaded Font' );\r\n\t\tfontObj.fromDataBuffer( buffer, fontFile.name );\r\n\t\t// Assuming that fromDataBuffer triggers onload event and returning a Promise\r\n\t\tconst onloadEvent = await new Promise(\r\n\t\t\t( resolve ) => ( fontObj.onload = resolve )\r\n\t\t);\r\n\t\tconst font = onloadEvent.detail.font;\r\n\t\tconst { name } = font.opentype.tables;\r\n\t\tconst fontName = name.get( 16 ) || name.get( 1 );\r\n\t\tconst isItalic = name.get( 2 ).toLowerCase().includes( 'italic' );\r\n\t\tconst fontWeight =\r\n\t\t\tfont.opentype.tables[ 'OS/2' ].usWeightClass || 'normal';\r\n\t\tconst isVariable = !! font.opentype.tables.fvar;\r\n\t\tconst weightAxis =\r\n\t\t\tisVariable &&\r\n\t\t\tfont.opentype.tables.fvar.axes.find(\r\n\t\t\t\t( { tag } ) => tag === 'wght'\r\n\t\t\t);\r\n\t\tconst weightRange = weightAxis\r\n\t\t\t? `${ weightAxis.minValue } ${ weightAxis.maxValue }`\r\n\t\t\t: null;\r\n\t\treturn {\r\n\t\t\tfile: fontFile,\r\n\t\t\tfontFamily: fontName,\r\n\t\t\tfontStyle: isItalic ? 'italic' : 'normal',\r\n\t\t\tfontWeight: weightRange || fontWeight,\r\n\t\t};\r\n\t};\r\n\r\n\t/**\r\n\t * Creates the font family definition and sends it to the server\r\n\t *\r\n\t * @param {Array} fontFaces The font faces to be installed\r\n\t * @return {void}\r\n\t */\r\n\tconst handleInstall = async ( fontFaces ) => {\r\n\t\tconst fontFamilies = makeFamiliesFromFaces( fontFaces );\r\n\r\n\t\ttry {\r\n\t\t\tawait installFonts( fontFamilies );\r\n\t\t\tsetNotice( {\r\n\t\t\t\ttype: 'success',\r\n\t\t\t\tmessage: __( '字体安装成功。' ),\r\n\t\t\t} );\r\n\t\t} catch ( error ) {\r\n\t\t\tsetNotice( {\r\n\t\t\t\ttype: 'error',\r\n\t\t\t\tmessage: error.message,\r\n\t\t\t\terrors: error?.installationErrors,\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tsetIsUploading( false );\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"font-library-modal__tabpanel-layout\">\r\n\t\t\t<DropZone onFilesDrop={ handleDropZone } />\r\n\t\t\t<VStack className=\"font-library-modal__local-fonts\">\r\n\t\t\t\t{ notice && (\r\n\t\t\t\t\t<Notice\r\n\t\t\t\t\t\tstatus={ notice.type }\r\n\t\t\t\t\t\t__unstableHTML\r\n\t\t\t\t\t\tonRemove={ () => setNotice( null ) }\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{ notice.message }\r\n\t\t\t\t\t\t{ notice.errors && (\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t{ notice.errors.map( ( error, index ) => (\r\n\t\t\t\t\t\t\t\t\t<li key={ index }>{ error }</li>\r\n\t\t\t\t\t\t\t\t) ) }\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t) }\r\n\t\t\t\t\t</Notice>\r\n\t\t\t\t) }\r\n\t\t\t\t{ isUploading && (\r\n\t\t\t\t\t<FlexItem>\r\n\t\t\t\t\t\t<div className=\"font-library-modal__upload-area\">\r\n\t\t\t\t\t\t\t<ProgressBar />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</FlexItem>\r\n\t\t\t\t) }\r\n\t\t\t\t{ ! isUploading && (\r\n\t\t\t\t\t<FormFileUpload\r\n\t\t\t\t\t\taccept={ ALLOWED_FILE_EXTENSIONS.map(\r\n\t\t\t\t\t\t\t( ext ) => `.${ ext }`\r\n\t\t\t\t\t\t).join( ',' ) }\r\n\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\tonChange={ onFilesUpload }\r\n\t\t\t\t\t\trender={ ( { openFileDialog } ) => (\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t// TODO: Switch to `true` (40px size) if possible\r\n\t\t\t\t\t\t\t\t__next40pxDefaultSize={ false }\r\n\t\t\t\t\t\t\t\tclassName=\"font-library-modal__upload-area\"\r\n\t\t\t\t\t\t\t\tonClick={ openFileDialog }\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{ __( '上传字体' ) }\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t) }\r\n\t\t\t\t\t/>\r\n\t\t\t\t) }\r\n\t\t\t\t<Spacer margin={ 2 } />\r\n\t\t\t\t<Text className=\"font-library-modal__upload-area__text\">\r\n\t\t\t\t\t{ __(\r\n\t\t\t\t\t\t'上传的字体出现在库中，可以在主题中使用。支持的格式:.ttf、。otf、。woff、。woff2。'\r\n\t\t\t\t\t) }\r\n\t\t\t\t</Text>\r\n\t\t\t</VStack>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default UploadFonts;\r\n"],"mappings":"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","ignoreList":[]}