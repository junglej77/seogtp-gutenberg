{"version":3,"names":["privateApis","componentsPrivateApis","FONT_WEIGHTS","FONT_STYLES","unlock","fetchInstallFontFace","formatFontFaceName","File","window","kebabCase","setUIValuesNeeded","font","extraValues","name","fontFamily","slug","isUrlEncoded","url","decodeURIComponent","getFontFaceVariantName","face","weightName","fontWeight","styleName","fontStyle","mergeFontFaces","existing","incoming","map","Map","set","Array","from","values","mergeFontFamilies","has","fontFace","incomingFontFaces","restIncoming","existingFont","get","mergedFontFaces","loadFontFaceInBrowser","source","addTo","dataSource","arrayBuffer","newFont","FontFace","style","weight","loadedFace","load","document","fonts","add","iframeDocument","querySelector","contentDocument","unloadFontFaceInBrowser","removeFrom","unloadFontFace","forEach","f","family","delete","getDisplaySrcFromFontFace","input","src","isArray","startsWith","encodeURI","makeFontFamilyFormData","formData","FormData","category","familyWithValidParameters","fontFamilySettings","append","JSON","stringify","makeFontFacesFormData","fontFacesFormData","item","faceIndex","file","files","key","fileId","push","length","batchInstallFontFaces","fontFamilyId","fontFacesData","responses","faceData","response","status","value","error","reason","results","errors","successes","result","index","id","data","message","downloadFontFaceAssets","Promise","all","fetch","Request","then","ok","Error","blob","filename","split","pop","type","checkFontFaceInstalled","collection","findIndex","collectionFontFace"],"sources":["@wordpress/edit-site/src/components/global-styles/font-library-modal/utils/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { privateApis as componentsPrivateApis } from '@wordpress/components';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { FONT_WEIGHTS, FONT_STYLES } from './constants';\r\nimport { unlock } from '../../../../lock-unlock';\r\nimport { fetchInstallFontFace } from '../resolvers';\r\nimport { formatFontFaceName } from './preview-styles';\r\n\r\n/**\r\n * Browser dependencies\r\n */\r\nconst { File } = window;\r\nconst { kebabCase } = unlock( componentsPrivateApis );\r\n\r\nexport function setUIValuesNeeded( font, extraValues = {} ) {\r\n\tif ( ! font.name && ( font.fontFamily || font.slug ) ) {\r\n\t\tfont.name = font.fontFamily || font.slug;\r\n\t}\r\n\treturn {\r\n\t\t...font,\r\n\t\t...extraValues,\r\n\t};\r\n}\r\n\r\nexport function isUrlEncoded( url ) {\r\n\tif ( typeof url !== 'string' ) {\r\n\t\treturn false;\r\n\t}\r\n\treturn url !== decodeURIComponent( url );\r\n}\r\n\r\nexport function getFontFaceVariantName( face ) {\r\n\tconst weightName = FONT_WEIGHTS[ face.fontWeight ] || face.fontWeight;\r\n\tconst styleName =\r\n\t\tface.fontStyle === 'normal'\r\n\t\t\t? ''\r\n\t\t\t: FONT_STYLES[ face.fontStyle ] || face.fontStyle;\r\n\treturn `${ weightName } ${ styleName }`;\r\n}\r\n\r\nexport function mergeFontFaces( existing = [], incoming = [] ) {\r\n\tconst map = new Map();\r\n\tfor ( const face of existing ) {\r\n\t\tmap.set( `${ face.fontWeight }${ face.fontStyle }`, face );\r\n\t}\r\n\tfor ( const face of incoming ) {\r\n\t\t// This will overwrite if the src already exists, keeping it unique.\r\n\t\tmap.set( `${ face.fontWeight }${ face.fontStyle }`, face );\r\n\t}\r\n\treturn Array.from( map.values() );\r\n}\r\n\r\nexport function mergeFontFamilies( existing = [], incoming = [] ) {\r\n\tconst map = new Map();\r\n\t// Add the existing array to the map.\r\n\tfor ( const font of existing ) {\r\n\t\tmap.set( font.slug, { ...font } );\r\n\t}\r\n\t// Add the incoming array to the map, overwriting existing values excepting fontFace that need to be merged.\r\n\tfor ( const font of incoming ) {\r\n\t\tif ( map.has( font.slug ) ) {\r\n\t\t\tconst { fontFace: incomingFontFaces, ...restIncoming } = font;\r\n\t\t\tconst existingFont = map.get( font.slug );\r\n\t\t\t// Merge the fontFaces existing with the incoming fontFaces.\r\n\t\t\tconst mergedFontFaces = mergeFontFaces(\r\n\t\t\t\texistingFont.fontFace,\r\n\t\t\t\tincomingFontFaces\r\n\t\t\t);\r\n\t\t\t// Except for the fontFace key all the other keys are overwritten with the incoming values.\r\n\t\t\tmap.set( font.slug, {\r\n\t\t\t\t...restIncoming,\r\n\t\t\t\tfontFace: mergedFontFaces,\r\n\t\t\t} );\r\n\t\t} else {\r\n\t\t\tmap.set( font.slug, { ...font } );\r\n\t\t}\r\n\t}\r\n\treturn Array.from( map.values() );\r\n}\r\n\r\n/*\r\n * Loads the font face from a URL and adds it to the browser.\r\n * It also adds it to the iframe document.\r\n */\r\nexport async function loadFontFaceInBrowser( fontFace, source, addTo = 'all' ) {\r\n\tlet dataSource;\r\n\r\n\tif ( typeof source === 'string' ) {\r\n\t\tdataSource = `url(${ source })`;\r\n\t\t// eslint-disable-next-line no-undef\r\n\t} else if ( source instanceof File ) {\r\n\t\tdataSource = await source.arrayBuffer();\r\n\t} else {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst newFont = new window.FontFace(\r\n\t\tformatFontFaceName( fontFace.fontFamily ),\r\n\t\tdataSource,\r\n\t\t{\r\n\t\t\tstyle: fontFace.fontStyle,\r\n\t\t\tweight: fontFace.fontWeight,\r\n\t\t}\r\n\t);\r\n\r\n\tconst loadedFace = await newFont.load();\r\n\r\n\tif ( addTo === 'document' || addTo === 'all' ) {\r\n\t\tdocument.fonts.add( loadedFace );\r\n\t}\r\n\r\n\tif ( addTo === 'iframe' || addTo === 'all' ) {\r\n\t\tconst iframeDocument = document.querySelector(\r\n\t\t\t'iframe[name=\"editor-canvas\"]'\r\n\t\t).contentDocument;\r\n\t\tiframeDocument.fonts.add( loadedFace );\r\n\t}\r\n}\r\n\r\n/*\r\n * Unloads the font face and remove it from the browser.\r\n * It also removes it from the iframe document.\r\n *\r\n * Note that Font faces that were added to the set using the CSS @font-face rule\r\n * remain connected to the corresponding CSS, and cannot be deleted.\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet/delete.\r\n */\r\nexport function unloadFontFaceInBrowser( fontFace, removeFrom = 'all' ) {\r\n\tconst unloadFontFace = ( fonts ) => {\r\n\t\tfonts.forEach( ( f ) => {\r\n\t\t\tif (\r\n\t\t\t\tf.family === formatFontFaceName( fontFace?.fontFamily ) &&\r\n\t\t\t\tf.weight === fontFace?.fontWeight &&\r\n\t\t\t\tf.style === fontFace?.fontStyle\r\n\t\t\t) {\r\n\t\t\t\tfonts.delete( f );\r\n\t\t\t}\r\n\t\t} );\r\n\t};\r\n\r\n\tif ( removeFrom === 'document' || removeFrom === 'all' ) {\r\n\t\tunloadFontFace( document.fonts );\r\n\t}\r\n\r\n\tif ( removeFrom === 'iframe' || removeFrom === 'all' ) {\r\n\t\tconst iframeDocument = document.querySelector(\r\n\t\t\t'iframe[name=\"editor-canvas\"]'\r\n\t\t).contentDocument;\r\n\t\tunloadFontFace( iframeDocument.fonts );\r\n\t}\r\n}\r\n\r\n/**\r\n * Retrieves the display source from a font face src.\r\n *\r\n * @param {string|string[]} input - The font face src.\r\n * @return {string|undefined} The display source or undefined if the input is invalid.\r\n */\r\nexport function getDisplaySrcFromFontFace( input ) {\r\n\tif ( ! input ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet src;\r\n\tif ( Array.isArray( input ) ) {\r\n\t\tsrc = input[ 0 ];\r\n\t} else {\r\n\t\tsrc = input;\r\n\t}\r\n\t// It's expected theme fonts will already be loaded in the browser.\r\n\tif ( src.startsWith( 'file:.' ) ) {\r\n\t\treturn;\r\n\t}\r\n\tif ( ! isUrlEncoded( src ) ) {\r\n\t\tsrc = encodeURI( src );\r\n\t}\r\n\treturn src;\r\n}\r\n\r\nexport function makeFontFamilyFormData( fontFamily ) {\r\n\tconst formData = new FormData();\r\n\r\n\tconst { fontFace, category, ...familyWithValidParameters } = fontFamily;\r\n\tconst fontFamilySettings = {\r\n\t\t...familyWithValidParameters,\r\n\t\tslug: kebabCase( fontFamily.slug ),\r\n\t};\r\n\r\n\tformData.append(\r\n\t\t'font_family_settings',\r\n\t\tJSON.stringify( fontFamilySettings )\r\n\t);\r\n\treturn formData;\r\n}\r\n\r\nexport function makeFontFacesFormData( font ) {\r\n\tif ( font?.fontFace ) {\r\n\t\tconst fontFacesFormData = font.fontFace.map( ( item, faceIndex ) => {\r\n\t\t\tconst face = { ...item };\r\n\t\t\tconst formData = new FormData();\r\n\t\t\tif ( face.file ) {\r\n\t\t\t\t// Normalize to an array, since face.file may be a single file or an array of files.\r\n\t\t\t\tconst files = Array.isArray( face.file )\r\n\t\t\t\t\t? face.file\r\n\t\t\t\t\t: [ face.file ];\r\n\t\t\t\tconst src = [];\r\n\r\n\t\t\t\tfiles.forEach( ( file, key ) => {\r\n\t\t\t\t\t// Slugified file name because the it might contain spaces or characters treated differently on the server.\r\n\t\t\t\t\tconst fileId = `file-${ faceIndex }-${ key }`;\r\n\t\t\t\t\t// Add the files to the formData\r\n\t\t\t\t\tformData.append( fileId, file, file.name );\r\n\t\t\t\t\tsrc.push( fileId );\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tface.src = src.length === 1 ? src[ 0 ] : src;\r\n\t\t\t\tdelete face.file;\r\n\r\n\t\t\t\tformData.append( 'font_face_settings', JSON.stringify( face ) );\r\n\t\t\t} else {\r\n\t\t\t\tformData.append( 'font_face_settings', JSON.stringify( face ) );\r\n\t\t\t}\r\n\t\t\treturn formData;\r\n\t\t} );\r\n\r\n\t\treturn fontFacesFormData;\r\n\t}\r\n}\r\n\r\nexport async function batchInstallFontFaces( fontFamilyId, fontFacesData ) {\r\n\tconst responses = [];\r\n\r\n\t/*\r\n\t * Uses the same response format as Promise.allSettled, but executes requests in sequence to work\r\n\t * around a race condition that can cause an error when the fonts directory doesn't exist yet.\r\n\t */\r\n\tfor ( const faceData of fontFacesData ) {\r\n\t\ttry {\r\n\t\t\tconst response = await fetchInstallFontFace(\r\n\t\t\t\tfontFamilyId,\r\n\t\t\t\tfaceData\r\n\t\t\t);\r\n\t\t\tresponses.push( { status: 'fulfilled', value: response } );\r\n\t\t} catch ( error ) {\r\n\t\t\tresponses.push( { status: 'rejected', reason: error } );\r\n\t\t}\r\n\t}\r\n\r\n\tconst results = {\r\n\t\terrors: [],\r\n\t\tsuccesses: [],\r\n\t};\r\n\r\n\tresponses.forEach( ( result, index ) => {\r\n\t\tif ( result.status === 'fulfilled' ) {\r\n\t\t\tconst response = result.value;\r\n\t\t\tif ( response.id ) {\r\n\t\t\t\tresults.successes.push( response );\r\n\t\t\t} else {\r\n\t\t\t\tresults.errors.push( {\r\n\t\t\t\t\tdata: fontFacesData[ index ],\r\n\t\t\t\t\tmessage: `Error: ${ response.message }`,\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Handle network errors or other fetch-related errors\r\n\t\t\tresults.errors.push( {\r\n\t\t\t\tdata: fontFacesData[ index ],\r\n\t\t\t\tmessage: result.reason.message,\r\n\t\t\t} );\r\n\t\t}\r\n\t} );\r\n\r\n\treturn results;\r\n}\r\n\r\n/*\r\n * Downloads a font face asset from a URL to the client and returns a File object.\r\n */\r\nexport async function downloadFontFaceAssets( src ) {\r\n\t// Normalize to an array, since `src` could be a string or array.\r\n\tsrc = Array.isArray( src ) ? src : [ src ];\r\n\r\n\tconst files = await Promise.all(\r\n\t\tsrc.map( async ( url ) => {\r\n\t\t\treturn fetch( new Request( url ) )\r\n\t\t\t\t.then( ( response ) => {\r\n\t\t\t\t\tif ( ! response.ok ) {\r\n\t\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t\t`Error downloading font face asset from ${ url }. Server responded with status: ${ response.status }`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn response.blob();\r\n\t\t\t\t} )\r\n\t\t\t\t.then( ( blob ) => {\r\n\t\t\t\t\tconst filename = url.split( '/' ).pop();\r\n\t\t\t\t\tconst file = new File( [ blob ], filename, {\r\n\t\t\t\t\t\ttype: blob.type,\r\n\t\t\t\t\t} );\r\n\t\t\t\t\treturn file;\r\n\t\t\t\t} );\r\n\t\t} )\r\n\t);\r\n\r\n\t// If we only have one file return it (not the array).  Otherwise return all of them in the array.\r\n\treturn files.length === 1 ? files[ 0 ] : files;\r\n}\r\n\r\n/*\r\n * Determine if a given Font Face is present in a given collection.\r\n * We determine that a font face has been installed by comparing the fontWeight and fontStyle\r\n *\r\n * @param {Object} fontFace The Font Face to seek\r\n * @param {Array} collection The Collection to seek in\r\n * @returns True if the font face is found in the collection.  Otherwise False.\r\n */\r\nexport function checkFontFaceInstalled( fontFace, collection ) {\r\n\treturn (\r\n\t\t-1 !==\r\n\t\tcollection.findIndex( ( collectionFontFace ) => {\r\n\t\t\treturn (\r\n\t\t\t\tcollectionFontFace.fontWeight === fontFace.fontWeight &&\r\n\t\t\t\tcollectionFontFace.fontStyle === fontFace.fontStyle\r\n\t\t\t);\r\n\t\t} )\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]}