{"version":3,"names":["getVariationClassName","variation","getNewIndexFromPresets","presets","slugPrefix","nameRegex","RegExp","highestPresetValue","reduce","currentHighest","preset","slug","matches","match","id","parseInt","getFontFamilyFromSetting","fontFamilies","setting","Array","isArray","fontFamilyVariable","replace","fontFamilySlug","split","slice","find","fontFamily","getFontFamilies","themeJson","themeFontFamilies","settings","typography","theme","customFontFamilies","custom","bodyFontFamilySetting","styles","bodyFontFamily","headingFontFamilySetting","elements","heading","headingFontFamily"],"sources":["@wordpress/edit-site/src/components/global-styles/utils.js"],"sourcesContent":["/**\r\n *\r\n * @param {string} variation The variation name.\r\n *\r\n * @return {string} The variation class name.\r\n */\r\nexport function getVariationClassName( variation ) {\r\n\tif ( ! variation ) {\r\n\t\treturn '';\r\n\t}\r\n\treturn `is-style-${ variation }`;\r\n}\r\n\r\n/**\r\n * Iterates through the presets array and searches for slugs that start with the specified\r\n * slugPrefix followed by a numerical suffix. It identifies the highest numerical suffix found\r\n * and returns one greater than the highest found suffix, ensuring that the new index is unique.\r\n *\r\n * @param {Array}  presets    The array of preset objects, each potentially containing a slug property.\r\n * @param {string} slugPrefix The prefix to look for in the preset slugs.\r\n *\r\n * @return {number} The next available index for a preset with the specified slug prefix, or 1 if no matching slugs are found.\r\n */\r\nexport function getNewIndexFromPresets( presets, slugPrefix ) {\r\n\tconst nameRegex = new RegExp( `^${ slugPrefix }([\\\\d]+)$` );\r\n\tconst highestPresetValue = presets.reduce( ( currentHighest, preset ) => {\r\n\t\tif ( typeof preset?.slug === 'string' ) {\r\n\t\t\tconst matches = preset?.slug.match( nameRegex );\r\n\t\t\tif ( matches ) {\r\n\t\t\t\tconst id = parseInt( matches[ 1 ], 10 );\r\n\t\t\t\tif ( id > currentHighest ) {\r\n\t\t\t\t\treturn id;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn currentHighest;\r\n\t}, 0 );\r\n\treturn highestPresetValue + 1;\r\n}\r\n\r\nfunction getFontFamilyFromSetting( fontFamilies, setting ) {\r\n\tif ( ! Array.isArray( fontFamilies ) || ! setting ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst fontFamilyVariable = setting.replace( 'var(', '' ).replace( ')', '' );\r\n\tconst fontFamilySlug = fontFamilyVariable?.split( '--' ).slice( -1 )[ 0 ];\r\n\r\n\treturn fontFamilies.find(\r\n\t\t( fontFamily ) => fontFamily.slug === fontFamilySlug\r\n\t);\r\n}\r\n\r\nexport function getFontFamilies( themeJson ) {\r\n\tconst themeFontFamilies =\r\n\t\tthemeJson?.settings?.typography?.fontFamilies?.theme;\r\n\tconst customFontFamilies =\r\n\t\tthemeJson?.settings?.typography?.fontFamilies?.custom;\r\n\r\n\tlet fontFamilies = [];\r\n\tif ( themeFontFamilies && customFontFamilies ) {\r\n\t\tfontFamilies = [ ...themeFontFamilies, ...customFontFamilies ];\r\n\t} else if ( themeFontFamilies ) {\r\n\t\tfontFamilies = themeFontFamilies;\r\n\t} else if ( customFontFamilies ) {\r\n\t\tfontFamilies = customFontFamilies;\r\n\t}\r\n\tconst bodyFontFamilySetting = themeJson?.styles?.typography?.fontFamily;\r\n\tconst bodyFontFamily = getFontFamilyFromSetting(\r\n\t\tfontFamilies,\r\n\t\tbodyFontFamilySetting\r\n\t);\r\n\r\n\tconst headingFontFamilySetting =\r\n\t\tthemeJson?.styles?.elements?.heading?.typography?.fontFamily;\r\n\r\n\tlet headingFontFamily;\r\n\tif ( ! headingFontFamilySetting ) {\r\n\t\theadingFontFamily = bodyFontFamily;\r\n\t} else {\r\n\t\theadingFontFamily = getFontFamilyFromSetting(\r\n\t\t\tfontFamilies,\r\n\t\t\tthemeJson?.styles?.elements?.heading?.typography?.fontFamily\r\n\t\t);\r\n\t}\r\n\r\n\treturn [ bodyFontFamily, headingFontFamily ];\r\n}\r\n"],"mappings":"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","ignoreList":[]}