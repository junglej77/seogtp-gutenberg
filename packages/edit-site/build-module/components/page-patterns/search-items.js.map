{"version":3,"names":["privateApis","blockEditorPrivateApis","unlock","extractWords","getNormalizedSearchTerms","normalizeString","TEMPLATE_PART_ALL_AREAS_CATEGORY","PATTERN_DEFAULT_CATEGORY","PATTERN_USER_CATEGORY","PATTERN_TYPES","TEMPLATE_PART_POST_TYPE","defaultGetName","item","type","user","slug","name","defaultGetTitle","title","rendered","raw","defaultGetDescription","excerpt","description","defaultGetKeywords","keywords","defaultHasCategory","removeMatchingTerms","unmatchedTerms","unprocessedTerms","filter","term","some","unprocessedTerm","includes","searchItems","items","searchInput","config","normalizedSearchTerms","onlyFilterByCategory","categoryId","length","searchRankConfig","threshold","rankedItems","map","getItemSearchRank","rank","sort","rank1","rank2","searchTerm","getName","getTitle","getDescription","getKeywords","hasCategory","normalizedSearchInput","normalizedTitle","startsWith","terms","join"],"sources":["@wordpress/edit-site/src/components/page-patterns/search-items.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { privateApis as blockEditorPrivateApis } from '@wordpress/block-editor';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { unlock } from '../../lock-unlock';\r\n\r\nconst { extractWords, getNormalizedSearchTerms, normalizeString } = unlock(\r\n\tblockEditorPrivateApis\r\n);\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport {\r\n\tTEMPLATE_PART_ALL_AREAS_CATEGORY,\r\n\tPATTERN_DEFAULT_CATEGORY,\r\n\tPATTERN_USER_CATEGORY,\r\n\tPATTERN_TYPES,\r\n\tTEMPLATE_PART_POST_TYPE,\r\n} from '../../utils/constants';\r\n\r\n// Default search helpers.\r\nconst defaultGetName = ( item ) => {\r\n\tif ( item.type === PATTERN_TYPES.user ) {\r\n\t\treturn item.slug;\r\n\t}\r\n\r\n\tif ( item.type === TEMPLATE_PART_POST_TYPE ) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\treturn item.name || '';\r\n};\r\n\r\nexport const defaultGetTitle = ( item ) => {\r\n\tif ( typeof item.title === 'string' ) {\r\n\t\treturn item.title;\r\n\t}\r\n\r\n\tif ( item.title && item.title.rendered ) {\r\n\t\treturn item.title.rendered;\r\n\t}\r\n\r\n\tif ( item.title && item.title.raw ) {\r\n\t\treturn item.title.raw;\r\n\t}\r\n\r\n\treturn '';\r\n};\r\n\r\nconst defaultGetDescription = ( item ) => {\r\n\tif ( item.type === PATTERN_TYPES.user ) {\r\n\t\treturn item.excerpt.raw;\r\n\t}\r\n\r\n\treturn item.description || '';\r\n};\r\n\r\nconst defaultGetKeywords = ( item ) => item.keywords || [];\r\nconst defaultHasCategory = () => false;\r\n\r\nconst removeMatchingTerms = ( unmatchedTerms, unprocessedTerms ) => {\r\n\treturn unmatchedTerms.filter(\r\n\t\t( term ) =>\r\n\t\t\t! getNormalizedSearchTerms( unprocessedTerms ).some(\r\n\t\t\t\t( unprocessedTerm ) => unprocessedTerm.includes( term )\r\n\t\t\t)\r\n\t);\r\n};\r\n\r\n/**\r\n * Filters an item list given a search term.\r\n *\r\n * @param {Array}  items       Item list\r\n * @param {string} searchInput Search input.\r\n * @param {Object} config      Search Config.\r\n *\r\n * @return {Array} Filtered item list.\r\n */\r\nexport const searchItems = ( items = [], searchInput = '', config = {} ) => {\r\n\tconst normalizedSearchTerms = getNormalizedSearchTerms( searchInput );\r\n\r\n\t// Filter patterns by category: the default category indicates that all patterns will be shown.\r\n\tconst onlyFilterByCategory =\r\n\t\tconfig.categoryId !== PATTERN_DEFAULT_CATEGORY &&\r\n\t\t! normalizedSearchTerms.length;\r\n\tconst searchRankConfig = { ...config, onlyFilterByCategory };\r\n\r\n\t// If we aren't filtering on search terms, matching on category is satisfactory.\r\n\t// If we are, then we need more than a category match.\r\n\tconst threshold = onlyFilterByCategory ? 0 : 1;\r\n\r\n\tconst rankedItems = items\r\n\t\t.map( ( item ) => {\r\n\t\t\treturn [\r\n\t\t\t\titem,\r\n\t\t\t\tgetItemSearchRank( item, searchInput, searchRankConfig ),\r\n\t\t\t];\r\n\t\t} )\r\n\t\t.filter( ( [ , rank ] ) => rank > threshold );\r\n\r\n\t// If we didn't have terms to search on, there's no point sorting.\r\n\tif ( normalizedSearchTerms.length === 0 ) {\r\n\t\treturn rankedItems.map( ( [ item ] ) => item );\r\n\t}\r\n\r\n\trankedItems.sort( ( [ , rank1 ], [ , rank2 ] ) => rank2 - rank1 );\r\n\treturn rankedItems.map( ( [ item ] ) => item );\r\n};\r\n\r\n/**\r\n * Get the search rank for a given item and a specific search term.\r\n * The better the match, the higher the rank.\r\n * If the rank equals 0, it should be excluded from the results.\r\n *\r\n * @param {Object} item       Item to filter.\r\n * @param {string} searchTerm Search term.\r\n * @param {Object} config     Search Config.\r\n *\r\n * @return {number} Search Rank.\r\n */\r\nfunction getItemSearchRank( item, searchTerm, config ) {\r\n\tconst {\r\n\t\tcategoryId,\r\n\t\tgetName = defaultGetName,\r\n\t\tgetTitle = defaultGetTitle,\r\n\t\tgetDescription = defaultGetDescription,\r\n\t\tgetKeywords = defaultGetKeywords,\r\n\t\thasCategory = defaultHasCategory,\r\n\t\tonlyFilterByCategory,\r\n\t} = config;\r\n\r\n\tlet rank =\r\n\t\tcategoryId === PATTERN_DEFAULT_CATEGORY ||\r\n\t\tcategoryId === TEMPLATE_PART_ALL_AREAS_CATEGORY ||\r\n\t\t( categoryId === PATTERN_USER_CATEGORY &&\r\n\t\t\titem.type === PATTERN_TYPES.user ) ||\r\n\t\thasCategory( item, categoryId )\r\n\t\t\t? 1\r\n\t\t\t: 0;\r\n\r\n\t// If an item doesn't belong to the current category or we don't have\r\n\t// search terms to filter by, return the initial rank value.\r\n\tif ( ! rank || onlyFilterByCategory ) {\r\n\t\treturn rank;\r\n\t}\r\n\r\n\tconst name = getName( item );\r\n\tconst title = getTitle( item );\r\n\tconst description = getDescription( item );\r\n\tconst keywords = getKeywords( item );\r\n\r\n\tconst normalizedSearchInput = normalizeString( searchTerm );\r\n\tconst normalizedTitle = normalizeString( title );\r\n\r\n\t// Prefers exact matches\r\n\t// Then prefers if the beginning of the title matches the search term\r\n\t// name, keywords, description matches come later.\r\n\tif ( normalizedSearchInput === normalizedTitle ) {\r\n\t\trank += 30;\r\n\t} else if ( normalizedTitle.startsWith( normalizedSearchInput ) ) {\r\n\t\trank += 20;\r\n\t} else {\r\n\t\tconst terms = [ name, title, description, ...keywords ].join( ' ' );\r\n\t\tconst normalizedSearchTerms = extractWords( normalizedSearchInput );\r\n\t\tconst unmatchedTerms = removeMatchingTerms(\r\n\t\t\tnormalizedSearchTerms,\r\n\t\t\tterms\r\n\t\t);\r\n\r\n\t\tif ( unmatchedTerms.length === 0 ) {\r\n\t\t\trank += 10;\r\n\t\t}\r\n\t}\r\n\r\n\treturn rank;\r\n}\r\n"],"mappings":"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","ignoreList":[]}