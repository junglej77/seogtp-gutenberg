{"version":3,"names":["parse","useSelect","createSelector","store","coreStore","editorStore","useMemo","filterOutDuplicatesByName","EXCLUDED_PATTERN_SOURCES","PATTERN_TYPES","PATTERN_SYNC_TYPES","TEMPLATE_PART_POST_TYPE","TEMPLATE_PART_AREA_DEFAULT_CATEGORY","unlock","searchItems","editSiteStore","EMPTY_PATTERN_LIST","selectTemplateParts","select","categoryId","search","_getEntityRecords","getEntityRecords","isResolving","isResolvingSelector","__experimentalGetDefaultTemplatePartAreas","query","per_page","templateParts","knownAreas","templatePartAreas","map","area","templatePartHasCategory","item","category","includes","patterns","hasCategory","selectThemePatterns","_settings$__experimen","getSettings","settings","blockPatterns","__experimentalAdditionalBlockPatterns","__experimentalBlockPatterns","restBlockPatterns","getBlockPatterns","filter","pattern","source","inserter","keywords","type","theme","blocks","content","__unstableSkipMigrationLogs","selectPatterns","syncStatus","themePatterns","isResolvingThemePatterns","userPatterns","isResolvingUserPatterns","categories","userPatternCategories","selectUserPatterns","user","wp_pattern_sync_status","full","unsynced","currentCategory","wp_pattern_category","some","catId","find","cat","id","slug","length","hasOwnProperty","getUserPatternCategories","patternPosts","Map","forEach","userCategory","set","useAugmentPatternsWithPermissions","idsAndTypes","_patterns$filter$map","record","permissions","getEntityRecordPermissions","reduce","acc","_patterns$map","_permissions$record$i","usePatterns","postType","appliedCategory"],"sources":["@wordpress/edit-site/src/components/page-patterns/use-patterns.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { parse } from '@wordpress/blocks';\r\nimport { useSelect, createSelector } from '@wordpress/data';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\nimport { store as editorStore } from '@wordpress/editor';\r\nimport { useMemo } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { filterOutDuplicatesByName } from './utils';\r\nimport {\r\n\tEXCLUDED_PATTERN_SOURCES,\r\n\tPATTERN_TYPES,\r\n\tPATTERN_SYNC_TYPES,\r\n\tTEMPLATE_PART_POST_TYPE,\r\n\tTEMPLATE_PART_AREA_DEFAULT_CATEGORY,\r\n} from '../../utils/constants';\r\nimport { unlock } from '../../lock-unlock';\r\nimport { searchItems } from './search-items';\r\nimport { store as editSiteStore } from '../../store';\r\n\r\nconst EMPTY_PATTERN_LIST = [];\r\n\r\nconst selectTemplateParts = createSelector(\r\n\t( select, categoryId, search = '' ) => {\r\n\t\tconst { getEntityRecords, isResolving: isResolvingSelector } =\r\n\t\t\tselect( coreStore );\r\n\t\tconst { __experimentalGetDefaultTemplatePartAreas } =\r\n\t\t\tselect( editorStore );\r\n\t\tconst query = { per_page: -1 };\r\n\t\tconst templateParts =\r\n\t\t\tgetEntityRecords( 'postType', TEMPLATE_PART_POST_TYPE, query ) ??\r\n\t\t\tEMPTY_PATTERN_LIST;\r\n\r\n\t\t// In the case where a custom template part area has been removed we need\r\n\t\t// the current list of areas to cross check against so orphaned template\r\n\t\t// parts can be treated as uncategorized.\r\n\t\tconst knownAreas = __experimentalGetDefaultTemplatePartAreas() || [];\r\n\t\tconst templatePartAreas = knownAreas.map( ( area ) => area.area );\r\n\r\n\t\tconst templatePartHasCategory = ( item, category ) => {\r\n\t\t\tif ( category !== TEMPLATE_PART_AREA_DEFAULT_CATEGORY ) {\r\n\t\t\t\treturn item.area === category;\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\titem.area === category ||\r\n\t\t\t\t! templatePartAreas.includes( item.area )\r\n\t\t\t);\r\n\t\t};\r\n\r\n\t\tconst isResolving = isResolvingSelector( 'getEntityRecords', [\r\n\t\t\t'postType',\r\n\t\t\tTEMPLATE_PART_POST_TYPE,\r\n\t\t\tquery,\r\n\t\t] );\r\n\r\n\t\tconst patterns = searchItems( templateParts, search, {\r\n\t\t\tcategoryId,\r\n\t\t\thasCategory: templatePartHasCategory,\r\n\t\t} );\r\n\r\n\t\treturn { patterns, isResolving };\r\n\t},\r\n\t( select ) => [\r\n\t\tselect( coreStore ).getEntityRecords(\r\n\t\t\t'postType',\r\n\t\t\tTEMPLATE_PART_POST_TYPE,\r\n\t\t\t{\r\n\t\t\t\tper_page: -1,\r\n\t\t\t}\r\n\t\t),\r\n\t\tselect( coreStore ).isResolving( 'getEntityRecords', [\r\n\t\t\t'postType',\r\n\t\t\tTEMPLATE_PART_POST_TYPE,\r\n\t\t\t{ per_page: -1 },\r\n\t\t] ),\r\n\t\tselect( editorStore ).__experimentalGetDefaultTemplatePartAreas(),\r\n\t]\r\n);\r\n\r\nconst selectThemePatterns = createSelector(\r\n\t( select ) => {\r\n\t\tconst { getSettings } = unlock( select( editSiteStore ) );\r\n\t\tconst { isResolving: isResolvingSelector } = select( coreStore );\r\n\t\tconst settings = getSettings();\r\n\t\tconst blockPatterns =\r\n\t\t\tsettings.__experimentalAdditionalBlockPatterns ??\r\n\t\t\tsettings.__experimentalBlockPatterns;\r\n\r\n\t\tconst restBlockPatterns = select( coreStore ).getBlockPatterns();\r\n\r\n\t\tconst patterns = [\r\n\t\t\t...( blockPatterns || [] ),\r\n\t\t\t...( restBlockPatterns || [] ),\r\n\t\t]\r\n\t\t\t.filter(\r\n\t\t\t\t( pattern ) =>\r\n\t\t\t\t\t! EXCLUDED_PATTERN_SOURCES.includes( pattern.source )\r\n\t\t\t)\r\n\t\t\t.filter( filterOutDuplicatesByName )\r\n\t\t\t.filter( ( pattern ) => pattern.inserter !== false )\r\n\t\t\t.map( ( pattern ) => ( {\r\n\t\t\t\t...pattern,\r\n\t\t\t\tkeywords: pattern.keywords || [],\r\n\t\t\t\ttype: PATTERN_TYPES.theme,\r\n\t\t\t\tblocks: parse( pattern.content, {\r\n\t\t\t\t\t__unstableSkipMigrationLogs: true,\r\n\t\t\t\t} ),\r\n\t\t\t} ) );\r\n\t\treturn {\r\n\t\t\tpatterns,\r\n\t\t\tisResolving: isResolvingSelector( 'getBlockPatterns' ),\r\n\t\t};\r\n\t},\r\n\t( select ) => [\r\n\t\tselect( coreStore ).getBlockPatterns(),\r\n\t\tselect( coreStore ).isResolving( 'getBlockPatterns' ),\r\n\t\tunlock( select( editSiteStore ) ).getSettings(),\r\n\t]\r\n);\r\n\r\nconst selectPatterns = createSelector(\r\n\t( select, categoryId, syncStatus, search = '' ) => {\r\n\t\tconst {\r\n\t\t\tpatterns: themePatterns,\r\n\t\t\tisResolving: isResolvingThemePatterns,\r\n\t\t} = selectThemePatterns( select );\r\n\t\tconst {\r\n\t\t\tpatterns: userPatterns,\r\n\t\t\tisResolving: isResolvingUserPatterns,\r\n\t\t\tcategories: userPatternCategories,\r\n\t\t} = selectUserPatterns( select );\r\n\r\n\t\tlet patterns = [\r\n\t\t\t...( themePatterns || [] ),\r\n\t\t\t...( userPatterns || [] ),\r\n\t\t];\r\n\r\n\t\tif ( syncStatus ) {\r\n\t\t\t// User patterns can have their sync statuses checked directly\r\n\t\t\t// Non-user patterns are all unsynced for the time being.\r\n\t\t\tpatterns = patterns.filter( ( pattern ) => {\r\n\t\t\t\treturn pattern.type === PATTERN_TYPES.user\r\n\t\t\t\t\t? ( pattern.wp_pattern_sync_status ||\r\n\t\t\t\t\t\t\tPATTERN_SYNC_TYPES.full ) === syncStatus\r\n\t\t\t\t\t: syncStatus === PATTERN_SYNC_TYPES.unsynced;\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( categoryId ) {\r\n\t\t\tpatterns = searchItems( patterns, search, {\r\n\t\t\t\tcategoryId,\r\n\t\t\t\thasCategory: ( item, currentCategory ) => {\r\n\t\t\t\t\tif ( item.type === PATTERN_TYPES.user ) {\r\n\t\t\t\t\t\treturn item.wp_pattern_category.some(\r\n\t\t\t\t\t\t\t( catId ) =>\r\n\t\t\t\t\t\t\t\tuserPatternCategories.find(\r\n\t\t\t\t\t\t\t\t\t( cat ) => cat.id === catId\r\n\t\t\t\t\t\t\t\t)?.slug === currentCategory\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn item.categories?.includes( currentCategory );\r\n\t\t\t\t},\r\n\t\t\t} );\r\n\t\t} else {\r\n\t\t\tpatterns = searchItems( patterns, search, {\r\n\t\t\t\thasCategory: ( item ) => {\r\n\t\t\t\t\tif ( item.type === PATTERN_TYPES.user ) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\tuserPatternCategories?.length &&\r\n\t\t\t\t\t\t\t( ! item.wp_pattern_category?.length ||\r\n\t\t\t\t\t\t\t\t! item.wp_pattern_category.some( ( catId ) =>\r\n\t\t\t\t\t\t\t\t\tuserPatternCategories.find(\r\n\t\t\t\t\t\t\t\t\t\t( cat ) => cat.id === catId\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t) )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn ! item.hasOwnProperty( 'categories' );\r\n\t\t\t\t},\r\n\t\t\t} );\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tpatterns,\r\n\t\t\tisResolving: isResolvingThemePatterns || isResolvingUserPatterns,\r\n\t\t};\r\n\t},\r\n\t( select ) => [\r\n\t\tselectThemePatterns( select ),\r\n\t\tselectUserPatterns( select ),\r\n\t]\r\n);\r\n\r\nconst selectUserPatterns = createSelector(\r\n\t( select, syncStatus, search = '' ) => {\r\n\t\tconst {\r\n\t\t\tgetEntityRecords,\r\n\t\t\tisResolving: isResolvingSelector,\r\n\t\t\tgetUserPatternCategories,\r\n\t\t} = select( coreStore );\r\n\r\n\t\tconst query = { per_page: -1 };\r\n\t\tconst patternPosts = getEntityRecords(\r\n\t\t\t'postType',\r\n\t\t\tPATTERN_TYPES.user,\r\n\t\t\tquery\r\n\t\t);\r\n\t\tconst userPatternCategories = getUserPatternCategories();\r\n\t\tconst categories = new Map();\r\n\t\tuserPatternCategories.forEach( ( userCategory ) =>\r\n\t\t\tcategories.set( userCategory.id, userCategory )\r\n\t\t);\r\n\t\tlet patterns = patternPosts ?? EMPTY_PATTERN_LIST;\r\n\t\tconst isResolving = isResolvingSelector( 'getEntityRecords', [\r\n\t\t\t'postType',\r\n\t\t\tPATTERN_TYPES.user,\r\n\t\t\tquery,\r\n\t\t] );\r\n\r\n\t\tif ( syncStatus ) {\r\n\t\t\tpatterns = patterns.filter(\r\n\t\t\t\t( pattern ) =>\r\n\t\t\t\t\tpattern.wp_pattern_sync_status ||\r\n\t\t\t\t\tPATTERN_SYNC_TYPES.full === syncStatus\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tpatterns = searchItems( patterns, search, {\r\n\t\t\t// We exit user pattern retrieval early if we aren't in the\r\n\t\t\t// catch-all category for user created patterns, so it has\r\n\t\t\t// to be in the category.\r\n\t\t\thasCategory: () => true,\r\n\t\t} );\r\n\r\n\t\treturn {\r\n\t\t\tpatterns,\r\n\t\t\tisResolving,\r\n\t\t\tcategories: userPatternCategories,\r\n\t\t};\r\n\t},\r\n\t( select ) => [\r\n\t\tselect( coreStore ).getEntityRecords( 'postType', PATTERN_TYPES.user, {\r\n\t\t\tper_page: -1,\r\n\t\t} ),\r\n\t\tselect( coreStore ).isResolving( 'getEntityRecords', [\r\n\t\t\t'postType',\r\n\t\t\tPATTERN_TYPES.user,\r\n\t\t\t{ per_page: -1 },\r\n\t\t] ),\r\n\t\tselect( coreStore ).getUserPatternCategories(),\r\n\t]\r\n);\r\n\r\nexport function useAugmentPatternsWithPermissions( patterns ) {\r\n\tconst idsAndTypes = useMemo(\r\n\t\t() =>\r\n\t\t\tpatterns\r\n\t\t\t\t?.filter( ( record ) => record.type !== PATTERN_TYPES.theme )\r\n\t\t\t\t.map( ( record ) => [ record.type, record.id ] ) ?? [],\r\n\t\t[ patterns ]\r\n\t);\r\n\r\n\tconst permissions = useSelect(\r\n\t\t( select ) => {\r\n\t\t\tconst { getEntityRecordPermissions } = unlock(\r\n\t\t\t\tselect( coreStore )\r\n\t\t\t);\r\n\t\t\treturn idsAndTypes.reduce( ( acc, [ type, id ] ) => {\r\n\t\t\t\tacc[ id ] = getEntityRecordPermissions( 'postType', type, id );\r\n\t\t\t\treturn acc;\r\n\t\t\t}, {} );\r\n\t\t},\r\n\t\t[ idsAndTypes ]\r\n\t);\r\n\r\n\treturn useMemo(\r\n\t\t() =>\r\n\t\t\tpatterns?.map( ( record ) => ( {\r\n\t\t\t\t...record,\r\n\t\t\t\tpermissions: permissions?.[ record.id ] ?? {},\r\n\t\t\t} ) ) ?? [],\r\n\t\t[ patterns, permissions ]\r\n\t);\r\n}\r\n\r\nexport const usePatterns = (\r\n\tpostType,\r\n\tcategoryId,\r\n\t{ search = '', syncStatus } = {}\r\n) => {\r\n\treturn useSelect(\r\n\t\t( select ) => {\r\n\t\t\tif ( postType === TEMPLATE_PART_POST_TYPE ) {\r\n\t\t\t\treturn selectTemplateParts( select, categoryId, search );\r\n\t\t\t} else if ( postType === PATTERN_TYPES.user && !! categoryId ) {\r\n\t\t\t\tconst appliedCategory =\r\n\t\t\t\t\tcategoryId === 'uncategorized' ? '' : categoryId;\r\n\t\t\t\treturn selectPatterns(\r\n\t\t\t\t\tselect,\r\n\t\t\t\t\tappliedCategory,\r\n\t\t\t\t\tsyncStatus,\r\n\t\t\t\t\tsearch\r\n\t\t\t\t);\r\n\t\t\t} else if ( postType === PATTERN_TYPES.user ) {\r\n\t\t\t\treturn selectUserPatterns( select, syncStatus, search );\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tpatterns: EMPTY_PATTERN_LIST,\r\n\t\t\t\tisResolving: false,\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ categoryId, postType, search, syncStatus ]\r\n\t);\r\n};\r\n\r\nexport default usePatterns;\r\n"],"mappings":"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","ignoreList":[]}