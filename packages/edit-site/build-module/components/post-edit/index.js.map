{"version":3,"names":["clsx","__","DataForm","useDispatch","useSelect","store","coreDataStore","__experimentalVStack","VStack","useState","useMemo","useEffect","privateApis","editorPrivateApis","Page","usePostFields","unlock","jsx","_jsx","jsxs","_jsxs","PostCardPanel","PostEditForm","postType","postId","ids","split","record","select","length","getEditedEntityRecord","multiEdits","setMultiEdits","editEntityRecord","fields","_fields","map","field","id","elements","filter","element","value","form","type","onChange","edits","status","Date","date","password","prev","spacing","children","data","PostEdit","className","label"],"sources":["@wordpress/edit-site/src/components/post-edit/index.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport clsx from 'clsx';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\nimport { DataForm } from '@wordpress/dataviews';\r\nimport { useDispatch, useSelect } from '@wordpress/data';\r\nimport { store as coreDataStore } from '@wordpress/core-data';\r\nimport { __experimentalVStack as VStack } from '@wordpress/components';\r\nimport { useState, useMemo, useEffect } from '@wordpress/element';\r\nimport { privateApis as editorPrivateApis } from '@wordpress/editor';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport Page from '../page';\r\nimport usePostFields from '../post-fields';\r\nimport { unlock } from '../../lock-unlock';\r\n\r\nconst { PostCardPanel } = unlock( editorPrivateApis );\r\n\r\nfunction PostEditForm( { postType, postId } ) {\r\n\tconst ids = useMemo( () => postId.split( ',' ), [ postId ] );\r\n\tconst { record } = useSelect(\r\n\t\t( select ) => {\r\n\t\t\treturn {\r\n\t\t\t\trecord:\r\n\t\t\t\t\tids.length === 1\r\n\t\t\t\t\t\t? select( coreDataStore ).getEditedEntityRecord(\r\n\t\t\t\t\t\t\t\t'postType',\r\n\t\t\t\t\t\t\t\tpostType,\r\n\t\t\t\t\t\t\t\tids[ 0 ]\r\n\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t: null,\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ postType, ids ]\r\n\t);\r\n\tconst [ multiEdits, setMultiEdits ] = useState( {} );\r\n\tconst { editEntityRecord } = useDispatch( coreDataStore );\r\n\tconst { fields: _fields } = usePostFields();\r\n\tconst fields = useMemo(\r\n\t\t() =>\r\n\t\t\t_fields?.map( ( field ) => {\r\n\t\t\t\tif ( field.id === 'status' ) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...field,\r\n\t\t\t\t\t\telements: field.elements.filter(\r\n\t\t\t\t\t\t\t( element ) => element.value !== 'trash'\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn field;\r\n\t\t\t} ),\r\n\t\t[ _fields ]\r\n\t);\r\n\tconst form = {\r\n\t\ttype: 'panel',\r\n\t\tfields: [ 'title', 'status', 'date', 'author', 'comment_status' ],\r\n\t};\r\n\tconst onChange = ( edits ) => {\r\n\t\tfor ( const id of ids ) {\r\n\t\t\tif (\r\n\t\t\t\tedits.status !== 'future' &&\r\n\t\t\t\trecord.status === 'future' &&\r\n\t\t\t\tnew Date( record.date ) > new Date()\r\n\t\t\t) {\r\n\t\t\t\tedits.date = null;\r\n\t\t\t}\r\n\t\t\tif ( edits.status === 'private' && record.password ) {\r\n\t\t\t\tedits.password = '';\r\n\t\t\t}\r\n\t\t\teditEntityRecord( 'postType', postType, id, edits );\r\n\t\t\tif ( ids.length > 1 ) {\r\n\t\t\t\tsetMultiEdits( ( prev ) => ( {\r\n\t\t\t\t\t...prev,\r\n\t\t\t\t\t...edits,\r\n\t\t\t\t} ) );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tuseEffect( () => {\r\n\t\tsetMultiEdits( {} );\r\n\t}, [ ids ] );\r\n\r\n\treturn (\r\n\t\t<VStack spacing={ 4 }>\r\n\t\t\t{ ids.length === 1 && (\r\n\t\t\t\t<PostCardPanel postType={ postType } postId={ ids[ 0 ] } />\r\n\t\t\t) }\r\n\t\t\t<DataForm\r\n\t\t\t\tdata={ ids.length === 1 ? record : multiEdits }\r\n\t\t\t\tfields={ fields }\r\n\t\t\t\tform={ form }\r\n\t\t\t\tonChange={ onChange }\r\n\t\t\t/>\r\n\t\t</VStack>\r\n\t);\r\n}\r\n\r\nexport function PostEdit( { postType, postId } ) {\r\n\treturn (\r\n\t\t<Page\r\n\t\t\tclassName={ clsx( 'edit-site-post-edit', {\r\n\t\t\t\t'is-empty': ! postId,\r\n\t\t\t} ) }\r\n\t\t\tlabel={ __( 'Post Edit' ) }\r\n\t\t>\r\n\t\t\t{ postId && (\r\n\t\t\t\t<PostEditForm postType={ postType } postId={ postId } />\r\n\t\t\t) }\r\n\t\t\t{ ! postId && <p>{ __( 'Select a page to edit' ) }</p> }\r\n\t\t</Page>\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]}