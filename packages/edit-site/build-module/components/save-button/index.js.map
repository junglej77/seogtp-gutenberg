{"version":3,"names":["useSelect","useDispatch","Button","__","_n","sprintf","store","coreStore","displayShortcut","privateApis","routerPrivateApis","useEntitiesSavedStatesIsDirty","editorStore","editSiteStore","currentlyPreviewingTheme","isPreviewingTheme","unlock","jsx","_jsx","useLocation","SaveButton","className","variant","showTooltip","showReviewMessage","icon","size","__next40pxDefaultSize","params","setIsSaveViewOpened","saveDirtyEntities","dirtyEntityRecords","isSaving","isSaveViewOpen","previewingThemeName","select","isSavingEntityRecord","isResolving","isSaveViewOpened","isActivatingTheme","currentlyPreviewingThemeId","some","record","kind","name","key","getTheme","rendered","undefined","hasDirtyEntities","length","isOnlyCurrentEntityDirty","postId","postType","path","includes","disabled","getLabel","label","onClick","isBusy","shortcut","primary","children"],"sources":["@wordpress/edit-site/src/components/save-button/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useSelect, useDispatch } from '@wordpress/data';\r\nimport { Button } from '@wordpress/components';\r\nimport { __, _n, sprintf } from '@wordpress/i18n';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\nimport { displayShortcut } from '@wordpress/keycodes';\r\nimport { privateApis as routerPrivateApis } from '@wordpress/router';\r\nimport {\r\n\tuseEntitiesSavedStatesIsDirty,\r\n\tstore as editorStore,\r\n} from '@wordpress/editor';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as editSiteStore } from '../../store';\r\nimport {\r\n\tcurrentlyPreviewingTheme,\r\n\tisPreviewingTheme,\r\n} from '../../utils/is-previewing-theme';\r\nimport { unlock } from '../../lock-unlock';\r\n\r\nconst { useLocation } = unlock( routerPrivateApis );\r\n\r\nexport default function SaveButton( {\r\n\tclassName = 'edit-site-save-button__button',\r\n\tvariant = 'primary',\r\n\tshowTooltip = true,\r\n\tshowReviewMessage,\r\n\ticon,\r\n\tsize,\r\n\t__next40pxDefaultSize = false,\r\n} ) {\r\n\tconst { params } = useLocation();\r\n\tconst { setIsSaveViewOpened } = useDispatch( editSiteStore );\r\n\tconst { saveDirtyEntities } = unlock( useDispatch( editorStore ) );\r\n\tconst { dirtyEntityRecords } = useEntitiesSavedStatesIsDirty();\r\n\tconst { isSaving, isSaveViewOpen, previewingThemeName } = useSelect(\r\n\t\t( select ) => {\r\n\t\t\tconst { isSavingEntityRecord, isResolving } = select( coreStore );\r\n\t\t\tconst { isSaveViewOpened } = select( editSiteStore );\r\n\t\t\tconst isActivatingTheme = isResolving( 'activateTheme' );\r\n\t\t\tconst currentlyPreviewingThemeId = currentlyPreviewingTheme();\r\n\t\t\treturn {\r\n\t\t\t\tisSaving:\r\n\t\t\t\t\tdirtyEntityRecords.some( ( record ) =>\r\n\t\t\t\t\t\tisSavingEntityRecord(\r\n\t\t\t\t\t\t\trecord.kind,\r\n\t\t\t\t\t\t\trecord.name,\r\n\t\t\t\t\t\t\trecord.key\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t) || isActivatingTheme,\r\n\t\t\t\tisSaveViewOpen: isSaveViewOpened(),\r\n\t\t\t\t// Do not call `getTheme` with null, it will cause a request to\r\n\t\t\t\t// the server.\r\n\t\t\t\tpreviewingThemeName: currentlyPreviewingThemeId\r\n\t\t\t\t\t? select( coreStore ).getTheme( currentlyPreviewingThemeId )\r\n\t\t\t\t\t\t\t?.name?.rendered\r\n\t\t\t\t\t: undefined,\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ dirtyEntityRecords ]\r\n\t);\r\n\tconst hasDirtyEntities = !! dirtyEntityRecords.length;\r\n\tlet isOnlyCurrentEntityDirty;\r\n\t// Check if the current entity is the only entity with changes.\r\n\t// We have some extra logic for `wp_global_styles` for now, that\r\n\t// is used in navigation sidebar.\r\n\tif ( dirtyEntityRecords.length === 1 ) {\r\n\t\tif ( params.postId ) {\r\n\t\t\tisOnlyCurrentEntityDirty =\r\n\t\t\t\t`${ dirtyEntityRecords[ 0 ].key }` === params.postId &&\r\n\t\t\t\tdirtyEntityRecords[ 0 ].name === params.postType;\r\n\t\t} else if ( params.path?.includes( 'wp_global_styles' ) ) {\r\n\t\t\tisOnlyCurrentEntityDirty =\r\n\t\t\t\tdirtyEntityRecords[ 0 ].name === 'globalStyles';\r\n\t\t}\r\n\t}\r\n\tconst disabled =\r\n\t\tisSaving || ( ! hasDirtyEntities && ! isPreviewingTheme() );\r\n\tconst getLabel = () => {\r\n\t\tif ( isPreviewingTheme() ) {\r\n\t\t\tif ( isSaving ) {\r\n\t\t\t\treturn sprintf(\r\n\t\t\t\t\t/* translators: %s: The name of theme to be activated. */\r\n\t\t\t\t\t__( 'Activating %s' ),\r\n\t\t\t\t\tpreviewingThemeName\r\n\t\t\t\t);\r\n\t\t\t} else if ( disabled ) {\r\n\t\t\t\treturn __( 'Saved' );\r\n\t\t\t} else if ( hasDirtyEntities ) {\r\n\t\t\t\treturn sprintf(\r\n\t\t\t\t\t/* translators: %s: The name of theme to be activated. */\r\n\t\t\t\t\t__( 'Activate %s & Save' ),\r\n\t\t\t\t\tpreviewingThemeName\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn sprintf(\r\n\t\t\t\t/* translators: %s: The name of theme to be activated. */\r\n\t\t\t\t__( 'Activate %s' ),\r\n\t\t\t\tpreviewingThemeName\r\n\t\t\t);\r\n\t\t}\r\n\t\tif ( isSaving ) {\r\n\t\t\treturn __( 'Saving' );\r\n\t\t}\r\n\t\tif ( disabled ) {\r\n\t\t\treturn __( 'Saved' );\r\n\t\t}\r\n\t\tif ( ! isOnlyCurrentEntityDirty && showReviewMessage ) {\r\n\t\t\treturn sprintf(\r\n\t\t\t\t// translators: %d: number of unsaved changes (number).\r\n\t\t\t\t_n(\r\n\t\t\t\t\t'Review %d change…',\r\n\t\t\t\t\t'Review %d changes…',\r\n\t\t\t\t\tdirtyEntityRecords.length\r\n\t\t\t\t),\r\n\t\t\t\tdirtyEntityRecords.length\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn __( 'Save' );\r\n\t};\r\n\tconst label = getLabel();\r\n\tconst onClick = isOnlyCurrentEntityDirty\r\n\t\t? () => saveDirtyEntities( { dirtyEntityRecords } )\r\n\t\t: () => setIsSaveViewOpened( true );\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tvariant={ variant }\r\n\t\t\tclassName={ className }\r\n\t\t\taria-disabled={ disabled }\r\n\t\t\taria-expanded={ isSaveViewOpen }\r\n\t\t\tisBusy={ isSaving }\r\n\t\t\tonClick={ disabled ? undefined : onClick }\r\n\t\t\tlabel={ label }\r\n\t\t\t/*\r\n\t\t\t * We want the tooltip to show the keyboard shortcut only when the\r\n\t\t\t * button does something, i.e. when it's not disabled.\r\n\t\t\t */\r\n\t\t\tshortcut={ disabled ? undefined : displayShortcut.primary( 's' ) }\r\n\t\t\t/*\r\n\t\t\t * Displaying the keyboard shortcut conditionally makes the tooltip\r\n\t\t\t * itself show conditionally. This would trigger a full-rerendering\r\n\t\t\t * of the button that we want to avoid. By setting `showTooltip`,\r\n\t\t\t * the tooltip is always rendered even when there's no keyboard shortcut.\r\n\t\t\t */\r\n\t\t\tshowTooltip={ showTooltip }\r\n\t\t\ticon={ icon }\r\n\t\t\t__next40pxDefaultSize={ __next40pxDefaultSize }\r\n\t\t\tsize={ size }\r\n\t\t>\r\n\t\t\t{ label }\r\n\t\t</Button>\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]}