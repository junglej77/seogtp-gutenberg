{"version":3,"names":["store","coreStore","__","sprintf","useSelect","useDispatch","noticesStore","privateApis","routerPrivateApis","postType","NAVIGATION_POST_TYPE","unlock","useHistory","useDeleteNavigationMenu","deleteEntityRecord","createSuccessNotice","createErrorNotice","history","handleDelete","navigationMenu","postId","id","force","throwOnError","type","push","error","message","useSaveNavigationMenu","getEditedEntityRecord","select","getEditedEntityRecordSelector","editEntityRecord","__experimentalSaveSpecifiedEntityEdits","saveSpecifiedEntityEdits","handleSave","edits","originalRecord","recordPropertiesToSave","Object","keys","useDuplicateNavigationMenu","saveEntityRecord","handleDuplicate","menuTitle","title","rendered","slug","savedRecord","content","raw","status","useNavigationMenuHandlers"],"sources":["@wordpress/edit-site/src/components/sidebar-navigation-screen-navigation-menu/use-navigation-menu-handlers.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { store as coreStore } from '@wordpress/core-data';\r\nimport { __, sprintf } from '@wordpress/i18n';\r\nimport { useSelect, useDispatch } from '@wordpress/data';\r\nimport { store as noticesStore } from '@wordpress/notices';\r\nimport { privateApis as routerPrivateApis } from '@wordpress/router';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { postType } from '.';\r\nimport { NAVIGATION_POST_TYPE } from '../../utils/constants';\r\nimport { unlock } from '../../lock-unlock';\r\n\r\nconst { useHistory } = unlock( routerPrivateApis );\r\n\r\nfunction useDeleteNavigationMenu() {\r\n\tconst { deleteEntityRecord } = useDispatch( coreStore );\r\n\tconst { createSuccessNotice, createErrorNotice } =\r\n\t\tuseDispatch( noticesStore );\r\n\tconst history = useHistory();\r\n\r\n\tconst handleDelete = async ( navigationMenu ) => {\r\n\t\tconst postId = navigationMenu?.id;\r\n\t\ttry {\r\n\t\t\tawait deleteEntityRecord(\r\n\t\t\t\t'postType',\r\n\t\t\t\tpostType,\r\n\t\t\t\tpostId,\r\n\t\t\t\t{\r\n\t\t\t\t\tforce: true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tthrowOnError: true,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tcreateSuccessNotice(\r\n\t\t\t\t__( 'Navigation Menu successfully deleted.' ),\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: 'snackbar',\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\thistory.push( { postType: 'wp_navigation' } );\r\n\t\t} catch ( error ) {\r\n\t\t\tcreateErrorNotice(\r\n\t\t\t\tsprintf(\r\n\t\t\t\t\t/* translators: %s: error message describing why the navigation menu could not be deleted. */\r\n\t\t\t\t\t__( `Unable to delete Navigation Menu (%s).` ),\r\n\t\t\t\t\terror?.message\r\n\t\t\t\t),\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: 'snackbar',\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn handleDelete;\r\n}\r\n\r\nfunction useSaveNavigationMenu() {\r\n\tconst { getEditedEntityRecord } = useSelect( ( select ) => {\r\n\t\tconst { getEditedEntityRecord: getEditedEntityRecordSelector } =\r\n\t\t\tselect( coreStore );\r\n\r\n\t\treturn {\r\n\t\t\tgetEditedEntityRecord: getEditedEntityRecordSelector,\r\n\t\t};\r\n\t}, [] );\r\n\r\n\tconst {\r\n\t\teditEntityRecord,\r\n\t\t__experimentalSaveSpecifiedEntityEdits: saveSpecifiedEntityEdits,\r\n\t} = useDispatch( coreStore );\r\n\r\n\tconst { createSuccessNotice, createErrorNotice } =\r\n\t\tuseDispatch( noticesStore );\r\n\r\n\tconst handleSave = async ( navigationMenu, edits ) => {\r\n\t\tif ( ! edits ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst postId = navigationMenu?.id;\r\n\t\t// Prepare for revert in case of error.\r\n\t\tconst originalRecord = getEditedEntityRecord(\r\n\t\t\t'postType',\r\n\t\t\tNAVIGATION_POST_TYPE,\r\n\t\t\tpostId\r\n\t\t);\r\n\r\n\t\t// Apply the edits.\r\n\t\teditEntityRecord( 'postType', postType, postId, edits );\r\n\r\n\t\tconst recordPropertiesToSave = Object.keys( edits );\r\n\r\n\t\t// Attempt to persist.\r\n\t\ttry {\r\n\t\t\tawait saveSpecifiedEntityEdits(\r\n\t\t\t\t'postType',\r\n\t\t\t\tpostType,\r\n\t\t\t\tpostId,\r\n\t\t\t\trecordPropertiesToSave,\r\n\t\t\t\t{\r\n\t\t\t\t\tthrowOnError: true,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\tcreateSuccessNotice( __( 'Renamed Navigation Menu' ), {\r\n\t\t\t\ttype: 'snackbar',\r\n\t\t\t} );\r\n\t\t} catch ( error ) {\r\n\t\t\t// Revert to original in case of error.\r\n\t\t\teditEntityRecord( 'postType', postType, postId, originalRecord );\r\n\r\n\t\t\tcreateErrorNotice(\r\n\t\t\t\tsprintf(\r\n\t\t\t\t\t/* translators: %s: error message describing why the navigation menu could not be renamed. */\r\n\t\t\t\t\t__( `Unable to rename Navigation Menu (%s).` ),\r\n\t\t\t\t\terror?.message\r\n\t\t\t\t),\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: 'snackbar',\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn handleSave;\r\n}\r\n\r\nfunction useDuplicateNavigationMenu() {\r\n\tconst history = useHistory();\r\n\tconst { saveEntityRecord } = useDispatch( coreStore );\r\n\r\n\tconst { createSuccessNotice, createErrorNotice } =\r\n\t\tuseDispatch( noticesStore );\r\n\r\n\tconst handleDuplicate = async ( navigationMenu ) => {\r\n\t\tconst menuTitle =\r\n\t\t\tnavigationMenu?.title?.rendered || navigationMenu?.slug;\r\n\r\n\t\ttry {\r\n\t\t\tconst savedRecord = await saveEntityRecord(\r\n\t\t\t\t'postType',\r\n\t\t\t\tpostType,\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: sprintf(\r\n\t\t\t\t\t\t/* translators: %s: Navigation menu title */\r\n\t\t\t\t\t\t__( '%s (Copy)' ),\r\n\t\t\t\t\t\tmenuTitle\r\n\t\t\t\t\t),\r\n\t\t\t\t\tcontent: navigationMenu?.content?.raw,\r\n\t\t\t\t\tstatus: 'publish',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tthrowOnError: true,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tif ( savedRecord ) {\r\n\t\t\t\tcreateSuccessNotice( __( 'Duplicated Navigation Menu' ), {\r\n\t\t\t\t\ttype: 'snackbar',\r\n\t\t\t\t} );\r\n\t\t\t\thistory.push( { postType, postId: savedRecord.id } );\r\n\t\t\t}\r\n\t\t} catch ( error ) {\r\n\t\t\tcreateErrorNotice(\r\n\t\t\t\tsprintf(\r\n\t\t\t\t\t/* translators: %s: error message describing why the navigation menu could not be deleted. */\r\n\t\t\t\t\t__( `Unable to duplicate Navigation Menu (%s).` ),\r\n\t\t\t\t\terror?.message\r\n\t\t\t\t),\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: 'snackbar',\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn handleDuplicate;\r\n}\r\n\r\nexport default function useNavigationMenuHandlers() {\r\n\treturn {\r\n\t\thandleDelete: useDeleteNavigationMenu(),\r\n\t\thandleSave: useSaveNavigationMenu(),\r\n\t\thandleDuplicate: useDuplicateNavigationMenu(),\r\n\t};\r\n}\r\n"],"mappings":"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","ignoreList":[]}