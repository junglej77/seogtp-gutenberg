{"version":3,"names":["useMemo","__","useDefaultPatternCategories","useThemePatterns","usePatterns","PATTERN_TYPES","PATTERN_DEFAULT_CATEGORY","PATTERN_USER_CATEGORY","TEMPLATE_PART_AREA_DEFAULT_CATEGORY","usePatternCategories","defaultCategories","push","name","label","themePatterns","patterns","userPatterns","categories","userPatternCategories","user","patternCategories","categoryMap","categoriesWithCounts","forEach","category","count","pattern","length","uncategorized","wp_pattern_category","catId","find","cat","id","some","sortedCategories","sort","a","b","localeCompare","unshift","description","hasPatterns"],"sources":["@wordpress/edit-site/src/components/sidebar-navigation-screen-patterns/use-pattern-categories.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useMemo } from '@wordpress/element';\r\nimport { __ } from '@wordpress/i18n';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport useDefaultPatternCategories from './use-default-pattern-categories';\r\nimport useThemePatterns from './use-theme-patterns';\r\nimport usePatterns from '../page-patterns/use-patterns';\r\nimport {\r\n\tPATTERN_TYPES,\r\n\tPATTERN_DEFAULT_CATEGORY,\r\n\tPATTERN_USER_CATEGORY,\r\n\tTEMPLATE_PART_AREA_DEFAULT_CATEGORY,\r\n} from '../../utils/constants';\r\n\r\nexport default function usePatternCategories() {\r\n\tconst defaultCategories = useDefaultPatternCategories();\r\n\tdefaultCategories.push( {\r\n\t\tname: TEMPLATE_PART_AREA_DEFAULT_CATEGORY,\r\n\t\tlabel: __( 'Uncategorized' ),\r\n\t} );\r\n\tconst themePatterns = useThemePatterns();\r\n\tconst { patterns: userPatterns, categories: userPatternCategories } =\r\n\t\tusePatterns( PATTERN_TYPES.user );\r\n\r\n\tconst patternCategories = useMemo( () => {\r\n\t\tconst categoryMap = {};\r\n\t\tconst categoriesWithCounts = [];\r\n\r\n\t\t// Create a map for easier counting of patterns in categories.\r\n\t\tdefaultCategories.forEach( ( category ) => {\r\n\t\t\tif ( ! categoryMap[ category.name ] ) {\r\n\t\t\t\tcategoryMap[ category.name ] = { ...category, count: 0 };\r\n\t\t\t}\r\n\t\t} );\r\n\t\tuserPatternCategories.forEach( ( category ) => {\r\n\t\t\tif ( ! categoryMap[ category.name ] ) {\r\n\t\t\t\tcategoryMap[ category.name ] = { ...category, count: 0 };\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Update the category counts to reflect theme registered patterns.\r\n\t\tthemePatterns.forEach( ( pattern ) => {\r\n\t\t\tpattern.categories?.forEach( ( category ) => {\r\n\t\t\t\tif ( categoryMap[ category ] ) {\r\n\t\t\t\t\tcategoryMap[ category ].count += 1;\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t\t// If the pattern has no categories, add it to uncategorized.\r\n\t\t\tif ( ! pattern.categories?.length ) {\r\n\t\t\t\tcategoryMap.uncategorized.count += 1;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Update the category counts to reflect user registered patterns.\r\n\t\tuserPatterns.forEach( ( pattern ) => {\r\n\t\t\tpattern.wp_pattern_category?.forEach( ( catId ) => {\r\n\t\t\t\tconst category = userPatternCategories.find(\r\n\t\t\t\t\t( cat ) => cat.id === catId\r\n\t\t\t\t)?.name;\r\n\t\t\t\tif ( categoryMap[ category ] ) {\r\n\t\t\t\t\tcategoryMap[ category ].count += 1;\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t\t// If the pattern has no categories, add it to uncategorized.\r\n\t\t\tif (\r\n\t\t\t\t! pattern.wp_pattern_category?.length ||\r\n\t\t\t\t! pattern.wp_pattern_category.some( ( catId ) =>\r\n\t\t\t\t\tuserPatternCategories.find( ( cat ) => cat.id === catId )\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\tcategoryMap.uncategorized.count += 1;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Filter categories so we only have those containing patterns.\r\n\t\t[ ...defaultCategories, ...userPatternCategories ].forEach(\r\n\t\t\t( category ) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tcategoryMap[ category.name ].count &&\r\n\t\t\t\t\t! categoriesWithCounts.find(\r\n\t\t\t\t\t\t( cat ) => cat.name === category.name\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tcategoriesWithCounts.push( categoryMap[ category.name ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t\tconst sortedCategories = categoriesWithCounts.sort( ( a, b ) =>\r\n\t\t\ta.label.localeCompare( b.label )\r\n\t\t);\r\n\r\n\t\tsortedCategories.unshift( {\r\n\t\t\tname: PATTERN_USER_CATEGORY,\r\n\t\t\tlabel: __( 'My patterns' ),\r\n\t\t\tcount: userPatterns.length,\r\n\t\t} );\r\n\r\n\t\tsortedCategories.unshift( {\r\n\t\t\tname: PATTERN_DEFAULT_CATEGORY,\r\n\t\t\tlabel: __( 'All patterns' ),\r\n\t\t\tdescription: __( 'A list of all patterns from all sources.' ),\r\n\t\t\tcount: themePatterns.length + userPatterns.length,\r\n\t\t} );\r\n\r\n\t\treturn sortedCategories;\r\n\t}, [\r\n\t\tdefaultCategories,\r\n\t\tthemePatterns,\r\n\t\tuserPatternCategories,\r\n\t\tuserPatterns,\r\n\t] );\r\n\r\n\treturn { patternCategories, hasPatterns: !! patternCategories.length };\r\n}\r\n"],"mappings":"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","ignoreList":[]}