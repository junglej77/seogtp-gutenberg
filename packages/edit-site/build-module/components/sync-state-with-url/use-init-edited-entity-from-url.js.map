{"version":3,"names":["useEffect","useMemo","useSelect","useDispatch","store","coreDataStore","privateApis","routerPrivateApis","editSiteStore","unlock","TEMPLATE_POST_TYPE","TEMPLATE_PART_POST_TYPE","NAVIGATION_POST_TYPE","PATTERN_TYPES","useLocation","postTypesWithoutParentTemplate","user","authorizedPostTypes","useResolveEditedEntityAndContext","postId","postType","hasLoadedAllDependencies","homepageId","postsPageId","url","frontPageTemplateId","select","getEntityRecord","getEntityRecords","siteData","base","templates","per_page","_homepageId","show_on_front","includes","page_on_front","toString","_postsPageId","page_for_posts","_frontPageTemplateId","frontPageTemplate","find","t","slug","id","home","resolvedTemplateId","undefined","getEditedEntityRecord","getDefaultTemplateId","__experimentalGetTemplateForLink","resolveTemplateForPostTypeAndId","postTypeToResolve","postIdToResolve","editedEntity","link","currentTemplateSlug","template","currentTemplate","slugToCheck","context","isReady","useInitEditedEntityFromURL","params","setEditedEntity"],"sources":["@wordpress/edit-site/src/components/sync-state-with-url/use-init-edited-entity-from-url.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useEffect, useMemo } from '@wordpress/element';\r\nimport { useSelect, useDispatch } from '@wordpress/data';\r\nimport { store as coreDataStore } from '@wordpress/core-data';\r\nimport { privateApis as routerPrivateApis } from '@wordpress/router';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\n/**\r\n * 导入 `editSiteStore` 从 '../../store' 模块中。\r\n * `editSiteStore` 是一个用于管理站点编辑状态的 Redux store。\r\n */\r\nimport { store as editSiteStore } from '../../store';\r\nimport { unlock } from '../../lock-unlock';\r\nimport {\r\n\t// 模板文章类型\r\n\tTEMPLATE_POST_TYPE,\r\n\t// 模板部分文章类型\r\n\tTEMPLATE_PART_POST_TYPE,\r\n\t// 导航文章类型\r\n\tNAVIGATION_POST_TYPE,\r\n\t// 模式类型\r\n\tPATTERN_TYPES,\r\n} from '../../utils/constants';\r\n\r\n\r\n// 解锁路由器的私有API以获取当前位置信息\r\nconst { useLocation } = unlock( routerPrivateApis );\r\n\r\n// 定义不需要父模板的帖子类型\r\nconst postTypesWithoutParentTemplate = [\r\n\tTEMPLATE_POST_TYPE,\r\n\tTEMPLATE_PART_POST_TYPE,\r\n\tNAVIGATION_POST_TYPE,\r\n\tPATTERN_TYPES.user,\r\n];\r\n\r\n// 定义授权的帖子类型\r\nconst authorizedPostTypes = [ 'page', 'post' ];\r\n\r\n/**\r\n * 根据给定的postId和postType解析编辑的实体和上下文\r\n * @param {Object} params - 包含postId和postType的对象\r\n * @returns {Object} - 包含isReady、postType、postId和context的对象\r\n */\r\nfunction useResolveEditedEntityAndContext( { postId, postType } ) {\r\n\t// 使用useSelect钩子获取站点数据和模板信息\r\n\tconst {\r\n\t\thasLoadedAllDependencies,\r\n\t\thomepageId,\r\n\t\tpostsPageId,\r\n\t\turl,\r\n\t\tfrontPageTemplateId,\r\n\t} = useSelect( ( select ) => {\r\n\t\tconst { getEntityRecord, getEntityRecords } = select( coreDataStore );\r\n\t\tconst siteData = getEntityRecord( 'root', 'site' );\r\n\t\tconst base = getEntityRecord( 'root', '__unstableBase' );\r\n\t\tconst templates = getEntityRecords( 'postType', TEMPLATE_POST_TYPE, {\r\n\t\t\tper_page: -1,\r\n\t\t} );\r\n\t\tconst _homepageId =\r\n\t\t\tsiteData?.show_on_front === 'page' &&\r\n\t\t\t[ 'number', 'string' ].includes( typeof siteData.page_on_front ) &&\r\n\t\t\t!! +siteData.page_on_front // 检查是否为零(`0`)\r\n\t\t\t\t? siteData.page_on_front.toString()\r\n\t\t\t\t: null;\r\n\t\tconst _postsPageId =\r\n\t\t\tsiteData?.show_on_front === 'page' &&\r\n\t\t\t[ 'number', 'string' ].includes( typeof siteData.page_for_posts )\r\n\t\t\t\t? siteData.page_for_posts.toString()\r\n\t\t\t\t: null;\r\n\t\tlet _frontPageTemplateId;\r\n\t\tif ( templates ) {\r\n\t\t\tconst frontPageTemplate = templates.find(\r\n\t\t\t\t( t ) => t.slug === 'front-page'\r\n\t\t\t);\r\n\t\t\t_frontPageTemplateId = frontPageTemplate\r\n\t\t\t\t? frontPageTemplate.id\r\n\t\t\t\t: false;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\thasLoadedAllDependencies: !! base && !! siteData,\r\n\t\t\thomepageId: _homepageId,\r\n\t\t\tpostsPageId: _postsPageId,\r\n\t\t\turl: base?.home,\r\n\t\t\tfrontPageTemplateId: _frontPageTemplateId,\r\n\t\t};\r\n\t}, [] );\r\n\r\n\t/**\r\n\t * 这是一个钩子，用于重新创建解析给定WordPress postID和postTypeId的模板的逻辑，\r\n\t * 以便在站点编辑器中尽可能接近前端的匹配。\r\n\t * 由于可能存在未保存的更改影响模板解析，因此无法依赖服务器逻辑。\r\n\t */\r\n\tconst resolvedTemplateId = useSelect(\r\n\t\t( select ) => {\r\n\t\t\t// 如果渲染的帖子类型没有模板，则不需要解析其模板。\r\n\t\t\tif (\r\n\t\t\t\tpostTypesWithoutParentTemplate.includes( postType ) &&\r\n\t\t\t\tpostId\r\n\t\t\t) {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t\t// 不要为多选帖子触发解析。\r\n\t\t\tif ( postId && postId.includes( ',' ) ) {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t\tconst {\r\n\t\t\t\tgetEditedEntityRecord,\r\n\t\t\t\tgetEntityRecords,\r\n\t\t\t\tgetDefaultTemplateId,\r\n\t\t\t\t__experimentalGetTemplateForLink,\r\n\t\t\t} = select( coreDataStore );\r\n\r\n\t\t\tfunction resolveTemplateForPostTypeAndId(\r\n\t\t\t\tpostTypeToResolve,\r\n\t\t\t\tpostIdToResolve\r\n\t\t\t) {\r\n\t\t\t\t// 对于首页，如果存在首页模板，则始终使用首页模板。\r\n\t\t\t\tif (\r\n\t\t\t\t\tpostTypeToResolve === 'page' &&\r\n\t\t\t\t\thomepageId === postIdToResolve\r\n\t\t\t\t) {\r\n\t\t\t\t\t// 仍在检查首页模板是否存在。\r\n\t\t\t\t\t// 不要解析模板。\r\n\t\t\t\t\tif ( frontPageTemplateId === undefined ) {\r\n\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( !! frontPageTemplateId ) {\r\n\t\t\t\t\t\treturn frontPageTemplateId;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst editedEntity = getEditedEntityRecord(\r\n\t\t\t\t\t'postType',\r\n\t\t\t\t\tpostTypeToResolve,\r\n\t\t\t\t\tpostIdToResolve\r\n\t\t\t\t);\r\n\t\t\t\tif ( ! editedEntity ) {\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\t}\r\n\t\t\t\t// 检查当前页面是否为文章页面。\r\n\t\t\t\tif (\r\n\t\t\t\t\tpostTypeToResolve === 'page' &&\r\n\t\t\t\t\tpostsPageId === postIdToResolve\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn __experimentalGetTemplateForLink( editedEntity.link )\r\n\t\t\t\t\t\t?.id;\r\n\t\t\t\t}\r\n\t\t\t\t// 首先检查帖子/页面是否有分配的模板并获取它。\r\n\t\t\t\tconst currentTemplateSlug = editedEntity.template;\r\n\t\t\t\tif ( currentTemplateSlug ) {\r\n\t\t\t\t\tconst currentTemplate = getEntityRecords(\r\n\t\t\t\t\t\t'postType',\r\n\t\t\t\t\t\tTEMPLATE_POST_TYPE,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tper_page: -1,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)?.find( ( { slug } ) => slug === currentTemplateSlug );\r\n\t\t\t\t\tif ( currentTemplate ) {\r\n\t\t\t\t\t\treturn currentTemplate.id;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// 如果没有分配模板，则使用默认模板。\r\n\t\t\t\tlet slugToCheck;\r\n\t\t\t\t// 在`draft`状态下，我们可能没有可用的slug，因此我们使用`single`\r\n\t\t\t\t// 帖子类型模板的slug（例如page、single-post、single-product等）。\r\n\t\t\t\t// 页面不需要在slug中添加`single`前缀以通过模板层次结构进行优先级排序。\r\n\t\t\t\tif ( editedEntity.slug ) {\r\n\t\t\t\t\tslugToCheck =\r\n\t\t\t\t\t\tpostTypeToResolve === 'page'\r\n\t\t\t\t\t\t\t? `${ postTypeToResolve }-${ editedEntity.slug }`\r\n\t\t\t\t\t\t\t: `single-${ postTypeToResolve }-${ editedEntity.slug }`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tslugToCheck =\r\n\t\t\t\t\t\tpostTypeToResolve === 'page'\r\n\t\t\t\t\t\t\t? 'page'\r\n\t\t\t\t\t\t\t: `single-${ postTypeToResolve }`;\r\n\t\t\t\t}\r\n\t\t\t\treturn getDefaultTemplateId( {\r\n\t\t\t\t\tslug: slugToCheck,\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! hasLoadedAllDependencies ) {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t\t// 如果渲染的是特定页面，则需要解析其模板。\r\n\t\t\t// 站点编辑器目前仅支持页面，不支持其他CPT。\r\n\t\t\tif (\r\n\t\t\t\tpostType &&\r\n\t\t\t\tpostId &&\r\n\t\t\t\tauthorizedPostTypes.includes( postType )\r\n\t\t\t) {\r\n\t\t\t\treturn resolveTemplateForPostTypeAndId( postType, postId );\r\n\t\t\t}\r\n\r\n\t\t\t// 如果渲染的是首页，并且有静态首页，则解析其模板。\r\n\t\t\tif ( homepageId ) {\r\n\t\t\t\treturn resolveTemplateForPostTypeAndId( 'page', homepageId );\r\n\t\t\t}\r\n\r\n\t\t\t// 如果没有渲染特定页面，则使用首页模板。\r\n\t\t\tif ( url ) {\r\n\t\t\t\tconst template = __experimentalGetTemplateForLink( url );\r\n\t\t\t\treturn template?.id;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[\r\n\t\t\thomepageId,\r\n\t\t\tpostsPageId,\r\n\t\t\thasLoadedAllDependencies,\r\n\t\t\turl,\r\n\t\t\tpostId,\r\n\t\t\tpostType,\r\n\t\t\tfrontPageTemplateId,\r\n\t\t]\r\n\t);\r\n\r\n\t// 使用useMemo钩子生成上下文\r\n\tconst context = useMemo( () => {\r\n\t\tif ( postTypesWithoutParentTemplate.includes( postType ) && postId ) {\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\tif ( postType && postId && authorizedPostTypes.includes( postType ) ) {\r\n\t\t\treturn { postType, postId };\r\n\t\t}\r\n\t\t// TODO: 对于帖子类型列表，我们可能不应该渲染首页，而是渲染一个占位符\r\n\t\t// 带有类似“选择一个页面”的消息。\r\n\t\tif ( homepageId ) {\r\n\t\t\treturn { postType: 'page', postId: homepageId };\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}, [ homepageId, postType, postId ] );\r\n\r\n\t// 如果帖子类型不需要父模板，则返回相应的对象\r\n\tif ( postTypesWithoutParentTemplate.includes( postType ) && postId ) {\r\n\t\treturn { isReady: true, postType, postId, context };\r\n\t}\r\n\r\n\t// 如果所有依赖项已加载，则返回解析的模板ID和上下文\r\n\tif ( hasLoadedAllDependencies ) {\r\n\t\treturn {\r\n\t\t\tisReady: resolvedTemplateId !== undefined,\r\n\t\t\tpostType: TEMPLATE_POST_TYPE,\r\n\t\t\tpostId: resolvedTemplateId,\r\n\t\t\tcontext,\r\n\t\t};\r\n\t}\r\n\r\n\t// 如果依赖项未加载，则返回未准备好的状态\r\n\treturn { isReady: false };\r\n}\r\n\r\n/**\r\n * 从URL初始化编辑的实体\r\n */\r\nexport default function useInitEditedEntityFromURL() {\r\n\t// 获取当前位置的参数\r\n\tconst { params = {} } = useLocation();\r\n\t// 解析编辑的实体和上下文\r\n\tconst { postType, postId, context, isReady } =\r\n\t\tuseResolveEditedEntityAndContext( params );\r\n\r\n\t// 获取编辑实体的调度器\r\n\tconst { setEditedEntity } = useDispatch( editSiteStore );\r\n\r\n\t// 使用useEffect钩子在实体准备好时设置编辑的实体\r\n\tuseEffect( () => {\r\n\t\tif ( isReady ) {\r\n\t\t\tsetEditedEntity( postType, postId, context );\r\n\t\t}\r\n\t}, [ isReady, postType, postId, context, setEditedEntity ] );\r\n}\r\n"],"mappings":"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","ignoreList":[]}