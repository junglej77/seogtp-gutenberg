{"version":3,"names":["useSelect","store","coreStore","useContext","useMemo","privateApis","blockEditorPrivateApis","editorPrivateApis","__","unlock","GlobalStylesContext","areGlobalStyleConfigsEqual","mergeBaseAndUserConfigs","removePropertiesFromObject","object","properties","length","Object","keys","key","includes","hasThemeVariation","title","settings","styles","useCurrentMergeThemeStyleVariationsWithUserConfig","variationsFromTheme","select","_variationsFromTheme","__experimentalGetCurrentThemeGlobalStylesVariations","user","userVariation","propertiesAsString","toString","clonedUserVariation","structuredClone","userVariationWithoutProperties","variationsWithPropertiesAndBase","filter","variation","isVariationWithProperties","map","variationsByProperties","filterObjectByProperties","newObject","forEach","newFilter","variationWithProperties"],"sources":["@wordpress/edit-site/src/hooks/use-theme-style-variations/use-theme-style-variations-by-property.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useSelect } from '@wordpress/data';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\nimport { useContext, useMemo } from '@wordpress/element';\r\nimport { privateApis as blockEditorPrivateApis } from '@wordpress/block-editor';\r\nimport { privateApis as editorPrivateApis } from '@wordpress/editor';\r\nimport { __ } from '@wordpress/i18n';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { unlock } from '../../lock-unlock';\r\n\r\nconst { GlobalStylesContext, areGlobalStyleConfigsEqual } = unlock(\r\n\tblockEditorPrivateApis\r\n);\r\nconst { mergeBaseAndUserConfigs } = unlock( editorPrivateApis );\r\n\r\n/**\r\n * Removes all instances of properties from an object.\r\n *\r\n * @param {Object}   object     The object to remove the properties from.\r\n * @param {string[]} properties The properties to remove.\r\n * @return {Object} The modified object.\r\n */\r\nexport function removePropertiesFromObject( object, properties ) {\r\n\tif ( ! properties?.length ) {\r\n\t\treturn object;\r\n\t}\r\n\r\n\tif (\r\n\t\ttypeof object !== 'object' ||\r\n\t\t! object ||\r\n\t\t! Object.keys( object ).length\r\n\t) {\r\n\t\treturn object;\r\n\t}\r\n\r\n\tfor ( const key in object ) {\r\n\t\tif ( properties.includes( key ) ) {\r\n\t\t\tdelete object[ key ];\r\n\t\t} else if ( typeof object[ key ] === 'object' ) {\r\n\t\t\tremovePropertiesFromObject( object[ key ], properties );\r\n\t\t}\r\n\t}\r\n\treturn object;\r\n}\r\n\r\n/**\r\n * Checks whether a style variation is empty.\r\n *\r\n * @param {Object} variation          A style variation object.\r\n * @param {string} variation.title    The title of the variation.\r\n * @param {Object} variation.settings The settings of the variation.\r\n * @param {Object} variation.styles   The styles of the variation.\r\n * @return {boolean} Whether the variation is empty.\r\n */\r\nfunction hasThemeVariation( { title, settings, styles } ) {\r\n\treturn (\r\n\t\ttitle === __( 'Default' ) || // Always preserve the default variation.\r\n\t\tObject.keys( settings ).length > 0 ||\r\n\t\tObject.keys( styles ).length > 0\r\n\t);\r\n}\r\n\r\n/**\r\n * Fetches the current theme style variations that contain only the specified properties\r\n * and merges them with the user config.\r\n *\r\n * @param {string[]} properties The properties to filter by.\r\n * @return {Object[]|*} The merged object.\r\n */\r\nexport function useCurrentMergeThemeStyleVariationsWithUserConfig(\r\n\tproperties = []\r\n) {\r\n\tconst { variationsFromTheme } = useSelect( ( select ) => {\r\n\t\tconst _variationsFromTheme =\r\n\t\t\tselect(\r\n\t\t\t\tcoreStore\r\n\t\t\t).__experimentalGetCurrentThemeGlobalStylesVariations();\r\n\r\n\t\treturn {\r\n\t\t\tvariationsFromTheme: _variationsFromTheme || [],\r\n\t\t};\r\n\t}, [] );\r\n\tconst { user: userVariation } = useContext( GlobalStylesContext );\r\n\r\n\tconst propertiesAsString = properties.toString();\r\n\r\n\treturn useMemo( () => {\r\n\t\tconst clonedUserVariation = structuredClone( userVariation );\r\n\r\n\t\t// Get user variation and remove the settings for the given property.\r\n\t\tconst userVariationWithoutProperties = removePropertiesFromObject(\r\n\t\t\tclonedUserVariation,\r\n\t\t\tproperties\r\n\t\t);\r\n\t\tuserVariationWithoutProperties.title = __( 'Default' );\r\n\r\n\t\tconst variationsWithPropertiesAndBase = variationsFromTheme\r\n\t\t\t.filter( ( variation ) => {\r\n\t\t\t\treturn isVariationWithProperties( variation, properties );\r\n\t\t\t} )\r\n\t\t\t.map( ( variation ) => {\r\n\t\t\t\treturn mergeBaseAndUserConfigs(\r\n\t\t\t\t\tuserVariationWithoutProperties,\r\n\t\t\t\t\tvariation\r\n\t\t\t\t);\r\n\t\t\t} );\r\n\r\n\t\tconst variationsByProperties = [\r\n\t\t\tuserVariationWithoutProperties,\r\n\t\t\t...variationsWithPropertiesAndBase,\r\n\t\t];\r\n\r\n\t\t/*\r\n\t\t * Filter out variations with no settings or styles.\r\n\t\t */\r\n\t\treturn variationsByProperties?.length\r\n\t\t\t? variationsByProperties.filter( hasThemeVariation )\r\n\t\t\t: [];\r\n\t}, [ propertiesAsString, userVariation, variationsFromTheme ] );\r\n}\r\n\r\n/**\r\n * Returns a new object, with properties specified in `properties` array.,\r\n * maintain the original object tree structure.\r\n * The function is recursive, so it will perform a deep search for the given properties.\r\n * E.g., the function will return `{ a: { b: { c: { test: 1 } } } }` if the properties are  `[ 'test' ]`.\r\n *\r\n * @param {Object}   object     The object to filter\r\n * @param {string[]} properties The properties to filter by\r\n * @return {Object} The merged object.\r\n */\r\nexport const filterObjectByProperties = ( object, properties ) => {\r\n\tif ( ! object || ! properties?.length ) {\r\n\t\treturn {};\r\n\t}\r\n\r\n\tconst newObject = {};\r\n\tObject.keys( object ).forEach( ( key ) => {\r\n\t\tif ( properties.includes( key ) ) {\r\n\t\t\tnewObject[ key ] = object[ key ];\r\n\t\t} else if ( typeof object[ key ] === 'object' ) {\r\n\t\t\tconst newFilter = filterObjectByProperties(\r\n\t\t\t\tobject[ key ],\r\n\t\t\t\tproperties\r\n\t\t\t);\r\n\t\t\tif ( Object.keys( newFilter ).length ) {\r\n\t\t\t\tnewObject[ key ] = newFilter;\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\treturn newObject;\r\n};\r\n\r\n/**\r\n * Compares a style variation to the same variation filtered by the specified properties.\r\n * Returns true if the variation contains only the properties specified.\r\n *\r\n * @param {Object}   variation  The variation to compare.\r\n * @param {string[]} properties The properties to compare.\r\n * @return {boolean} Whether the variation contains only the specified properties.\r\n */\r\nexport function isVariationWithProperties( variation, properties ) {\r\n\tconst variationWithProperties = filterObjectByProperties(\r\n\t\tstructuredClone( variation ),\r\n\t\tproperties\r\n\t);\r\n\r\n\treturn areGlobalStyleConfigsEqual( variationWithProperties, variation );\r\n}\r\n"],"mappings":"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","ignoreList":[]}