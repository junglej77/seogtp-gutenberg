{"version":3,"names":["store","coreDataStore","createRegistrySelector","createSelector","deprecated","Platform","preferencesStore","editorStore","blockEditorStore","unlock","TEMPLATE_PART_POST_TYPE","getFilteredTemplatePartBlocks","isFeatureActive","select","_","featureName","since","alternative","get","__experimentalGetPreviewDeviceType","version","getDeviceType","getCanUserCreateMedia","canUser","getReusableBlocks","isWeb","OS","getEntityRecords","per_page","getSettings","state","settings","getHomeTemplateId","getEditedPostType","editedPost","postType","getEditedPostId","id","getEditedPostContext","context","getPage","isInserterOpened","__experimentalGetInsertionPoint","getInsertionPoint","isListViewOpened","isSaveViewOpened","saveViewPanel","getBlocksAndTemplateParts","templateParts","getBlocksByName","getBlocksByClientId","clientIds","blocks","getCurrentTemplateTemplateParts","getEditorMode","getCurrentTemplateNavigationPanelSubMenu","getNavigationPanelActiveMenu","isNavigationOpened","isPage","postId","hasPageContentFocus"],"sources":["@wordpress/edit-site/src/store/selectors.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { store as coreDataStore } from '@wordpress/core-data';\r\nimport { createRegistrySelector, createSelector } from '@wordpress/data';\r\nimport deprecated from '@wordpress/deprecated';\r\nimport { Platform } from '@wordpress/element';\r\nimport { store as preferencesStore } from '@wordpress/preferences';\r\nimport { store as editorStore } from '@wordpress/editor';\r\nimport { store as blockEditorStore } from '@wordpress/block-editor';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { unlock } from '../lock-unlock';\r\nimport { TEMPLATE_PART_POST_TYPE } from '../utils/constants';\r\nimport getFilteredTemplatePartBlocks from '../utils/get-filtered-template-parts';\r\n\r\n/**\r\n * @typedef {'template'|'template_type'} TemplateType Template type.\r\n */\r\n\r\n/**\r\n * Returns whether the given feature is enabled or not.\r\n *\r\n * @deprecated\r\n * @param {Object} state       Global application state.\r\n * @param {string} featureName Feature slug.\r\n *\r\n * @return {boolean} Is active.\r\n */\r\nexport const isFeatureActive = createRegistrySelector(\r\n\t( select ) => ( _, featureName ) => {\r\n\t\tdeprecated( `select( 'core/edit-site' ).isFeatureActive`, {\r\n\t\t\tsince: '6.0',\r\n\t\t\talternative: `select( 'core/preferences' ).get`,\r\n\t\t} );\r\n\r\n\t\treturn !! select( preferencesStore ).get(\r\n\t\t\t'core/edit-site',\r\n\t\t\tfeatureName\r\n\t\t);\r\n\t}\r\n);\r\n\r\n/**\r\n * Returns the current editing canvas device type.\r\n *\r\n * @deprecated\r\n *\r\n * @param {Object} state Global application state.\r\n *\r\n * @return {string} Device type.\r\n */\r\nexport const __experimentalGetPreviewDeviceType = createRegistrySelector(\r\n\t( select ) => () => {\r\n\t\tdeprecated(\r\n\t\t\t`select( 'core/edit-site' ).__experimentalGetPreviewDeviceType`,\r\n\t\t\t{\r\n\t\t\t\tsince: '6.5',\r\n\t\t\t\tversion: '6.7',\r\n\t\t\t\talternative: `select( 'core/editor' ).getDeviceType`,\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn select( editorStore ).getDeviceType();\r\n\t}\r\n);\r\n\r\n/**\r\n * Returns whether the current user can create media or not.\r\n *\r\n * @param {Object} state Global application state.\r\n *\r\n * @return {Object} Whether the current user can create media or not.\r\n */\r\nexport const getCanUserCreateMedia = createRegistrySelector(\r\n\t( select ) => () => {\r\n\t\tdeprecated(\r\n\t\t\t`wp.data.select( 'core/edit-site' ).getCanUserCreateMedia()`,\r\n\t\t\t{\r\n\t\t\t\tsince: '6.7',\r\n\t\t\t\talternative: `wp.data.select( 'core' ).canUser( 'create', { kind: 'root', type: 'media' } )`,\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn select( coreDataStore ).canUser( 'create', 'media' );\r\n\t}\r\n);\r\n\r\n/**\r\n * Returns any available Reusable blocks.\r\n *\r\n * @param {Object} state Global application state.\r\n *\r\n * @return {Array} The available reusable blocks.\r\n */\r\nexport const getReusableBlocks = createRegistrySelector( ( select ) => () => {\r\n\tdeprecated( `select( 'core/edit-site' ).getReusableBlocks()`, {\r\n\t\tsince: '6.5',\r\n\t\tversion: '6.8',\r\n\t\talternative: `select( 'core/core' ).getEntityRecords( 'postType', 'wp_block' )`,\r\n\t} );\r\n\tconst isWeb = Platform.OS === 'web';\r\n\treturn isWeb\r\n\t\t? select( coreDataStore ).getEntityRecords( 'postType', 'wp_block', {\r\n\t\t\t\tper_page: -1,\r\n\t\t  } )\r\n\t\t: [];\r\n} );\r\n\r\n/**\r\n * Returns the site editor settings.\r\n *\r\n * @param {Object} state Global application state.\r\n *\r\n * @return {Object} Settings.\r\n */\r\nexport function getSettings( state ) {\r\n\t// It is important that we don't inject anything into these settings locally.\r\n\t// The reason for this is that we have an effect in place that calls setSettings based on the previous value of getSettings.\r\n\t// If we add computed settings here, we'll be adding these computed settings to the state which is very unexpected.\r\n\treturn state.settings;\r\n}\r\n\r\n/**\r\n * @deprecated\r\n */\r\nexport function getHomeTemplateId() {\r\n\tdeprecated( \"select( 'core/edit-site' ).getHomeTemplateId\", {\r\n\t\tsince: '6.2',\r\n\t\tversion: '6.4',\r\n\t} );\r\n}\r\n\r\n/**\r\n * Returns the current edited post type (wp_template or wp_template_part).\r\n *\r\n * @param {Object} state Global application state.\r\n *\r\n * @return {?TemplateType} Template type.\r\n */\r\nexport function getEditedPostType( state ) {\r\n\treturn state.editedPost.postType;\r\n}\r\n\r\n/**\r\n * Returns the ID of the currently edited template or template part.\r\n *\r\n * @param {Object} state Global application state.\r\n *\r\n * @return {?string} Post ID.\r\n */\r\nexport function getEditedPostId( state ) {\r\n\treturn state.editedPost.id;\r\n}\r\n\r\n/**\r\n * Returns the edited post's context object.\r\n *\r\n * @deprecated\r\n * @param {Object} state Global application state.\r\n *\r\n * @return {Object} Page.\r\n */\r\nexport function getEditedPostContext( state ) {\r\n\treturn state.editedPost.context;\r\n}\r\n\r\n/**\r\n * Returns the current page object.\r\n *\r\n * @deprecated\r\n * @param {Object} state Global application state.\r\n *\r\n * @return {Object} Page.\r\n */\r\nexport function getPage( state ) {\r\n\treturn { context: state.editedPost.context };\r\n}\r\n\r\n/**\r\n * Returns true if the inserter is opened.\r\n *\r\n * @deprecated\r\n *\r\n * @param {Object} state Global application state.\r\n *\r\n * @return {boolean} Whether the inserter is opened.\r\n */\r\nexport const isInserterOpened = createRegistrySelector( ( select ) => () => {\r\n\tdeprecated( `select( 'core/edit-site' ).isInserterOpened`, {\r\n\t\tsince: '6.5',\r\n\t\talternative: `select( 'core/editor' ).isInserterOpened`,\r\n\t} );\r\n\treturn select( editorStore ).isInserterOpened();\r\n} );\r\n\r\n/**\r\n * Get the insertion point for the inserter.\r\n *\r\n * @deprecated\r\n *\r\n * @param {Object} state Global application state.\r\n *\r\n * @return {Object} The root client ID, index to insert at and starting filter value.\r\n */\r\nexport const __experimentalGetInsertionPoint = createRegistrySelector(\r\n\t( select ) => () => {\r\n\t\tdeprecated(\r\n\t\t\t`select( 'core/edit-site' ).__experimentalGetInsertionPoint`,\r\n\t\t\t{\r\n\t\t\t\tsince: '6.5',\r\n\t\t\t\tversion: '6.7',\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn unlock( select( editorStore ) ).getInsertionPoint();\r\n\t}\r\n);\r\n\r\n/**\r\n * Returns true if the list view is opened.\r\n *\r\n * @param {Object} state Global application state.\r\n *\r\n * @return {boolean} Whether the list view is opened.\r\n */\r\nexport const isListViewOpened = createRegistrySelector( ( select ) => () => {\r\n\tdeprecated( `select( 'core/edit-site' ).isListViewOpened`, {\r\n\t\tsince: '6.5',\r\n\t\talternative: `select( 'core/editor' ).isListViewOpened`,\r\n\t} );\r\n\treturn select( editorStore ).isListViewOpened();\r\n} );\r\n\r\n/**\r\n * Returns the current opened/closed state of the save panel.\r\n *\r\n * @param {Object} state Global application state.\r\n *\r\n * @return {boolean} True if the save panel should be open; false if closed.\r\n */\r\nexport function isSaveViewOpened( state ) {\r\n\treturn state.saveViewPanel;\r\n}\r\n\r\nfunction getBlocksAndTemplateParts( select ) {\r\n\tconst templateParts = select( coreDataStore ).getEntityRecords(\r\n\t\t'postType',\r\n\t\tTEMPLATE_PART_POST_TYPE,\r\n\t\t{ per_page: -1 }\r\n\t);\r\n\r\n\tconst { getBlocksByName, getBlocksByClientId } = select( blockEditorStore );\r\n\r\n\tconst clientIds = getBlocksByName( 'core/template-part' );\r\n\tconst blocks = getBlocksByClientId( clientIds );\r\n\treturn [ blocks, templateParts ];\r\n}\r\n\r\n/**\r\n * Returns the template parts and their blocks for the current edited template.\r\n *\r\n * @deprecated\r\n * @param {Object} state Global application state.\r\n * @return {Array} Template parts and their blocks in an array.\r\n */\r\nexport const getCurrentTemplateTemplateParts = createRegistrySelector(\r\n\t( select ) =>\r\n\t\tcreateSelector(\r\n\t\t\t() => {\r\n\t\t\t\tdeprecated(\r\n\t\t\t\t\t`select( 'core/edit-site' ).getCurrentTemplateTemplateParts()`,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsince: '6.7',\r\n\t\t\t\t\t\tversion: '6.9',\r\n\t\t\t\t\t\talternative: `select( 'core/block-editor' ).getBlocksByName( 'core/template-part' )`,\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn getFilteredTemplatePartBlocks(\r\n\t\t\t\t\t...getBlocksAndTemplateParts( select )\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t() => getBlocksAndTemplateParts( select )\r\n\t\t)\r\n);\r\n\r\n/**\r\n * Returns the current editing mode.\r\n *\r\n * @param {Object} state Global application state.\r\n *\r\n * @return {string} Editing mode.\r\n */\r\nexport const getEditorMode = createRegistrySelector( ( select ) => () => {\r\n\treturn select( preferencesStore ).get( 'core', 'editorMode' );\r\n} );\r\n\r\n/**\r\n * @deprecated\r\n */\r\nexport function getCurrentTemplateNavigationPanelSubMenu() {\r\n\tdeprecated(\r\n\t\t\"dispatch( 'core/edit-site' ).getCurrentTemplateNavigationPanelSubMenu\",\r\n\t\t{\r\n\t\t\tsince: '6.2',\r\n\t\t\tversion: '6.4',\r\n\t\t}\r\n\t);\r\n}\r\n\r\n/**\r\n * @deprecated\r\n */\r\nexport function getNavigationPanelActiveMenu() {\r\n\tdeprecated( \"dispatch( 'core/edit-site' ).getNavigationPanelActiveMenu\", {\r\n\t\tsince: '6.2',\r\n\t\tversion: '6.4',\r\n\t} );\r\n}\r\n\r\n/**\r\n * @deprecated\r\n */\r\nexport function isNavigationOpened() {\r\n\tdeprecated( \"dispatch( 'core/edit-site' ).isNavigationOpened\", {\r\n\t\tsince: '6.2',\r\n\t\tversion: '6.4',\r\n\t} );\r\n}\r\n\r\n/**\r\n * Whether or not the editor has a page loaded into it.\r\n *\r\n * @see setPage\r\n *\r\n * @param {Object} state Global application state.\r\n *\r\n * @return {boolean} Whether or not the editor has a page loaded into it.\r\n */\r\nexport function isPage( state ) {\r\n\treturn !! state.editedPost.context?.postId;\r\n}\r\n\r\n/**\r\n * Whether or not the editor allows only page content to be edited.\r\n *\r\n * @deprecated\r\n *\r\n * @return {boolean} Whether or not focus is on editing page content.\r\n */\r\nexport function hasPageContentFocus() {\r\n\tdeprecated( `select( 'core/edit-site' ).hasPageContentFocus`, {\r\n\t\tsince: '6.5',\r\n\t} );\r\n\r\n\treturn false;\r\n}\r\n"],"mappings":"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","ignoreList":[]}