{"version":3,"names":["isTemplatePart","EMPTY_ARRAY","getFilteredTemplatePartBlocks","blocks","templateParts","templatePartsById","reduce","newTemplateParts","part","id","result","stack","length","innerBlocks","block","shift","unshift","attributes","theme","slug","templatePartId","templatePart","push"],"sources":["@wordpress/edit-site/src/utils/get-filtered-template-parts.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { isTemplatePart } from '@wordpress/blocks';\r\n\r\nconst EMPTY_ARRAY = [];\r\n\r\n/**\r\n * Get a flattened and filtered list of template parts and the matching block for that template part.\r\n *\r\n * Takes a list of blocks defined within a template, and a list of template parts, and returns a\r\n * flattened list of template parts and the matching block for that template part.\r\n *\r\n * @param {Array}  blocks        Blocks to flatten.\r\n * @param {?Array} templateParts Available template parts.\r\n * @return {Array} An array of template parts and their blocks.\r\n */\r\nexport default function getFilteredTemplatePartBlocks(\r\n\tblocks = EMPTY_ARRAY,\r\n\ttemplateParts\r\n) {\r\n\tconst templatePartsById = templateParts\r\n\t\t? // Key template parts by their ID.\r\n\t\t  templateParts.reduce(\r\n\t\t\t\t( newTemplateParts, part ) => ( {\r\n\t\t\t\t\t...newTemplateParts,\r\n\t\t\t\t\t[ part.id ]: part,\r\n\t\t\t\t} ),\r\n\t\t\t\t{}\r\n\t\t  )\r\n\t\t: {};\r\n\r\n\tconst result = [];\r\n\r\n\t// Iterate over all blocks, recursing into inner blocks.\r\n\t// Output will be based on a depth-first traversal.\r\n\tconst stack = [ ...blocks ];\r\n\twhile ( stack.length ) {\r\n\t\tconst { innerBlocks, ...block } = stack.shift();\r\n\t\t// Place inner blocks at the beginning of the stack to preserve order.\r\n\t\tstack.unshift( ...innerBlocks );\r\n\r\n\t\tif ( isTemplatePart( block ) ) {\r\n\t\t\tconst {\r\n\t\t\t\tattributes: { theme, slug },\r\n\t\t\t} = block;\r\n\t\t\tconst templatePartId = `${ theme }//${ slug }`;\r\n\t\t\tconst templatePart = templatePartsById[ templatePartId ];\r\n\r\n\t\t\t// Only add to output if the found template part block is in the list of available template parts.\r\n\t\t\tif ( templatePart ) {\r\n\t\t\t\tresult.push( {\r\n\t\t\t\t\ttemplatePart,\r\n\t\t\t\t\tblock,\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,cAAc,QAAQ,mBAAmB;AAElD,MAAMC,WAAW,GAAG,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,6BAA6BA,CACpDC,MAAM,GAAGF,WAAW,EACpBG,aAAa,EACZ;EACD,MAAMC,iBAAiB,GAAGD,aAAa;EACpC;EACAA,aAAa,CAACE,MAAM,CACpB,CAAEC,gBAAgB,EAAEC,IAAI,MAAQ;IAC/B,GAAGD,gBAAgB;IACnB,CAAEC,IAAI,CAACC,EAAE,GAAID;EACd,CAAC,CAAE,EACH,CAAC,CACD,CAAC,GACD,CAAC,CAAC;EAEL,MAAME,MAAM,GAAG,EAAE;;EAEjB;EACA;EACA,MAAMC,KAAK,GAAG,CAAE,GAAGR,MAAM,CAAE;EAC3B,OAAQQ,KAAK,CAACC,MAAM,EAAG;IACtB,MAAM;MAAEC,WAAW;MAAE,GAAGC;IAAM,CAAC,GAAGH,KAAK,CAACI,KAAK,CAAC,CAAC;IAC/C;IACAJ,KAAK,CAACK,OAAO,CAAE,GAAGH,WAAY,CAAC;IAE/B,IAAKb,cAAc,CAAEc,KAAM,CAAC,EAAG;MAC9B,MAAM;QACLG,UAAU,EAAE;UAAEC,KAAK;UAAEC;QAAK;MAC3B,CAAC,GAAGL,KAAK;MACT,MAAMM,cAAc,GAAI,GAAGF,KAAO,KAAKC,IAAM,EAAC;MAC9C,MAAME,YAAY,GAAGhB,iBAAiB,CAAEe,cAAc,CAAE;;MAExD;MACA,IAAKC,YAAY,EAAG;QACnBX,MAAM,CAACY,IAAI,CAAE;UACZD,YAAY;UACZP;QACD,CAAE,CAAC;MACJ;IACD;EACD;EAEA,OAAOJ,MAAM;AACd","ignoreList":[]}