{"version":3,"names":["useEffect","Platform","useContext","useCallback","isRTL","__","ComplementaryArea","store","interfaceStore","BlockInspector","blockEditorStore","drawerLeft","drawerRight","privateApis","componentsPrivateApis","useSelect","useDispatch","SIDEBAR_ACTIVE_BY_DEFAULT","select","web","native","BLOCK_INSPECTOR_IDENTIFIER","WIDGET_AREAS_IDENTIFIER","WidgetAreas","editWidgetsStore","unlock","jsx","_jsx","jsxs","_jsxs","Tabs","SidebarHeader","selectedWidgetAreaBlock","TabList","children","Tab","tabId","attributes","name","SidebarContent","hasSelectedNonAreaBlock","currentArea","isGeneralSidebarOpen","enableComplementaryArea","tabsContextValue","Context","className","header","Provider","value","headerClassName","title","closeLabel","scope","identifier","icon","isActiveByDefault","TabPanel","focusable","selectedWidgetAreaId","id","Sidebar","getSelectedBlock","getBlock","getBlockParentsByBlockName","getActiveComplementaryArea","selectedBlock","activeArea","currentSelection","widgetAreaBlock","clientId","onTabSelect","newSelectedTabId","selectedTabId","onSelect","selectOnMove"],"sources":["@wordpress/edit-widgets/src/components/sidebar/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport {\r\n\tuseEffect,\r\n\tPlatform,\r\n\tuseContext,\r\n\tuseCallback,\r\n} from '@wordpress/element';\r\nimport { isRTL, __ } from '@wordpress/i18n';\r\nimport {\r\n\tComplementaryArea,\r\n\tstore as interfaceStore,\r\n} from '@wordpress/interface';\r\nimport {\r\n\tBlockInspector,\r\n\tstore as blockEditorStore,\r\n} from '@wordpress/block-editor';\r\n\r\nimport { drawerLeft, drawerRight } from '@wordpress/icons';\r\nimport { privateApis as componentsPrivateApis } from '@wordpress/components';\r\nimport { useSelect, useDispatch } from '@wordpress/data';\r\n\r\nconst SIDEBAR_ACTIVE_BY_DEFAULT = Platform.select( {\r\n\tweb: true,\r\n\tnative: false,\r\n} );\r\n\r\nconst BLOCK_INSPECTOR_IDENTIFIER = 'edit-widgets/block-inspector';\r\n\r\n// Widget areas were one called block areas, so use 'edit-widgets/block-areas'\r\n// for backwards compatibility.\r\nconst WIDGET_AREAS_IDENTIFIER = 'edit-widgets/block-areas';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport WidgetAreas from './widget-areas';\r\nimport { store as editWidgetsStore } from '../../store';\r\nimport { unlock } from '../../lock-unlock';\r\n\r\nconst { Tabs } = unlock( componentsPrivateApis );\r\n\r\nfunction SidebarHeader( { selectedWidgetAreaBlock } ) {\r\n\treturn (\r\n\t\t<Tabs.TabList>\r\n\t\t\t<Tabs.Tab tabId={ WIDGET_AREAS_IDENTIFIER }>\r\n\t\t\t\t{ selectedWidgetAreaBlock\r\n\t\t\t\t\t? selectedWidgetAreaBlock.attributes.name\r\n\t\t\t\t\t: __( 'Widget Areas' ) }\r\n\t\t\t</Tabs.Tab>\r\n\t\t\t<Tabs.Tab tabId={ BLOCK_INSPECTOR_IDENTIFIER }>\r\n\t\t\t\t{ __( 'Block' ) }\r\n\t\t\t</Tabs.Tab>\r\n\t\t</Tabs.TabList>\r\n\t);\r\n}\r\n\r\nfunction SidebarContent( {\r\n\thasSelectedNonAreaBlock,\r\n\tcurrentArea,\r\n\tisGeneralSidebarOpen,\r\n\tselectedWidgetAreaBlock,\r\n} ) {\r\n\tconst { enableComplementaryArea } = useDispatch( interfaceStore );\r\n\r\n\tuseEffect( () => {\r\n\t\tif (\r\n\t\t\thasSelectedNonAreaBlock &&\r\n\t\t\tcurrentArea === WIDGET_AREAS_IDENTIFIER &&\r\n\t\t\tisGeneralSidebarOpen\r\n\t\t) {\r\n\t\t\tenableComplementaryArea(\r\n\t\t\t\t'core/edit-widgets',\r\n\t\t\t\tBLOCK_INSPECTOR_IDENTIFIER\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (\r\n\t\t\t! hasSelectedNonAreaBlock &&\r\n\t\t\tcurrentArea === BLOCK_INSPECTOR_IDENTIFIER &&\r\n\t\t\tisGeneralSidebarOpen\r\n\t\t) {\r\n\t\t\tenableComplementaryArea(\r\n\t\t\t\t'core/edit-widgets',\r\n\t\t\t\tWIDGET_AREAS_IDENTIFIER\r\n\t\t\t);\r\n\t\t}\r\n\t\t// We're intentionally leaving `currentArea` and `isGeneralSidebarOpen`\r\n\t\t// out of the dep array because we want this effect to run based on\r\n\t\t// block selection changes, not sidebar state changes.\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [ hasSelectedNonAreaBlock, enableComplementaryArea ] );\r\n\r\n\tconst tabsContextValue = useContext( Tabs.Context );\r\n\r\n\treturn (\r\n\t\t<ComplementaryArea\r\n\t\t\tclassName=\"edit-widgets-sidebar\"\r\n\t\t\theader={\r\n\t\t\t\t<Tabs.Context.Provider value={ tabsContextValue }>\r\n\t\t\t\t\t<SidebarHeader\r\n\t\t\t\t\t\tselectedWidgetAreaBlock={ selectedWidgetAreaBlock }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Tabs.Context.Provider>\r\n\t\t\t}\r\n\t\t\theaderClassName=\"edit-widgets-sidebar__panel-tabs\"\r\n\t\t\t/* translators: button label text should, if possible, be under 16 characters. */\r\n\t\t\ttitle={ __( 'Settings' ) }\r\n\t\t\tcloseLabel={ __( 'Close Settings' ) }\r\n\t\t\tscope=\"core/edit-widgets\"\r\n\t\t\tidentifier={ currentArea }\r\n\t\t\ticon={ isRTL() ? drawerLeft : drawerRight }\r\n\t\t\tisActiveByDefault={ SIDEBAR_ACTIVE_BY_DEFAULT }\r\n\t\t>\r\n\t\t\t<Tabs.Context.Provider value={ tabsContextValue }>\r\n\t\t\t\t<Tabs.TabPanel\r\n\t\t\t\t\ttabId={ WIDGET_AREAS_IDENTIFIER }\r\n\t\t\t\t\tfocusable={ false }\r\n\t\t\t\t>\r\n\t\t\t\t\t<WidgetAreas\r\n\t\t\t\t\t\tselectedWidgetAreaId={\r\n\t\t\t\t\t\t\tselectedWidgetAreaBlock?.attributes.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Tabs.TabPanel>\r\n\t\t\t\t<Tabs.TabPanel\r\n\t\t\t\t\ttabId={ BLOCK_INSPECTOR_IDENTIFIER }\r\n\t\t\t\t\tfocusable={ false }\r\n\t\t\t\t>\r\n\t\t\t\t\t{ hasSelectedNonAreaBlock ? (\r\n\t\t\t\t\t\t<BlockInspector />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t// Pretend that Widget Areas are part of the UI by not\r\n\t\t\t\t\t\t// showing the Block Inspector when one is selected.\r\n\t\t\t\t\t\t<span className=\"block-editor-block-inspector__no-blocks\">\r\n\t\t\t\t\t\t\t{ __( 'No block selected.' ) }\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t) }\r\n\t\t\t\t</Tabs.TabPanel>\r\n\t\t\t</Tabs.Context.Provider>\r\n\t\t</ComplementaryArea>\r\n\t);\r\n}\r\n\r\nexport default function Sidebar() {\r\n\tconst {\r\n\t\tcurrentArea,\r\n\t\thasSelectedNonAreaBlock,\r\n\t\tisGeneralSidebarOpen,\r\n\t\tselectedWidgetAreaBlock,\r\n\t} = useSelect( ( select ) => {\r\n\t\tconst { getSelectedBlock, getBlock, getBlockParentsByBlockName } =\r\n\t\t\tselect( blockEditorStore );\r\n\t\tconst { getActiveComplementaryArea } = select( interfaceStore );\r\n\r\n\t\tconst selectedBlock = getSelectedBlock();\r\n\r\n\t\tconst activeArea = getActiveComplementaryArea( editWidgetsStore.name );\r\n\r\n\t\tlet currentSelection = activeArea;\r\n\t\tif ( ! currentSelection ) {\r\n\t\t\tif ( selectedBlock ) {\r\n\t\t\t\tcurrentSelection = BLOCK_INSPECTOR_IDENTIFIER;\r\n\t\t\t} else {\r\n\t\t\t\tcurrentSelection = WIDGET_AREAS_IDENTIFIER;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet widgetAreaBlock;\r\n\t\tif ( selectedBlock ) {\r\n\t\t\tif ( selectedBlock.name === 'core/widget-area' ) {\r\n\t\t\t\twidgetAreaBlock = selectedBlock;\r\n\t\t\t} else {\r\n\t\t\t\twidgetAreaBlock = getBlock(\r\n\t\t\t\t\tgetBlockParentsByBlockName(\r\n\t\t\t\t\t\tselectedBlock.clientId,\r\n\t\t\t\t\t\t'core/widget-area'\r\n\t\t\t\t\t)[ 0 ]\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tcurrentArea: currentSelection,\r\n\t\t\thasSelectedNonAreaBlock: !! (\r\n\t\t\t\tselectedBlock && selectedBlock.name !== 'core/widget-area'\r\n\t\t\t),\r\n\t\t\tisGeneralSidebarOpen: !! activeArea,\r\n\t\t\tselectedWidgetAreaBlock: widgetAreaBlock,\r\n\t\t};\r\n\t}, [] );\r\n\r\n\tconst { enableComplementaryArea } = useDispatch( interfaceStore );\r\n\r\n\t// `newSelectedTabId` could technically be falsey if no tab is selected (i.e.\r\n\t// the initial render) or when we don't want a tab displayed (i.e. the\r\n\t// sidebar is closed). These cases should both be covered by the `!!` check\r\n\t// below, so we shouldn't need any additional falsey handling.\r\n\tconst onTabSelect = useCallback(\r\n\t\t( newSelectedTabId ) => {\r\n\t\t\tif ( !! newSelectedTabId ) {\r\n\t\t\t\tenableComplementaryArea(\r\n\t\t\t\t\teditWidgetsStore.name,\r\n\t\t\t\t\tnewSelectedTabId\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ enableComplementaryArea ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Tabs\r\n\t\t\t// Due to how this component is controlled (via a value from the\r\n\t\t\t// `interfaceStore`), when the sidebar closes the currently selected\r\n\t\t\t// tab can't be found. This causes the component to continuously reset\r\n\t\t\t// the selection to `null` in an infinite loop. Proactively setting\r\n\t\t\t// the selected tab to `null` avoids that.\r\n\t\t\tselectedTabId={ isGeneralSidebarOpen ? currentArea : null }\r\n\t\t\tonSelect={ onTabSelect }\r\n\t\t\tselectOnMove={ false }\r\n\t\t>\r\n\t\t\t<SidebarContent\r\n\t\t\t\thasSelectedNonAreaBlock={ hasSelectedNonAreaBlock }\r\n\t\t\t\tcurrentArea={ currentArea }\r\n\t\t\t\tisGeneralSidebarOpen={ isGeneralSidebarOpen }\r\n\t\t\t\tselectedWidgetAreaBlock={ selectedWidgetAreaBlock }\r\n\t\t\t/>\r\n\t\t</Tabs>\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]}