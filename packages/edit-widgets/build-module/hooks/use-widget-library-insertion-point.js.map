{"version":3,"names":["useSelect","store","blockEditorStore","coreStore","editWidgetsStore","buildWidgetAreasPostId","KIND","POST_TYPE","useWidgetLibraryInsertionPoint","firstRootId","select","getEntityRecord","widgetAreasPost","blocks","clientId","getBlockRootClientId","getBlockSelectionEnd","getBlockOrder","getBlockIndex","insertionPoint","__experimentalGetInsertionPoint","rootClientId","insertionIndex","length"],"sources":["@wordpress/edit-widgets/src/hooks/use-widget-library-insertion-point.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useSelect } from '@wordpress/data';\r\nimport { store as blockEditorStore } from '@wordpress/block-editor';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as editWidgetsStore } from '../store';\r\nimport { buildWidgetAreasPostId, KIND, POST_TYPE } from '../store/utils';\r\n\r\nconst useWidgetLibraryInsertionPoint = () => {\r\n\tconst firstRootId = useSelect( ( select ) => {\r\n\t\t// Default to the first widget area\r\n\t\tconst { getEntityRecord } = select( coreStore );\r\n\t\tconst widgetAreasPost = getEntityRecord(\r\n\t\t\tKIND,\r\n\t\t\tPOST_TYPE,\r\n\t\t\tbuildWidgetAreasPostId()\r\n\t\t);\r\n\t\treturn widgetAreasPost?.blocks[ 0 ]?.clientId;\r\n\t}, [] );\r\n\r\n\treturn useSelect(\r\n\t\t( select ) => {\r\n\t\t\tconst {\r\n\t\t\t\tgetBlockRootClientId,\r\n\t\t\t\tgetBlockSelectionEnd,\r\n\t\t\t\tgetBlockOrder,\r\n\t\t\t\tgetBlockIndex,\r\n\t\t\t} = select( blockEditorStore );\r\n\r\n\t\t\tconst insertionPoint =\r\n\t\t\t\tselect( editWidgetsStore ).__experimentalGetInsertionPoint();\r\n\r\n\t\t\t// \"Browse all\" in the quick inserter will set the rootClientId to the current block.\r\n\t\t\t// Otherwise, it will just be undefined, and we'll have to handle it differently below.\r\n\t\t\tif ( insertionPoint.rootClientId ) {\r\n\t\t\t\treturn insertionPoint;\r\n\t\t\t}\r\n\r\n\t\t\tconst clientId = getBlockSelectionEnd() || firstRootId;\r\n\t\t\tconst rootClientId = getBlockRootClientId( clientId );\r\n\r\n\t\t\t// If the selected block is at the root level, it's a widget area and\r\n\t\t\t// blocks can't be inserted here. Return this block as the root and the\r\n\t\t\t// last child clientId indicating insertion at the end.\r\n\t\t\tif ( clientId && rootClientId === '' ) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\trootClientId: clientId,\r\n\t\t\t\t\tinsertionIndex: getBlockOrder( clientId ).length,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\trootClientId,\r\n\t\t\t\tinsertionIndex: getBlockIndex( clientId ) + 1,\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ firstRootId ]\r\n\t);\r\n};\r\n\r\nexport default useWidgetLibraryInsertionPoint;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,yBAAyB;AACnE,SAASD,KAAK,IAAIE,SAAS,QAAQ,sBAAsB;;AAEzD;AACA;AACA;AACA,SAASF,KAAK,IAAIG,gBAAgB,QAAQ,UAAU;AACpD,SAASC,sBAAsB,EAAEC,IAAI,EAAEC,SAAS,QAAQ,gBAAgB;AAExE,MAAMC,8BAA8B,GAAGA,CAAA,KAAM;EAC5C,MAAMC,WAAW,GAAGT,SAAS,CAAIU,MAAM,IAAM;IAC5C;IACA,MAAM;MAAEC;IAAgB,CAAC,GAAGD,MAAM,CAAEP,SAAU,CAAC;IAC/C,MAAMS,eAAe,GAAGD,eAAe,CACtCL,IAAI,EACJC,SAAS,EACTF,sBAAsB,CAAC,CACxB,CAAC;IACD,OAAOO,eAAe,EAAEC,MAAM,CAAE,CAAC,CAAE,EAAEC,QAAQ;EAC9C,CAAC,EAAE,EAAG,CAAC;EAEP,OAAOd,SAAS,CACbU,MAAM,IAAM;IACb,MAAM;MACLK,oBAAoB;MACpBC,oBAAoB;MACpBC,aAAa;MACbC;IACD,CAAC,GAAGR,MAAM,CAAER,gBAAiB,CAAC;IAE9B,MAAMiB,cAAc,GACnBT,MAAM,CAAEN,gBAAiB,CAAC,CAACgB,+BAA+B,CAAC,CAAC;;IAE7D;IACA;IACA,IAAKD,cAAc,CAACE,YAAY,EAAG;MAClC,OAAOF,cAAc;IACtB;IAEA,MAAML,QAAQ,GAAGE,oBAAoB,CAAC,CAAC,IAAIP,WAAW;IACtD,MAAMY,YAAY,GAAGN,oBAAoB,CAAED,QAAS,CAAC;;IAErD;IACA;IACA;IACA,IAAKA,QAAQ,IAAIO,YAAY,KAAK,EAAE,EAAG;MACtC,OAAO;QACNA,YAAY,EAAEP,QAAQ;QACtBQ,cAAc,EAAEL,aAAa,CAAEH,QAAS,CAAC,CAACS;MAC3C,CAAC;IACF;IAEA,OAAO;MACNF,YAAY;MACZC,cAAc,EAAEJ,aAAa,CAAEJ,QAAS,CAAC,GAAG;IAC7C,CAAC;EACF,CAAC,EACD,CAAEL,WAAW,CACd,CAAC;AACF,CAAC;AAED,eAAeD,8BAA8B","ignoreList":[]}