{"version":3,"names":["createBlock","store","coreStore","persistStubPost","setWidgetAreasOpenState","KIND","WIDGET_AREA_ENTITY_TYPE","buildWidgetsQuery","buildWidgetAreasQuery","buildWidgetAreaPostId","buildWidgetAreasPostId","transformWidgetToBlock","getWidgetAreas","dispatch","registry","query","widgetAreas","resolveSelect","getEntityRecords","widgetAreaBlocks","sortedWidgetAreas","sort","a","b","id","widgetArea","push","name","widgets","length","widgetAreasOpenState","forEach","widgetAreaBlock","index","clientId","getWidgets","groupedBySidebar","widget","block","sidebar","sidebarId","hasOwnProperty"],"sources":["@wordpress/edit-widgets/src/store/resolvers.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { createBlock } from '@wordpress/blocks';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { persistStubPost, setWidgetAreasOpenState } from './actions';\r\nimport {\r\n\tKIND,\r\n\tWIDGET_AREA_ENTITY_TYPE,\r\n\tbuildWidgetsQuery,\r\n\tbuildWidgetAreasQuery,\r\n\tbuildWidgetAreaPostId,\r\n\tbuildWidgetAreasPostId,\r\n} from './utils';\r\nimport { transformWidgetToBlock } from './transformers';\r\n\r\n/**\r\n * Creates a \"stub\" widgets post reflecting all available widget areas. The\r\n * post is meant as a convenient to only exists in runtime and should never be saved. It\r\n * enables a convenient way of editing the widgets by using a regular post editor.\r\n *\r\n * Fetches all widgets from all widgets aras, converts them into blocks, and hydrates a new post with them.\r\n *\r\n * @return {Function} An action creator.\r\n */\r\nexport const getWidgetAreas =\r\n\t() =>\r\n\tasync ( { dispatch, registry } ) => {\r\n\t\tconst query = buildWidgetAreasQuery();\r\n\t\tconst widgetAreas = await registry\r\n\t\t\t.resolveSelect( coreStore )\r\n\t\t\t.getEntityRecords( KIND, WIDGET_AREA_ENTITY_TYPE, query );\r\n\r\n\t\tconst widgetAreaBlocks = [];\r\n\t\tconst sortedWidgetAreas = widgetAreas.sort( ( a, b ) => {\r\n\t\t\tif ( a.id === 'wp_inactive_widgets' ) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\tif ( b.id === 'wp_inactive_widgets' ) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t} );\r\n\t\tfor ( const widgetArea of sortedWidgetAreas ) {\r\n\t\t\twidgetAreaBlocks.push(\r\n\t\t\t\tcreateBlock( 'core/widget-area', {\r\n\t\t\t\t\tid: widgetArea.id,\r\n\t\t\t\t\tname: widgetArea.name,\r\n\t\t\t\t} )\r\n\t\t\t);\r\n\r\n\t\t\tif ( ! widgetArea.widgets.length ) {\r\n\t\t\t\t// If this widget area has no widgets, it won't get a post setup by\r\n\t\t\t\t// the getWidgets resolver.\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tpersistStubPost(\r\n\t\t\t\t\t\tbuildWidgetAreaPostId( widgetArea.id ),\r\n\t\t\t\t\t\t[]\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst widgetAreasOpenState = {};\r\n\t\twidgetAreaBlocks.forEach( ( widgetAreaBlock, index ) => {\r\n\t\t\t// Defaults to open the first widget area.\r\n\t\t\twidgetAreasOpenState[ widgetAreaBlock.clientId ] = index === 0;\r\n\t\t} );\r\n\t\tdispatch( setWidgetAreasOpenState( widgetAreasOpenState ) );\r\n\r\n\t\tdispatch(\r\n\t\t\tpersistStubPost( buildWidgetAreasPostId(), widgetAreaBlocks )\r\n\t\t);\r\n\t};\r\n\r\n/**\r\n * Fetches all widgets from all widgets ares, and groups them by widget area Id.\r\n *\r\n * @return {Function} An action creator.\r\n */\r\nexport const getWidgets =\r\n\t() =>\r\n\tasync ( { dispatch, registry } ) => {\r\n\t\tconst query = buildWidgetsQuery();\r\n\t\tconst widgets = await registry\r\n\t\t\t.resolveSelect( coreStore )\r\n\t\t\t.getEntityRecords( 'root', 'widget', query );\r\n\r\n\t\tconst groupedBySidebar = {};\r\n\r\n\t\tfor ( const widget of widgets ) {\r\n\t\t\tconst block = transformWidgetToBlock( widget );\r\n\t\t\tgroupedBySidebar[ widget.sidebar ] =\r\n\t\t\t\tgroupedBySidebar[ widget.sidebar ] || [];\r\n\t\t\tgroupedBySidebar[ widget.sidebar ].push( block );\r\n\t\t}\r\n\r\n\t\tfor ( const sidebarId in groupedBySidebar ) {\r\n\t\t\tif ( groupedBySidebar.hasOwnProperty( sidebarId ) ) {\r\n\t\t\t\t// Persist the actual post containing the widget block\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tpersistStubPost(\r\n\t\t\t\t\t\tbuildWidgetAreaPostId( sidebarId ),\r\n\t\t\t\t\t\tgroupedBySidebar[ sidebarId ]\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n"],"mappings":"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","ignoreList":[]}