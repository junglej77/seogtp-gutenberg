{"version":3,"names":["store","blockEditorStore","CONTENT","name","getValues","registry","clientId","context","bindings","patternOverridesContent","getBlockAttributes","select","currentBlockAttributes","overridesValues","attributeName","Object","keys","overridableValue","metadata","undefined","setValues","getBlockParentsByBlockName","getBlocks","blockName","patternClientId","attributes","entries","reduce","attrs","key","newValue","syncBlocksWithSameName","blocks","block","dispatch","updateBlockAttributes","innerBlocks","currentBindingValue","acc","value","canUserEditValue"],"sources":["@wordpress/editor/src/bindings/pattern-overrides.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { store as blockEditorStore } from '@wordpress/block-editor';\r\n\r\nconst CONTENT = 'content';\r\n\r\nexport default {\r\n\tname: 'core/pattern-overrides',\r\n\tgetValues( { registry, clientId, context, bindings } ) {\r\n\t\tconst patternOverridesContent = context[ 'pattern/overrides' ];\r\n\t\tconst { getBlockAttributes } = registry.select( blockEditorStore );\r\n\t\tconst currentBlockAttributes = getBlockAttributes( clientId );\r\n\r\n\t\tconst overridesValues = {};\r\n\t\tfor ( const attributeName of Object.keys( bindings ) ) {\r\n\t\t\tconst overridableValue =\r\n\t\t\t\tpatternOverridesContent?.[\r\n\t\t\t\t\tcurrentBlockAttributes?.metadata?.name\r\n\t\t\t\t]?.[ attributeName ];\r\n\r\n\t\t\t// If it has not been overriden, return the original value.\r\n\t\t\t// Check undefined because empty string is a valid value.\r\n\t\t\tif ( overridableValue === undefined ) {\r\n\t\t\t\toverridesValues[ attributeName ] =\r\n\t\t\t\t\tcurrentBlockAttributes[ attributeName ];\r\n\t\t\t\tcontinue;\r\n\t\t\t} else {\r\n\t\t\t\toverridesValues[ attributeName ] =\r\n\t\t\t\t\toverridableValue === '' ? undefined : overridableValue;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn overridesValues;\r\n\t},\r\n\tsetValues( { registry, clientId, bindings } ) {\r\n\t\tconst { getBlockAttributes, getBlockParentsByBlockName, getBlocks } =\r\n\t\t\tregistry.select( blockEditorStore );\r\n\t\tconst currentBlockAttributes = getBlockAttributes( clientId );\r\n\t\tconst blockName = currentBlockAttributes?.metadata?.name;\r\n\t\tif ( ! blockName ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst [ patternClientId ] = getBlockParentsByBlockName(\r\n\t\t\tclientId,\r\n\t\t\t'core/block',\r\n\t\t\ttrue\r\n\t\t);\r\n\r\n\t\t// Extract the updated attributes from the source bindings.\r\n\t\tconst attributes = Object.entries( bindings ).reduce(\r\n\t\t\t( attrs, [ key, { newValue } ] ) => {\r\n\t\t\t\tattrs[ key ] = newValue;\r\n\t\t\t\treturn attrs;\r\n\t\t\t},\r\n\t\t\t{}\r\n\t\t);\r\n\r\n\t\t// If there is no pattern client ID, sync blocks with the same name and same attributes.\r\n\t\tif ( ! patternClientId ) {\r\n\t\t\tconst syncBlocksWithSameName = ( blocks ) => {\r\n\t\t\t\tfor ( const block of blocks ) {\r\n\t\t\t\t\tif ( block.attributes?.metadata?.name === blockName ) {\r\n\t\t\t\t\t\tregistry\r\n\t\t\t\t\t\t\t.dispatch( blockEditorStore )\r\n\t\t\t\t\t\t\t.updateBlockAttributes(\r\n\t\t\t\t\t\t\t\tblock.clientId,\r\n\t\t\t\t\t\t\t\tattributes\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsyncBlocksWithSameName( block.innerBlocks );\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tsyncBlocksWithSameName( getBlocks() );\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst currentBindingValue =\r\n\t\t\tgetBlockAttributes( patternClientId )?.[ CONTENT ];\r\n\t\tregistry\r\n\t\t\t.dispatch( blockEditorStore )\r\n\t\t\t.updateBlockAttributes( patternClientId, {\r\n\t\t\t\t[ CONTENT ]: {\r\n\t\t\t\t\t...currentBindingValue,\r\n\t\t\t\t\t[ blockName ]: {\r\n\t\t\t\t\t\t...currentBindingValue?.[ blockName ],\r\n\t\t\t\t\t\t...Object.entries( attributes ).reduce(\r\n\t\t\t\t\t\t\t( acc, [ key, value ] ) => {\r\n\t\t\t\t\t\t\t\t// TODO: We need a way to represent `undefined` in the serialized overrides.\r\n\t\t\t\t\t\t\t\t// Also see: https://github.com/WordPress/gutenberg/pull/57249#discussion_r1452987871\r\n\t\t\t\t\t\t\t\t// We use an empty string to represent undefined for now until\r\n\t\t\t\t\t\t\t\t// we support a richer format for overrides and the block bindings API.\r\n\t\t\t\t\t\t\t\tacc[ key ] = value === undefined ? '' : value;\r\n\t\t\t\t\t\t\t\treturn acc;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{}\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t} );\r\n\t},\r\n\tcanUserEditValue: () => true,\r\n};\r\n"],"mappings":"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","ignoreList":[]}