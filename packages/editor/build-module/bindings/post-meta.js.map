{"version":3,"names":["store","coreDataStore","editorStore","name","getValues","registry","context","bindings","meta","select","getEditedEntityRecord","postType","postId","newValues","attributeName","source","Object","entries","_meta$source$args$key","args","key","setValues","newMeta","values","forEach","newValue","dispatch","editEntityRecord","canUserEditValue","query","queryId","getCurrentPostType","fieldValue","getEntityRecord","undefined","areCustomFieldsEnabled","getEditorSettings","enableCustomFields","canUserEdit","canUser","kind","id","getFieldsList","metaFields","keys","length","fromEntries","filter","charAt"],"sources":["@wordpress/editor/src/bindings/post-meta.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { store as coreDataStore } from '@wordpress/core-data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as editorStore } from '../store';\r\n\r\nexport default {\r\n\tname: 'core/post-meta',\r\n\tgetValues( { registry, context, bindings } ) {\r\n\t\tconst meta = registry\r\n\t\t\t.select( coreDataStore )\r\n\t\t\t.getEditedEntityRecord(\r\n\t\t\t\t'postType',\r\n\t\t\t\tcontext?.postType,\r\n\t\t\t\tcontext?.postId\r\n\t\t\t)?.meta;\r\n\t\tconst newValues = {};\r\n\t\tfor ( const [ attributeName, source ] of Object.entries( bindings ) ) {\r\n\t\t\t// Use the key if the value is not set.\r\n\t\t\tnewValues[ attributeName ] =\r\n\t\t\t\tmeta?.[ source.args.key ] ?? source.args.key;\r\n\t\t}\r\n\t\treturn newValues;\r\n\t},\r\n\tsetValues( { registry, context, bindings } ) {\r\n\t\tconst newMeta = {};\r\n\t\tObject.values( bindings ).forEach( ( { args, newValue } ) => {\r\n\t\t\tnewMeta[ args.key ] = newValue;\r\n\t\t} );\r\n\t\tregistry\r\n\t\t\t.dispatch( coreDataStore )\r\n\t\t\t.editEntityRecord( 'postType', context?.postType, context?.postId, {\r\n\t\t\t\tmeta: newMeta,\r\n\t\t\t} );\r\n\t},\r\n\tcanUserEditValue( { select, context, args } ) {\r\n\t\t// Lock editing in query loop.\r\n\t\tif ( context?.query || context?.queryId ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst postType =\r\n\t\t\tcontext?.postType || select( editorStore ).getCurrentPostType();\r\n\r\n\t\t// Check that editing is happening in the post editor and not a template.\r\n\t\tif ( postType === 'wp_template' ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Check that the custom field is not protected and available in the REST API.\r\n\t\t// Empty string or `false` could be a valid value, so we need to check if the field value is undefined.\r\n\t\tconst fieldValue = select( coreDataStore ).getEntityRecord(\r\n\t\t\t'postType',\r\n\t\t\tpostType,\r\n\t\t\tcontext?.postId\r\n\t\t)?.meta?.[ args.key ];\r\n\r\n\t\tif ( fieldValue === undefined ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t// Check that custom fields metabox is not enabled.\r\n\t\tconst areCustomFieldsEnabled =\r\n\t\t\tselect( editorStore ).getEditorSettings().enableCustomFields;\r\n\t\tif ( areCustomFieldsEnabled ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Check that the user has the capability to edit post meta.\r\n\t\tconst canUserEdit = select( coreDataStore ).canUser( 'update', {\r\n\t\t\tkind: 'postType',\r\n\t\t\tname: context?.postType,\r\n\t\t\tid: context?.postId,\r\n\t\t} );\r\n\t\tif ( ! canUserEdit ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t},\r\n\tgetFieldsList( { registry, context } ) {\r\n\t\tconst metaFields = registry\r\n\t\t\t.select( coreDataStore )\r\n\t\t\t.getEditedEntityRecord(\r\n\t\t\t\t'postType',\r\n\t\t\t\tcontext?.postType,\r\n\t\t\t\tcontext?.postId\r\n\t\t\t).meta;\r\n\r\n\t\tif ( ! metaFields || ! Object.keys( metaFields ).length ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t// Remove footnotes or private keys from the list of fields.\r\n\t\treturn Object.fromEntries(\r\n\t\t\tObject.entries( metaFields ).filter(\r\n\t\t\t\t( [ key ] ) => key !== 'footnotes' && key.charAt( 0 ) !== '_'\r\n\t\t\t)\r\n\t\t);\r\n\t},\r\n};\r\n"],"mappings":"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","ignoreList":[]}