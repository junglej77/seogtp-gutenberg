{"version":3,"names":["Button","Flex","FlexItem","__","_n","sprintf","useCallback","useRef","createInterpolateElement","__experimentalUseDialog","useDialog","useInstanceId","useDispatch","EntityTypeList","useIsDirty","store","editorStore","unlock","jsx","_jsx","jsxs","_jsxs","identity","values","console","log","EntitiesSavedStates","close","renderDialog","undefined","isDirtyProps","EntitiesSavedStatesExtensible","additionalPrompt","onSave","saveEnabled","saveEnabledProp","saveLabel","dirtyEntityRecords","isDirty","setUnselectedEntities","unselectedEntities","saveButtonRef","saveDirtyEntities","partitionedSavables","reduce","acc","record","name","push","site","siteSavables","wp_template","templateSavables","wp_template_part","templatePartSavables","contentSavables","sortedPartitionedSavables","Object","filter","Array","isArray","dismissPanel","saveDialogRef","saveDialogProps","onClose","dialogLabel","dialogDescription","ref","className","role","children","gap","isBlock","as","variant","disabled","accessibleWhenDisabled","onClick","entitiesToSkip","id","length","strong","map","list"],"sources":["@wordpress/editor/src/components/entities-saved-states/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { Button, Flex, FlexItem } from '@wordpress/components';\r\nimport { __, _n, sprintf } from '@wordpress/i18n';\r\nimport {\r\n\tuseCallback,\r\n\tuseRef,\r\n\tcreateInterpolateElement,\r\n} from '@wordpress/element';\r\nimport {\r\n\t__experimentalUseDialog as useDialog,\r\n\tuseInstanceId,\r\n} from '@wordpress/compose';\r\nimport { useDispatch } from '@wordpress/data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport EntityTypeList from './entity-type-list';\r\nimport { useIsDirty } from './hooks/use-is-dirty';\r\nimport { store as editorStore } from '../../store';\r\nimport { unlock } from '../../lock-unlock';\r\n\r\nfunction identity( values ) {\r\n\tconsole.log( 'identity', values );\r\n\treturn values;\r\n}\r\n\r\n/**\r\n * Renders the component for managing saved states of entities.\r\n *\r\n * @param {Object}   props              The component props.\r\n * @param {Function} props.close        The function to close the dialog.\r\n * @param {Function} props.renderDialog The function to render the dialog.\r\n *\r\n * @return {JSX.Element} The rendered component.\r\n */\r\nexport default function EntitiesSavedStates( {\r\n\tclose,\r\n\trenderDialog = undefined,\r\n} ) {\r\n\tconst isDirtyProps = useIsDirty();\r\n\treturn (\r\n\t\t<EntitiesSavedStatesExtensible\r\n\t\t\tclose={ close }\r\n\t\t\trenderDialog={ renderDialog }\r\n\t\t\t{ ...isDirtyProps }\r\n\t\t/>\r\n\t);\r\n}\r\n\r\n/**\r\n * Renders a panel for saving entities with dirty records.\r\n *\r\n * @param {Object}   props                       The component props.\r\n * @param {string}   props.additionalPrompt      Additional prompt to display.\r\n * @param {Function} props.close                 Function to close the panel.\r\n * @param {Function} props.onSave                Function to call when saving entities.\r\n * @param {boolean}  props.saveEnabled           Flag indicating if save is enabled.\r\n * @param {string}   props.saveLabel             Label for the save button.\r\n * @param {Function} props.renderDialog          Function to render a custom dialog.\r\n * @param {Array}    props.dirtyEntityRecords    Array of dirty entity records.\r\n * @param {boolean}  props.isDirty               Flag indicating if there are dirty entities.\r\n * @param {Function} props.setUnselectedEntities Function to set unselected entities.\r\n * @param {Array}    props.unselectedEntities    Array of unselected entities.\r\n *\r\n * @return {JSX.Element} The rendered component.\r\n */\r\nexport function EntitiesSavedStatesExtensible( {\r\n\tadditionalPrompt = undefined,\r\n\tclose,\r\n\tonSave = identity,\r\n\tsaveEnabled: saveEnabledProp = undefined,\r\n\tsaveLabel = __( '保存' ),\r\n\trenderDialog = undefined,\r\n\tdirtyEntityRecords,\r\n\tisDirty,\r\n\tsetUnselectedEntities,\r\n\tunselectedEntities,\r\n} ) {\r\n\tconst saveButtonRef = useRef();\r\n\tconst { saveDirtyEntities } = unlock( useDispatch( editorStore ) );\r\n\t// To group entities by type.\r\n\tconst partitionedSavables = dirtyEntityRecords.reduce( ( acc, record ) => {\r\n\t\tconst { name } = record;\r\n\t\tif ( ! acc[ name ] ) {\r\n\t\t\tacc[ name ] = [];\r\n\t\t}\r\n\t\tacc[ name ].push( record );\r\n\t\treturn acc;\r\n\t}, {} );\r\n\r\n\t// Sort entity groups.\r\n\tconst {\r\n\t\tsite: siteSavables,\r\n\t\twp_template: templateSavables,\r\n\t\twp_template_part: templatePartSavables,\r\n\t\t...contentSavables\r\n\t} = partitionedSavables;\r\n\tconst sortedPartitionedSavables = [\r\n\t\tsiteSavables,\r\n\t\ttemplateSavables,\r\n\t\ttemplatePartSavables,\r\n\t\t...Object.values( contentSavables ),\r\n\t].filter( Array.isArray );\r\n\r\n\tconst saveEnabled = saveEnabledProp ?? isDirty;\r\n\t// Explicitly define this with no argument passed.  Using `close` on\r\n\t// its own will use the event object in place of the expected saved entities.\r\n\tconst dismissPanel = useCallback( () => close(), [ close ] );\r\n\r\n\tconst [ saveDialogRef, saveDialogProps ] = useDialog( {\r\n\t\tonClose: () => dismissPanel(),\r\n\t} );\r\n\tconst dialogLabel = useInstanceId( EntitiesSavedStatesExtensible, 'label' );\r\n\tconst dialogDescription = useInstanceId(\r\n\t\tEntitiesSavedStatesExtensible,\r\n\t\t'description'\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tref={ saveDialogRef }\r\n\t\t\t{ ...saveDialogProps }\r\n\t\t\tclassName=\"entities-saved-states__panel\"\r\n\t\t\trole={ renderDialog ? 'dialog' : undefined }\r\n\t\t\taria-labelledby={ renderDialog ? dialogLabel : undefined }\r\n\t\t\taria-describedby={ renderDialog ? dialogDescription : undefined }\r\n\t\t>\r\n\t\t\t<Flex className=\"entities-saved-states__panel-header\" gap={ 2 }>\r\n\t\t\t\t<FlexItem\r\n\t\t\t\t\tisBlock\r\n\t\t\t\t\tas={ Button }\r\n\t\t\t\t\tref={ saveButtonRef }\r\n\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\tdisabled={ ! saveEnabled }\r\n\t\t\t\t\taccessibleWhenDisabled\r\n\t\t\t\t\tonClick={ () =>\r\n\t\t\t\t\t\tsaveDirtyEntities( {\r\n\t\t\t\t\t\t\tonSave,\r\n\t\t\t\t\t\t\tdirtyEntityRecords,\r\n\t\t\t\t\t\t\tentitiesToSkip: unselectedEntities,\r\n\t\t\t\t\t\t\tclose,\r\n\t\t\t\t\t\t} )\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclassName=\"editor-entities-saved-states__save-button\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{ saveLabel }\r\n\t\t\t\t</FlexItem>\r\n\t\t\t\t<FlexItem\r\n\t\t\t\t\tisBlock\r\n\t\t\t\t\tas={ Button }\r\n\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\tonClick={ dismissPanel }\r\n\t\t\t\t>\r\n\t\t\t\t\t{ __( 'Cancel' ) }\r\n\t\t\t\t</FlexItem>\r\n\t\t\t</Flex>\r\n\r\n\t\t\t<div className=\"entities-saved-states__text-prompt\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"entities-saved-states__text-prompt--header-wrapper\"\r\n\t\t\t\t\tid={ renderDialog ? dialogLabel : undefined }\r\n\t\t\t\t>\r\n\t\t\t\t\t<strong className=\"entities-saved-states__text-prompt--header\">\r\n\t\t\t\t\t\t{ __( '准备好保存了吗？' ) }\r\n\t\t\t\t\t</strong>\r\n\t\t\t\t\t{ additionalPrompt }\r\n\t\t\t\t</div>\r\n\t\t\t\t<p id={ renderDialog ? dialogDescription : undefined }>\r\n\t\t\t\t\t{ isDirty\r\n\t\t\t\t\t\t? createInterpolateElement(\r\n\t\t\t\t\t\t\t\tsprintf(\r\n\t\t\t\t\t\t\t\t\t/* translators: %d: number of site changes waiting to be saved. */\r\n\t\t\t\t\t\t\t\t\t_n(\r\n\t\t\t\t\t\t\t\t\t\t'这里有 <strong>%d 个网站变化</strong> 将要被保存。',\r\n\t\t\t\t\t\t\t\t\t\t'这里有 <strong>%d 个网站变化</strong> 将要被保存。',\r\n\t\t\t\t\t\t\t\t\t\tsortedPartitionedSavables.length\r\n\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\tsortedPartitionedSavables.length\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t{ strong: <strong /> }\r\n\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t: __( 'Select the items you want to save.' ) }\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t{ sortedPartitionedSavables.map( ( list ) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<EntityTypeList\r\n\t\t\t\t\t\tkey={ list[ 0 ].name }\r\n\t\t\t\t\t\tlist={ list }\r\n\t\t\t\t\t\tunselectedEntities={ unselectedEntities }\r\n\t\t\t\t\t\tsetUnselectedEntities={ setUnselectedEntities }\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t} ) }\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]}