{"version":3,"names":["__experimentalListView","ListView","privateApis","blockEditorPrivateApis","useFocusOnMount","useMergeRefs","useDispatch","useSelect","focus","useCallback","useRef","useState","__","_x","useShortcut","ESCAPE","ListViewOutline","unlock","store","editorStore","jsx","_jsx","TabbedSidebar","ListViewSidebar","setIsListViewOpened","getListViewToggleRef","focusOnMountRef","closeListView","current","closeOnEscape","event","keyCode","defaultPrevented","preventDefault","dropZoneElement","setDropZoneElement","tab","setTab","sidebarRef","tabsRef","listViewRef","listViewContainerRef","handleSidebarFocus","currentTab","tabPanelFocus","tabbable","find","listViewApplicationFocus","listViewFocusArea","contains","handleToggleListViewShortcut","ownerDocument","activeElement","className","onKeyDown","ref","children","tabs","name","title","panel","panelRef","onClose","onSelect","tabName","defaultTabId","closeButtonLabel"],"sources":["@wordpress/editor/src/components/list-view-sidebar/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport {\r\n\t__experimentalListView as ListView,\r\n\tprivateApis as blockEditorPrivateApis,\r\n} from '@wordpress/block-editor';\r\nimport { useFocusOnMount, useMergeRefs } from '@wordpress/compose';\r\nimport { useDispatch, useSelect } from '@wordpress/data';\r\nimport { focus } from '@wordpress/dom';\r\nimport { useCallback, useRef, useState } from '@wordpress/element';\r\nimport { __, _x } from '@wordpress/i18n';\r\nimport { useShortcut } from '@wordpress/keyboard-shortcuts';\r\nimport { ESCAPE } from '@wordpress/keycodes';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport ListViewOutline from './list-view-outline';\r\nimport { unlock } from '../../lock-unlock';\r\nimport { store as editorStore } from '../../store';\r\n\r\nconst { TabbedSidebar } = unlock( blockEditorPrivateApis );\r\n\r\nexport default function ListViewSidebar() {\r\n\tconst { setIsListViewOpened } = useDispatch( editorStore );\r\n\tconst { getListViewToggleRef } = unlock( useSelect( editorStore ) );\r\n\r\n\t// This hook handles focus when the sidebar first renders.\r\n\tconst focusOnMountRef = useFocusOnMount( 'firstElement' );\r\n\r\n\t// When closing the list view, focus should return to the toggle button.\r\n\tconst closeListView = useCallback( () => {\r\n\t\tsetIsListViewOpened( false );\r\n\t\tgetListViewToggleRef().current?.focus();\r\n\t}, [ getListViewToggleRef, setIsListViewOpened ] );\r\n\r\n\tconst closeOnEscape = useCallback(\r\n\t\t( event ) => {\r\n\t\t\tif ( event.keyCode === ESCAPE && ! event.defaultPrevented ) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tcloseListView();\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ closeListView ]\r\n\t);\r\n\r\n\t// Use internal state instead of a ref to make sure that the component\r\n\t// re-renders when the dropZoneElement updates.\r\n\tconst [ dropZoneElement, setDropZoneElement ] = useState( null );\r\n\t// Tracks our current tab.\r\n\tconst [ tab, setTab ] = useState( 'list-view' );\r\n\r\n\t// This ref refers to the sidebar as a whole.\r\n\tconst sidebarRef = useRef();\r\n\t// This ref refers to the tab panel.\r\n\tconst tabsRef = useRef();\r\n\t// This ref refers to the list view application area.\r\n\tconst listViewRef = useRef();\r\n\r\n\t// Must merge the refs together so focus can be handled properly in the next function.\r\n\tconst listViewContainerRef = useMergeRefs( [\r\n\t\tfocusOnMountRef,\r\n\t\tlistViewRef,\r\n\t\tsetDropZoneElement,\r\n\t] );\r\n\r\n\t/*\r\n\t * Callback function to handle list view or outline focus.\r\n\t *\r\n\t * @param {string} currentTab The current tab. Either list view or outline.\r\n\t *\r\n\t * @return void\r\n\t */\r\n\tfunction handleSidebarFocus( currentTab ) {\r\n\t\t// Tab panel focus.\r\n\t\tconst tabPanelFocus = focus.tabbable.find( tabsRef.current )[ 0 ];\r\n\t\t// List view tab is selected.\r\n\t\tif ( currentTab === 'list-view' ) {\r\n\t\t\t// Either focus the list view or the tab panel. Must have a fallback because the list view does not render when there are no blocks.\r\n\t\t\tconst listViewApplicationFocus = focus.tabbable.find(\r\n\t\t\t\tlistViewRef.current\r\n\t\t\t)[ 0 ];\r\n\t\t\tconst listViewFocusArea = sidebarRef.current.contains(\r\n\t\t\t\tlistViewApplicationFocus\r\n\t\t\t)\r\n\t\t\t\t? listViewApplicationFocus\r\n\t\t\t\t: tabPanelFocus;\r\n\t\t\tlistViewFocusArea.focus();\r\n\t\t\t// Outline tab is selected.\r\n\t\t} else {\r\n\t\t\ttabPanelFocus.focus();\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleToggleListViewShortcut = useCallback( () => {\r\n\t\t// If the sidebar has focus, it is safe to close.\r\n\t\tif (\r\n\t\t\tsidebarRef.current.contains(\r\n\t\t\t\tsidebarRef.current.ownerDocument.activeElement\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tcloseListView();\r\n\t\t} else {\r\n\t\t\t// If the list view or outline does not have focus, focus should be moved to it.\r\n\t\t\thandleSidebarFocus( tab );\r\n\t\t}\r\n\t}, [ closeListView, tab ] );\r\n\r\n\t// This only fires when the sidebar is open because of the conditional rendering.\r\n\t// It is the same shortcut to open but that is defined as a global shortcut and only fires when the sidebar is closed.\r\n\tuseShortcut( 'core/editor/toggle-list-view', handleToggleListViewShortcut );\r\n\r\n\treturn (\r\n\t\t// eslint-disable-next-line jsx-a11y/no-static-element-interactions\r\n\t\t<div\r\n\t\t\tclassName=\"editor-list-view-sidebar\"\r\n\t\t\tonKeyDown={ closeOnEscape }\r\n\t\t\tref={ sidebarRef }\r\n\t\t>\r\n\t\t\t<TabbedSidebar\r\n\t\t\t\ttabs={ [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'list-view',\r\n\t\t\t\t\t\ttitle: _x( 'List View', 'Post overview' ),\r\n\t\t\t\t\t\tpanel: (\r\n\t\t\t\t\t\t\t<div className=\"editor-list-view-sidebar__list-view-container\">\r\n\t\t\t\t\t\t\t\t<div className=\"editor-list-view-sidebar__list-view-panel-content\">\r\n\t\t\t\t\t\t\t\t\t<ListView\r\n\t\t\t\t\t\t\t\t\t\tdropZoneElement={ dropZoneElement }\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tpanelRef: listViewContainerRef,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tname: 'outline',\r\n\t\t\t\t\t\ttitle: _x( 'Outline', 'Post overview' ),\r\n\t\t\t\t\t\tpanel: (\r\n\t\t\t\t\t\t\t<div className=\"editor-list-view-sidebar__list-view-container\">\r\n\t\t\t\t\t\t\t\t<ListViewOutline />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t},\r\n\t\t\t\t] }\r\n\t\t\t\tonClose={ closeListView }\r\n\t\t\t\tonSelect={ ( tabName ) => setTab( tabName ) }\r\n\t\t\t\tdefaultTabId=\"list-view\"\r\n\t\t\t\tref={ tabsRef }\r\n\t\t\t\tcloseButtonLabel={ __( 'Close' ) }\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]}