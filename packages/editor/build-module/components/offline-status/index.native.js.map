{"version":3,"names":["AccessibilityInfo","Text","View","usePreferredColorSchemeStyle","useNetworkConnectivity","usePrevious","Icon","offline","offlineIcon","__","useEffect","styles","jsx","_jsx","jsxs","_jsxs","useAccessibilityLiveRegion","message","isActive","inactiveMessage","announceForAccessibility","prevIsActive","unconditionalMessage","initialRender","OfflineStatus","isConnected","containerStyle","offline__dark","textStyle","iconStyle","accessible","accessibilityRole","accessibilityLabel","style","children","fill","icon"],"sources":["@wordpress/editor/src/components/offline-status/index.native.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport { AccessibilityInfo, Text, View } from 'react-native';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport {\r\n\tusePreferredColorSchemeStyle,\r\n\tuseNetworkConnectivity,\r\n\tusePrevious,\r\n} from '@wordpress/compose';\r\nimport { Icon } from '@wordpress/components';\r\nimport { offline as offlineIcon } from '@wordpress/icons';\r\nimport { __ } from '@wordpress/i18n';\r\nimport { useEffect } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport styles from './style.native.scss';\r\n\r\n/**\r\n * Conditionally announces messages for screen reader users. This Hook provides\r\n * two benefits over React Native's `accessibilityLiveRegion`:\r\n *\r\n * 1. It works on both iOS and Android.\r\n * 2. It allows announcing a secondary message when the component is inactive.\r\n *\r\n * @param {string}  message                   The message to announce.\r\n * @param {Object}  options                   Options for the Hook.\r\n * @param {boolean} [options.isActive]        Whether the message should be announced.\r\n * @param {string}  [options.inactiveMessage] The message to announce when inactive.\r\n */\r\nfunction useAccessibilityLiveRegion( message, { isActive, inactiveMessage } ) {\r\n\tconst { announceForAccessibility } = AccessibilityInfo;\r\n\tconst prevIsActive = usePrevious( isActive );\r\n\r\n\tuseEffect( () => {\r\n\t\tconst unconditionalMessage = typeof isActive === 'undefined';\r\n\t\tconst initialRender = typeof prevIsActive === 'undefined';\r\n\r\n\t\tif (\r\n\t\t\tunconditionalMessage ||\r\n\t\t\t( isActive && ! prevIsActive && ! initialRender )\r\n\t\t) {\r\n\t\t\tannounceForAccessibility( message );\r\n\t\t} else if ( ! isActive && prevIsActive && inactiveMessage ) {\r\n\t\t\tannounceForAccessibility( inactiveMessage );\r\n\t\t}\r\n\t}, [\r\n\t\tmessage,\r\n\t\tisActive,\r\n\t\tprevIsActive,\r\n\t\tinactiveMessage,\r\n\t\tannounceForAccessibility,\r\n\t] );\r\n}\r\n\r\nconst OfflineStatus = () => {\r\n\tconst { isConnected } = useNetworkConnectivity();\r\n\r\n\tuseAccessibilityLiveRegion( __( 'Network connection re-established' ), {\r\n\t\tisActive: isConnected,\r\n\t\tinactiveMessage: __( 'Network connection lost, working offline' ),\r\n\t} );\r\n\r\n\tconst containerStyle = usePreferredColorSchemeStyle(\r\n\t\tstyles.offline,\r\n\t\tstyles.offline__dark\r\n\t);\r\n\r\n\tconst textStyle = usePreferredColorSchemeStyle(\r\n\t\tstyles[ 'offline--text' ],\r\n\t\tstyles[ 'offline--text__dark' ]\r\n\t);\r\n\r\n\tconst iconStyle = usePreferredColorSchemeStyle(\r\n\t\tstyles[ 'offline--icon' ],\r\n\t\tstyles[ 'offline--icon__dark' ]\r\n\t);\r\n\r\n\treturn ! isConnected ? (\r\n\t\t<View\r\n\t\t\taccessible\r\n\t\t\taccessibilityRole=\"alert\"\r\n\t\t\taccessibilityLabel={ __(\r\n\t\t\t\t'Network connection lost, working offline'\r\n\t\t\t) }\r\n\t\t\tstyle={ containerStyle }\r\n\t\t>\r\n\t\t\t<Icon fill={ iconStyle.fill } icon={ offlineIcon } />\r\n\t\t\t<Text style={ textStyle }>{ __( 'Working Offline' ) } </Text>\r\n\t\t</View>\r\n\t) : null;\r\n};\r\n\r\nexport default OfflineStatus;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,iBAAiB,EAAEC,IAAI,EAAEC,IAAI,QAAQ,cAAc;;AAE5D;AACA;AACA;AACA,SACCC,4BAA4B,EAC5BC,sBAAsB,EACtBC,WAAW,QACL,oBAAoB;AAC3B,SAASC,IAAI,QAAQ,uBAAuB;AAC5C,SAASC,OAAO,IAAIC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,EAAE,QAAQ,iBAAiB;AACpC,SAASC,SAAS,QAAQ,oBAAoB;;AAE9C;AACA;AACA;AACA,OAAOC,MAAM,MAAM,qBAAqB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAYA,SAASC,0BAA0BA,CAAEC,OAAO,EAAE;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,EAAG;EAC7E,MAAM;IAAEC;EAAyB,CAAC,GAAGpB,iBAAiB;EACtD,MAAMqB,YAAY,GAAGhB,WAAW,CAAEa,QAAS,CAAC;EAE5CR,SAAS,CAAE,MAAM;IAChB,MAAMY,oBAAoB,GAAG,OAAOJ,QAAQ,KAAK,WAAW;IAC5D,MAAMK,aAAa,GAAG,OAAOF,YAAY,KAAK,WAAW;IAEzD,IACCC,oBAAoB,IAClBJ,QAAQ,IAAI,CAAEG,YAAY,IAAI,CAAEE,aAAe,EAChD;MACDH,wBAAwB,CAAEH,OAAQ,CAAC;IACpC,CAAC,MAAM,IAAK,CAAEC,QAAQ,IAAIG,YAAY,IAAIF,eAAe,EAAG;MAC3DC,wBAAwB,CAAED,eAAgB,CAAC;IAC5C;EACD,CAAC,EAAE,CACFF,OAAO,EACPC,QAAQ,EACRG,YAAY,EACZF,eAAe,EACfC,wBAAwB,CACvB,CAAC;AACJ;AAEA,MAAMI,aAAa,GAAGA,CAAA,KAAM;EAC3B,MAAM;IAAEC;EAAY,CAAC,GAAGrB,sBAAsB,CAAC,CAAC;EAEhDY,0BAA0B,CAAEP,EAAE,CAAE,mCAAoC,CAAC,EAAE;IACtES,QAAQ,EAAEO,WAAW;IACrBN,eAAe,EAAEV,EAAE,CAAE,0CAA2C;EACjE,CAAE,CAAC;EAEH,MAAMiB,cAAc,GAAGvB,4BAA4B,CAClDQ,MAAM,CAACJ,OAAO,EACdI,MAAM,CAACgB,aACR,CAAC;EAED,MAAMC,SAAS,GAAGzB,4BAA4B,CAC7CQ,MAAM,CAAE,eAAe,CAAE,EACzBA,MAAM,CAAE,qBAAqB,CAC9B,CAAC;EAED,MAAMkB,SAAS,GAAG1B,4BAA4B,CAC7CQ,MAAM,CAAE,eAAe,CAAE,EACzBA,MAAM,CAAE,qBAAqB,CAC9B,CAAC;EAED,OAAO,CAAEc,WAAW,gBACnBV,KAAA,CAACb,IAAI;IACJ4B,UAAU;IACVC,iBAAiB,EAAC,OAAO;IACzBC,kBAAkB,EAAGvB,EAAE,CACtB,0CACD,CAAG;IACHwB,KAAK,EAAGP,cAAgB;IAAAQ,QAAA,gBAExBrB,IAAA,CAACP,IAAI;MAAC6B,IAAI,EAAGN,SAAS,CAACM,IAAM;MAACC,IAAI,EAAG5B;IAAa,CAAE,CAAC,eACrDO,KAAA,CAACd,IAAI;MAACgC,KAAK,EAAGL,SAAW;MAAAM,QAAA,GAAGzB,EAAE,CAAE,iBAAkB,CAAC,EAAE,GAAC;IAAA,CAAM,CAAC;EAAA,CACxD,CAAC,GACJ,IAAI;AACT,CAAC;AAED,eAAee,aAAa","ignoreList":[]}