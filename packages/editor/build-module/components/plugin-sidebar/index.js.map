{"version":3,"names":["useSelect","__","store","keyboardShortcutsStore","ComplementaryArea","editorStore","jsx","_jsx","PluginSidebar","className","props","postTitle","shortcut","select","getEditedPostAttribute","getShortcutRepresentation","panelClassName","smallScreenTitle","scope","toggleShortcut"],"sources":["@wordpress/editor/src/components/plugin-sidebar/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useSelect } from '@wordpress/data';\r\nimport { __ } from '@wordpress/i18n';\r\nimport { store as keyboardShortcutsStore } from '@wordpress/keyboard-shortcuts';\r\nimport { ComplementaryArea } from '@wordpress/interface';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as editorStore } from '../../store';\r\n\r\n/**\r\n * Renders a sidebar when activated. The contents within the `PluginSidebar` will appear as content within the sidebar.\r\n * It also automatically renders a corresponding `PluginSidebarMenuItem` component when `isPinnable` flag is set to `true`.\r\n * If you wish to display the sidebar, you can with use the `PluginSidebarMoreMenuItem` component or the `wp.data.dispatch` API:\r\n *\r\n * ```js\r\n * wp.data.dispatch( 'core/edit-post' ).openGeneralSidebar( 'plugin-name/sidebar-name' );\r\n * ```\r\n *\r\n * @see PluginSidebarMoreMenuItem\r\n *\r\n * @param {Object}                props                                 Element props.\r\n * @param {string}                props.name                            A string identifying the sidebar. Must be unique for every sidebar registered within the scope of your plugin.\r\n * @param {string}                [props.className]                     An optional class name added to the sidebar body.\r\n * @param {string}                props.title                           Title displayed at the top of the sidebar.\r\n * @param {boolean}               [props.isPinnable=true]               Whether to allow to pin sidebar to the toolbar. When set to `true` it also automatically renders a corresponding menu item.\r\n * @param {WPBlockTypeIconRender} [props.icon=inherits from the plugin] The [Dashicon](https://developer.wordpress.org/resource/dashicons/) icon slug string, or an SVG WP element, to be rendered when the sidebar is pinned to toolbar.\r\n *\r\n * @example\r\n * ```js\r\n * // Using ES5 syntax\r\n * var __ = wp.i18n.__;\r\n * var el = React.createElement;\r\n * var PanelBody = wp.components.PanelBody;\r\n * var PluginSidebar = wp.editor.PluginSidebar;\r\n * var moreIcon = React.createElement( 'svg' ); //... svg element.\r\n *\r\n * function MyPluginSidebar() {\r\n * \treturn el(\r\n * \t\t\tPluginSidebar,\r\n * \t\t\t{\r\n * \t\t\t\tname: 'my-sidebar',\r\n * \t\t\t\ttitle: 'My sidebar title',\r\n * \t\t\t\ticon: moreIcon,\r\n * \t\t\t},\r\n * \t\t\tel(\r\n * \t\t\t\tPanelBody,\r\n * \t\t\t\t{},\r\n * \t\t\t\t__( 'My sidebar content' )\r\n * \t\t\t)\r\n * \t);\r\n * }\r\n * ```\r\n *\r\n * @example\r\n * ```jsx\r\n * // Using ESNext syntax\r\n * import { __ } from '@wordpress/i18n';\r\n * import { PanelBody } from '@wordpress/components';\r\n * import { PluginSidebar } from '@wordpress/editor';\r\n * import { more } from '@wordpress/icons';\r\n *\r\n * const MyPluginSidebar = () => (\r\n * \t<PluginSidebar\r\n * \t\tname=\"my-sidebar\"\r\n * \t\ttitle=\"My sidebar title\"\r\n * \t\ticon={ more }\r\n * \t>\r\n * \t\t<PanelBody>\r\n * \t\t\t{ __( 'My sidebar content' ) }\r\n * \t\t</PanelBody>\r\n * \t</PluginSidebar>\r\n * );\r\n * ```\r\n */\r\nexport default function PluginSidebar( { className, ...props } ) {\r\n\tconst { postTitle, shortcut } = useSelect( ( select ) => {\r\n\t\treturn {\r\n\t\t\tpostTitle: select( editorStore ).getEditedPostAttribute( 'title' ),\r\n\t\t\tshortcut: select(\r\n\t\t\t\tkeyboardShortcutsStore\r\n\t\t\t).getShortcutRepresentation( 'core/editor/toggle-sidebar' ),\r\n\t\t};\r\n\t}, [] );\r\n\treturn (\r\n\t\t<ComplementaryArea\r\n\t\t\tpanelClassName={ className }\r\n\t\t\tclassName=\"editor-sidebar\"\r\n\t\t\tsmallScreenTitle={ postTitle || __( '(no title)' ) }\r\n\t\t\tscope=\"core\"\r\n\t\t\ttoggleShortcut={ shortcut }\r\n\t\t\t{ ...props }\r\n\t\t/>\r\n\t);\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,EAAE,QAAQ,iBAAiB;AACpC,SAASC,KAAK,IAAIC,sBAAsB,QAAQ,+BAA+B;AAC/E,SAASC,iBAAiB,QAAQ,sBAAsB;;AAExD;AACA;AACA;AACA,SAASF,KAAK,IAAIG,WAAW,QAAQ,aAAa;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhEA,SAAAC,GAAA,IAAAC,IAAA;AAiEA,eAAe,SAASC,aAAaA,CAAE;EAAEC,SAAS;EAAE,GAAGC;AAAM,CAAC,EAAG;EAChE,MAAM;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAGZ,SAAS,CAAIa,MAAM,IAAM;IACxD,OAAO;MACNF,SAAS,EAAEE,MAAM,CAAER,WAAY,CAAC,CAACS,sBAAsB,CAAE,OAAQ,CAAC;MAClEF,QAAQ,EAAEC,MAAM,CACfV,sBACD,CAAC,CAACY,yBAAyB,CAAE,4BAA6B;IAC3D,CAAC;EACF,CAAC,EAAE,EAAG,CAAC;EACP,oBACCR,IAAA,CAACH,iBAAiB;IACjBY,cAAc,EAAGP,SAAW;IAC5BA,SAAS,EAAC,gBAAgB;IAC1BQ,gBAAgB,EAAGN,SAAS,IAAIV,EAAE,CAAE,YAAa,CAAG;IACpDiB,KAAK,EAAC,MAAM;IACZC,cAAc,EAAGP,QAAU;IAAA,GACtBF;EAAK,CACV,CAAC;AAEJ","ignoreList":[]}