{"version":3,"names":["__","PanelBody","__experimentalText","Text","Dropdown","Button","__experimentalVStack","VStack","useDispatch","useSelect","useMemo","useState","__experimentalInspectorPopoverHeader","InspectorPopoverHeader","store","coreStore","decodeEntities","PostExcerptForm","PostExcerptCheck","PluginPostExcerpt","TEMPLATE_ORIGINS","editorStore","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","PANEL_NAME","ExcerptPanel","isOpened","isEnabled","postType","select","isEditorPanelOpened","isEditorPanelEnabled","getCurrentPostType","toggleEditorPanelOpened","toggleExcerptPanel","shouldUseDescriptionLabel","includes","title","opened","onToggle","children","Slot","fills","PostExcerptPanel","PrivatePostExcerptPanel","PrivateExcerpt","shouldRender","excerpt","shouldBeUsedAsDescription","allowEditing","getCurrentPostId","getEditedPostAttribute","isTemplateOrTemplatePart","isPattern","_shouldBeUsedAsDescription","_usedAttribute","template","getEntityRecord","_shouldRender","source","custom","has_theme_file","is_custom","popoverAnchor","setPopoverAnchor","label","popoverProps","anchor","headerTitle","placement","offset","shift","excerptText","align","numberOfLines","truncate","excerptPlaceholder","triggerEditLabel","className","contentClassName","focusOnMount","ref","renderToggle","__next40pxDefaultSize","onClick","variant","renderContent","onClose","spacing","hideLabelFromVision","updateOnBlur"],"sources":["@wordpress/editor/src/components/post-excerpt/panel.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\nimport {\r\n\tPanelBody,\r\n\t__experimentalText as Text,\r\n\tDropdown,\r\n\tButton,\r\n\t__experimentalVStack as VStack,\r\n} from '@wordpress/components';\r\nimport { useDispatch, useSelect } from '@wordpress/data';\r\nimport { useMemo, useState } from '@wordpress/element';\r\nimport { __experimentalInspectorPopoverHeader as InspectorPopoverHeader } from '@wordpress/block-editor';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\nimport { decodeEntities } from '@wordpress/html-entities';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport PostExcerptForm from './index';\r\nimport PostExcerptCheck from './check';\r\nimport PluginPostExcerpt from './plugin';\r\nimport { TEMPLATE_ORIGINS } from '../../store/constants';\r\nimport { store as editorStore } from '../../store';\r\n\r\n/**\r\n * Module Constants\r\n */\r\nconst PANEL_NAME = 'post-excerpt';\r\n\r\nfunction ExcerptPanel() {\r\n\tconst { isOpened, isEnabled, postType } = useSelect( ( select ) => {\r\n\t\tconst {\r\n\t\t\tisEditorPanelOpened,\r\n\t\t\tisEditorPanelEnabled,\r\n\t\t\tgetCurrentPostType,\r\n\t\t} = select( editorStore );\r\n\r\n\t\treturn {\r\n\t\t\tisOpened: isEditorPanelOpened( PANEL_NAME ),\r\n\t\t\tisEnabled: isEditorPanelEnabled( PANEL_NAME ),\r\n\t\t\tpostType: getCurrentPostType(),\r\n\t\t};\r\n\t}, [] );\r\n\r\n\tconst { toggleEditorPanelOpened } = useDispatch( editorStore );\r\n\tconst toggleExcerptPanel = () => toggleEditorPanelOpened( PANEL_NAME );\r\n\r\n\tif ( ! isEnabled ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// There are special cases where we want to label the excerpt as a description.\r\n\tconst shouldUseDescriptionLabel = [\r\n\t\t'wp_template',\r\n\t\t'wp_template_part',\r\n\t\t'wp_block',\r\n\t].includes( postType );\r\n\r\n\treturn (\r\n\t\t<PanelBody\r\n\t\t\ttitle={\r\n\t\t\t\tshouldUseDescriptionLabel\r\n\t\t\t\t\t? __( 'Description' )\r\n\t\t\t\t\t: __( 'Excerpt' )\r\n\t\t\t}\r\n\t\t\topened={ isOpened }\r\n\t\t\tonToggle={ toggleExcerptPanel }\r\n\t\t>\r\n\t\t\t<PluginPostExcerpt.Slot>\r\n\t\t\t\t{ ( fills ) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<PostExcerptForm />\r\n\t\t\t\t\t\t{ fills }\r\n\t\t\t\t\t</>\r\n\t\t\t\t) }\r\n\t\t\t</PluginPostExcerpt.Slot>\r\n\t\t</PanelBody>\r\n\t);\r\n}\r\n\r\n/**\r\n * Is rendered if the post type supports excerpts and allows editing the excerpt.\r\n *\r\n * @return {JSX.Element} The rendered PostExcerptPanel component.\r\n */\r\nexport default function PostExcerptPanel() {\r\n\treturn (\r\n\t\t<PostExcerptCheck>\r\n\t\t\t<ExcerptPanel />\r\n\t\t</PostExcerptCheck>\r\n\t);\r\n}\r\n\r\nexport function PrivatePostExcerptPanel() {\r\n\treturn (\r\n\t\t<PostExcerptCheck>\r\n\t\t\t<PrivateExcerpt />\r\n\t\t</PostExcerptCheck>\r\n\t);\r\n}\r\n\r\nfunction PrivateExcerpt() {\r\n\tconst { shouldRender, excerpt, shouldBeUsedAsDescription, allowEditing } =\r\n\t\tuseSelect( ( select ) => {\r\n\t\t\tconst {\r\n\t\t\t\tgetCurrentPostType,\r\n\t\t\t\tgetCurrentPostId,\r\n\t\t\t\tgetEditedPostAttribute,\r\n\t\t\t\tisEditorPanelEnabled,\r\n\t\t\t} = select( editorStore );\r\n\t\t\tconst postType = getCurrentPostType();\r\n\t\t\tconst isTemplateOrTemplatePart = [\r\n\t\t\t\t'wp_template',\r\n\t\t\t\t'wp_template_part',\r\n\t\t\t].includes( postType );\r\n\t\t\tconst isPattern = postType === 'wp_block';\r\n\t\t\t// These post types use the `excerpt` field as a description semantically, so we need to\r\n\t\t\t// handle proper labeling and some flows where we should always render them as text.\r\n\t\t\tconst _shouldBeUsedAsDescription =\r\n\t\t\t\tisTemplateOrTemplatePart || isPattern;\r\n\t\t\tconst _usedAttribute = isTemplateOrTemplatePart\r\n\t\t\t\t? 'description'\r\n\t\t\t\t: 'excerpt';\r\n\t\t\t// We need to fetch the entity in this case to check if we'll allow editing.\r\n\t\t\tconst template =\r\n\t\t\t\tisTemplateOrTemplatePart &&\r\n\t\t\t\tselect( coreStore ).getEntityRecord(\r\n\t\t\t\t\t'postType',\r\n\t\t\t\t\tpostType,\r\n\t\t\t\t\tgetCurrentPostId()\r\n\t\t\t\t);\r\n\t\t\t// For post types that use excerpt as description, we do not abide\r\n\t\t\t// by the `isEnabled` panel flag in order to render them as text.\r\n\t\t\tconst _shouldRender =\r\n\t\t\t\tisEditorPanelEnabled( PANEL_NAME ) ||\r\n\t\t\t\t_shouldBeUsedAsDescription;\r\n\t\t\treturn {\r\n\t\t\t\texcerpt: getEditedPostAttribute( _usedAttribute ),\r\n\t\t\t\tshouldRender: _shouldRender,\r\n\t\t\t\tshouldBeUsedAsDescription: _shouldBeUsedAsDescription,\r\n\t\t\t\t// If we should render, allow editing for all post types that are not used as description.\r\n\t\t\t\t// For the rest allow editing only for user generated entities.\r\n\t\t\t\tallowEditing:\r\n\t\t\t\t\t_shouldRender &&\r\n\t\t\t\t\t( ! _shouldBeUsedAsDescription ||\r\n\t\t\t\t\t\tisPattern ||\r\n\t\t\t\t\t\t( template &&\r\n\t\t\t\t\t\t\ttemplate.source === TEMPLATE_ORIGINS.custom &&\r\n\t\t\t\t\t\t\t! template.has_theme_file &&\r\n\t\t\t\t\t\t\ttemplate.is_custom ) ),\r\n\t\t\t};\r\n\t\t}, [] );\r\n\tconst [ popoverAnchor, setPopoverAnchor ] = useState( null );\r\n\tconst label = shouldBeUsedAsDescription\r\n\t\t? __( 'Description' )\r\n\t\t: __( 'Excerpt' );\r\n\t// Memoize popoverProps to avoid returning a new object every time.\r\n\tconst popoverProps = useMemo(\r\n\t\t() => ( {\r\n\t\t\t// Anchor the popover to the middle of the entire row so that it doesn't\r\n\t\t\t// move around when the label changes.\r\n\t\t\tanchor: popoverAnchor,\r\n\t\t\t'aria-label': label,\r\n\t\t\theaderTitle: label,\r\n\t\t\tplacement: 'left-start',\r\n\t\t\toffset: 36,\r\n\t\t\tshift: true,\r\n\t\t} ),\r\n\t\t[ popoverAnchor, label ]\r\n\t);\r\n\tif ( ! shouldRender ) {\r\n\t\treturn false;\r\n\t}\r\n\tconst excerptText = !! excerpt && (\r\n\t\t<Text align=\"left\" numberOfLines={ 4 } truncate={ allowEditing }>\r\n\t\t\t{ decodeEntities( excerpt ) }\r\n\t\t</Text>\r\n\t);\r\n\tif ( ! allowEditing ) {\r\n\t\treturn excerptText;\r\n\t}\r\n\tconst excerptPlaceholder = shouldBeUsedAsDescription\r\n\t\t? __( 'Add a description…' )\r\n\t\t: __( 'Add an excerpt…' );\r\n\tconst triggerEditLabel = shouldBeUsedAsDescription\r\n\t\t? __( 'Edit description' )\r\n\t\t: __( 'Edit excerpt' );\r\n\treturn (\r\n\t\t<VStack>\r\n\t\t\t{ excerptText }\r\n\t\t\t<Dropdown\r\n\t\t\t\tclassName=\"editor-post-excerpt__dropdown\"\r\n\t\t\t\tcontentClassName=\"editor-post-excerpt__dropdown__content\"\r\n\t\t\t\tpopoverProps={ popoverProps }\r\n\t\t\t\tfocusOnMount\r\n\t\t\t\tref={ setPopoverAnchor }\r\n\t\t\t\trenderToggle={ ( { onToggle } ) => (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// TODO: Switch to `true` (40px size) if possible\r\n\t\t\t\t\t\t__next40pxDefaultSize={ false }\r\n\t\t\t\t\t\tclassName=\"editor-post-excerpt__dropdown__trigger\"\r\n\t\t\t\t\t\tonClick={ onToggle }\r\n\t\t\t\t\t\tvariant=\"link\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{ excerptText ? triggerEditLabel : excerptPlaceholder }\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t) }\r\n\t\t\t\trenderContent={ ( { onClose } ) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<InspectorPopoverHeader\r\n\t\t\t\t\t\t\ttitle={ label }\r\n\t\t\t\t\t\t\tonClose={ onClose }\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<VStack spacing={ 4 }>\r\n\t\t\t\t\t\t\t<PluginPostExcerpt.Slot>\r\n\t\t\t\t\t\t\t\t{ ( fills ) => (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<PostExcerptForm\r\n\t\t\t\t\t\t\t\t\t\t\thideLabelFromVision\r\n\t\t\t\t\t\t\t\t\t\t\tupdateOnBlur\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t{ fills }\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t) }\r\n\t\t\t\t\t\t\t</PluginPostExcerpt.Slot>\r\n\t\t\t\t\t\t</VStack>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) }\r\n\t\t\t/>\r\n\t\t</VStack>\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]}