{"version":3,"names":["__","sprintf","Button","RadioControl","useDispatch","useSelect","useInstanceId","store","coreStore","PostFormatCheck","editorStore","jsx","_jsx","jsxs","_jsxs","POST_FORMATS","id","caption","sort","a","b","normalizedA","toUpperCase","normalizedB","PostFormat","instanceId","postFormatSelectorId","postFormat","suggestedFormat","supportedFormats","select","getEditedPostAttribute","getSuggestedPostFormat","_postFormat","themeSupports","getThemeSupports","formats","filter","format","includes","suggestion","find","editPost","onUpdatePostFormat","children","className","label","selected","onChange","options","map","value","hideLabelFromVision","__next40pxDefaultSize","variant","onClick"],"sources":["@wordpress/editor/src/components/post-format/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { __, sprintf } from '@wordpress/i18n';\r\nimport { Button, RadioControl } from '@wordpress/components';\r\nimport { useDispatch, useSelect } from '@wordpress/data';\r\nimport { useInstanceId } from '@wordpress/compose';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport PostFormatCheck from './check';\r\nimport { store as editorStore } from '../../store';\r\n\r\n// All WP post formats, sorted alphabetically by translated name.\r\nexport const POST_FORMATS = [\r\n\t{ id: 'aside', caption: __( 'Aside' ) },\r\n\t{ id: 'audio', caption: __( 'Audio' ) },\r\n\t{ id: 'chat', caption: __( 'Chat' ) },\r\n\t{ id: 'gallery', caption: __( 'Gallery' ) },\r\n\t{ id: 'image', caption: __( 'Image' ) },\r\n\t{ id: 'link', caption: __( 'Link' ) },\r\n\t{ id: 'quote', caption: __( 'Quote' ) },\r\n\t{ id: 'standard', caption: __( 'Standard' ) },\r\n\t{ id: 'status', caption: __( 'Status' ) },\r\n\t{ id: 'video', caption: __( 'Video' ) },\r\n].sort( ( a, b ) => {\r\n\tconst normalizedA = a.caption.toUpperCase();\r\n\tconst normalizedB = b.caption.toUpperCase();\r\n\r\n\tif ( normalizedA < normalizedB ) {\r\n\t\treturn -1;\r\n\t}\r\n\tif ( normalizedA > normalizedB ) {\r\n\t\treturn 1;\r\n\t}\r\n\treturn 0;\r\n} );\r\n\r\n/**\r\n * `PostFormat` a component that allows changing the post format while also providing a suggestion for the current post.\r\n *\r\n * @example\r\n * ```jsx\r\n * <PostFormat />\r\n * ```\r\n *\r\n * @return {JSX.Element} The rendered PostFormat component.\r\n */\r\nexport default function PostFormat() {\r\n\tconst instanceId = useInstanceId( PostFormat );\r\n\tconst postFormatSelectorId = `post-format-selector-${ instanceId }`;\r\n\r\n\tconst { postFormat, suggestedFormat, supportedFormats } = useSelect(\r\n\t\t( select ) => {\r\n\t\t\tconst { getEditedPostAttribute, getSuggestedPostFormat } =\r\n\t\t\t\tselect( editorStore );\r\n\t\t\tconst _postFormat = getEditedPostAttribute( 'format' );\r\n\t\t\tconst themeSupports = select( coreStore ).getThemeSupports();\r\n\t\t\treturn {\r\n\t\t\t\tpostFormat: _postFormat ?? 'standard',\r\n\t\t\t\tsuggestedFormat: getSuggestedPostFormat(),\r\n\t\t\t\tsupportedFormats: themeSupports.formats,\r\n\t\t\t};\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\tconst formats = POST_FORMATS.filter( ( format ) => {\r\n\t\t// Ensure current format is always in the set.\r\n\t\t// The current format may not be a format supported by the theme.\r\n\t\treturn (\r\n\t\t\tsupportedFormats?.includes( format.id ) || postFormat === format.id\r\n\t\t);\r\n\t} );\r\n\tconst suggestion = formats.find(\r\n\t\t( format ) => format.id === suggestedFormat\r\n\t);\r\n\r\n\tconst { editPost } = useDispatch( editorStore );\r\n\r\n\tconst onUpdatePostFormat = ( format ) => editPost( { format } );\r\n\r\n\treturn (\r\n\t\t<PostFormatCheck>\r\n\t\t\t<div className=\"editor-post-format\">\r\n\t\t\t\t<RadioControl\r\n\t\t\t\t\tclassName=\"editor-post-format__options\"\r\n\t\t\t\t\tlabel={ __( 'Post Format' ) }\r\n\t\t\t\t\tselected={ postFormat }\r\n\t\t\t\t\tonChange={ ( format ) => onUpdatePostFormat( format ) }\r\n\t\t\t\t\tid={ postFormatSelectorId }\r\n\t\t\t\t\toptions={ formats.map( ( format ) => ( {\r\n\t\t\t\t\t\tlabel: format.caption,\r\n\t\t\t\t\t\tvalue: format.id,\r\n\t\t\t\t\t} ) ) }\r\n\t\t\t\t\thideLabelFromVision\r\n\t\t\t\t/>\r\n\t\t\t\t{ suggestion && suggestion.id !== postFormat && (\r\n\t\t\t\t\t<p className=\"editor-post-format__suggestion\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t// TODO: Switch to `true` (40px size) if possible\r\n\t\t\t\t\t\t\t__next40pxDefaultSize={ false }\r\n\t\t\t\t\t\t\tvariant=\"link\"\r\n\t\t\t\t\t\t\tonClick={ () =>\r\n\t\t\t\t\t\t\t\tonUpdatePostFormat( suggestion.id )\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{ sprintf(\r\n\t\t\t\t\t\t\t\t/* translators: %s: post format */\r\n\t\t\t\t\t\t\t\t__( 'Apply suggested format: %s' ),\r\n\t\t\t\t\t\t\t\tsuggestion.caption\r\n\t\t\t\t\t\t\t) }\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t) }\r\n\t\t\t</div>\r\n\t\t</PostFormatCheck>\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]}