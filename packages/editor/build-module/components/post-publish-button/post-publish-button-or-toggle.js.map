{"version":3,"names":["useViewportMatch","compose","withDispatch","withSelect","PostPublishButton","store","editorStore","jsx","_jsx","PostPublishButtonOrToggle","forceIsDirty","hasPublishAction","isBeingScheduled","isPending","isPublished","isPublishSidebarEnabled","isPublishSidebarOpened","isScheduled","togglePublishSidebar","setEntitiesSavedStatesCallback","postStatusHasChanged","postStatus","IS_TOGGLE","IS_BUTTON","isSmallerThanMediumViewport","component","includes","isOpen","isToggle","onToggle","select","_select$getCurrentPos","getCurrentPost","_links","isEditedPostBeingScheduled","isCurrentPostPending","isCurrentPostPublished","isCurrentPostScheduled","getEditedPostAttribute","getPostEdits","status","dispatch"],"sources":["@wordpress/editor/src/components/post-publish-button/post-publish-button-or-toggle.js"],"sourcesContent":["/**\r\n * WordPress 依赖\r\n */\r\nimport { useViewportMatch, compose } from '@wordpress/compose';\r\nimport { withDispatch, withSelect } from '@wordpress/data';\r\n\r\n/**\r\n * 内部依赖\r\n */\r\nimport PostPublishButton from './index';\r\nimport { store as editorStore } from '../../store';\r\n\r\nexport function PostPublishButtonOrToggle( {\r\n\tforceIsDirty,\r\n\thasPublishAction,\r\n\tisBeingScheduled,\r\n\tisPending,\r\n\tisPublished,\r\n\tisPublishSidebarEnabled,\r\n\tisPublishSidebarOpened,\r\n\tisScheduled,\r\n\ttogglePublishSidebar,\r\n\tsetEntitiesSavedStatesCallback,\r\n\tpostStatusHasChanged,\r\n\tpostStatus,\r\n} ) {\r\n\tconst IS_TOGGLE = 'toggle';\r\n\tconst IS_BUTTON = 'button';\r\n\tconst isSmallerThanMediumViewport = useViewportMatch( 'medium', '<' );\r\n\tlet component;\r\n\r\n\t/**\r\n\t * 显示 BUTTON（直接发布）或 TOGGLE（打开发布侧边栏）的条件：\r\n\t *\r\n\t * 1) 当文章状态处于特定角色的最终阶段时，我们希望显示 BUTTON：\r\n\t *\r\n\t * - 已发布\r\n\t * - 文章状态已明确更改为不同于 'future' 或 'publish'\r\n\t * - 已安排发布\r\n\t * - 处于待定状态且无法发布（仅适用于视口 >= medium）。\r\n\t * \t 最初，我们考虑为无法发布的待定文章显示按钮（例如，对于具有贡献者角色的作者）。\r\n\t * \t 某些语言的“提交审核”翻译可能很长，因此考虑到可用 UI 空间的不足，我们决定在这种情况下考虑视口。\r\n\t * \t 参见：https://github.com/WordPress/gutenberg/issues/10475\r\n\t *\r\n\t * 2) 然后，在小视口中，我们将显示 TOGGLE。\r\n\t *\r\n\t * 3) 最后，我们将使用发布侧边栏状态来决定：\r\n\t *\r\n\t * - 如果启用，我们显示 TOGGLE\r\n\t * - 如果禁用，我们显示 BUTTON\r\n\t */\r\n\tif (\r\n\t\tisPublished ||\r\n\t\t( postStatusHasChanged &&\r\n\t\t\t! [ 'future', 'publish' ].includes( postStatus ) ) ||\r\n\t\t( isScheduled && isBeingScheduled ) ||\r\n\t\t( isPending && ! hasPublishAction && ! isSmallerThanMediumViewport )\r\n\t) {\r\n\t\tcomponent = IS_BUTTON;\r\n\t} else if ( isSmallerThanMediumViewport || isPublishSidebarEnabled ) {\r\n\t\tcomponent = IS_TOGGLE;\r\n\t} else {\r\n\t\tcomponent = IS_BUTTON;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<PostPublishButton\r\n\t\t\tforceIsDirty={ forceIsDirty }\r\n\t\t\tisOpen={ isPublishSidebarOpened }\r\n\t\t\tisToggle={ component === IS_TOGGLE }\r\n\t\t\tonToggle={ togglePublishSidebar }\r\n\t\t\tsetEntitiesSavedStatesCallback={ setEntitiesSavedStatesCallback }\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default compose(\r\n\twithSelect( ( select ) => ( {\r\n\t\thasPublishAction:\r\n\t\t\tselect( editorStore ).getCurrentPost()?._links?.[\r\n\t\t\t\t'wp:action-publish'\r\n\t\t\t] ?? false,\r\n\t\tisBeingScheduled: select( editorStore ).isEditedPostBeingScheduled(),\r\n\t\tisPending: select( editorStore ).isCurrentPostPending(),\r\n\t\tisPublished: select( editorStore ).isCurrentPostPublished(),\r\n\t\tisPublishSidebarEnabled:\r\n\t\t\tselect( editorStore ).isPublishSidebarEnabled(),\r\n\t\tisPublishSidebarOpened: select( editorStore ).isPublishSidebarOpened(),\r\n\t\tisScheduled: select( editorStore ).isCurrentPostScheduled(),\r\n\t\tpostStatus: select( editorStore ).getEditedPostAttribute( 'status' ),\r\n\t\tpostStatusHasChanged: select( editorStore ).getPostEdits()?.status,\r\n\t} ) ),\r\n\twithDispatch( ( dispatch ) => {\r\n\t\tconst { togglePublishSidebar } = dispatch( editorStore );\r\n\t\treturn {\r\n\t\t\ttogglePublishSidebar,\r\n\t\t};\r\n\t} )\r\n)( PostPublishButtonOrToggle );\r\n"],"mappings":"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","ignoreList":[]}