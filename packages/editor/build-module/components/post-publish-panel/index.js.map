{"version":3,"names":["__","Component","Button","Spinner","CheckboxControl","withFocusReturn","withConstrainedTabbing","withSelect","withDispatch","compose","closeSmall","store","coreStore","PostPublishButton","PostPublishPanelPrepublish","PostPublishPanelPostpublish","editorStore","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","PostPublishPanel","constructor","arguments","onSubmit","bind","componentDidUpdate","prevProps","isPublished","props","isSaving","isDirty","onClose","hasPublishAction","isPostTypeViewable","render","forceIsDirty","isBeingScheduled","isPublishSidebarEnabled","isScheduled","isSavingNonPostEntityChanges","onTogglePublishSidebar","PostPublishExtension","PrePublishExtension","additionalProps","propsForPanel","isPublishedOrScheduled","isPrePublish","isPostPublish","className","children","__next40pxDefaultSize","onClick","icon","label","focusOnMount","accessibleWhenDisabled","disabled","variant","size","__nextHasNoMarginBottom","checked","onChange","select","_getCurrentPost$_link","getPostType","getCurrentPost","getEditedPostAttribute","isCurrentPostPublished","isCurrentPostScheduled","isEditedPostBeingScheduled","isEditedPostDirty","isAutosavingPost","isSavingPost","postType","_links","viewable","dispatch","disablePublishSidebar","enablePublishSidebar"],"sources":["@wordpress/editor/src/components/post-publish-panel/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\nimport { Component } from '@wordpress/element';\r\nimport {\r\n\tButton,\r\n\tSpinner,\r\n\tCheckboxControl,\r\n\twithFocusReturn,\r\n\twithConstrainedTabbing,\r\n} from '@wordpress/components';\r\nimport { withSelect, withDispatch } from '@wordpress/data';\r\nimport { compose } from '@wordpress/compose';\r\nimport { closeSmall } from '@wordpress/icons';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport PostPublishButton from '../post-publish-button';\r\nimport PostPublishPanelPrepublish from './prepublish';\r\nimport PostPublishPanelPostpublish from './postpublish';\r\nimport { store as editorStore } from '../../store';\r\n\r\nexport class PostPublishPanel extends Component {\r\n\tconstructor() {\r\n\t\tsuper( ...arguments );\r\n\t\tthis.onSubmit = this.onSubmit.bind( this );\r\n\t}\r\n\r\n\tcomponentDidUpdate( prevProps ) {\r\n\t\t// Automatically collapse the publish sidebar when a post\r\n\t\t// is published and the user makes an edit.\r\n\t\tif (\r\n\t\t\tprevProps.isPublished &&\r\n\t\t\t! this.props.isSaving &&\r\n\t\t\tthis.props.isDirty\r\n\t\t) {\r\n\t\t\tthis.props.onClose();\r\n\t\t}\r\n\t}\r\n\r\n\tonSubmit() {\r\n\t\tconst { onClose, hasPublishAction, isPostTypeViewable } = this.props;\r\n\t\tif ( ! hasPublishAction || ! isPostTypeViewable ) {\r\n\t\t\tonClose();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tforceIsDirty,\r\n\t\t\tisBeingScheduled,\r\n\t\t\tisPublished,\r\n\t\t\tisPublishSidebarEnabled,\r\n\t\t\tisScheduled,\r\n\t\t\tisSaving,\r\n\t\t\tisSavingNonPostEntityChanges,\r\n\t\t\tonClose,\r\n\t\t\tonTogglePublishSidebar,\r\n\t\t\tPostPublishExtension,\r\n\t\t\tPrePublishExtension,\r\n\t\t\t...additionalProps\r\n\t\t} = this.props;\r\n\t\tconst {\r\n\t\t\thasPublishAction,\r\n\t\t\tisDirty,\r\n\t\t\tisPostTypeViewable,\r\n\t\t\t...propsForPanel\r\n\t\t} = additionalProps;\r\n\t\tconst isPublishedOrScheduled =\r\n\t\t\tisPublished || ( isScheduled && isBeingScheduled );\r\n\t\tconst isPrePublish = ! isPublishedOrScheduled && ! isSaving;\r\n\t\tconst isPostPublish = isPublishedOrScheduled && ! isSaving;\r\n\t\treturn (\r\n\t\t\t<div className=\"editor-post-publish-panel\" { ...propsForPanel }>\r\n\t\t\t\t<div className=\"editor-post-publish-panel__header\">\r\n\t\t\t\t\t{ isPostPublish ? (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t// TODO: Switch to `true` (40px size) if possible\r\n\t\t\t\t\t\t\t__next40pxDefaultSize={ false }\r\n\t\t\t\t\t\t\tonClick={ onClose }\r\n\t\t\t\t\t\t\ticon={ closeSmall }\r\n\t\t\t\t\t\t\tlabel={ __( 'Close panel' ) }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<div className=\"editor-post-publish-panel__header-publish-button\">\r\n\t\t\t\t\t\t\t\t<PostPublishButton\r\n\t\t\t\t\t\t\t\t\tfocusOnMount\r\n\t\t\t\t\t\t\t\t\tonSubmit={ this.onSubmit }\r\n\t\t\t\t\t\t\t\t\tforceIsDirty={ forceIsDirty }\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"editor-post-publish-panel__header-cancel-button\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\taccessibleWhenDisabled\r\n\t\t\t\t\t\t\t\t\tdisabled={ isSavingNonPostEntityChanges }\r\n\t\t\t\t\t\t\t\t\tonClick={ onClose }\r\n\t\t\t\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\t\t\t\tsize=\"compact\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{ __( 'Cancel' ) }\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) }\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"editor-post-publish-panel__content\">\r\n\t\t\t\t\t{ isPrePublish && (\r\n\t\t\t\t\t\t<PostPublishPanelPrepublish>\r\n\t\t\t\t\t\t\t{ PrePublishExtension && <PrePublishExtension /> }\r\n\t\t\t\t\t\t</PostPublishPanelPrepublish>\r\n\t\t\t\t\t) }\r\n\t\t\t\t\t{ isPostPublish && (\r\n\t\t\t\t\t\t<PostPublishPanelPostpublish focusOnMount>\r\n\t\t\t\t\t\t\t{ PostPublishExtension && <PostPublishExtension /> }\r\n\t\t\t\t\t\t</PostPublishPanelPostpublish>\r\n\t\t\t\t\t) }\r\n\t\t\t\t\t{ isSaving && <Spinner /> }\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"editor-post-publish-panel__footer\">\r\n\t\t\t\t\t<CheckboxControl\r\n\t\t\t\t\t\t__nextHasNoMarginBottom\r\n\t\t\t\t\t\tlabel={ __( 'Always show pre-publish checks.' ) }\r\n\t\t\t\t\t\tchecked={ isPublishSidebarEnabled }\r\n\t\t\t\t\t\tonChange={ onTogglePublishSidebar }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n/**\r\n * Renders a panel for publishing a post.\r\n */\r\nexport default compose( [\r\n\twithSelect( ( select ) => {\r\n\t\tconst { getPostType } = select( coreStore );\r\n\t\tconst {\r\n\t\t\tgetCurrentPost,\r\n\t\t\tgetEditedPostAttribute,\r\n\t\t\tisCurrentPostPublished,\r\n\t\t\tisCurrentPostScheduled,\r\n\t\t\tisEditedPostBeingScheduled,\r\n\t\t\tisEditedPostDirty,\r\n\t\t\tisAutosavingPost,\r\n\t\t\tisSavingPost,\r\n\t\t\tisSavingNonPostEntityChanges,\r\n\t\t} = select( editorStore );\r\n\t\tconst { isPublishSidebarEnabled } = select( editorStore );\r\n\t\tconst postType = getPostType( getEditedPostAttribute( 'type' ) );\r\n\r\n\t\treturn {\r\n\t\t\thasPublishAction:\r\n\t\t\t\tgetCurrentPost()._links?.[ 'wp:action-publish' ] ?? false,\r\n\t\t\tisPostTypeViewable: postType?.viewable,\r\n\t\t\tisBeingScheduled: isEditedPostBeingScheduled(),\r\n\t\t\tisDirty: isEditedPostDirty(),\r\n\t\t\tisPublished: isCurrentPostPublished(),\r\n\t\t\tisPublishSidebarEnabled: isPublishSidebarEnabled(),\r\n\t\t\tisSaving: isSavingPost() && ! isAutosavingPost(),\r\n\t\t\tisSavingNonPostEntityChanges: isSavingNonPostEntityChanges(),\r\n\t\t\tisScheduled: isCurrentPostScheduled(),\r\n\t\t};\r\n\t} ),\r\n\twithDispatch( ( dispatch, { isPublishSidebarEnabled } ) => {\r\n\t\tconst { disablePublishSidebar, enablePublishSidebar } =\r\n\t\t\tdispatch( editorStore );\r\n\t\treturn {\r\n\t\t\tonTogglePublishSidebar: () => {\r\n\t\t\t\tif ( isPublishSidebarEnabled ) {\r\n\t\t\t\t\tdisablePublishSidebar();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tenablePublishSidebar();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t};\r\n\t} ),\r\n\twithFocusReturn,\r\n\twithConstrainedTabbing,\r\n] )( PostPublishPanel );\r\n"],"mappings":"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","ignoreList":[]}