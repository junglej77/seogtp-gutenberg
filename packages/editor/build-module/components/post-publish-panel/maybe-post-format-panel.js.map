{"version":3,"names":["Button","PanelBody","useDispatch","useSelect","__","sprintf","store","coreStore","POST_FORMATS","editorStore","jsx","_jsx","jsxs","_jsxs","getSuggestion","supportedFormats","suggestedPostFormat","formats","filter","format","includes","id","find","PostFormatSuggestion","suggestionText","onUpdatePostFormat","__next40pxDefaultSize","variant","onClick","children","PostFormatPanel","currentPostFormat","suggestion","select","_select$getThemeSuppo","getEditedPostAttribute","getSuggestedPostFormat","getThemeSupports","editPost","panelBodyTitle","className","initialOpen","title","caption"],"sources":["@wordpress/editor/src/components/post-publish-panel/maybe-post-format-panel.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { Button, PanelBody } from '@wordpress/components';\r\nimport { useDispatch, useSelect } from '@wordpress/data';\r\nimport { __, sprintf } from '@wordpress/i18n';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { POST_FORMATS } from '../post-format';\r\nimport { store as editorStore } from '../../store';\r\n\r\nconst getSuggestion = ( supportedFormats, suggestedPostFormat ) => {\r\n\tconst formats = POST_FORMATS.filter( ( format ) =>\r\n\t\tsupportedFormats?.includes( format.id )\r\n\t);\r\n\treturn formats.find( ( format ) => format.id === suggestedPostFormat );\r\n};\r\n\r\nconst PostFormatSuggestion = ( {\r\n\tsuggestedPostFormat,\r\n\tsuggestionText,\r\n\tonUpdatePostFormat,\r\n} ) => (\r\n\t<Button\r\n\t\t// TODO: Switch to `true` (40px size) if possible\r\n\t\t__next40pxDefaultSize={ false }\r\n\t\tvariant=\"link\"\r\n\t\tonClick={ () => onUpdatePostFormat( suggestedPostFormat ) }\r\n\t>\r\n\t\t{ suggestionText }\r\n\t</Button>\r\n);\r\n\r\nexport default function PostFormatPanel() {\r\n\tconst { currentPostFormat, suggestion } = useSelect( ( select ) => {\r\n\t\tconst { getEditedPostAttribute, getSuggestedPostFormat } =\r\n\t\t\tselect( editorStore );\r\n\t\tconst supportedFormats =\r\n\t\t\tselect( coreStore ).getThemeSupports().formats ?? [];\r\n\t\treturn {\r\n\t\t\tcurrentPostFormat: getEditedPostAttribute( 'format' ),\r\n\t\t\tsuggestion: getSuggestion(\r\n\t\t\t\tsupportedFormats,\r\n\t\t\t\tgetSuggestedPostFormat()\r\n\t\t\t),\r\n\t\t};\r\n\t}, [] );\r\n\r\n\tconst { editPost } = useDispatch( editorStore );\r\n\r\n\tconst onUpdatePostFormat = ( format ) => editPost( { format } );\r\n\r\n\tconst panelBodyTitle = [\r\n\t\t__( 'Suggestion:' ),\r\n\t\t<span className=\"editor-post-publish-panel__link\" key=\"label\">\r\n\t\t\t{ __( 'Use a post format' ) }\r\n\t\t</span>,\r\n\t];\r\n\r\n\tif ( ! suggestion || suggestion.id === currentPostFormat ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<PanelBody initialOpen={ false } title={ panelBodyTitle }>\r\n\t\t\t<p>\r\n\t\t\t\t{ __(\r\n\t\t\t\t\t'Your theme uses post formats to highlight different kinds of content, like images or videos. Apply a post format to see this special styling.'\r\n\t\t\t\t) }\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\t<PostFormatSuggestion\r\n\t\t\t\t\tonUpdatePostFormat={ onUpdatePostFormat }\r\n\t\t\t\t\tsuggestedPostFormat={ suggestion.id }\r\n\t\t\t\t\tsuggestionText={ sprintf(\r\n\t\t\t\t\t\t/* translators: %s: post format */\r\n\t\t\t\t\t\t__( 'Apply the \"%1$s\" format.' ),\r\n\t\t\t\t\t\tsuggestion.caption\r\n\t\t\t\t\t) }\r\n\t\t\t\t/>\r\n\t\t\t</p>\r\n\t\t</PanelBody>\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]}