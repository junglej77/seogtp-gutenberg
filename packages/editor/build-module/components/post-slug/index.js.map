{"version":3,"names":["useDispatch","useSelect","useState","__","safeDecodeURIComponent","cleanForSlug","TextControl","PostSlugCheck","store","editorStore","jsx","_jsx","PostSlugControl","postSlug","select","getEditedPostSlug","editPost","forceEmptyField","setForceEmptyField","__next40pxDefaultSize","__nextHasNoMarginBottom","label","autoComplete","spellCheck","value","onChange","newValue","slug","onBlur","event","target","className","PostSlug","children"],"sources":["@wordpress/editor/src/components/post-slug/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useDispatch, useSelect } from '@wordpress/data';\r\nimport { useState } from '@wordpress/element';\r\nimport { __ } from '@wordpress/i18n';\r\nimport { safeDecodeURIComponent, cleanForSlug } from '@wordpress/url';\r\nimport { TextControl } from '@wordpress/components';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport PostSlugCheck from './check';\r\nimport { store as editorStore } from '../../store';\r\n\r\nfunction PostSlugControl() {\r\n\tconst postSlug = useSelect( ( select ) => {\r\n\t\treturn safeDecodeURIComponent(\r\n\t\t\tselect( editorStore ).getEditedPostSlug()\r\n\t\t);\r\n\t}, [] );\r\n\tconst { editPost } = useDispatch( editorStore );\r\n\tconst [ forceEmptyField, setForceEmptyField ] = useState( false );\r\n\r\n\treturn (\r\n\t\t<TextControl\r\n\t\t\t__next40pxDefaultSize\r\n\t\t\t__nextHasNoMarginBottom\r\n\t\t\tlabel={ __( 'Slug' ) }\r\n\t\t\tautoComplete=\"off\"\r\n\t\t\tspellCheck=\"false\"\r\n\t\t\tvalue={ forceEmptyField ? '' : postSlug }\r\n\t\t\tonChange={ ( newValue ) => {\r\n\t\t\t\teditPost( { slug: newValue } );\r\n\t\t\t\t// When we delete the field the permalink gets\r\n\t\t\t\t// reverted to the original value.\r\n\t\t\t\t// The forceEmptyField logic allows the user to have\r\n\t\t\t\t// the field temporarily empty while typing.\r\n\t\t\t\tif ( ! newValue ) {\r\n\t\t\t\t\tif ( ! forceEmptyField ) {\r\n\t\t\t\t\t\tsetForceEmptyField( true );\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif ( forceEmptyField ) {\r\n\t\t\t\t\tsetForceEmptyField( false );\r\n\t\t\t\t}\r\n\t\t\t} }\r\n\t\t\tonBlur={ ( event ) => {\r\n\t\t\t\teditPost( {\r\n\t\t\t\t\tslug: cleanForSlug( event.target.value ),\r\n\t\t\t\t} );\r\n\t\t\t\tif ( forceEmptyField ) {\r\n\t\t\t\t\tsetForceEmptyField( false );\r\n\t\t\t\t}\r\n\t\t\t} }\r\n\t\t\tclassName=\"editor-post-slug\"\r\n\t\t/>\r\n\t);\r\n}\r\n\r\n/**\r\n * Renders the PostSlug component. It provide a control for editing the post slug.\r\n *\r\n * @return {Component} The component to be rendered.\r\n */\r\nexport default function PostSlug() {\r\n\treturn (\r\n\t\t<PostSlugCheck>\r\n\t\t\t<PostSlugControl />\r\n\t\t</PostSlugCheck>\r\n\t);\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,WAAW,EAAEC,SAAS,QAAQ,iBAAiB;AACxD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,EAAE,QAAQ,iBAAiB;AACpC,SAASC,sBAAsB,EAAEC,YAAY,QAAQ,gBAAgB;AACrE,SAASC,WAAW,QAAQ,uBAAuB;;AAEnD;AACA;AACA;AACA,OAAOC,aAAa,MAAM,SAAS;AACnC,SAASC,KAAK,IAAIC,WAAW,QAAQ,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEnD,SAASC,eAAeA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAGZ,SAAS,CAAIa,MAAM,IAAM;IACzC,OAAOV,sBAAsB,CAC5BU,MAAM,CAAEL,WAAY,CAAC,CAACM,iBAAiB,CAAC,CACzC,CAAC;EACF,CAAC,EAAE,EAAG,CAAC;EACP,MAAM;IAAEC;EAAS,CAAC,GAAGhB,WAAW,CAAES,WAAY,CAAC;EAC/C,MAAM,CAAEQ,eAAe,EAAEC,kBAAkB,CAAE,GAAGhB,QAAQ,CAAE,KAAM,CAAC;EAEjE,oBACCS,IAAA,CAACL,WAAW;IACXa,qBAAqB;IACrBC,uBAAuB;IACvBC,KAAK,EAAGlB,EAAE,CAAE,MAAO,CAAG;IACtBmB,YAAY,EAAC,KAAK;IAClBC,UAAU,EAAC,OAAO;IAClBC,KAAK,EAAGP,eAAe,GAAG,EAAE,GAAGJ,QAAU;IACzCY,QAAQ,EAAKC,QAAQ,IAAM;MAC1BV,QAAQ,CAAE;QAAEW,IAAI,EAAED;MAAS,CAAE,CAAC;MAC9B;MACA;MACA;MACA;MACA,IAAK,CAAEA,QAAQ,EAAG;QACjB,IAAK,CAAET,eAAe,EAAG;UACxBC,kBAAkB,CAAE,IAAK,CAAC;QAC3B;QACA;MACD;MACA,IAAKD,eAAe,EAAG;QACtBC,kBAAkB,CAAE,KAAM,CAAC;MAC5B;IACD,CAAG;IACHU,MAAM,EAAKC,KAAK,IAAM;MACrBb,QAAQ,CAAE;QACTW,IAAI,EAAEtB,YAAY,CAAEwB,KAAK,CAACC,MAAM,CAACN,KAAM;MACxC,CAAE,CAAC;MACH,IAAKP,eAAe,EAAG;QACtBC,kBAAkB,CAAE,KAAM,CAAC;MAC5B;IACD,CAAG;IACHa,SAAS,EAAC;EAAkB,CAC5B,CAAC;AAEJ;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,QAAQA,CAAA,EAAG;EAClC,oBACCrB,IAAA,CAACJ,aAAa;IAAA0B,QAAA,eACbtB,IAAA,CAACC,eAAe,IAAE;EAAC,CACL,CAAC;AAElB","ignoreList":[]}