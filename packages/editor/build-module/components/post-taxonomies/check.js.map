{"version":3,"names":["useSelect","store","coreStore","editorStore","PostTaxonomiesCheck","children","hasTaxonomies","select","postType","getCurrentPostType","taxonomies","getTaxonomies","per_page","some","taxonomy","types","includes"],"sources":["@wordpress/editor/src/components/post-taxonomies/check.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useSelect } from '@wordpress/data';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as editorStore } from '../../store';\r\n\r\n/**\r\n * Renders the children components only if the current post type has taxonomies.\r\n *\r\n * @param {Object}  props          The component props.\r\n * @param {Element} props.children The children components to render.\r\n *\r\n * @return {Component|null} The rendered children components or null if the current post type has no taxonomies.\r\n */\r\nexport default function PostTaxonomiesCheck( { children } ) {\r\n\tconst hasTaxonomies = useSelect( ( select ) => {\r\n\t\tconst postType = select( editorStore ).getCurrentPostType();\r\n\t\tconst taxonomies = select( coreStore ).getTaxonomies( {\r\n\t\t\tper_page: -1,\r\n\t\t} );\r\n\t\treturn taxonomies?.some( ( taxonomy ) =>\r\n\t\t\ttaxonomy.types.includes( postType )\r\n\t\t);\r\n\t}, [] );\r\n\tif ( ! hasTaxonomies ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn children;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,KAAK,IAAIC,SAAS,QAAQ,sBAAsB;;AAEzD;AACA;AACA;AACA,SAASD,KAAK,IAAIE,WAAW,QAAQ,aAAa;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,mBAAmBA,CAAE;EAAEC;AAAS,CAAC,EAAG;EAC3D,MAAMC,aAAa,GAAGN,SAAS,CAAIO,MAAM,IAAM;IAC9C,MAAMC,QAAQ,GAAGD,MAAM,CAAEJ,WAAY,CAAC,CAACM,kBAAkB,CAAC,CAAC;IAC3D,MAAMC,UAAU,GAAGH,MAAM,CAAEL,SAAU,CAAC,CAACS,aAAa,CAAE;MACrDC,QAAQ,EAAE,CAAC;IACZ,CAAE,CAAC;IACH,OAAOF,UAAU,EAAEG,IAAI,CAAIC,QAAQ,IAClCA,QAAQ,CAACC,KAAK,CAACC,QAAQ,CAAER,QAAS,CACnC,CAAC;EACF,CAAC,EAAE,EAAG,CAAC;EACP,IAAK,CAAEF,aAAa,EAAG;IACtB,OAAO,IAAI;EACZ;EAEA,OAAOD,QAAQ;AAChB","ignoreList":[]}