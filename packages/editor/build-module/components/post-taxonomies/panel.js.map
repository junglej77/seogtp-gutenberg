{"version":3,"names":["PanelBody","useSelect","useDispatch","store","editorStore","PostTaxonomiesForm","PostTaxonomiesCheck","jsx","_jsx","TaxonomyPanel","taxonomy","children","slug","panelName","isEnabled","isOpened","select","isEditorPanelEnabled","isEditorPanelOpened","toggleEditorPanelOpened","taxonomyMenuName","labels","menu_name","title","opened","onToggle","PostTaxonomies","taxonomyWrapper","content"],"sources":["@wordpress/editor/src/components/post-taxonomies/panel.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { PanelBody } from '@wordpress/components';\r\nimport { useSelect, useDispatch } from '@wordpress/data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as editorStore } from '../../store';\r\nimport PostTaxonomiesForm from './index';\r\nimport PostTaxonomiesCheck from './check';\r\n\r\nfunction TaxonomyPanel( { taxonomy, children } ) {\r\n\tconst slug = taxonomy?.slug;\r\n\tconst panelName = slug ? `taxonomy-panel-${ slug }` : '';\r\n\tconst { isEnabled, isOpened } = useSelect(\r\n\t\t( select ) => {\r\n\t\t\tconst { isEditorPanelEnabled, isEditorPanelOpened } =\r\n\t\t\t\tselect( editorStore );\r\n\t\t\treturn {\r\n\t\t\t\tisEnabled: slug ? isEditorPanelEnabled( panelName ) : false,\r\n\t\t\t\tisOpened: slug ? isEditorPanelOpened( panelName ) : false,\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ panelName, slug ]\r\n\t);\r\n\tconst { toggleEditorPanelOpened } = useDispatch( editorStore );\r\n\r\n\tif ( ! isEnabled ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst taxonomyMenuName = taxonomy?.labels?.menu_name;\r\n\tif ( ! taxonomyMenuName ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<PanelBody\r\n\t\t\ttitle={ taxonomyMenuName }\r\n\t\t\topened={ isOpened }\r\n\t\t\tonToggle={ () => toggleEditorPanelOpened( panelName ) }\r\n\t\t>\r\n\t\t\t{ children }\r\n\t\t</PanelBody>\r\n\t);\r\n}\r\n\r\nfunction PostTaxonomies() {\r\n\treturn (\r\n\t\t<PostTaxonomiesCheck>\r\n\t\t\t<PostTaxonomiesForm\r\n\t\t\t\ttaxonomyWrapper={ ( content, taxonomy ) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<TaxonomyPanel taxonomy={ taxonomy }>\r\n\t\t\t\t\t\t\t{ content }\r\n\t\t\t\t\t\t</TaxonomyPanel>\r\n\t\t\t\t\t);\r\n\t\t\t\t} }\r\n\t\t\t/>\r\n\t\t</PostTaxonomiesCheck>\r\n\t);\r\n}\r\n\r\n/**\r\n * Renders a panel for a specific taxonomy.\r\n *\r\n * @param {Object}  props          The component props.\r\n * @param {Object}  props.taxonomy The taxonomy object.\r\n * @param {Element} props.children The child components.\r\n *\r\n * @return {Component} The rendered taxonomy panel.\r\n */\r\nexport default PostTaxonomies;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,uBAAuB;AACjD,SAASC,SAAS,EAAEC,WAAW,QAAQ,iBAAiB;;AAExD;AACA;AACA;AACA,SAASC,KAAK,IAAIC,WAAW,QAAQ,aAAa;AAClD,OAAOC,kBAAkB,MAAM,SAAS;AACxC,OAAOC,mBAAmB,MAAM,SAAS;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE1C,SAASC,aAAaA,CAAE;EAAEC,QAAQ;EAAEC;AAAS,CAAC,EAAG;EAChD,MAAMC,IAAI,GAAGF,QAAQ,EAAEE,IAAI;EAC3B,MAAMC,SAAS,GAAGD,IAAI,GAAI,kBAAkBA,IAAM,EAAC,GAAG,EAAE;EACxD,MAAM;IAAEE,SAAS;IAAEC;EAAS,CAAC,GAAGd,SAAS,CACtCe,MAAM,IAAM;IACb,MAAM;MAAEC,oBAAoB;MAAEC;IAAoB,CAAC,GAClDF,MAAM,CAAEZ,WAAY,CAAC;IACtB,OAAO;MACNU,SAAS,EAAEF,IAAI,GAAGK,oBAAoB,CAAEJ,SAAU,CAAC,GAAG,KAAK;MAC3DE,QAAQ,EAAEH,IAAI,GAAGM,mBAAmB,CAAEL,SAAU,CAAC,GAAG;IACrD,CAAC;EACF,CAAC,EACD,CAAEA,SAAS,EAAED,IAAI,CAClB,CAAC;EACD,MAAM;IAAEO;EAAwB,CAAC,GAAGjB,WAAW,CAAEE,WAAY,CAAC;EAE9D,IAAK,CAAEU,SAAS,EAAG;IAClB,OAAO,IAAI;EACZ;EAEA,MAAMM,gBAAgB,GAAGV,QAAQ,EAAEW,MAAM,EAAEC,SAAS;EACpD,IAAK,CAAEF,gBAAgB,EAAG;IACzB,OAAO,IAAI;EACZ;EAEA,oBACCZ,IAAA,CAACR,SAAS;IACTuB,KAAK,EAAGH,gBAAkB;IAC1BI,MAAM,EAAGT,QAAU;IACnBU,QAAQ,EAAGA,CAAA,KAAMN,uBAAuB,CAAEN,SAAU,CAAG;IAAAF,QAAA,EAErDA;EAAQ,CACA,CAAC;AAEd;AAEA,SAASe,cAAcA,CAAA,EAAG;EACzB,oBACClB,IAAA,CAACF,mBAAmB;IAAAK,QAAA,eACnBH,IAAA,CAACH,kBAAkB;MAClBsB,eAAe,EAAGA,CAAEC,OAAO,EAAElB,QAAQ,KAAM;QAC1C,oBACCF,IAAA,CAACC,aAAa;UAACC,QAAQ,EAAGA,QAAU;UAAAC,QAAA,EACjCiB;QAAO,CACK,CAAC;MAElB;IAAG,CACH;EAAC,CACkB,CAAC;AAExB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeF,cAAc","ignoreList":[]}