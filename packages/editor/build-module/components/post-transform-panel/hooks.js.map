{"version":3,"names":["useSelect","useMemo","store","coreStore","parse","privateApis","patternsPrivateApis","unlock","editorStore","EXCLUDED_PATTERN_SOURCES","PATTERN_TYPES","injectThemeAttributeInBlockTemplateContent","block","currentThemeStylesheet","innerBlocks","map","innerBlock","name","attributes","theme","undefined","filterPatterns","patterns","template","filterOutDuplicatesByName","currentItem","index","items","findIndex","item","filterOutExcludedPatternSources","pattern","includes","source","filterCompatiblePatterns","templateTypes","slug","blockTypes","area","filter","preparePatterns","keywords","type","blocks","content","__unstableSkipMigrationLogs","useAvailablePatterns","blockPatterns","restBlockPatterns","select","_settings$__experimen","getEditorSettings","settings","__experimentalAdditionalBlockPatterns","__experimentalBlockPatterns","getBlockPatterns","getCurrentTheme","stylesheet","mergedPatterns","filteredPatterns"],"sources":["@wordpress/editor/src/components/post-transform-panel/hooks.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useSelect } from '@wordpress/data';\r\nimport { useMemo } from '@wordpress/element';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\nimport { parse } from '@wordpress/blocks';\r\nimport { privateApis as patternsPrivateApis } from '@wordpress/patterns';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { unlock } from '../../lock-unlock';\r\nimport { store as editorStore } from '../../store';\r\n\r\nconst { EXCLUDED_PATTERN_SOURCES, PATTERN_TYPES } =\r\n\tunlock( patternsPrivateApis );\r\n\r\nfunction injectThemeAttributeInBlockTemplateContent(\r\n\tblock,\r\n\tcurrentThemeStylesheet\r\n) {\r\n\tblock.innerBlocks = block.innerBlocks.map( ( innerBlock ) => {\r\n\t\treturn injectThemeAttributeInBlockTemplateContent(\r\n\t\t\tinnerBlock,\r\n\t\t\tcurrentThemeStylesheet\r\n\t\t);\r\n\t} );\r\n\r\n\tif (\r\n\t\tblock.name === 'core/template-part' &&\r\n\t\tblock.attributes.theme === undefined\r\n\t) {\r\n\t\tblock.attributes.theme = currentThemeStylesheet;\r\n\t}\r\n\treturn block;\r\n}\r\n\r\n/**\r\n * Filter all patterns and return only the ones that are compatible with the current template.\r\n *\r\n * @param {Array}  patterns An array of patterns.\r\n * @param {Object} template The current template.\r\n * @return {Array} Array of patterns that are compatible with the current template.\r\n */\r\nfunction filterPatterns( patterns, template ) {\r\n\t// Filter out duplicates.\r\n\tconst filterOutDuplicatesByName = ( currentItem, index, items ) =>\r\n\t\tindex === items.findIndex( ( item ) => currentItem.name === item.name );\r\n\r\n\t// Filter out core/directory patterns not included in theme.json.\r\n\tconst filterOutExcludedPatternSources = ( pattern ) =>\r\n\t\t! EXCLUDED_PATTERN_SOURCES.includes( pattern.source );\r\n\r\n\t// Looks for patterns that have the same template type as the current template,\r\n\t// or have a block type that matches the current template area.\r\n\tconst filterCompatiblePatterns = ( pattern ) =>\r\n\t\tpattern.templateTypes?.includes( template.slug ) ||\r\n\t\tpattern.blockTypes?.includes( 'core/template-part/' + template.area );\r\n\r\n\treturn patterns.filter( ( pattern, index, items ) => {\r\n\t\treturn (\r\n\t\t\tfilterOutDuplicatesByName( pattern, index, items ) &&\r\n\t\t\tfilterOutExcludedPatternSources( pattern ) &&\r\n\t\t\tfilterCompatiblePatterns( pattern )\r\n\t\t);\r\n\t} );\r\n}\r\n\r\nfunction preparePatterns( patterns, currentThemeStylesheet ) {\r\n\treturn patterns.map( ( pattern ) => ( {\r\n\t\t...pattern,\r\n\t\tkeywords: pattern.keywords || [],\r\n\t\ttype: PATTERN_TYPES.theme,\r\n\t\tblocks: parse( pattern.content, {\r\n\t\t\t__unstableSkipMigrationLogs: true,\r\n\t\t} ).map( ( block ) =>\r\n\t\t\tinjectThemeAttributeInBlockTemplateContent(\r\n\t\t\t\tblock,\r\n\t\t\t\tcurrentThemeStylesheet\r\n\t\t\t)\r\n\t\t),\r\n\t} ) );\r\n}\r\n\r\nexport function useAvailablePatterns( template ) {\r\n\tconst { blockPatterns, restBlockPatterns, currentThemeStylesheet } =\r\n\t\tuseSelect( ( select ) => {\r\n\t\t\tconst { getEditorSettings } = select( editorStore );\r\n\t\t\tconst settings = getEditorSettings();\r\n\r\n\t\t\treturn {\r\n\t\t\t\tblockPatterns:\r\n\t\t\t\t\tsettings.__experimentalAdditionalBlockPatterns ??\r\n\t\t\t\t\tsettings.__experimentalBlockPatterns,\r\n\t\t\t\trestBlockPatterns: select( coreStore ).getBlockPatterns(),\r\n\t\t\t\tcurrentThemeStylesheet:\r\n\t\t\t\t\tselect( coreStore ).getCurrentTheme().stylesheet,\r\n\t\t\t};\r\n\t\t}, [] );\r\n\r\n\treturn useMemo( () => {\r\n\t\tconst mergedPatterns = [\r\n\t\t\t...( blockPatterns || [] ),\r\n\t\t\t...( restBlockPatterns || [] ),\r\n\t\t];\r\n\t\tconst filteredPatterns = filterPatterns( mergedPatterns, template );\r\n\t\treturn preparePatterns(\r\n\t\t\tfilteredPatterns,\r\n\t\t\ttemplate,\r\n\t\t\tcurrentThemeStylesheet\r\n\t\t);\r\n\t}, [ blockPatterns, restBlockPatterns, template, currentThemeStylesheet ] );\r\n}\r\n"],"mappings":"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","ignoreList":[]}