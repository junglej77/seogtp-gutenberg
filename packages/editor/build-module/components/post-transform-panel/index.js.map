{"version":3,"names":["useSelect","useDispatch","store","coreStore","PanelBody","__","useAsyncList","__experimentalBlockPatternsList","BlockPatternsList","serialize","editorStore","useAvailablePatterns","TEMPLATE_POST_TYPE","TEMPLATE_PART_POST_TYPE","jsx","_jsx","TemplatesList","availableTemplates","onSelect","shownTemplates","length","label","blockPatterns","shownPatterns","onClickPattern","showTitlesAsTooltip","PostTransform","record","postType","postId","select","getCurrentPostType","getCurrentPostId","getEditedEntityRecord","type","id","editEntityRecord","availablePatterns","onTemplateSelect","selectedTemplate","blocks","content","title","initialOpen","children","PostTransformPanel","includes"],"sources":["@wordpress/editor/src/components/post-transform-panel/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useSelect, useDispatch } from '@wordpress/data';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\nimport { PanelBody } from '@wordpress/components';\r\nimport { __ } from '@wordpress/i18n';\r\nimport { useAsyncList } from '@wordpress/compose';\r\nimport { __experimentalBlockPatternsList as BlockPatternsList } from '@wordpress/block-editor';\r\nimport { serialize } from '@wordpress/blocks';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as editorStore } from '../../store';\r\nimport { useAvailablePatterns } from './hooks';\r\nimport {\r\n\tTEMPLATE_POST_TYPE,\r\n\tTEMPLATE_PART_POST_TYPE,\r\n} from '../../store/constants';\r\n\r\nfunction TemplatesList( { availableTemplates, onSelect } ) {\r\n\tconst shownTemplates = useAsyncList( availableTemplates );\r\n\tif ( ! availableTemplates || availableTemplates?.length === 0 ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<BlockPatternsList\r\n\t\t\tlabel={ __( 'Templates' ) }\r\n\t\t\tblockPatterns={ availableTemplates }\r\n\t\t\tshownPatterns={ shownTemplates }\r\n\t\t\tonClickPattern={ onSelect }\r\n\t\t\tshowTitlesAsTooltip\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction PostTransform() {\r\n\tconst { record, postType, postId } = useSelect( ( select ) => {\r\n\t\tconst { getCurrentPostType, getCurrentPostId } = select( editorStore );\r\n\t\tconst { getEditedEntityRecord } = select( coreStore );\r\n\t\tconst type = getCurrentPostType();\r\n\t\tconst id = getCurrentPostId();\r\n\t\treturn {\r\n\t\t\tpostType: type,\r\n\t\t\tpostId: id,\r\n\t\t\trecord: getEditedEntityRecord( 'postType', type, id ),\r\n\t\t};\r\n\t}, [] );\r\n\tconst { editEntityRecord } = useDispatch( coreStore );\r\n\tconst availablePatterns = useAvailablePatterns( record );\r\n\tconst onTemplateSelect = async ( selectedTemplate ) => {\r\n\t\tawait editEntityRecord( 'postType', postType, postId, {\r\n\t\t\tblocks: selectedTemplate.blocks,\r\n\t\t\tcontent: serialize( selectedTemplate.blocks ),\r\n\t\t} );\r\n\t};\r\n\tif ( ! availablePatterns?.length ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<PanelBody\r\n\t\t\ttitle={ __( 'Design' ) }\r\n\t\t\tinitialOpen={ record.type === TEMPLATE_PART_POST_TYPE }\r\n\t\t>\r\n\t\t\t<TemplatesList\r\n\t\t\t\tavailableTemplates={ availablePatterns }\r\n\t\t\t\tonSelect={ onTemplateSelect }\r\n\t\t\t/>\r\n\t\t</PanelBody>\r\n\t);\r\n}\r\n\r\nexport default function PostTransformPanel() {\r\n\tconst { postType } = useSelect( ( select ) => {\r\n\t\tconst { getCurrentPostType } = select( editorStore );\r\n\t\treturn {\r\n\t\t\tpostType: getCurrentPostType(),\r\n\t\t};\r\n\t}, [] );\r\n\r\n\tif (\r\n\t\t! [ TEMPLATE_PART_POST_TYPE, TEMPLATE_POST_TYPE ].includes( postType )\r\n\t) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn <PostTransform />;\r\n}\r\n"],"mappings":"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","ignoreList":[]}