{"version":3,"names":["useEffect","useLayoutEffect","useMemo","useDispatch","useSelect","__","EntityProvider","useEntityBlockEditor","BlockEditorProvider","BlockContextProvider","privateApis","blockEditorPrivateApis","store","noticesStore","editPatternsPrivateApis","createBlock","withRegistryProvider","editorStore","useBlockEditorSettings","unlock","DisableNonPageContentBlocks","NavigationBlockEditingMode","useHideBlocksFromInserter","useCommands","BlockRemovalWarnings","StartPageOptions","KeyboardShortcutHelpModal","ContentOnlySettingsMenu","StartTemplateOptions","EditorKeyboardShortcuts","PatternRenameModal","PatternDuplicateModal","TemplatePartMenuItems","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ExperimentalBlockEditorProvider","PatternsMenuItems","noop","NON_CONTEXTUAL_POST_TYPES","useBlockEditorProps","post","template","mode","rootLevelPost","postBlocks","onInput","onChange","type","id","templateBlocks","onInputTemplate","onChangeTemplate","maybeNavigationBlocks","ref","templateLock","blocks","disableRootLevelChanges","ExperimentalEditorProvider","settings","recovery","initialEdits","children","BlockEditorProviderComponent","__unstableTemplate","editorSettings","selection","isReady","select","getEditorSettings","getEditorSelection","getRenderingMode","__unstableIsEditorReady","shouldRenderTemplate","defaultBlockContext","postContext","includes","postId","postType","templateSlug","slug","undefined","blockEditorSettings","updatePostLock","setupEditor","updateEditorSettings","setCurrentTemplateId","setEditedPost","setRenderingMode","createWarningNotice","postLock","autosave","actions","label","url","editLink","_settings$defaultRend","defaultRenderingMode","kind","value","useSubRegistry","__unstableIsPreviewMode","EditorProvider","props"],"sources":["@wordpress/editor/src/components/provider/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useEffect, useLayoutEffect, useMemo } from '@wordpress/element';\r\nimport { useDispatch, useSelect } from '@wordpress/data';\r\nimport { __ } from '@wordpress/i18n';\r\nimport { EntityProvider, useEntityBlockEditor } from '@wordpress/core-data';\r\nimport {\r\n\tBlockEditorProvider,\r\n\tBlockContextProvider,\r\n\tprivateApis as blockEditorPrivateApis,\r\n} from '@wordpress/block-editor';\r\nimport { store as noticesStore } from '@wordpress/notices';\r\nimport { privateApis as editPatternsPrivateApis } from '@wordpress/patterns';\r\nimport { createBlock } from '@wordpress/blocks';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport withRegistryProvider from './with-registry-provider';\r\nimport { store as editorStore } from '../../store';\r\nimport useBlockEditorSettings from './use-block-editor-settings';\r\nimport { unlock } from '../../lock-unlock';\r\nimport DisableNonPageContentBlocks from './disable-non-page-content-blocks';\r\nimport NavigationBlockEditingMode from './navigation-block-editing-mode';\r\nimport { useHideBlocksFromInserter } from './use-hide-blocks-from-inserter';\r\nimport useCommands from '../commands';\r\nimport BlockRemovalWarnings from '../block-removal-warnings';\r\nimport StartPageOptions from '../start-page-options';\r\nimport KeyboardShortcutHelpModal from '../keyboard-shortcut-help-modal';\r\nimport ContentOnlySettingsMenu from '../block-settings-menu/content-only-settings-menu';\r\nimport StartTemplateOptions from '../start-template-options';\r\nimport EditorKeyboardShortcuts from '../global-keyboard-shortcuts';\r\nimport PatternRenameModal from '../pattern-rename-modal';\r\nimport PatternDuplicateModal from '../pattern-duplicate-modal';\r\nimport TemplatePartMenuItems from '../template-part-menu-items';\r\n\r\nconst { ExperimentalBlockEditorProvider } = unlock( blockEditorPrivateApis );\r\nconst { PatternsMenuItems } = unlock( editPatternsPrivateApis );\r\n\r\nconst noop = () => {};\r\n\r\n/**\r\n * These are global entities that are only there to split blocks into logical units\r\n * They don't provide a \"context\" for the current post/page being rendered.\r\n * So we should not use their ids as post context. This is important to allow post blocks\r\n * (post content, post title) to be used within them without issues.\r\n */\r\nconst NON_CONTEXTUAL_POST_TYPES = [\r\n\t'wp_block',\r\n\t'wp_template',\r\n\t'wp_navigation',\r\n\t'wp_template_part',\r\n];\r\n\r\n/**\r\n * Depending on the post, template and template mode,\r\n * returns the appropriate blocks and change handlers for the block editor provider.\r\n *\r\n * @param {Array}   post     Block list.\r\n * @param {boolean} template Whether the page content has focus (and the surrounding template is inert). If `true` return page content blocks. Default `false`.\r\n * @param {string}  mode     Rendering mode.\r\n *\r\n * @example\r\n * ```jsx\r\n * const [ blocks, onInput, onChange ] = useBlockEditorProps( post, template, mode );\r\n * ```\r\n *\r\n * @return {Array} Block editor props.\r\n */\r\nfunction useBlockEditorProps( post, template, mode ) {\r\n\tconst rootLevelPost =\r\n\t\tmode === 'post-only' || ! template ? 'post' : 'template';\r\n\tconst [ postBlocks, onInput, onChange ] = useEntityBlockEditor(\r\n\t\t'postType',\r\n\t\tpost.type,\r\n\t\t{ id: post.id }\r\n\t);\r\n\tconst [ templateBlocks, onInputTemplate, onChangeTemplate ] =\r\n\t\tuseEntityBlockEditor( 'postType', template?.type, {\r\n\t\t\tid: template?.id,\r\n\t\t} );\r\n\tconst maybeNavigationBlocks = useMemo( () => {\r\n\t\tif ( post.type === 'wp_navigation' ) {\r\n\t\t\treturn [\r\n\t\t\t\tcreateBlock( 'core/navigation', {\r\n\t\t\t\t\tref: post.id,\r\n\t\t\t\t\t// As the parent editor is locked with `templateLock`, the template locking\r\n\t\t\t\t\t// must be explicitly \"unset\" on the block itself to allow the user to modify\r\n\t\t\t\t\t// the block's content.\r\n\t\t\t\t\ttemplateLock: false,\r\n\t\t\t\t} ),\r\n\t\t\t];\r\n\t\t}\r\n\t}, [ post.type, post.id ] );\r\n\r\n\t// It is important that we don't create a new instance of blocks on every change\r\n\t// We should only create a new instance if the blocks them selves change, not a dependency of them.\r\n\tconst blocks = useMemo( () => {\r\n\t\tif ( maybeNavigationBlocks ) {\r\n\t\t\treturn maybeNavigationBlocks;\r\n\t\t}\r\n\r\n\t\tif ( rootLevelPost === 'template' ) {\r\n\t\t\treturn templateBlocks;\r\n\t\t}\r\n\r\n\t\treturn postBlocks;\r\n\t}, [ maybeNavigationBlocks, rootLevelPost, templateBlocks, postBlocks ] );\r\n\r\n\t// Handle fallback to postBlocks outside of the above useMemo, to ensure\r\n\t// that constructed block templates that call `createBlock` are not generated\r\n\t// too frequently. This ensures that clientIds are stable.\r\n\tconst disableRootLevelChanges =\r\n\t\t( !! template && mode === 'template-locked' ) ||\r\n\t\tpost.type === 'wp_navigation';\r\n\tif ( disableRootLevelChanges ) {\r\n\t\treturn [ blocks, noop, noop ];\r\n\t}\r\n\r\n\treturn [\r\n\t\tblocks,\r\n\t\trootLevelPost === 'post' ? onInput : onInputTemplate,\r\n\t\trootLevelPost === 'post' ? onChange : onChangeTemplate,\r\n\t];\r\n}\r\n\r\n/**\r\n * This component provides the editor context and manages the state of the block editor.\r\n *\r\n * @param {Object}  props                                The component props.\r\n * @param {Object}  props.post                           The post object.\r\n * @param {Object}  props.settings                       The editor settings.\r\n * @param {boolean} props.recovery                       Indicates if the editor is in recovery mode.\r\n * @param {Array}   props.initialEdits                   The initial edits for the editor.\r\n * @param {Object}  props.children                       The child components.\r\n * @param {Object}  [props.BlockEditorProviderComponent] The block editor provider component to use. Defaults to ExperimentalBlockEditorProvider.\r\n * @param {Object}  [props.__unstableTemplate]           The template object.\r\n *\r\n * @example\r\n * ```jsx\r\n * <ExperimentalEditorProvider\r\n *   post={ post }\r\n *   settings={ settings }\r\n *   recovery={ recovery }\r\n *   initialEdits={ initialEdits }\r\n *   __unstableTemplate={ template }\r\n * >\r\n *   { children }\r\n * </ExperimentalEditorProvider>\r\n *\r\n * @return {Object} The rendered ExperimentalEditorProvider component.\r\n */\r\nexport const ExperimentalEditorProvider = withRegistryProvider(\r\n\t( {\r\n\t\tpost,\r\n\t\tsettings,\r\n\t\trecovery,\r\n\t\tinitialEdits,\r\n\t\tchildren,\r\n\t\tBlockEditorProviderComponent = ExperimentalBlockEditorProvider,\r\n\t\t__unstableTemplate: template,\r\n\t} ) => {\r\n\t\tconst { editorSettings, selection, isReady, mode } = useSelect(\r\n\t\t\t( select ) => {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tgetEditorSettings,\r\n\t\t\t\t\tgetEditorSelection,\r\n\t\t\t\t\tgetRenderingMode,\r\n\t\t\t\t\t__unstableIsEditorReady,\r\n\t\t\t\t} = select( editorStore );\r\n\t\t\t\treturn {\r\n\t\t\t\t\teditorSettings: getEditorSettings(),\r\n\t\t\t\t\tisReady: __unstableIsEditorReady(),\r\n\t\t\t\t\tmode: getRenderingMode(),\r\n\t\t\t\t\tselection: getEditorSelection(),\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t[]\r\n\t\t);\r\n\t\tconst shouldRenderTemplate = !! template && mode !== 'post-only';\r\n\t\tconst rootLevelPost = shouldRenderTemplate ? template : post;\r\n\t\tconst defaultBlockContext = useMemo( () => {\r\n\t\t\tconst postContext =\r\n\t\t\t\t! NON_CONTEXTUAL_POST_TYPES.includes( rootLevelPost.type ) ||\r\n\t\t\t\tshouldRenderTemplate\r\n\t\t\t\t\t? { postId: post.id, postType: post.type }\r\n\t\t\t\t\t: {};\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...postContext,\r\n\t\t\t\ttemplateSlug:\r\n\t\t\t\t\trootLevelPost.type === 'wp_template'\r\n\t\t\t\t\t\t? rootLevelPost.slug\r\n\t\t\t\t\t\t: undefined,\r\n\t\t\t};\r\n\t\t}, [\r\n\t\t\tshouldRenderTemplate,\r\n\t\t\tpost.id,\r\n\t\t\tpost.type,\r\n\t\t\trootLevelPost.type,\r\n\t\t\trootLevelPost.slug,\r\n\t\t] );\r\n\t\tconst { id, type } = rootLevelPost;\r\n\t\tconst blockEditorSettings = useBlockEditorSettings(\r\n\t\t\teditorSettings,\r\n\t\t\ttype,\r\n\t\t\tid,\r\n\t\t\tmode\r\n\t\t);\r\n\t\tconst [ blocks, onInput, onChange ] = useBlockEditorProps(\r\n\t\t\tpost,\r\n\t\t\ttemplate,\r\n\t\t\tmode\r\n\t\t);\r\n\r\n\t\tconst {\r\n\t\t\tupdatePostLock,\r\n\t\t\tsetupEditor,\r\n\t\t\tupdateEditorSettings,\r\n\t\t\tsetCurrentTemplateId,\r\n\t\t\tsetEditedPost,\r\n\t\t\tsetRenderingMode,\r\n\t\t} = unlock( useDispatch( editorStore ) );\r\n\t\tconst { createWarningNotice } = useDispatch( noticesStore );\r\n\r\n\t\t// Ideally this should be synced on each change and not just something you do once.\r\n\t\tuseLayoutEffect( () => {\r\n\t\t\t// Assume that we don't need to initialize in the case of an error recovery.\r\n\t\t\tif ( recovery ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tupdatePostLock( settings.postLock );\r\n\t\t\tsetupEditor( post, initialEdits, settings.template );\r\n\t\t\tif ( settings.autosave ) {\r\n\t\t\t\tcreateWarningNotice(\r\n\t\t\t\t\t__(\r\n\t\t\t\t\t\t'There is an autosave of this post that is more recent than the version below.'\r\n\t\t\t\t\t),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: 'autosave-exists',\r\n\t\t\t\t\t\tactions: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlabel: __( 'View the autosave' ),\r\n\t\t\t\t\t\t\t\turl: settings.autosave.editLink,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}, [] );\r\n\r\n\t\t// Synchronizes the active post with the state\r\n\t\tuseEffect( () => {\r\n\t\t\tsetEditedPost( post.type, post.id );\r\n\t\t}, [ post.type, post.id, setEditedPost ] );\r\n\r\n\t\t// Synchronize the editor settings as they change.\r\n\t\tuseEffect( () => {\r\n\t\t\tupdateEditorSettings( settings );\r\n\t\t}, [ settings, updateEditorSettings ] );\r\n\r\n\t\t// Synchronizes the active template with the state.\r\n\t\tuseEffect( () => {\r\n\t\t\tsetCurrentTemplateId( template?.id );\r\n\t\t}, [ template?.id, setCurrentTemplateId ] );\r\n\r\n\t\t// Sets the right rendering mode when loading the editor.\r\n\t\tuseEffect( () => {\r\n\t\t\tsetRenderingMode( settings.defaultRenderingMode ?? 'post-only' );\r\n\t\t}, [ settings.defaultRenderingMode, setRenderingMode ] );\r\n\r\n\t\tuseHideBlocksFromInserter( post.type, mode );\r\n\r\n\t\t// Register the editor commands.\r\n\t\tuseCommands();\r\n\r\n\t\tif ( ! isReady ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<EntityProvider kind=\"root\" type=\"site\">\r\n\t\t\t\t<EntityProvider\r\n\t\t\t\t\tkind=\"postType\"\r\n\t\t\t\t\ttype={ post.type }\r\n\t\t\t\t\tid={ post.id }\r\n\t\t\t\t>\r\n\t\t\t\t\t<BlockContextProvider value={ defaultBlockContext }>\r\n\t\t\t\t\t\t<BlockEditorProviderComponent\r\n\t\t\t\t\t\t\tvalue={ blocks }\r\n\t\t\t\t\t\t\tonChange={ onChange }\r\n\t\t\t\t\t\t\tonInput={ onInput }\r\n\t\t\t\t\t\t\tselection={ selection }\r\n\t\t\t\t\t\t\tsettings={ blockEditorSettings }\r\n\t\t\t\t\t\t\tuseSubRegistry={ false }\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{ children }\r\n\t\t\t\t\t\t\t{ ! settings.__unstableIsPreviewMode && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<PatternsMenuItems />\r\n\t\t\t\t\t\t\t\t\t<TemplatePartMenuItems />\r\n\t\t\t\t\t\t\t\t\t<ContentOnlySettingsMenu />\r\n\t\t\t\t\t\t\t\t\t{ mode === 'template-locked' && (\r\n\t\t\t\t\t\t\t\t\t\t<DisableNonPageContentBlocks />\r\n\t\t\t\t\t\t\t\t\t) }\r\n\t\t\t\t\t\t\t\t\t{ type === 'wp_navigation' && (\r\n\t\t\t\t\t\t\t\t\t\t<NavigationBlockEditingMode />\r\n\t\t\t\t\t\t\t\t\t) }\r\n\t\t\t\t\t\t\t\t\t<EditorKeyboardShortcuts />\r\n\t\t\t\t\t\t\t\t\t<KeyboardShortcutHelpModal />\r\n\t\t\t\t\t\t\t\t\t<BlockRemovalWarnings />\r\n\t\t\t\t\t\t\t\t\t<StartPageOptions />\r\n\t\t\t\t\t\t\t\t\t<StartTemplateOptions />\r\n\t\t\t\t\t\t\t\t\t<PatternRenameModal />\r\n\t\t\t\t\t\t\t\t\t<PatternDuplicateModal />\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) }\r\n\t\t\t\t\t\t</BlockEditorProviderComponent>\r\n\t\t\t\t\t</BlockContextProvider>\r\n\t\t\t\t</EntityProvider>\r\n\t\t\t</EntityProvider>\r\n\t\t);\r\n\t}\r\n);\r\n\r\n/**\r\n * This component establishes a new post editing context, and serves as the entry point for a new post editor (or post with template editor).\r\n *\r\n * It supports a large number of post types, including post, page, templates,\r\n * custom post types, patterns, template parts.\r\n *\r\n * All modification and changes are performed to the `@wordpress/core-data` store.\r\n *\r\n * @param {Object}  props                      The component props.\r\n * @param {Object}  [props.post]               The post object to edit. This is required.\r\n * @param {Object}  [props.__unstableTemplate] The template object wrapper the edited post.\r\n *                                             This is optional and can only be used when the post type supports templates (like posts and pages).\r\n * @param {Object}  [props.settings]           The settings object to use for the editor.\r\n *                                             This is optional and can be used to override the default settings.\r\n * @param {Element} [props.children]           Children elements for which the BlockEditorProvider context should apply.\r\n *                                             This is optional.\r\n *\r\n * @example\r\n * ```jsx\r\n * <EditorProvider\r\n *   post={ post }\r\n *   settings={ settings }\r\n *   __unstableTemplate={ template }\r\n * >\r\n *   { children }\r\n * </EditorProvider>\r\n * ```\r\n *\r\n * @return {JSX.Element} The rendered EditorProvider component.\r\n */\r\nexport function EditorProvider( props ) {\r\n\treturn (\r\n\t\t<ExperimentalEditorProvider\r\n\t\t\t{ ...props }\r\n\t\t\tBlockEditorProviderComponent={ BlockEditorProvider }\r\n\t\t>\r\n\t\t\t{ props.children }\r\n\t\t</ExperimentalEditorProvider>\r\n\t);\r\n}\r\n\r\nexport default EditorProvider;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,EAAEC,eAAe,EAAEC,OAAO,QAAQ,oBAAoB;AACxE,SAASC,WAAW,EAAEC,SAAS,QAAQ,iBAAiB;AACxD,SAASC,EAAE,QAAQ,iBAAiB;AACpC,SAASC,cAAc,EAAEC,oBAAoB,QAAQ,sBAAsB;AAC3E,SACCC,mBAAmB,EACnBC,oBAAoB,EACpBC,WAAW,IAAIC,sBAAsB,QAC/B,yBAAyB;AAChC,SAASC,KAAK,IAAIC,YAAY,QAAQ,oBAAoB;AAC1D,SAASH,WAAW,IAAII,uBAAuB,QAAQ,qBAAqB;AAC5E,SAASC,WAAW,QAAQ,mBAAmB;;AAE/C;AACA;AACA;AACA,OAAOC,oBAAoB,MAAM,0BAA0B;AAC3D,SAASJ,KAAK,IAAIK,WAAW,QAAQ,aAAa;AAClD,OAAOC,sBAAsB,MAAM,6BAA6B;AAChE,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,OAAOC,2BAA2B,MAAM,mCAAmC;AAC3E,OAAOC,0BAA0B,MAAM,iCAAiC;AACxE,SAASC,yBAAyB,QAAQ,iCAAiC;AAC3E,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,oBAAoB,MAAM,2BAA2B;AAC5D,OAAOC,gBAAgB,MAAM,uBAAuB;AACpD,OAAOC,yBAAyB,MAAM,iCAAiC;AACvE,OAAOC,uBAAuB,MAAM,mDAAmD;AACvF,OAAOC,oBAAoB,MAAM,2BAA2B;AAC5D,OAAOC,uBAAuB,MAAM,8BAA8B;AAClE,OAAOC,kBAAkB,MAAM,yBAAyB;AACxD,OAAOC,qBAAqB,MAAM,4BAA4B;AAC9D,OAAOC,qBAAqB,MAAM,6BAA6B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhE,MAAM;EAAEC;AAAgC,CAAC,GAAGpB,MAAM,CAAER,sBAAuB,CAAC;AAC5E,MAAM;EAAE6B;AAAkB,CAAC,GAAGrB,MAAM,CAAEL,uBAAwB,CAAC;AAE/D,MAAM2B,IAAI,GAAGA,CAAA,KAAM,CAAC,CAAC;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,yBAAyB,GAAG,CACjC,UAAU,EACV,aAAa,EACb,eAAe,EACf,kBAAkB,CAClB;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmBA,CAAEC,IAAI,EAAEC,QAAQ,EAAEC,IAAI,EAAG;EACpD,MAAMC,aAAa,GAClBD,IAAI,KAAK,WAAW,IAAI,CAAED,QAAQ,GAAG,MAAM,GAAG,UAAU;EACzD,MAAM,CAAEG,UAAU,EAAEC,OAAO,EAAEC,QAAQ,CAAE,GAAG3C,oBAAoB,CAC7D,UAAU,EACVqC,IAAI,CAACO,IAAI,EACT;IAAEC,EAAE,EAAER,IAAI,CAACQ;EAAG,CACf,CAAC;EACD,MAAM,CAAEC,cAAc,EAAEC,eAAe,EAAEC,gBAAgB,CAAE,GAC1DhD,oBAAoB,CAAE,UAAU,EAAEsC,QAAQ,EAAEM,IAAI,EAAE;IACjDC,EAAE,EAAEP,QAAQ,EAAEO;EACf,CAAE,CAAC;EACJ,MAAMI,qBAAqB,GAAGtD,OAAO,CAAE,MAAM;IAC5C,IAAK0C,IAAI,CAACO,IAAI,KAAK,eAAe,EAAG;MACpC,OAAO,CACNpC,WAAW,CAAE,iBAAiB,EAAE;QAC/B0C,GAAG,EAAEb,IAAI,CAACQ,EAAE;QACZ;QACA;QACA;QACAM,YAAY,EAAE;MACf,CAAE,CAAC,CACH;IACF;EACD,CAAC,EAAE,CAAEd,IAAI,CAACO,IAAI,EAAEP,IAAI,CAACQ,EAAE,CAAG,CAAC;;EAE3B;EACA;EACA,MAAMO,MAAM,GAAGzD,OAAO,CAAE,MAAM;IAC7B,IAAKsD,qBAAqB,EAAG;MAC5B,OAAOA,qBAAqB;IAC7B;IAEA,IAAKT,aAAa,KAAK,UAAU,EAAG;MACnC,OAAOM,cAAc;IACtB;IAEA,OAAOL,UAAU;EAClB,CAAC,EAAE,CAAEQ,qBAAqB,EAAET,aAAa,EAAEM,cAAc,EAAEL,UAAU,CAAG,CAAC;;EAEzE;EACA;EACA;EACA,MAAMY,uBAAuB,GAC1B,CAAC,CAAEf,QAAQ,IAAIC,IAAI,KAAK,iBAAiB,IAC3CF,IAAI,CAACO,IAAI,KAAK,eAAe;EAC9B,IAAKS,uBAAuB,EAAG;IAC9B,OAAO,CAAED,MAAM,EAAElB,IAAI,EAAEA,IAAI,CAAE;EAC9B;EAEA,OAAO,CACNkB,MAAM,EACNZ,aAAa,KAAK,MAAM,GAAGE,OAAO,GAAGK,eAAe,EACpDP,aAAa,KAAK,MAAM,GAAGG,QAAQ,GAAGK,gBAAgB,CACtD;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMM,0BAA0B,GAAG7C,oBAAoB,CAC7D,CAAE;EACD4B,IAAI;EACJkB,QAAQ;EACRC,QAAQ;EACRC,YAAY;EACZC,QAAQ;EACRC,4BAA4B,GAAG3B,+BAA+B;EAC9D4B,kBAAkB,EAAEtB;AACrB,CAAC,KAAM;EACN,MAAM;IAAEuB,cAAc;IAAEC,SAAS;IAAEC,OAAO;IAAExB;EAAK,CAAC,GAAG1C,SAAS,CAC3DmE,MAAM,IAAM;IACb,MAAM;MACLC,iBAAiB;MACjBC,kBAAkB;MAClBC,gBAAgB;MAChBC;IACD,CAAC,GAAGJ,MAAM,CAAEtD,WAAY,CAAC;IACzB,OAAO;MACNmD,cAAc,EAAEI,iBAAiB,CAAC,CAAC;MACnCF,OAAO,EAAEK,uBAAuB,CAAC,CAAC;MAClC7B,IAAI,EAAE4B,gBAAgB,CAAC,CAAC;MACxBL,SAAS,EAAEI,kBAAkB,CAAC;IAC/B,CAAC;EACF,CAAC,EACD,EACD,CAAC;EACD,MAAMG,oBAAoB,GAAG,CAAC,CAAE/B,QAAQ,IAAIC,IAAI,KAAK,WAAW;EAChE,MAAMC,aAAa,GAAG6B,oBAAoB,GAAG/B,QAAQ,GAAGD,IAAI;EAC5D,MAAMiC,mBAAmB,GAAG3E,OAAO,CAAE,MAAM;IAC1C,MAAM4E,WAAW,GAChB,CAAEpC,yBAAyB,CAACqC,QAAQ,CAAEhC,aAAa,CAACI,IAAK,CAAC,IAC1DyB,oBAAoB,GACjB;MAAEI,MAAM,EAAEpC,IAAI,CAACQ,EAAE;MAAE6B,QAAQ,EAAErC,IAAI,CAACO;IAAK,CAAC,GACxC,CAAC,CAAC;IAEN,OAAO;MACN,GAAG2B,WAAW;MACdI,YAAY,EACXnC,aAAa,CAACI,IAAI,KAAK,aAAa,GACjCJ,aAAa,CAACoC,IAAI,GAClBC;IACL,CAAC;EACF,CAAC,EAAE,CACFR,oBAAoB,EACpBhC,IAAI,CAACQ,EAAE,EACPR,IAAI,CAACO,IAAI,EACTJ,aAAa,CAACI,IAAI,EAClBJ,aAAa,CAACoC,IAAI,CACjB,CAAC;EACH,MAAM;IAAE/B,EAAE;IAAED;EAAK,CAAC,GAAGJ,aAAa;EAClC,MAAMsC,mBAAmB,GAAGnE,sBAAsB,CACjDkD,cAAc,EACdjB,IAAI,EACJC,EAAE,EACFN,IACD,CAAC;EACD,MAAM,CAAEa,MAAM,EAAEV,OAAO,EAAEC,QAAQ,CAAE,GAAGP,mBAAmB,CACxDC,IAAI,EACJC,QAAQ,EACRC,IACD,CAAC;EAED,MAAM;IACLwC,cAAc;IACdC,WAAW;IACXC,oBAAoB;IACpBC,oBAAoB;IACpBC,aAAa;IACbC;EACD,CAAC,GAAGxE,MAAM,CAAEhB,WAAW,CAAEc,WAAY,CAAE,CAAC;EACxC,MAAM;IAAE2E;EAAoB,CAAC,GAAGzF,WAAW,CAAEU,YAAa,CAAC;;EAE3D;EACAZ,eAAe,CAAE,MAAM;IACtB;IACA,IAAK8D,QAAQ,EAAG;MACf;IACD;IAEAuB,cAAc,CAAExB,QAAQ,CAAC+B,QAAS,CAAC;IACnCN,WAAW,CAAE3C,IAAI,EAAEoB,YAAY,EAAEF,QAAQ,CAACjB,QAAS,CAAC;IACpD,IAAKiB,QAAQ,CAACgC,QAAQ,EAAG;MACxBF,mBAAmB,CAClBvF,EAAE,CACD,+EACD,CAAC,EACD;QACC+C,EAAE,EAAE,iBAAiB;QACrB2C,OAAO,EAAE,CACR;UACCC,KAAK,EAAE3F,EAAE,CAAE,mBAAoB,CAAC;UAChC4F,GAAG,EAAEnC,QAAQ,CAACgC,QAAQ,CAACI;QACxB,CAAC;MAEH,CACD,CAAC;IACF;EACD,CAAC,EAAE,EAAG,CAAC;;EAEP;EACAlG,SAAS,CAAE,MAAM;IAChB0F,aAAa,CAAE9C,IAAI,CAACO,IAAI,EAAEP,IAAI,CAACQ,EAAG,CAAC;EACpC,CAAC,EAAE,CAAER,IAAI,CAACO,IAAI,EAAEP,IAAI,CAACQ,EAAE,EAAEsC,aAAa,CAAG,CAAC;;EAE1C;EACA1F,SAAS,CAAE,MAAM;IAChBwF,oBAAoB,CAAE1B,QAAS,CAAC;EACjC,CAAC,EAAE,CAAEA,QAAQ,EAAE0B,oBAAoB,CAAG,CAAC;;EAEvC;EACAxF,SAAS,CAAE,MAAM;IAChByF,oBAAoB,CAAE5C,QAAQ,EAAEO,EAAG,CAAC;EACrC,CAAC,EAAE,CAAEP,QAAQ,EAAEO,EAAE,EAAEqC,oBAAoB,CAAG,CAAC;;EAE3C;EACAzF,SAAS,CAAE,MAAM;IAAA,IAAAmG,qBAAA;IAChBR,gBAAgB,EAAAQ,qBAAA,GAAErC,QAAQ,CAACsC,oBAAoB,cAAAD,qBAAA,cAAAA,qBAAA,GAAI,WAAY,CAAC;EACjE,CAAC,EAAE,CAAErC,QAAQ,CAACsC,oBAAoB,EAAET,gBAAgB,CAAG,CAAC;EAExDrE,yBAAyB,CAAEsB,IAAI,CAACO,IAAI,EAAEL,IAAK,CAAC;;EAE5C;EACAvB,WAAW,CAAC,CAAC;EAEb,IAAK,CAAE+C,OAAO,EAAG;IAChB,OAAO,IAAI;EACZ;EAEA,oBACCpC,IAAA,CAAC5B,cAAc;IAAC+F,IAAI,EAAC,MAAM;IAAClD,IAAI,EAAC,MAAM;IAAAc,QAAA,eACtC/B,IAAA,CAAC5B,cAAc;MACd+F,IAAI,EAAC,UAAU;MACflD,IAAI,EAAGP,IAAI,CAACO,IAAM;MAClBC,EAAE,EAAGR,IAAI,CAACQ,EAAI;MAAAa,QAAA,eAEd/B,IAAA,CAACzB,oBAAoB;QAAC6F,KAAK,EAAGzB,mBAAqB;QAAAZ,QAAA,eAClD3B,KAAA,CAAC4B,4BAA4B;UAC5BoC,KAAK,EAAG3C,MAAQ;UAChBT,QAAQ,EAAGA,QAAU;UACrBD,OAAO,EAAGA,OAAS;UACnBoB,SAAS,EAAGA,SAAW;UACvBP,QAAQ,EAAGuB,mBAAqB;UAChCkB,cAAc,EAAG,KAAO;UAAAtC,QAAA,GAEtBA,QAAQ,EACR,CAAEH,QAAQ,CAAC0C,uBAAuB,iBACnClE,KAAA,CAAAF,SAAA;YAAA6B,QAAA,gBACC/B,IAAA,CAACM,iBAAiB,IAAE,CAAC,eACrBN,IAAA,CAACF,qBAAqB,IAAE,CAAC,eACzBE,IAAA,CAACP,uBAAuB,IAAE,CAAC,EACzBmB,IAAI,KAAK,iBAAiB,iBAC3BZ,IAAA,CAACd,2BAA2B,IAAE,CAC9B,EACC+B,IAAI,KAAK,eAAe,iBACzBjB,IAAA,CAACb,0BAA0B,IAAE,CAC7B,eACDa,IAAA,CAACL,uBAAuB,IAAE,CAAC,eAC3BK,IAAA,CAACR,yBAAyB,IAAE,CAAC,eAC7BQ,IAAA,CAACV,oBAAoB,IAAE,CAAC,eACxBU,IAAA,CAACT,gBAAgB,IAAE,CAAC,eACpBS,IAAA,CAACN,oBAAoB,IAAE,CAAC,eACxBM,IAAA,CAACJ,kBAAkB,IAAE,CAAC,eACtBI,IAAA,CAACH,qBAAqB,IAAE,CAAC;UAAA,CACxB,CACF;QAAA,CAC4B;MAAC,CACV;IAAC,CACR;EAAC,CACF,CAAC;AAEnB,CACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAAS0E,cAAcA,CAAEC,KAAK,EAAG;EACvC,oBACCxE,IAAA,CAAC2B,0BAA0B;IAAA,GACrB6C,KAAK;IACVxC,4BAA4B,EAAG1D,mBAAqB;IAAAyD,QAAA,EAElDyC,KAAK,CAACzC;EAAQ,CACW,CAAC;AAE/B;AAEA,eAAewC,cAAc","ignoreList":[]}