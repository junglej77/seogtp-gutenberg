{"version":3,"names":["useSelect","useDispatch","useEffect","store","blockEditorStore","preferencesStore","interfaceStore","useAutoSwitchEditorSidebars","hasBlockSelection","select","getBlockSelectionStart","getActiveComplementaryArea","enableComplementaryArea","get","getPreference","activeGeneralSidebar","isEditorSidebarOpened","includes","isDistractionFree"],"sources":["@wordpress/editor/src/components/provider/use-auto-switch-editor-sidebars.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useSelect, useDispatch } from '@wordpress/data';\r\nimport { useEffect } from '@wordpress/element';\r\nimport { store as blockEditorStore } from '@wordpress/block-editor';\r\nimport { store as preferencesStore } from '@wordpress/preferences';\r\nimport { store as interfaceStore } from '@wordpress/interface';\r\n\r\n/**\r\n * This listener hook monitors for block selection and triggers the appropriate\r\n * sidebar state.\r\n */\r\nfunction useAutoSwitchEditorSidebars() {\r\n\tconst { hasBlockSelection } = useSelect( ( select ) => {\r\n\t\treturn {\r\n\t\t\thasBlockSelection:\r\n\t\t\t\t!! select( blockEditorStore ).getBlockSelectionStart(),\r\n\t\t};\r\n\t}, [] );\r\n\r\n\tconst { getActiveComplementaryArea } = useSelect( interfaceStore );\r\n\tconst { enableComplementaryArea } = useDispatch( interfaceStore );\r\n\tconst { get: getPreference } = useSelect( preferencesStore );\r\n\r\n\tuseEffect( () => {\r\n\t\tconst activeGeneralSidebar = getActiveComplementaryArea( 'core' );\r\n\t\tconst isEditorSidebarOpened = [\r\n\t\t\t'edit-post/document',\r\n\t\t\t'edit-post/block',\r\n\t\t].includes( activeGeneralSidebar );\r\n\t\tconst isDistractionFree = getPreference( 'core', 'distractionFree' );\r\n\t\tif ( ! isEditorSidebarOpened || isDistractionFree ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif ( hasBlockSelection ) {\r\n\t\t\tenableComplementaryArea( 'core', 'edit-post/block' );\r\n\t\t} else {\r\n\t\t\tenableComplementaryArea( 'core', 'edit-post/document' );\r\n\t\t}\r\n\t}, [\r\n\t\thasBlockSelection,\r\n\t\tgetActiveComplementaryArea,\r\n\t\tenableComplementaryArea,\r\n\t\tgetPreference,\r\n\t] );\r\n}\r\n\r\nexport default useAutoSwitchEditorSidebars;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,EAAEC,WAAW,QAAQ,iBAAiB;AACxD,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,yBAAyB;AACnE,SAASD,KAAK,IAAIE,gBAAgB,QAAQ,wBAAwB;AAClE,SAASF,KAAK,IAAIG,cAAc,QAAQ,sBAAsB;;AAE9D;AACA;AACA;AACA;AACA,SAASC,2BAA2BA,CAAA,EAAG;EACtC,MAAM;IAAEC;EAAkB,CAAC,GAAGR,SAAS,CAAIS,MAAM,IAAM;IACtD,OAAO;MACND,iBAAiB,EAChB,CAAC,CAAEC,MAAM,CAAEL,gBAAiB,CAAC,CAACM,sBAAsB,CAAC;IACvD,CAAC;EACF,CAAC,EAAE,EAAG,CAAC;EAEP,MAAM;IAAEC;EAA2B,CAAC,GAAGX,SAAS,CAAEM,cAAe,CAAC;EAClE,MAAM;IAAEM;EAAwB,CAAC,GAAGX,WAAW,CAAEK,cAAe,CAAC;EACjE,MAAM;IAAEO,GAAG,EAAEC;EAAc,CAAC,GAAGd,SAAS,CAAEK,gBAAiB,CAAC;EAE5DH,SAAS,CAAE,MAAM;IAChB,MAAMa,oBAAoB,GAAGJ,0BAA0B,CAAE,MAAO,CAAC;IACjE,MAAMK,qBAAqB,GAAG,CAC7B,oBAAoB,EACpB,iBAAiB,CACjB,CAACC,QAAQ,CAAEF,oBAAqB,CAAC;IAClC,MAAMG,iBAAiB,GAAGJ,aAAa,CAAE,MAAM,EAAE,iBAAkB,CAAC;IACpE,IAAK,CAAEE,qBAAqB,IAAIE,iBAAiB,EAAG;MACnD;IACD;IACA,IAAKV,iBAAiB,EAAG;MACxBI,uBAAuB,CAAE,MAAM,EAAE,iBAAkB,CAAC;IACrD,CAAC,MAAM;MACNA,uBAAuB,CAAE,MAAM,EAAE,oBAAqB,CAAC;IACxD;EACD,CAAC,EAAE,CACFJ,iBAAiB,EACjBG,0BAA0B,EAC1BC,uBAAuB,EACvBE,aAAa,CACZ,CAAC;AACJ;AAEA,eAAeP,2BAA2B","ignoreList":[]}