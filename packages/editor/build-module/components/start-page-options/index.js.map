{"version":3,"names":["Modal","__","useState","useMemo","store","blockEditorStore","__experimentalBlockPatternsList","BlockPatternsList","useSelect","useDispatch","useAsyncList","coreStore","__unstableSerializeAndClean","preferencesStore","interfaceStore","editorStore","TEMPLATE_POST_TYPE","jsx","_jsx","useStartPatterns","blockPatternsWithPostContentBlockType","postType","select","getPatternsByBlockTypes","getBlocksByName","getCurrentPostType","getRenderingMode","rootClientId","length","filter","pattern","postTypes","Array","isArray","includes","PatternSelection","blockPatterns","onChoosePattern","shownBlockPatterns","editEntityRecord","postId","getCurrentPostId","shownPatterns","onClickPattern","_pattern","blocks","content","blocksForSerialization","StartPageOptionsModal","onClose","startPatterns","hasStartPattern","title","isFullScreen","onRequestClose","children","className","StartPageOptions","isClosed","setIsClosed","shouldEnableModal","isEditedPostDirty","isEditedPostEmpty","preferencesModalActive","isModalActive","choosePatternModalEnabled","get"],"sources":["@wordpress/editor/src/components/start-page-options/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { Modal } from '@wordpress/components';\r\nimport { __ } from '@wordpress/i18n';\r\nimport { useState, useMemo } from '@wordpress/element';\r\nimport {\r\n\tstore as blockEditorStore,\r\n\t__experimentalBlockPatternsList as BlockPatternsList,\r\n} from '@wordpress/block-editor';\r\nimport { useSelect, useDispatch } from '@wordpress/data';\r\nimport { useAsyncList } from '@wordpress/compose';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\nimport { __unstableSerializeAndClean } from '@wordpress/blocks';\r\nimport { store as preferencesStore } from '@wordpress/preferences';\r\nimport { store as interfaceStore } from '@wordpress/interface';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as editorStore } from '../../store';\r\nimport { TEMPLATE_POST_TYPE } from '../../store/constants';\r\n\r\nexport function useStartPatterns() {\r\n\t// A pattern is a start pattern if it includes 'core/post-content' in its blockTypes,\r\n\t// and it has no postTypes declared and the current post type is page or if\r\n\t// the current post type is part of the postTypes declared.\r\n\tconst { blockPatternsWithPostContentBlockType, postType } = useSelect(\r\n\t\t( select ) => {\r\n\t\t\tconst { getPatternsByBlockTypes, getBlocksByName } =\r\n\t\t\t\tselect( blockEditorStore );\r\n\t\t\tconst { getCurrentPostType, getRenderingMode } =\r\n\t\t\t\tselect( editorStore );\r\n\t\t\tconst rootClientId =\r\n\t\t\t\tgetRenderingMode() === 'post-only'\r\n\t\t\t\t\t? ''\r\n\t\t\t\t\t: getBlocksByName( 'core/post-content' )?.[ 0 ];\r\n\t\t\treturn {\r\n\t\t\t\tblockPatternsWithPostContentBlockType: getPatternsByBlockTypes(\r\n\t\t\t\t\t'core/post-content',\r\n\t\t\t\t\trootClientId\r\n\t\t\t\t),\r\n\t\t\t\tpostType: getCurrentPostType(),\r\n\t\t\t};\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\treturn useMemo( () => {\r\n\t\tif ( ! blockPatternsWithPostContentBlockType?.length ) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * Filter patterns without postTypes declared if the current postType is page\r\n\t\t * or patterns that declare the current postType in its post type array.\r\n\t\t */\r\n\t\treturn blockPatternsWithPostContentBlockType.filter( ( pattern ) => {\r\n\t\t\treturn (\r\n\t\t\t\t( postType === 'page' && ! pattern.postTypes ) ||\r\n\t\t\t\t( Array.isArray( pattern.postTypes ) &&\r\n\t\t\t\t\tpattern.postTypes.includes( postType ) )\r\n\t\t\t);\r\n\t\t} );\r\n\t}, [ postType, blockPatternsWithPostContentBlockType ] );\r\n}\r\n\r\nfunction PatternSelection( { blockPatterns, onChoosePattern } ) {\r\n\tconst shownBlockPatterns = useAsyncList( blockPatterns );\r\n\tconst { editEntityRecord } = useDispatch( coreStore );\r\n\tconst { postType, postId } = useSelect( ( select ) => {\r\n\t\tconst { getCurrentPostType, getCurrentPostId } = select( editorStore );\r\n\r\n\t\treturn {\r\n\t\t\tpostType: getCurrentPostType(),\r\n\t\t\tpostId: getCurrentPostId(),\r\n\t\t};\r\n\t}, [] );\r\n\treturn (\r\n\t\t<BlockPatternsList\r\n\t\t\tblockPatterns={ blockPatterns }\r\n\t\t\tshownPatterns={ shownBlockPatterns }\r\n\t\t\tonClickPattern={ ( _pattern, blocks ) => {\r\n\t\t\t\teditEntityRecord( 'postType', postType, postId, {\r\n\t\t\t\t\tblocks,\r\n\t\t\t\t\tcontent: ( { blocks: blocksForSerialization = [] } ) =>\r\n\t\t\t\t\t\t__unstableSerializeAndClean( blocksForSerialization ),\r\n\t\t\t\t} );\r\n\t\t\t\tonChoosePattern();\r\n\t\t\t} }\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction StartPageOptionsModal( { onClose } ) {\r\n\tconst startPatterns = useStartPatterns();\r\n\tconst hasStartPattern = startPatterns.length > 0;\r\n\r\n\tif ( ! hasStartPattern ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\ttitle={ __( 'Choose a pattern' ) }\r\n\t\t\tisFullScreen\r\n\t\t\tonRequestClose={ onClose }\r\n\t\t>\r\n\t\t\t<div className=\"editor-start-page-options__modal-content\">\r\n\t\t\t\t<PatternSelection\r\n\t\t\t\t\tblockPatterns={ startPatterns }\r\n\t\t\t\t\tonChoosePattern={ onClose }\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</Modal>\r\n\t);\r\n}\r\n\r\nexport default function StartPageOptions() {\r\n\tconst [ isClosed, setIsClosed ] = useState( false );\r\n\tconst shouldEnableModal = useSelect( ( select ) => {\r\n\t\tconst { isEditedPostDirty, isEditedPostEmpty, getCurrentPostType } =\r\n\t\t\tselect( editorStore );\r\n\t\tconst preferencesModalActive =\r\n\t\t\tselect( interfaceStore ).isModalActive( 'editor/preferences' );\r\n\t\tconst choosePatternModalEnabled = select( preferencesStore ).get(\r\n\t\t\t'core',\r\n\t\t\t'enableChoosePatternModal'\r\n\t\t);\r\n\t\treturn (\r\n\t\t\tchoosePatternModalEnabled &&\r\n\t\t\t! preferencesModalActive &&\r\n\t\t\t! isEditedPostDirty() &&\r\n\t\t\tisEditedPostEmpty() &&\r\n\t\t\tTEMPLATE_POST_TYPE !== getCurrentPostType()\r\n\t\t);\r\n\t}, [] );\r\n\r\n\tif ( ! shouldEnableModal || isClosed ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn <StartPageOptionsModal onClose={ () => setIsClosed( true ) } />;\r\n}\r\n"],"mappings":"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","ignoreList":[]}