{"version":3,"names":["__","useEffect","useSelect","store","coreStore","UnsavedChangesWarning","__experimentalGetDirtyEntityRecords","warnIfUnsavedChanges","event","dirtyEntityRecords","length","returnValue","window","addEventListener","removeEventListener"],"sources":["@wordpress/editor/src/components/unsaved-changes-warning/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\nimport { useEffect } from '@wordpress/element';\r\nimport { useSelect } from '@wordpress/data';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\n\r\n/**\r\n * Warns the user if there are unsaved changes before leaving the editor.\r\n * Compatible with Post Editor and Site Editor.\r\n *\r\n * @return {Component} The component.\r\n */\r\nexport default function UnsavedChangesWarning() {\r\n\tconst { __experimentalGetDirtyEntityRecords } = useSelect( coreStore );\r\n\r\n\tuseEffect( () => {\r\n\t\t/**\r\n\t\t * Warns the user if there are unsaved changes before leaving the editor.\r\n\t\t *\r\n\t\t * @param {Event} event `beforeunload` event.\r\n\t\t *\r\n\t\t * @return {string | undefined} Warning prompt message, if unsaved changes exist.\r\n\t\t */\r\n\t\tconst warnIfUnsavedChanges = ( event ) => {\r\n\t\t\t// We need to call the selector directly in the listener to avoid race\r\n\t\t\t// conditions with `BrowserURL` where `componentDidUpdate` gets the\r\n\t\t\t// new value of `isEditedPostDirty` before this component does,\r\n\t\t\t// causing this component to incorrectly think a trashed post is still dirty.\r\n\t\t\tconst dirtyEntityRecords = __experimentalGetDirtyEntityRecords();\r\n\t\t\tif ( dirtyEntityRecords.length > 0 ) {\r\n\t\t\t\tevent.returnValue = __(\r\n\t\t\t\t\t'You have unsaved changes. If you proceed, they will be lost.'\r\n\t\t\t\t);\r\n\t\t\t\treturn event.returnValue;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\twindow.addEventListener( 'beforeunload', warnIfUnsavedChanges );\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener( 'beforeunload', warnIfUnsavedChanges );\r\n\t\t};\r\n\t}, [ __experimentalGetDirtyEntityRecords ] );\r\n\r\n\treturn null;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,EAAE,QAAQ,iBAAiB;AACpC,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,KAAK,IAAIC,SAAS,QAAQ,sBAAsB;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,qBAAqBA,CAAA,EAAG;EAC/C,MAAM;IAAEC;EAAoC,CAAC,GAAGJ,SAAS,CAAEE,SAAU,CAAC;EAEtEH,SAAS,CAAE,MAAM;IAChB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,MAAMM,oBAAoB,GAAKC,KAAK,IAAM;MACzC;MACA;MACA;MACA;MACA,MAAMC,kBAAkB,GAAGH,mCAAmC,CAAC,CAAC;MAChE,IAAKG,kBAAkB,CAACC,MAAM,GAAG,CAAC,EAAG;QACpCF,KAAK,CAACG,WAAW,GAAGX,EAAE,CACrB,8DACD,CAAC;QACD,OAAOQ,KAAK,CAACG,WAAW;MACzB;IACD,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAE,cAAc,EAAEN,oBAAqB,CAAC;IAE/D,OAAO,MAAM;MACZK,MAAM,CAACE,mBAAmB,CAAE,cAAc,EAAEP,oBAAqB,CAAC;IACnE,CAAC;EACF,CAAC,EAAE,CAAED,mCAAmC,CAAG,CAAC;EAE5C,OAAO,IAAI;AACZ","ignoreList":[]}