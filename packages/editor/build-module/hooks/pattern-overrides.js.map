{"version":3,"names":["addFilter","privateApis","patternsPrivateApis","createHigherOrderComponent","useBlockEditingMode","useSelect","store","blocksStore","editorStore","unlock","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","PatternOverridesControls","ResetOverridesControl","PatternOverridesBlockControls","PATTERN_TYPES","PARTIAL_SYNCING_SUPPORTED_BLOCKS","PATTERN_SYNC_TYPES","withPatternOverrideControls","BlockEdit","props","isSupportedBlock","name","children","isSelected","ControlsWithStoreSubscription","blockEditingMode","hasPatternOverridesSource","isEditingSyncedPattern","select","getBlockBindingsSource","getCurrentPostType","getEditedPostAttribute","user","wp_pattern_sync_status","unsynced","bindings","attributes","metadata","hasPatternBindings","Object","values","some","binding","source","shouldShowPatternOverridesControls","shouldShowResetOverridesControl"],"sources":["@wordpress/editor/src/hooks/pattern-overrides.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { addFilter } from '@wordpress/hooks';\r\nimport { privateApis as patternsPrivateApis } from '@wordpress/patterns';\r\nimport { createHigherOrderComponent } from '@wordpress/compose';\r\nimport { useBlockEditingMode } from '@wordpress/block-editor';\r\nimport { useSelect } from '@wordpress/data';\r\nimport { store as blocksStore } from '@wordpress/blocks';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { store as editorStore } from '../store';\r\nimport { unlock } from '../lock-unlock';\r\n\r\n/** @typedef {import('@wordpress/blocks').WPBlockSettings} WPBlockSettings */\r\n\r\nconst {\r\n\tPatternOverridesControls,\r\n\tResetOverridesControl,\r\n\tPatternOverridesBlockControls,\r\n\tPATTERN_TYPES,\r\n\tPARTIAL_SYNCING_SUPPORTED_BLOCKS,\r\n\tPATTERN_SYNC_TYPES,\r\n} = unlock( patternsPrivateApis );\r\n\r\n/**\r\n * Override the default edit UI to include a new block inspector control for\r\n * assigning a partial syncing controls to supported blocks in the pattern editor.\r\n * Currently, only the `core/paragraph` block is supported.\r\n *\r\n * @param {Component} BlockEdit Original component.\r\n *\r\n * @return {Component} Wrapped component.\r\n */\r\nconst withPatternOverrideControls = createHigherOrderComponent(\r\n\t( BlockEdit ) => ( props ) => {\r\n\t\tconst isSupportedBlock =\r\n\t\t\t!! PARTIAL_SYNCING_SUPPORTED_BLOCKS[ props.name ];\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<BlockEdit key=\"edit\" { ...props } />\r\n\t\t\t\t{ props.isSelected && isSupportedBlock && (\r\n\t\t\t\t\t<ControlsWithStoreSubscription { ...props } />\r\n\t\t\t\t) }\r\n\t\t\t\t{ isSupportedBlock && <PatternOverridesBlockControls /> }\r\n\t\t\t</>\r\n\t\t);\r\n\t},\r\n\t'withPatternOverrideControls'\r\n);\r\n\r\n// Split into a separate component to avoid a store subscription\r\n// on every block.\r\nfunction ControlsWithStoreSubscription( props ) {\r\n\tconst blockEditingMode = useBlockEditingMode();\r\n\tconst { hasPatternOverridesSource, isEditingSyncedPattern } = useSelect(\r\n\t\t( select ) => {\r\n\t\t\tconst { getBlockBindingsSource } = unlock( select( blocksStore ) );\r\n\t\t\tconst { getCurrentPostType, getEditedPostAttribute } =\r\n\t\t\t\tselect( editorStore );\r\n\r\n\t\t\treturn {\r\n\t\t\t\t// For editing link to the site editor if the theme and user permissions support it.\r\n\t\t\t\thasPatternOverridesSource: !! getBlockBindingsSource(\r\n\t\t\t\t\t'core/pattern-overrides'\r\n\t\t\t\t),\r\n\t\t\t\tisEditingSyncedPattern:\r\n\t\t\t\t\tgetCurrentPostType() === PATTERN_TYPES.user &&\r\n\t\t\t\t\tgetEditedPostAttribute( 'meta' )?.wp_pattern_sync_status !==\r\n\t\t\t\t\t\tPATTERN_SYNC_TYPES.unsynced &&\r\n\t\t\t\t\tgetEditedPostAttribute( 'wp_pattern_sync_status' ) !==\r\n\t\t\t\t\t\tPATTERN_SYNC_TYPES.unsynced,\r\n\t\t\t};\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\tconst bindings = props.attributes.metadata?.bindings;\r\n\tconst hasPatternBindings =\r\n\t\t!! bindings &&\r\n\t\tObject.values( bindings ).some(\r\n\t\t\t( binding ) => binding.source === 'core/pattern-overrides'\r\n\t\t);\r\n\r\n\tconst shouldShowPatternOverridesControls =\r\n\t\tisEditingSyncedPattern && blockEditingMode === 'default';\r\n\tconst shouldShowResetOverridesControl =\r\n\t\t! isEditingSyncedPattern &&\r\n\t\t!! props.attributes.metadata?.name &&\r\n\t\tblockEditingMode !== 'disabled' &&\r\n\t\thasPatternBindings;\r\n\r\n\tif ( ! hasPatternOverridesSource ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{ shouldShowPatternOverridesControls && (\r\n\t\t\t\t<PatternOverridesControls { ...props } />\r\n\t\t\t) }\r\n\t\t\t{ shouldShowResetOverridesControl && (\r\n\t\t\t\t<ResetOverridesControl { ...props } />\r\n\t\t\t) }\r\n\t\t</>\r\n\t);\r\n}\r\n\r\naddFilter(\r\n\t'editor.BlockEdit',\r\n\t'core/editor/with-pattern-override-controls',\r\n\twithPatternOverrideControls\r\n);\r\n"],"mappings":"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","ignoreList":[]}