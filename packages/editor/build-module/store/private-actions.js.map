{"version":3,"names":["dispatch","store","coreStore","__","sprintf","noticesStore","blockEditorStore","preferencesStore","addQueryArgs","apiFetch","parse","__unstableSerializeAndClean","decodeEntities","isTemplateRevertable","setCurrentTemplateId","id","type","createTemplate","template","select","registry","savedTemplate","saveEntityRecord","editEntityRecord","getCurrentPostType","getCurrentPostId","slug","createSuccessNotice","actions","label","onClick","setRenderingMode","getEditorSettings","defaultRenderingMode","showBlockTypes","blockNames","_registry$select$get","existingBlockNames","get","newBlockNames","filter","Array","isArray","includes","set","hideBlockTypes","_registry$select$get2","mergedBlockNames","Set","saveDirtyEntities","onSave","dirtyEntityRecords","entitiesToSkip","close","PUBLISH_ON_SAVE_ENTITIES","kind","name","saveNoticeId","homeUrl","getEntityRecord","home","removeNotice","entitiesToSave","key","property","some","elt","siteItemsToSave","pendingSavedRecords","forEach","push","typeToPublish","status","saveEditedEntityRecord","length","console","log","__experimentalSaveSpecifiedEntityEdits","undefined","__unstableMarkLastChangeAsPersistent","Promise","all","then","values","value","createErrorNotice","invalidateResolution","globalStylesEntity","find","entity","setCurrentStyle","title","raw","url","catch","error","revertTemplate","allowUndo","noticeId","templateEntityConfig","getEntityConfig","fileTemplatePath","baseURL","context","source","origin","fileTemplate","path","serializeBlocks","blocks","blocksForSerialization","edited","getEditedEntityRecord","content","undoIgnore","undoRevert","errorMessage","message","code","removeTemplates","items","isResetting","every","item","has_theme_file","promiseResult","allSettled","map","deleteEntityRecord","force","throwOnError","successMessage","rendered","reason","errorMessages","failedPromises","failedPromise","add","size","join"],"sources":["@wordpress/editor/src/store/private-actions.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { dispatch } from '@wordpress/data';\r\nimport { store as coreStore } from '@wordpress/core-data';\r\nimport { __, sprintf } from '@wordpress/i18n';\r\nimport { store as noticesStore } from '@wordpress/notices';\r\nimport { store as blockEditorStore } from '@wordpress/block-editor';\r\nimport { store as preferencesStore } from '@wordpress/preferences';\r\nimport { addQueryArgs } from '@wordpress/url';\r\nimport apiFetch from '@wordpress/api-fetch';\r\nimport { parse, __unstableSerializeAndClean } from '@wordpress/blocks';\r\nimport { decodeEntities } from '@wordpress/html-entities';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport isTemplateRevertable from './utils/is-template-revertable';\r\nexport * from '../dataviews/store/private-actions';\r\n\r\n/**\r\n * Returns an action object used to set which template is currently being used/edited.\r\n *\r\n * @param {string} id Template Id.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function setCurrentTemplateId( id ) {\r\n\treturn {\r\n\t\ttype: 'SET_CURRENT_TEMPLATE_ID',\r\n\t\tid,\r\n\t};\r\n}\r\n\r\n/**\r\n * Create a block based template.\r\n *\r\n * @param {Object?} template Template to create and assign.\r\n */\r\nexport const createTemplate =\r\n\t( template ) =>\r\n\tasync ( { select, dispatch, registry } ) => {\r\n\t\tconst savedTemplate = await registry\r\n\t\t\t.dispatch( coreStore )\r\n\t\t\t.saveEntityRecord( 'postType', 'wp_template', template );\r\n\t\tregistry\r\n\t\t\t.dispatch( coreStore )\r\n\t\t\t.editEntityRecord(\r\n\t\t\t\t'postType',\r\n\t\t\t\tselect.getCurrentPostType(),\r\n\t\t\t\tselect.getCurrentPostId(),\r\n\t\t\t\t{\r\n\t\t\t\t\ttemplate: savedTemplate.slug,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\tregistry\r\n\t\t\t.dispatch( noticesStore )\r\n\t\t\t.createSuccessNotice(\r\n\t\t\t\t__( \"Custom template created. You're in template mode now.\" ),\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: 'snackbar',\r\n\t\t\t\t\tactions: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: __( 'Go back' ),\r\n\t\t\t\t\t\t\tonClick: () =>\r\n\t\t\t\t\t\t\t\tdispatch.setRenderingMode(\r\n\t\t\t\t\t\t\t\t\tselect.getEditorSettings()\r\n\t\t\t\t\t\t\t\t\t\t.defaultRenderingMode\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\treturn savedTemplate;\r\n\t};\r\n\r\n/**\r\n * Update the provided block types to be visible.\r\n *\r\n * @param {string[]} blockNames Names of block types to show.\r\n */\r\nexport const showBlockTypes =\r\n\t( blockNames ) =>\r\n\t( { registry } ) => {\r\n\t\tconst existingBlockNames =\r\n\t\t\tregistry\r\n\t\t\t\t.select( preferencesStore )\r\n\t\t\t\t.get( 'core', 'hiddenBlockTypes' ) ?? [];\r\n\r\n\t\tconst newBlockNames = existingBlockNames.filter(\r\n\t\t\t( type ) =>\r\n\t\t\t\t! (\r\n\t\t\t\t\tArray.isArray( blockNames ) ? blockNames : [ blockNames ]\r\n\t\t\t\t).includes( type )\r\n\t\t);\r\n\r\n\t\tregistry\r\n\t\t\t.dispatch( preferencesStore )\r\n\t\t\t.set( 'core', 'hiddenBlockTypes', newBlockNames );\r\n\t};\r\n\r\n/**\r\n * Update the provided block types to be hidden.\r\n *\r\n * @param {string[]} blockNames Names of block types to hide.\r\n */\r\nexport const hideBlockTypes =\r\n\t( blockNames ) =>\r\n\t( { registry } ) => {\r\n\t\tconst existingBlockNames =\r\n\t\t\tregistry\r\n\t\t\t\t.select( preferencesStore )\r\n\t\t\t\t.get( 'core', 'hiddenBlockTypes' ) ?? [];\r\n\r\n\t\tconst mergedBlockNames = new Set( [\r\n\t\t\t...existingBlockNames,\r\n\t\t\t...( Array.isArray( blockNames ) ? blockNames : [ blockNames ] ),\r\n\t\t] );\r\n\r\n\t\tregistry\r\n\t\t\t.dispatch( preferencesStore )\r\n\t\t\t.set( 'core', 'hiddenBlockTypes', [ ...mergedBlockNames ] );\r\n\t};\r\n\r\n/**\r\n * Save entity records marked as dirty.\r\n *\r\n * @param {Object}   options                      Options for the action.\r\n * @param {Function} [options.onSave]             Callback when saving happens.\r\n * @param {object[]} [options.dirtyEntityRecords] Array of dirty entities.\r\n * @param {object[]} [options.entitiesToSkip]     Array of entities to skip saving.\r\n * @param {Function} [options.close]              Callback when the actions is called. It should be consolidated with `onSave`.\r\n */\r\nexport const saveDirtyEntities =\r\n\t( { onSave, dirtyEntityRecords = [], entitiesToSkip = [], close } = {} ) =>\r\n\t( { registry } ) => {\r\n\t\tconst PUBLISH_ON_SAVE_ENTITIES = [\r\n\t\t\t{ kind: 'postType', name: 'wp_navigation' },\r\n\t\t];\r\n\t\tconst saveNoticeId = 'site-editor-save-success';\r\n\t\tconst homeUrl = registry\r\n\t\t\t.select( coreStore )\r\n\t\t\t.getEntityRecord( 'root', '__unstableBase' )?.home;\r\n\t\tregistry.dispatch( noticesStore ).removeNotice( saveNoticeId );\r\n\t\tconst entitiesToSave = dirtyEntityRecords.filter(\r\n\t\t\t( { kind, name, key, property } ) => {\r\n\t\t\t\treturn ! entitiesToSkip.some(\r\n\t\t\t\t\t( elt ) =>\r\n\t\t\t\t\t\telt.kind === kind &&\r\n\t\t\t\t\t\telt.name === name &&\r\n\t\t\t\t\t\telt.key === key &&\r\n\t\t\t\t\t\telt.property === property\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t\tclose?.( entitiesToSave );\r\n\t\tconst siteItemsToSave = [];\r\n\t\tconst pendingSavedRecords = [];\r\n\t\tentitiesToSave.forEach( ( { kind, name, key, property } ) => {\r\n\t\t\tif ( 'root' === kind && 'site' === name ) {\r\n\t\t\t\tsiteItemsToSave.push( property );\r\n\t\t\t} else {\r\n\t\t\t\tif (\r\n\t\t\t\t\tPUBLISH_ON_SAVE_ENTITIES.some(\r\n\t\t\t\t\t\t( typeToPublish ) =>\r\n\t\t\t\t\t\t\ttypeToPublish.kind === kind &&\r\n\t\t\t\t\t\t\ttypeToPublish.name === name\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tregistry\r\n\t\t\t\t\t\t.dispatch( coreStore )\r\n\t\t\t\t\t\t.editEntityRecord( kind, name, key, {\r\n\t\t\t\t\t\t\tstatus: 'publish',\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpendingSavedRecords.push(\r\n\t\t\t\t\tregistry\r\n\t\t\t\t\t\t.dispatch( coreStore )\r\n\t\t\t\t\t\t.saveEditedEntityRecord( kind, name, key )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} );\r\n\t\tif ( siteItemsToSave.length ) {\r\n\t\t\tconsole.log( 'Saving site items', siteItemsToSave );\r\n\t\t\tpendingSavedRecords.push(\r\n\t\t\t\tregistry\r\n\t\t\t\t\t.dispatch( coreStore )\r\n\t\t\t\t\t.__experimentalSaveSpecifiedEntityEdits(\r\n\t\t\t\t\t\t'root',\r\n\t\t\t\t\t\t'site',\r\n\t\t\t\t\t\tundefined,\r\n\t\t\t\t\t\tsiteItemsToSave\r\n\t\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t\tregistry\r\n\t\t\t.dispatch( blockEditorStore )\r\n\t\t\t.__unstableMarkLastChangeAsPersistent();\r\n\t\tPromise.all( pendingSavedRecords )\r\n\t\t\t.then( ( values ) => {\r\n\t\t\t\treturn onSave ? onSave( values ) : values;\r\n\t\t\t} )\r\n\t\t\t.then( ( values ) => {\r\n\t\t\t\tconsole.log(values);\r\n\t\t\t\tif (\r\n\t\t\t\t\tvalues.some( ( value ) => typeof value === 'undefined' )\r\n\t\t\t\t) {\r\n\t\t\t\t\tregistry\r\n\t\t\t\t\t\t.dispatch( noticesStore )\r\n\t\t\t\t\t\t.createErrorNotice( __( '网站更新失败.' ) );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// seogtp刷新全局样式数据\r\n\t\t\t\t\tdispatch(coreStore).invalidateResolution('getGlobalStyles');\r\n\t\t\t\t\tdispatch(coreStore).invalidateResolution('__experimentalGetCurrentThemeGlobalStylesVariations');\r\n\t\t\t\t\t// // seogtp在数据刷新后，手动更新CurrentStyle\r\n\t\t\t\t\tconsole.log(values);\r\n\t\t\t\t\tconst globalStylesEntity = values.find((entity) => !entity.type);\r\n\t\t\t\t\tif (globalStylesEntity) {\r\n\t\t\t\t\t\tdispatch('seogtp-gutenberg/seogtp_style_store').setCurrentStyle(globalStylesEntity.title.raw || 'default');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tregistry\r\n\t\t\t\t\t\t.dispatch( noticesStore )\r\n\t\t\t\t\t\t.createSuccessNotice( __( '网站更新成功.' ), {\r\n\t\t\t\t\t\t\ttype: 'snackbar',\r\n\t\t\t\t\t\t\tid: saveNoticeId,\r\n\t\t\t\t\t\t\tactions: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tlabel: __( '去查看网站' ),\r\n\t\t\t\t\t\t\t\t\turl: homeUrl,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} )\r\n\t\t\t.catch( ( error ) =>\r\n\t\t\t\tregistry\r\n\t\t\t\t\t.dispatch( noticesStore )\r\n\t\t\t\t\t.createErrorNotice(\r\n\t\t\t\t\t\t`${ __( 'Saving failed.' ) } ${ error }`\r\n\t\t\t\t\t)\r\n\t\t\t);\r\n\t};\r\n\r\n/**\r\n * Reverts a template to its original theme-provided file.\r\n *\r\n * @param {Object}  template            The template to revert.\r\n * @param {Object}  [options]\r\n * @param {boolean} [options.allowUndo] Whether to allow the user to undo\r\n *                                      reverting the template. Default true.\r\n */\r\nexport const revertTemplate =\r\n\t( template, { allowUndo = true } = {} ) =>\r\n\tasync ( { registry } ) => {\r\n\t\tconst noticeId = 'edit-site-template-reverted';\r\n\t\tregistry.dispatch( noticesStore ).removeNotice( noticeId );\r\n\t\tif ( ! isTemplateRevertable( template ) ) {\r\n\t\t\tregistry\r\n\t\t\t\t.dispatch( noticesStore )\r\n\t\t\t\t.createErrorNotice( __( 'This template is not revertable.' ), {\r\n\t\t\t\t\ttype: 'snackbar',\r\n\t\t\t\t} );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst templateEntityConfig = registry\r\n\t\t\t\t.select( coreStore )\r\n\t\t\t\t.getEntityConfig( 'postType', template.type );\r\n\r\n\t\t\tif ( ! templateEntityConfig ) {\r\n\t\t\t\tregistry\r\n\t\t\t\t\t.dispatch( noticesStore )\r\n\t\t\t\t\t.createErrorNotice(\r\n\t\t\t\t\t\t__(\r\n\t\t\t\t\t\t\t'The editor has encountered an unexpected error. Please reload.'\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\t{ type: 'snackbar' }\r\n\t\t\t\t\t);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst fileTemplatePath = addQueryArgs(\r\n\t\t\t\t`${ templateEntityConfig.baseURL }/${ template.id }`,\r\n\t\t\t\t{ context: 'edit', source: template.origin }\r\n\t\t\t);\r\n\r\n\t\t\tconst fileTemplate = await apiFetch( { path: fileTemplatePath } );\r\n\t\t\tif ( ! fileTemplate ) {\r\n\t\t\t\tregistry\r\n\t\t\t\t\t.dispatch( noticesStore )\r\n\t\t\t\t\t.createErrorNotice(\r\n\t\t\t\t\t\t__(\r\n\t\t\t\t\t\t\t'The editor has encountered an unexpected error. Please reload.'\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\t{ type: 'snackbar' }\r\n\t\t\t\t\t);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst serializeBlocks = ( {\r\n\t\t\t\tblocks: blocksForSerialization = [],\r\n\t\t\t} ) => __unstableSerializeAndClean( blocksForSerialization );\r\n\r\n\t\t\tconst edited = registry\r\n\t\t\t\t.select( coreStore )\r\n\t\t\t\t.getEditedEntityRecord(\r\n\t\t\t\t\t'postType',\r\n\t\t\t\t\ttemplate.type,\r\n\t\t\t\t\ttemplate.id\r\n\t\t\t\t);\r\n\r\n\t\t\t// We are fixing up the undo level here to make sure we can undo\r\n\t\t\t// the revert in the header toolbar correctly.\r\n\t\t\tregistry.dispatch( coreStore ).editEntityRecord(\r\n\t\t\t\t'postType',\r\n\t\t\t\ttemplate.type,\r\n\t\t\t\ttemplate.id,\r\n\t\t\t\t{\r\n\t\t\t\t\tcontent: serializeBlocks, // Required to make the `undo` behave correctly.\r\n\t\t\t\t\tblocks: edited.blocks, // Required to revert the blocks in the editor.\r\n\t\t\t\t\tsource: 'custom', // required to avoid turning the editor into a dirty state\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tundoIgnore: true, // Required to merge this edit with the last undo level.\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tconst blocks = parse( fileTemplate?.content?.raw );\r\n\t\t\tregistry\r\n\t\t\t\t.dispatch( coreStore )\r\n\t\t\t\t.editEntityRecord( 'postType', template.type, fileTemplate.id, {\r\n\t\t\t\t\tcontent: serializeBlocks,\r\n\t\t\t\t\tblocks,\r\n\t\t\t\t\tsource: 'theme',\r\n\t\t\t\t} );\r\n\r\n\t\t\tif ( allowUndo ) {\r\n\t\t\t\tconst undoRevert = () => {\r\n\t\t\t\t\tregistry\r\n\t\t\t\t\t\t.dispatch( coreStore )\r\n\t\t\t\t\t\t.editEntityRecord(\r\n\t\t\t\t\t\t\t'postType',\r\n\t\t\t\t\t\t\ttemplate.type,\r\n\t\t\t\t\t\t\tedited.id,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcontent: serializeBlocks,\r\n\t\t\t\t\t\t\t\tblocks: edited.blocks,\r\n\t\t\t\t\t\t\t\tsource: 'custom',\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tregistry\r\n\t\t\t\t\t.dispatch( noticesStore )\r\n\t\t\t\t\t.createSuccessNotice( __( 'Template reset.' ), {\r\n\t\t\t\t\t\ttype: 'snackbar',\r\n\t\t\t\t\t\tid: noticeId,\r\n\t\t\t\t\t\tactions: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlabel: __( 'Undo' ),\r\n\t\t\t\t\t\t\t\tonClick: undoRevert,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t} );\r\n\t\t\t}\r\n\t\t} catch ( error ) {\r\n\t\t\tconst errorMessage =\r\n\t\t\t\terror.message && error.code !== 'unknown_error'\r\n\t\t\t\t\t? error.message\r\n\t\t\t\t\t: __( 'Template revert failed. Please reload.' );\r\n\t\t\tregistry\r\n\t\t\t\t.dispatch( noticesStore )\r\n\t\t\t\t.createErrorNotice( errorMessage, { type: 'snackbar' } );\r\n\t\t}\r\n\t};\r\n\r\n/**\r\n * Action that removes an array of templates, template parts or patterns.\r\n *\r\n * @param {Array} items An array of template,template part or pattern objects to remove.\r\n */\r\nexport const removeTemplates =\r\n\t( items ) =>\r\n\tasync ( { registry } ) => {\r\n\t\tconst isResetting = items.every( ( item ) => item?.has_theme_file );\r\n\r\n\t\tconst promiseResult = await Promise.allSettled(\r\n\t\t\titems.map( ( item ) => {\r\n\t\t\t\treturn registry\r\n\t\t\t\t\t.dispatch( coreStore )\r\n\t\t\t\t\t.deleteEntityRecord(\r\n\t\t\t\t\t\t'postType',\r\n\t\t\t\t\t\titem.type,\r\n\t\t\t\t\t\titem.id,\r\n\t\t\t\t\t\t{ force: true },\r\n\t\t\t\t\t\t{ throwOnError: true }\r\n\t\t\t\t\t);\r\n\t\t\t} )\r\n\t\t);\r\n\r\n\t\t// If all the promises were fulfilled with sucess.\r\n\t\tif ( promiseResult.every( ( { status } ) => status === 'fulfilled' ) ) {\r\n\t\t\tlet successMessage;\r\n\r\n\t\t\tif ( items.length === 1 ) {\r\n\t\t\t\t// Depending on how the entity was retrieved its title might be\r\n\t\t\t\t// an object or simple string.\r\n\t\t\t\tlet title;\r\n\t\t\t\tif ( typeof items[ 0 ].title === 'string' ) {\r\n\t\t\t\t\ttitle = items[ 0 ].title;\r\n\t\t\t\t} else if ( typeof items[ 0 ].title?.rendered === 'string' ) {\r\n\t\t\t\t\ttitle = items[ 0 ].title?.rendered;\r\n\t\t\t\t} else if ( typeof items[ 0 ].title?.raw === 'string' ) {\r\n\t\t\t\t\ttitle = items[ 0 ].title?.raw;\r\n\t\t\t\t}\r\n\t\t\t\tsuccessMessage = isResetting\r\n\t\t\t\t\t? sprintf(\r\n\t\t\t\t\t\t\t/* translators: The template/part's name. */\r\n\t\t\t\t\t\t\t__( '\"%s\" reset.' ),\r\n\t\t\t\t\t\t\tdecodeEntities( title )\r\n\t\t\t\t\t  )\r\n\t\t\t\t\t: sprintf(\r\n\t\t\t\t\t\t\t/* translators: The template/part's name. */\r\n\t\t\t\t\t\t\t__( '\"%s\" deleted.' ),\r\n\t\t\t\t\t\t\tdecodeEntities( title )\r\n\t\t\t\t\t  );\r\n\t\t\t} else {\r\n\t\t\t\tsuccessMessage = isResetting\r\n\t\t\t\t\t? __( 'Items reset.' )\r\n\t\t\t\t\t: __( 'Items deleted.' );\r\n\t\t\t}\r\n\r\n\t\t\tregistry\r\n\t\t\t\t.dispatch( noticesStore )\r\n\t\t\t\t.createSuccessNotice( successMessage, {\r\n\t\t\t\t\ttype: 'snackbar',\r\n\t\t\t\t\tid: 'editor-template-deleted-success',\r\n\t\t\t\t} );\r\n\t\t} else {\r\n\t\t\t// If there was at lease one failure.\r\n\t\t\tlet errorMessage;\r\n\t\t\t// If we were trying to delete a single template.\r\n\t\t\tif ( promiseResult.length === 1 ) {\r\n\t\t\t\tif ( promiseResult[ 0 ].reason?.message ) {\r\n\t\t\t\t\terrorMessage = promiseResult[ 0 ].reason.message;\r\n\t\t\t\t} else {\r\n\t\t\t\t\terrorMessage = isResetting\r\n\t\t\t\t\t\t? __( 'An error occurred while reverting the item.' )\r\n\t\t\t\t\t\t: __( 'An error occurred while deleting the item.' );\r\n\t\t\t\t}\r\n\t\t\t\t// If we were trying to delete a multiple templates\r\n\t\t\t} else {\r\n\t\t\t\tconst errorMessages = new Set();\r\n\t\t\t\tconst failedPromises = promiseResult.filter(\r\n\t\t\t\t\t( { status } ) => status === 'rejected'\r\n\t\t\t\t);\r\n\t\t\t\tfor ( const failedPromise of failedPromises ) {\r\n\t\t\t\t\tif ( failedPromise.reason?.message ) {\r\n\t\t\t\t\t\terrorMessages.add( failedPromise.reason.message );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif ( errorMessages.size === 0 ) {\r\n\t\t\t\t\terrorMessage = __(\r\n\t\t\t\t\t\t'An error occurred while deleting the items.'\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if ( errorMessages.size === 1 ) {\r\n\t\t\t\t\terrorMessage = isResetting\r\n\t\t\t\t\t\t? sprintf(\r\n\t\t\t\t\t\t\t\t/* translators: %s: an error message */\r\n\t\t\t\t\t\t\t\t__(\r\n\t\t\t\t\t\t\t\t\t'An error occurred while reverting the items: %s'\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t[ ...errorMessages ][ 0 ]\r\n\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t: sprintf(\r\n\t\t\t\t\t\t\t\t/* translators: %s: an error message */\r\n\t\t\t\t\t\t\t\t__(\r\n\t\t\t\t\t\t\t\t\t'An error occurred while deleting the items: %s'\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t[ ...errorMessages ][ 0 ]\r\n\t\t\t\t\t\t  );\r\n\t\t\t\t} else {\r\n\t\t\t\t\terrorMessage = isResetting\r\n\t\t\t\t\t\t? sprintf(\r\n\t\t\t\t\t\t\t\t/* translators: %s: a list of comma separated error messages */\r\n\t\t\t\t\t\t\t\t__(\r\n\t\t\t\t\t\t\t\t\t'Some errors occurred while reverting the items: %s'\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t[ ...errorMessages ].join( ',' )\r\n\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t: sprintf(\r\n\t\t\t\t\t\t\t\t/* translators: %s: a list of comma separated error messages */\r\n\t\t\t\t\t\t\t\t__(\r\n\t\t\t\t\t\t\t\t\t'Some errors occurred while deleting the items: %s'\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t[ ...errorMessages ].join( ',' )\r\n\t\t\t\t\t\t  );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tregistry\r\n\t\t\t\t.dispatch( noticesStore )\r\n\t\t\t\t.createErrorNotice( errorMessage, { type: 'snackbar' } );\r\n\t\t}\r\n\t};\r\n"],"mappings":"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","ignoreList":[]}