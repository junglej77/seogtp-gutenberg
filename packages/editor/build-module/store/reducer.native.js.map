{"version":3,"names":["combineReducers","postId","postType","saving","postLock","postSavingLock","template","editorSettings","EDITOR_SETTINGS_DEFAULTS","autosaveInterval","postTitle","isSelected","state","action","type","clipboard","notices","notice","filter","id"],"sources":["@wordpress/editor/src/store/reducer.native.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { combineReducers } from '@wordpress/data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport {\r\n\tpostId,\r\n\tpostType,\r\n\tsaving,\r\n\tpostLock,\r\n\tpostSavingLock,\r\n\ttemplate,\r\n\teditorSettings,\r\n} from './reducer.js';\r\n\r\nimport { EDITOR_SETTINGS_DEFAULTS } from './defaults.js';\r\n\r\nEDITOR_SETTINGS_DEFAULTS.autosaveInterval = 1; // This is a way to override default behavior on mobile, and make it ping the native save every second as long as something changed\r\n\r\nexport * from './reducer.js';\r\n\r\n/**\r\n * Reducer returning the post title state.\r\n *\r\n * @param {Object} state  Current state.\r\n * @param {Object} action Dispatched action.\r\n *\r\n * @return {Object} Updated state.\r\n */\r\nexport const postTitle = combineReducers( {\r\n\tisSelected( state = false, action ) {\r\n\t\tswitch ( action.type ) {\r\n\t\t\tcase 'TOGGLE_POST_TITLE_SELECTION':\r\n\t\t\t\treturn action.isSelected;\r\n\t\t}\r\n\r\n\t\treturn state;\r\n\t},\r\n} );\r\n\r\n/**\r\n * Reducer returning the clipboard state.\r\n *\r\n * @param {Object} state  Current state.\r\n * @param {Object} action Dispatched action.\r\n *\r\n * @return {Object} Updated state.\r\n */\r\nexport function clipboard( state = null, action ) {\r\n\tswitch ( action.type ) {\r\n\t\tcase 'UPDATE_CLIPBOARD':\r\n\t\t\treturn action.clipboard;\r\n\t}\r\n\r\n\treturn state;\r\n}\r\n\r\n/**\r\n * Reducer returning the notices state.\r\n *\r\n * @param {Object} state  Current state.\r\n * @param {Object} action Dispatched action.\r\n *\r\n * @return {Object} Updated state.\r\n */\r\nexport function notices( state = [], action ) {\r\n\tswitch ( action.type ) {\r\n\t\tcase 'CREATE_NOTICE':\r\n\t\t\treturn [ ...state, action.notice ];\r\n\t\tcase 'REMOVE_ALL_NOTICES':\r\n\t\t\treturn [];\r\n\t\tcase 'REMOVE_NOTICE':\r\n\t\t\treturn state.filter( ( notice ) => notice.id !== action.id );\r\n\t}\r\n\treturn state;\r\n}\r\n\r\nexport default combineReducers( {\r\n\tpostId,\r\n\tpostType,\r\n\tpostTitle,\r\n\tsaving,\r\n\tpostLock,\r\n\tpostSavingLock,\r\n\ttemplate,\r\n\teditorSettings,\r\n\tclipboard,\r\n\tnotices,\r\n} );\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,eAAe,QAAQ,iBAAiB;;AAEjD;AACA;AACA;AACA,SACCC,MAAM,EACNC,QAAQ,EACRC,MAAM,EACNC,QAAQ,EACRC,cAAc,EACdC,QAAQ,EACRC,cAAc,QACR,cAAc;AAErB,SAASC,wBAAwB,QAAQ,eAAe;AAExDA,wBAAwB,CAACC,gBAAgB,GAAG,CAAC,CAAC,CAAC;;AAE/C,cAAc,cAAc;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,GAAGV,eAAe,CAAE;EACzCW,UAAUA,CAAEC,KAAK,GAAG,KAAK,EAAEC,MAAM,EAAG;IACnC,QAASA,MAAM,CAACC,IAAI;MACnB,KAAK,6BAA6B;QACjC,OAAOD,MAAM,CAACF,UAAU;IAC1B;IAEA,OAAOC,KAAK;EACb;AACD,CAAE,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,SAASA,CAAEH,KAAK,GAAG,IAAI,EAAEC,MAAM,EAAG;EACjD,QAASA,MAAM,CAACC,IAAI;IACnB,KAAK,kBAAkB;MACtB,OAAOD,MAAM,CAACE,SAAS;EACzB;EAEA,OAAOH,KAAK;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,OAAOA,CAAEJ,KAAK,GAAG,EAAE,EAAEC,MAAM,EAAG;EAC7C,QAASA,MAAM,CAACC,IAAI;IACnB,KAAK,eAAe;MACnB,OAAO,CAAE,GAAGF,KAAK,EAAEC,MAAM,CAACI,MAAM,CAAE;IACnC,KAAK,oBAAoB;MACxB,OAAO,EAAE;IACV,KAAK,eAAe;MACnB,OAAOL,KAAK,CAACM,MAAM,CAAID,MAAM,IAAMA,MAAM,CAACE,EAAE,KAAKN,MAAM,CAACM,EAAG,CAAC;EAC9D;EACA,OAAOP,KAAK;AACb;AAEA,eAAeZ,eAAe,CAAE;EAC/BC,MAAM;EACNC,QAAQ;EACRQ,SAAS;EACTP,MAAM;EACNC,QAAQ;EACRC,cAAc;EACdC,QAAQ;EACRC,cAAc;EACdQ,SAAS;EACTC;AACD,CAAE,CAAC","ignoreList":[]}