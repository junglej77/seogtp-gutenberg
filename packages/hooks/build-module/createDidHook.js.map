{"version":3,"names":["validateHookName","createDidHook","hooks","storeKey","didHook","hookName","hooksStore","runs"],"sources":["@wordpress/hooks/src/createDidHook.js"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport validateHookName from './validateHookName.js';\r\n\r\n/**\r\n * @callback DidHook\r\n *\r\n * Returns the number of times an action has been fired.\r\n *\r\n * @param {string} hookName The hook name to check.\r\n *\r\n * @return {number | undefined} The number of times the hook has run.\r\n */\r\n\r\n/**\r\n * Returns a function which, when invoked, will return the number of times a\r\n * hook has been called.\r\n *\r\n * @param {import('.').Hooks}    hooks    Hooks instance.\r\n * @param {import('.').StoreKey} storeKey\r\n *\r\n * @return {DidHook} Function that returns a hook's call count.\r\n */\r\nfunction createDidHook( hooks, storeKey ) {\r\n\treturn function didHook( hookName ) {\r\n\t\tconst hooksStore = hooks[ storeKey ];\r\n\r\n\t\tif ( ! validateHookName( hookName ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\treturn hooksStore[ hookName ] && hooksStore[ hookName ].runs\r\n\t\t\t? hooksStore[ hookName ].runs\r\n\t\t\t: 0;\r\n\t};\r\n}\r\n\r\nexport default createDidHook;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,gBAAgB,MAAM,uBAAuB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAAEC,KAAK,EAAEC,QAAQ,EAAG;EACzC,OAAO,SAASC,OAAOA,CAAEC,QAAQ,EAAG;IACnC,MAAMC,UAAU,GAAGJ,KAAK,CAAEC,QAAQ,CAAE;IAEpC,IAAK,CAAEH,gBAAgB,CAAEK,QAAS,CAAC,EAAG;MACrC;IACD;IAEA,OAAOC,UAAU,CAAED,QAAQ,CAAE,IAAIC,UAAU,CAAED,QAAQ,CAAE,CAACE,IAAI,GACzDD,UAAU,CAAED,QAAQ,CAAE,CAACE,IAAI,GAC3B,CAAC;EACL,CAAC;AACF;AAEA,eAAeN,aAAa","ignoreList":[]}