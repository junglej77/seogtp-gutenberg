{"version":3,"names":["memoize","sprintfjs","logErrorOnce","console","error","sprintf","format","args","Error","toString"],"sources":["@wordpress/i18n/src/sprintf.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport memoize from 'memize';\r\nimport sprintfjs from 'sprintf-js';\r\n\r\n/**\r\n * Log to console, once per message; or more precisely, per referentially equal\r\n * argument set. Because Jed throws errors, we log these to the console instead\r\n * to avoid crashing the application.\r\n *\r\n * @param {...*} args Arguments to pass to `console.error`\r\n */\r\nconst logErrorOnce = memoize( console.error ); // eslint-disable-line no-console\r\n\r\n/**\r\n * Returns a formatted string. If an error occurs in applying the format, the\r\n * original format string is returned.\r\n *\r\n * @param {string} format The format of the string to generate.\r\n * @param {...*}   args   Arguments to apply to the format.\r\n *\r\n * @see https://www.npmjs.com/package/sprintf-js\r\n *\r\n * @return {string} The formatted string.\r\n */\r\nexport function sprintf( format, ...args ) {\r\n\ttry {\r\n\t\treturn sprintfjs.sprintf( format, ...args );\r\n\t} catch ( error ) {\r\n\t\tif ( error instanceof Error ) {\r\n\t\t\tlogErrorOnce( 'sprintf error: \\n\\n' + error.toString() );\r\n\t\t}\r\n\t\treturn format;\r\n\t}\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,OAAO,MAAM,QAAQ;AAC5B,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAGF,OAAO,CAAEG,OAAO,CAACC,KAAM,CAAC,CAAC,CAAC;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,OAAOA,CAAEC,MAAM,EAAE,GAAGC,IAAI,EAAG;EAC1C,IAAI;IACH,OAAON,SAAS,CAACI,OAAO,CAAEC,MAAM,EAAE,GAAGC,IAAK,CAAC;EAC5C,CAAC,CAAC,OAAQH,KAAK,EAAG;IACjB,IAAKA,KAAK,YAAYI,KAAK,EAAG;MAC7BN,YAAY,CAAE,qBAAqB,GAAGE,KAAK,CAACK,QAAQ,CAAC,CAAE,CAAC;IACzD;IACA,OAAOH,MAAM;EACd;AACD","ignoreList":[]}