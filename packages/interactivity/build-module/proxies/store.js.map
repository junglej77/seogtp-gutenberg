{"version":3,"names":["createProxy","getNamespaceFromProxy","shouldProxy","setNamespace","resetNamespace","withScope","isPlainObject","storeRoots","WeakSet","storeHandlers","get","target","key","receiver","result","Reflect","ns","has","obj","set","proxifyStore","scoped","namespace","isRoot","proxy","add"],"sources":["@wordpress/interactivity/src/proxies/store.ts"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport { createProxy, getNamespaceFromProxy, shouldProxy } from './registry';\r\n/**\r\n * External dependencies\r\n */\r\nimport { setNamespace, resetNamespace } from '../namespaces';\r\nimport { withScope, isPlainObject } from '../utils';\r\n\r\n/**\r\n * Identifies the store proxies handling the root objects of each store.\r\n */\r\nconst storeRoots = new WeakSet();\r\n\r\n/**\r\n * Handlers for store proxies.\r\n */\r\nconst storeHandlers: ProxyHandler< object > = {\r\n\tget: ( target: any, key: string | symbol, receiver: any ) => {\r\n\t\tconst result = Reflect.get( target, key );\r\n\t\tconst ns = getNamespaceFromProxy( receiver );\r\n\r\n\t\t/*\r\n\t\t * Check if the proxy is the store root and no key with that name exist. In\r\n\t\t * that case, return an empty object for the requested key.\r\n\t\t */\r\n\t\tif ( typeof result === 'undefined' && storeRoots.has( receiver ) ) {\r\n\t\t\tconst obj = {};\r\n\t\t\tReflect.set( target, key, obj );\r\n\t\t\treturn proxifyStore( ns, obj, false );\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * Check if the property is a function. If it is, add the store\r\n\t\t * namespace to the stack and wrap the function with the current scope.\r\n\t\t * The `withScope` util handles both synchronous functions and generator\r\n\t\t * functions.\r\n\t\t */\r\n\t\tif ( typeof result === 'function' ) {\r\n\t\t\tsetNamespace( ns );\r\n\t\t\tconst scoped = withScope( result );\r\n\t\t\tresetNamespace();\r\n\t\t\treturn scoped;\r\n\t\t}\r\n\r\n\t\t// Check if the property is an object. If it is, proxyify it.\r\n\t\tif ( isPlainObject( result ) && shouldProxy( result ) ) {\r\n\t\t\treturn proxifyStore( ns, result, false );\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t},\r\n};\r\n\r\n/**\r\n * Returns the proxy associated with the given store object, creating it if it\r\n * does not exist.\r\n *\r\n * @param namespace The namespace that will be associated to this proxy.\r\n * @param obj       The object to proxify.\r\n *\r\n * @param isRoot    Whether the passed object is the store root object.\r\n * @throws Error if the object cannot be proxified. Use {@link shouldProxy} to\r\n *         check if a proxy can be created for a specific object.\r\n *\r\n * @return The associated proxy.\r\n */\r\nexport const proxifyStore = < T extends object >(\r\n\tnamespace: string,\r\n\tobj: T,\r\n\tisRoot = true\r\n): T => {\r\n\tconst proxy = createProxy( namespace, obj, storeHandlers );\r\n\tif ( proxy && isRoot ) {\r\n\t\tstoreRoots.add( proxy );\r\n\t}\r\n\treturn proxy as T;\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,WAAW,EAAEC,qBAAqB,EAAEC,WAAW,QAAQ,YAAY;AAC5E;AACA;AACA;AACA,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,SAASC,SAAS,EAAEC,aAAa,QAAQ,UAAU;;AAEnD;AACA;AACA;AACA,MAAMC,UAAU,GAAG,IAAIC,OAAO,CAAC,CAAC;;AAEhC;AACA;AACA;AACA,MAAMC,aAAqC,GAAG;EAC7CC,GAAG,EAAEA,CAAEC,MAAW,EAAEC,GAAoB,EAAEC,QAAa,KAAM;IAC5D,MAAMC,MAAM,GAAGC,OAAO,CAACL,GAAG,CAAEC,MAAM,EAAEC,GAAI,CAAC;IACzC,MAAMI,EAAE,GAAGf,qBAAqB,CAAEY,QAAS,CAAC;;IAE5C;AACF;AACA;AACA;IACE,IAAK,OAAOC,MAAM,KAAK,WAAW,IAAIP,UAAU,CAACU,GAAG,CAAEJ,QAAS,CAAC,EAAG;MAClE,MAAMK,GAAG,GAAG,CAAC,CAAC;MACdH,OAAO,CAACI,GAAG,CAAER,MAAM,EAAEC,GAAG,EAAEM,GAAI,CAAC;MAC/B,OAAOE,YAAY,CAAEJ,EAAE,EAAEE,GAAG,EAAE,KAAM,CAAC;IACtC;;IAEA;AACF;AACA;AACA;AACA;AACA;IACE,IAAK,OAAOJ,MAAM,KAAK,UAAU,EAAG;MACnCX,YAAY,CAAEa,EAAG,CAAC;MAClB,MAAMK,MAAM,GAAGhB,SAAS,CAAES,MAAO,CAAC;MAClCV,cAAc,CAAC,CAAC;MAChB,OAAOiB,MAAM;IACd;;IAEA;IACA,IAAKf,aAAa,CAAEQ,MAAO,CAAC,IAAIZ,WAAW,CAAEY,MAAO,CAAC,EAAG;MACvD,OAAOM,YAAY,CAAEJ,EAAE,EAAEF,MAAM,EAAE,KAAM,CAAC;IACzC;IAEA,OAAOA,MAAM;EACd;AACD,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMM,YAAY,GAAGA,CAC3BE,SAAiB,EACjBJ,GAAM,EACNK,MAAM,GAAG,IAAI,KACN;EACP,MAAMC,KAAK,GAAGxB,WAAW,CAAEsB,SAAS,EAAEJ,GAAG,EAAET,aAAc,CAAC;EAC1D,IAAKe,KAAK,IAAID,MAAM,EAAG;IACtBhB,UAAU,CAACkB,GAAG,CAAED,KAAM,CAAC;EACxB;EACA,OAAOA,KAAK;AACb,CAAC","ignoreList":[]}