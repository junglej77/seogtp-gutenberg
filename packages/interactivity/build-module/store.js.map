{"version":3,"names":["proxifyState","proxifyStore","deepMerge","getNamespace","isPlainObject","stores","Map","rawStores","storeLocks","storeConfigs","getConfig","namespace","get","universalUnlock","store","state","block","lock","has","set","rawStore","proxifiedStore","storeLock","isLockValid","Error","target","parseServerData","dom","document","_dom$getElementById","jsonDataScriptTag","getElementById","textContent","JSON","parse","populateServerData","data","Object","entries","forEach","st","config"],"sources":["@wordpress/interactivity/src/store.ts"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport { proxifyState, proxifyStore, deepMerge } from './proxies';\r\n/**\r\n * External dependencies\r\n */\r\nimport { getNamespace } from './namespaces';\r\nimport { isPlainObject } from './utils';\r\n\r\nexport const stores = new Map();\r\nconst rawStores = new Map();\r\nconst storeLocks = new Map();\r\nconst storeConfigs = new Map();\r\n\r\n/**\r\n * Get the defined config for the store with the passed namespace.\r\n *\r\n * @param namespace Store's namespace from which to retrieve the config.\r\n * @return Defined config for the given namespace.\r\n */\r\nexport const getConfig = ( namespace?: string ) =>\r\n\tstoreConfigs.get( namespace || getNamespace() ) || {};\r\n\r\ninterface StoreOptions {\r\n\t/**\r\n\t * Property to block/unblock private store namespaces.\r\n\t *\r\n\t * If the passed value is `true`, it blocks the given namespace, making it\r\n\t * accessible only trough the returned variables of the `store()` call. In\r\n\t * the case a lock string is passed, it also blocks the namespace, but can\r\n\t * be unblocked for other `store()` calls using the same lock string.\r\n\t *\r\n\t * @example\r\n\t * ```\r\n\t * // The store can only be accessed where the `state` const can.\r\n\t * const { state } = store( 'myblock/private', { ... }, { lock: true } );\r\n\t * ```\r\n\t *\r\n\t * @example\r\n\t * ```\r\n\t * // Other modules knowing `SECRET_LOCK_STRING` can access the namespace.\r\n\t * const { state } = store(\r\n\t *   'myblock/private',\r\n\t *   { ... },\r\n\t *   { lock: 'SECRET_LOCK_STRING' }\r\n\t * );\r\n\t * ```\r\n\t */\r\n\tlock?: boolean | string;\r\n}\r\n\r\nexport const universalUnlock =\r\n\t'I acknowledge that using a private store means my plugin will inevitably break on the next store release.';\r\n\r\n/**\r\n * Extends the Interactivity API global store adding the passed properties to\r\n * the given namespace. It also returns stable references to the namespace\r\n * content.\r\n *\r\n * These props typically consist of `state`, which is the reactive part of the\r\n * store ― which means that any directive referencing a state property will be\r\n * re-rendered anytime it changes ― and function properties like `actions` and\r\n * `callbacks`, mostly used for event handlers. These props can then be\r\n * referenced by any directive to make the HTML interactive.\r\n *\r\n * @example\r\n * ```js\r\n *  const { state } = store( 'counter', {\r\n *    state: {\r\n *      value: 0,\r\n *      get double() { return state.value * 2; },\r\n *    },\r\n *    actions: {\r\n *      increment() {\r\n *        state.value += 1;\r\n *      },\r\n *    },\r\n *  } );\r\n * ```\r\n *\r\n * The code from the example above allows blocks to subscribe and interact with\r\n * the store by using directives in the HTML, e.g.:\r\n *\r\n * ```html\r\n * <div data-wp-interactive=\"counter\">\r\n *   <button\r\n *     data-wp-text=\"state.double\"\r\n *     data-wp-on--click=\"actions.increment\"\r\n *   >\r\n *     0\r\n *   </button>\r\n * </div>\r\n * ```\r\n * @param namespace The store namespace to interact with.\r\n * @param storePart Properties to add to the store namespace.\r\n * @param options   Options for the given namespace.\r\n *\r\n * @return A reference to the namespace content.\r\n */\r\nexport function store< S extends object = {} >(\r\n\tnamespace: string,\r\n\tstorePart?: S,\r\n\toptions?: StoreOptions\r\n): S;\r\n\r\nexport function store< T extends object >(\r\n\tnamespace: string,\r\n\tstorePart?: T,\r\n\toptions?: StoreOptions\r\n): T;\r\n\r\nexport function store(\r\n\tnamespace: string,\r\n\t{ state = {}, ...block }: any = {},\r\n\t{ lock = false }: StoreOptions = {}\r\n) {\r\n\tif ( ! stores.has( namespace ) ) {\r\n\t\t// Lock the store if the passed lock is different from the universal\r\n\t\t// unlock. Once the lock is set (either false, true, or a given string),\r\n\t\t// it cannot change.\r\n\t\tif ( lock !== universalUnlock ) {\r\n\t\t\tstoreLocks.set( namespace, lock );\r\n\t\t}\r\n\t\tconst rawStore = {\r\n\t\t\tstate: proxifyState(\r\n\t\t\t\tnamespace,\r\n\t\t\t\tisPlainObject( state ) ? state : {}\r\n\t\t\t),\r\n\t\t\t...block,\r\n\t\t};\r\n\t\tconst proxifiedStore = proxifyStore( namespace, rawStore );\r\n\t\trawStores.set( namespace, rawStore );\r\n\t\tstores.set( namespace, proxifiedStore );\r\n\t} else {\r\n\t\t// Lock the store if it wasn't locked yet and the passed lock is\r\n\t\t// different from the universal unlock. If no lock is given, the store\r\n\t\t// will be public and won't accept any lock from now on.\r\n\t\tif ( lock !== universalUnlock && ! storeLocks.has( namespace ) ) {\r\n\t\t\tstoreLocks.set( namespace, lock );\r\n\t\t} else {\r\n\t\t\tconst storeLock = storeLocks.get( namespace );\r\n\t\t\tconst isLockValid =\r\n\t\t\t\tlock === universalUnlock ||\r\n\t\t\t\t( lock !== true && lock === storeLock );\r\n\r\n\t\t\tif ( ! isLockValid ) {\r\n\t\t\t\tif ( ! storeLock ) {\r\n\t\t\t\t\tthrow Error( 'Cannot lock a public store' );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow Error(\r\n\t\t\t\t\t\t'Cannot unlock a private store with an invalid lock code'\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst target = rawStores.get( namespace );\r\n\t\tdeepMerge( target, block );\r\n\t\tdeepMerge( target.state, state );\r\n\t}\r\n\r\n\treturn stores.get( namespace );\r\n}\r\n\r\nexport const parseServerData = ( dom = document ) => {\r\n\tconst jsonDataScriptTag =\r\n\t\t// Preferred Script Module data passing form\r\n\t\tdom.getElementById(\r\n\t\t\t'wp-script-module-data-@wordpress/interactivity'\r\n\t\t) ??\r\n\t\t// Legacy form\r\n\t\tdom.getElementById( 'wp-interactivity-data' );\r\n\tif ( jsonDataScriptTag?.textContent ) {\r\n\t\ttry {\r\n\t\t\treturn JSON.parse( jsonDataScriptTag.textContent );\r\n\t\t} catch {}\r\n\t}\r\n\treturn {};\r\n};\r\n\r\nexport const populateServerData = ( data?: {\r\n\tstate?: Record< string, unknown >;\r\n\tconfig?: Record< string, unknown >;\r\n} ) => {\r\n\tif ( isPlainObject( data?.state ) ) {\r\n\t\tObject.entries( data!.state ).forEach( ( [ namespace, state ] ) => {\r\n\t\t\tconst st = store< any >( namespace, {}, { lock: universalUnlock } );\r\n\t\t\tdeepMerge( st.state, state, false );\r\n\t\t} );\r\n\t}\r\n\tif ( isPlainObject( data?.config ) ) {\r\n\t\tObject.entries( data!.config ).forEach( ( [ namespace, config ] ) => {\r\n\t\t\tstoreConfigs.set( namespace, config );\r\n\t\t} );\r\n\t}\r\n};\r\n\r\n// Parse and populate the initial state and config.\r\nconst data = parseServerData();\r\npopulateServerData( data );\r\n"],"mappings":"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","ignoreList":[]}