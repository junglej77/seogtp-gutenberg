{"version":3,"names":["useMemo","_useMemo","useCallback","_useCallback","useEffect","_useEffect","useLayoutEffect","_useLayoutEffect","effect","getScope","setScope","resetScope","getNamespace","setNamespace","resetNamespace","afterNextFrame","callback","Promise","resolve","done","clearTimeout","timeout","window","cancelAnimationFrame","raf","setTimeout","requestAnimationFrame","splitTask","createFlusher","compute","notify","flush","undefined","dispose","c","bind","x","useSignalEffect","eff","isExecuting","withScope","func","scope","ns","constructor","name","args","gen","value","it","next","e","throw","useWatch","useInit","inputs","factory","createRootFragment","parent","replaceNode","concat","sibling","length","nextSibling","insert","child","root","insertBefore","__k","nodeType","parentNode","firstChild","childNodes","appendChild","removeChild","kebabToCamelCase","str","replace","toLowerCase","_match","group1","toUpperCase","logged","Set","warn","message","globalThis","SCRIPT_DEBUG","has","console","Error","add","isPlainObject","candidate","Boolean","Object"],"sources":["@wordpress/interactivity/src/utils.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport {\r\n\tuseMemo as _useMemo,\r\n\tuseCallback as _useCallback,\r\n\tuseEffect as _useEffect,\r\n\tuseLayoutEffect as _useLayoutEffect,\r\n\ttype EffectCallback,\r\n\ttype Inputs,\r\n} from 'preact/hooks';\r\nimport { effect } from '@preact/signals';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { getScope, setScope, resetScope } from './scopes';\r\nimport { getNamespace, setNamespace, resetNamespace } from './namespaces';\r\n\r\ninterface Flusher {\r\n\treadonly flush: () => void;\r\n\treadonly dispose: () => void;\r\n}\r\n\r\n/**\r\n * Executes a callback function after the next frame is rendered.\r\n *\r\n * @param callback The callback function to be executed.\r\n * @return A promise that resolves after the callback function is executed.\r\n */\r\nconst afterNextFrame = ( callback: () => void ) => {\r\n\treturn new Promise< void >( ( resolve ) => {\r\n\t\tconst done = () => {\r\n\t\t\tclearTimeout( timeout );\r\n\t\t\twindow.cancelAnimationFrame( raf );\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tcallback();\r\n\t\t\t\tresolve();\r\n\t\t\t} );\r\n\t\t};\r\n\t\tconst timeout = setTimeout( done, 100 );\r\n\t\tconst raf = window.requestAnimationFrame( done );\r\n\t} );\r\n};\r\n\r\n/**\r\n * Returns a promise that resolves after yielding to main.\r\n *\r\n * @return Promise\r\n */\r\nexport const splitTask = () => {\r\n\treturn new Promise( ( resolve ) => {\r\n\t\t// TODO: Use scheduler.yield() when available.\r\n\t\tsetTimeout( resolve, 0 );\r\n\t} );\r\n};\r\n\r\n/**\r\n * Creates a Flusher object that can be used to flush computed values and notify listeners.\r\n *\r\n * Using the mangled properties:\r\n * this.c: this._callback\r\n * this.x: this._compute\r\n * https://github.com/preactjs/signals/blob/main/mangle.json\r\n *\r\n * @param compute The function that computes the value to be flushed.\r\n * @param notify  The function that notifies listeners when the value is flushed.\r\n * @return The Flusher object with `flush` and `dispose` properties.\r\n */\r\nfunction createFlusher( compute: () => unknown, notify: () => void ): Flusher {\r\n\tlet flush: () => void = () => undefined;\r\n\tconst dispose = effect( function ( this: any ) {\r\n\t\tflush = this.c.bind( this );\r\n\t\tthis.x = compute;\r\n\t\tthis.c = notify;\r\n\t\treturn compute();\r\n\t} );\r\n\treturn { flush, dispose } as const;\r\n}\r\n\r\n/**\r\n * Custom hook that executes a callback function whenever a signal is triggered.\r\n * Version of `useSignalEffect` with a `useEffect`-like execution. This hook\r\n * implementation comes from this PR, but we added short-cirtuiting to avoid\r\n * infinite loops: https://github.com/preactjs/signals/pull/290\r\n *\r\n * @param callback The callback function to be executed.\r\n */\r\nexport function useSignalEffect( callback: () => unknown ) {\r\n\t_useEffect( () => {\r\n\t\tlet eff: Flusher | null = null;\r\n\t\tlet isExecuting = false;\r\n\r\n\t\tconst notify = async () => {\r\n\t\t\tif ( eff && ! isExecuting ) {\r\n\t\t\t\tisExecuting = true;\r\n\t\t\t\tawait afterNextFrame( eff.flush );\r\n\t\t\t\tisExecuting = false;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\teff = createFlusher( callback, notify );\r\n\t\treturn eff.dispose;\r\n\t}, [] );\r\n}\r\n\r\n/**\r\n * Returns the passed function wrapped with the current scope so it is\r\n * accessible whenever the function runs. This is primarily to make the scope\r\n * available inside hook callbacks.\r\n *\r\n * Asyncronous functions should use generators that yield promises instead of awaiting them.\r\n * See the documentation for details: https://developer.wordpress.org/block-editor/reference-guides/packages/packages-interactivity/packages-interactivity-api-reference/#the-store\r\n *\r\n * @param func The passed function.\r\n * @return The wrapped function.\r\n */\r\nexport function withScope<\r\n\tFunc extends ( ...args: any[] ) => Generator< any, any >,\r\n>(\r\n\tfunc: Func\r\n): (\r\n\t...args: Parameters< Func >\r\n) => ReturnType< Func > extends Generator< any, infer Return >\r\n\t? Promise< Return >\r\n\t: never;\r\nexport function withScope< Func extends Function >( func: Func ): Func;\r\nexport function withScope( func: ( ...args: unknown[] ) => unknown ) {\r\n\tconst scope = getScope();\r\n\tconst ns = getNamespace();\r\n\tif ( func?.constructor?.name === 'GeneratorFunction' ) {\r\n\t\treturn async ( ...args: Parameters< typeof func > ) => {\r\n\t\t\tconst gen = func( ...args ) as Generator;\r\n\t\t\tlet value: any;\r\n\t\t\tlet it: any;\r\n\t\t\twhile ( true ) {\r\n\t\t\t\tsetNamespace( ns );\r\n\t\t\t\tsetScope( scope );\r\n\t\t\t\ttry {\r\n\t\t\t\t\tit = gen.next( value );\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tresetScope();\r\n\t\t\t\t\tresetNamespace();\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvalue = await it.value;\r\n\t\t\t\t} catch ( e ) {\r\n\t\t\t\t\tsetNamespace( ns );\r\n\t\t\t\t\tsetScope( scope );\r\n\t\t\t\t\tgen.throw( e );\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tresetScope();\r\n\t\t\t\t\tresetNamespace();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( it.done ) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t};\r\n\t}\r\n\treturn ( ...args: Parameters< typeof func > ) => {\r\n\t\tsetNamespace( ns );\r\n\t\tsetScope( scope );\r\n\t\ttry {\r\n\t\t\treturn func( ...args );\r\n\t\t} finally {\r\n\t\t\tresetNamespace();\r\n\t\t\tresetScope();\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Accepts a function that contains imperative code which runs whenever any of\r\n * the accessed _reactive_ properties (e.g., values from the global state or the\r\n * context) is modified.\r\n *\r\n * This hook makes the element's scope available so functions like\r\n * `getElement()` and `getContext()` can be used inside the passed callback.\r\n *\r\n * @param callback The hook callback.\r\n */\r\nexport function useWatch( callback: () => unknown ) {\r\n\tuseSignalEffect( withScope( callback ) );\r\n}\r\n\r\n/**\r\n * Accepts a function that contains imperative code which runs only after the\r\n * element's first render, mainly useful for intialization logic.\r\n *\r\n * This hook makes the element's scope available so functions like\r\n * `getElement()` and `getContext()` can be used inside the passed callback.\r\n *\r\n * @param callback The hook callback.\r\n */\r\nexport function useInit( callback: EffectCallback ) {\r\n\t_useEffect( withScope( callback ), [] );\r\n}\r\n\r\n/**\r\n * Accepts a function that contains imperative, possibly effectful code. The\r\n * effects run after browser paint, without blocking it.\r\n *\r\n * This hook is equivalent to Preact's `useEffect` and makes the element's scope\r\n * available so functions like `getElement()` and `getContext()` can be used\r\n * inside the passed callback.\r\n *\r\n * @param callback Imperative function that can return a cleanup\r\n *                 function.\r\n * @param inputs   If present, effect will only activate if the\r\n *                 values in the list change (using `===`).\r\n */\r\nexport function useEffect( callback: EffectCallback, inputs: Inputs ) {\r\n\t_useEffect( withScope( callback ), inputs );\r\n}\r\n\r\n/**\r\n * Accepts a function that contains imperative, possibly effectful code. Use\r\n * this to read layout from the DOM and synchronously re-render.\r\n *\r\n * This hook is equivalent to Preact's `useLayoutEffect` and makes the element's\r\n * scope available so functions like `getElement()` and `getContext()` can be\r\n * used inside the passed callback.\r\n *\r\n * @param callback Imperative function that can return a cleanup\r\n *                 function.\r\n * @param inputs   If present, effect will only activate if the\r\n *                 values in the list change (using `===`).\r\n */\r\nexport function useLayoutEffect( callback: EffectCallback, inputs: Inputs ) {\r\n\t_useLayoutEffect( withScope( callback ), inputs );\r\n}\r\n\r\n/**\r\n * Returns a memoized version of the callback that only changes if one of the\r\n * inputs has changed (using `===`).\r\n *\r\n * This hook is equivalent to Preact's `useCallback` and makes the element's\r\n * scope available so functions like `getElement()` and `getContext()` can be\r\n * used inside the passed callback.\r\n *\r\n * @param callback Callback function.\r\n * @param inputs   If present, the callback will only be updated if the\r\n *                 values in the list change (using `===`).\r\n *\r\n * @return The callback function.\r\n */\r\nexport function useCallback< T extends Function >(\r\n\tcallback: T,\r\n\tinputs: Inputs\r\n): T {\r\n\treturn _useCallback< T >( withScope( callback ), inputs );\r\n}\r\n\r\n/**\r\n * Pass a factory function and an array of inputs. `useMemo` will only recompute\r\n * the memoized value when one of the inputs has changed.\r\n *\r\n * This hook is equivalent to Preact's `useMemo` and makes the element's scope\r\n * available so functions like `getElement()` and `getContext()` can be used\r\n * inside the passed factory function.\r\n *\r\n * @param factory Factory function that returns that value for memoization.\r\n * @param inputs  If present, the factory will only be run to recompute if\r\n *                the values in the list change (using `===`).\r\n *\r\n * @return The memoized value.\r\n */\r\nexport function useMemo< T >( factory: () => T, inputs: Inputs ): T {\r\n\treturn _useMemo( withScope( factory ), inputs );\r\n}\r\n\r\n/**\r\n * Creates a root fragment by replacing a node or an array of nodes in a parent element.\r\n * For wrapperless hydration.\r\n * See https://gist.github.com/developit/f4c67a2ede71dc2fab7f357f39cff28c\r\n *\r\n * @param parent      The parent element where the nodes will be replaced.\r\n * @param replaceNode The node or array of nodes to replace in the parent element.\r\n * @return The created root fragment.\r\n */\r\nexport const createRootFragment = (\r\n\tparent: Element,\r\n\treplaceNode: Node | Node[]\r\n) => {\r\n\treplaceNode = ( [] as Node[] ).concat( replaceNode );\r\n\tconst sibling = replaceNode[ replaceNode.length - 1 ].nextSibling;\r\n\tfunction insert( child: any, root: any ) {\r\n\t\tparent.insertBefore( child, root || sibling );\r\n\t}\r\n\treturn ( ( parent as any ).__k = {\r\n\t\tnodeType: 1,\r\n\t\tparentNode: parent,\r\n\t\tfirstChild: replaceNode[ 0 ],\r\n\t\tchildNodes: replaceNode,\r\n\t\tinsertBefore: insert,\r\n\t\tappendChild: insert,\r\n\t\tremoveChild( c: Node ) {\r\n\t\t\tparent.removeChild( c );\r\n\t\t},\r\n\t} );\r\n};\r\n\r\n/**\r\n * Transforms a kebab-case string to camelCase.\r\n *\r\n * @param str The kebab-case string to transform to camelCase.\r\n * @return The transformed camelCase string.\r\n */\r\nexport function kebabToCamelCase( str: string ): string {\r\n\treturn str\r\n\t\t.replace( /^-+|-+$/g, '' )\r\n\t\t.toLowerCase()\r\n\t\t.replace( /-([a-z])/g, function ( _match, group1: string ) {\r\n\t\t\treturn group1.toUpperCase();\r\n\t\t} );\r\n}\r\n\r\nconst logged: Set< string > = new Set();\r\n\r\n/**\r\n * Shows a warning with `message` if environment is not `production`.\r\n *\r\n * Based on the `@wordpress/warning` package.\r\n *\r\n * @param message Message to show in the warning.\r\n */\r\nexport const warn = ( message: string ): void => {\r\n\tif ( globalThis.SCRIPT_DEBUG ) {\r\n\t\tif ( logged.has( message ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// eslint-disable-next-line no-console\r\n\t\tconsole.warn( message );\r\n\r\n\t\t// Throwing an error and catching it immediately to improve debugging\r\n\t\t// A consumer can use 'pause on caught exceptions'\r\n\t\ttry {\r\n\t\t\tthrow Error( message );\r\n\t\t} catch ( e ) {\r\n\t\t\t// Do nothing.\r\n\t\t}\r\n\t\tlogged.add( message );\r\n\t}\r\n};\r\n\r\n/**\r\n * Checks if the passed `candidate` is a plain object with just the `Object`\r\n * prototype.\r\n *\r\n * @param candidate The item to check.\r\n * @return Whether `candidate` is a plain object.\r\n */\r\nexport const isPlainObject = (\r\n\tcandidate: unknown\r\n): candidate is Record< string, unknown > =>\r\n\tBoolean(\r\n\t\tcandidate &&\r\n\t\t\ttypeof candidate === 'object' &&\r\n\t\t\tcandidate.constructor === Object\r\n\t);\r\n"],"mappings":"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","ignoreList":[]}