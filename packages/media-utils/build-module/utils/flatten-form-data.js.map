{"version":3,"names":["isPlainObject","data","Object","getPrototypeOf","prototype","flattenFormData","formData","key","name","value","entries","undefined","append","String"],"sources":["@wordpress/media-utils/src/utils/flatten-form-data.ts"],"sourcesContent":["/**\r\n * Determines whether the passed argument appears to be a plain object.\r\n *\r\n * @param data The object to inspect.\r\n */\r\nfunction isPlainObject( data: unknown ): data is Record< string, unknown > {\r\n\treturn (\r\n\t\tdata !== null &&\r\n\t\ttypeof data === 'object' &&\r\n\t\tObject.getPrototypeOf( data ) === Object.prototype\r\n\t);\r\n}\r\n\r\n/**\r\n * Recursively flatten data passed to form data, to allow using multi-level objects.\r\n *\r\n * @param {FormData}      formData Form data object.\r\n * @param {string}        key      Key to amend to form data object\r\n * @param {string|Object} data     Data to be amended to form data.\r\n */\r\nexport function flattenFormData(\r\n\tformData: FormData,\r\n\tkey: string,\r\n\tdata: string | undefined | Record< string, string >\r\n) {\r\n\tif ( isPlainObject( data ) ) {\r\n\t\tfor ( const [ name, value ] of Object.entries( data ) ) {\r\n\t\t\tflattenFormData( formData, `${ key }[${ name }]`, value );\r\n\t\t}\r\n\t} else if ( data !== undefined ) {\r\n\t\tformData.append( key, String( data ) );\r\n\t}\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAaA,CAAEC,IAAa,EAAsC;EAC1E,OACCA,IAAI,KAAK,IAAI,IACb,OAAOA,IAAI,KAAK,QAAQ,IACxBC,MAAM,CAACC,cAAc,CAAEF,IAAK,CAAC,KAAKC,MAAM,CAACE,SAAS;AAEpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAC9BC,QAAkB,EAClBC,GAAW,EACXN,IAAmD,EAClD;EACD,IAAKD,aAAa,CAAEC,IAAK,CAAC,EAAG;IAC5B,KAAM,MAAM,CAAEO,IAAI,EAAEC,KAAK,CAAE,IAAIP,MAAM,CAACQ,OAAO,CAAET,IAAK,CAAC,EAAG;MACvDI,eAAe,CAAEC,QAAQ,EAAG,GAAGC,GAAK,IAAIC,IAAM,GAAE,EAAEC,KAAM,CAAC;IAC1D;EACD,CAAC,MAAM,IAAKR,IAAI,KAAKU,SAAS,EAAG;IAChCL,QAAQ,CAACM,MAAM,CAAEL,GAAG,EAAEM,MAAM,CAAEZ,IAAK,CAAE,CAAC;EACvC;AACD","ignoreList":[]}