{"version":3,"names":["createReduxStore","registerStore","reducer","actions","selectors","STORE_NAME","store","persist"],"sources":["@wordpress/nux/src/store/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { createReduxStore, registerStore } from '@wordpress/data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport reducer from './reducer';\r\nimport * as actions from './actions';\r\nimport * as selectors from './selectors';\r\n\r\nconst STORE_NAME = 'core/nux';\r\n\r\n/**\r\n * Store definition for the nux namespace.\r\n *\r\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\r\n *\r\n * @type {Object}\r\n */\r\nexport const store = createReduxStore( STORE_NAME, {\r\n\treducer,\r\n\tactions,\r\n\tselectors,\r\n\tpersist: [ 'preferences' ],\r\n} );\r\n\r\n// Once we build a more generic persistence plugin that works across types of stores\r\n// we'd be able to replace this with a register call.\r\nregisterStore( STORE_NAME, {\r\n\treducer,\r\n\tactions,\r\n\tselectors,\r\n\tpersist: [ 'preferences' ],\r\n} );\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,gBAAgB,EAAEC,aAAa,QAAQ,iBAAiB;;AAEjE;AACA;AACA;AACA,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,KAAKC,OAAO,MAAM,WAAW;AACpC,OAAO,KAAKC,SAAS,MAAM,aAAa;AAExC,MAAMC,UAAU,GAAG,UAAU;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,KAAK,GAAGN,gBAAgB,CAAEK,UAAU,EAAE;EAClDH,OAAO;EACPC,OAAO;EACPC,SAAS;EACTG,OAAO,EAAE,CAAE,aAAa;AACzB,CAAE,CAAC;;AAEH;AACA;AACAN,aAAa,CAAEI,UAAU,EAAE;EAC1BH,OAAO;EACPC,OAAO;EACPC,SAAS;EACTG,OAAO,EAAE,CAAE,aAAa;AACzB,CAAE,CAAC","ignoreList":[]}