{"version":3,"names":["applyFilters","doAction","plugins","pluginsIcon","registerPlugin","name","settings","console","error","test","render","scope","icon","unregisterPlugin","oldPlugin","getPlugin","getPlugins","Object","values","filter","plugin"],"sources":["@wordpress/plugins/src/api/index.ts"],"sourcesContent":["/* eslint no-console: [ 'error', { allow: [ 'error' ] } ] */\r\n/**\r\n * External dependencies\r\n */\r\nimport type { ComponentType } from 'react';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { applyFilters, doAction } from '@wordpress/hooks';\r\nimport { plugins as pluginsIcon } from '@wordpress/icons';\r\nimport type { IconType } from '@wordpress/components';\r\n\r\n/**\r\n * Defined behavior of a plugin type.\r\n */\r\nexport interface WPPlugin {\r\n\t/**\r\n\t * A string identifying the plugin. Must be unique across all registered plugins.\r\n\t */\r\n\tname: string;\r\n\r\n\t/**\r\n\t * An icon to be shown in the UI. It can be a slug of the Dashicon, or an\r\n\t * element (or function returning an element) if you choose to render your\r\n\t * own SVG.\r\n\t */\r\n\ticon?: IconType;\r\n\r\n\t/**\r\n\t * A component containing the UI elements to be rendered.\r\n\t */\r\n\trender: ComponentType;\r\n\r\n\t/**\r\n\t * The optional scope to be used when rendering inside a plugin area.\r\n\t * No scope by default.\r\n\t */\r\n\tscope?: string;\r\n}\r\n\r\ntype PluginSettings = Omit< WPPlugin, 'name' >;\r\n\r\n/**\r\n * Plugin definitions keyed by plugin name.\r\n */\r\nconst plugins = {} as Record< string, WPPlugin >;\r\n\r\n/**\r\n * Registers a plugin to the editor.\r\n *\r\n * @param name     A string identifying the plugin. Must be\r\n *                 unique across all registered plugins.\r\n * @param settings The settings for this plugin.\r\n *\r\n * @example\r\n * ```js\r\n * // Using ES5 syntax\r\n * var el = React.createElement;\r\n * var Fragment = wp.element.Fragment;\r\n * var PluginSidebar = wp.editor.PluginSidebar;\r\n * var PluginSidebarMoreMenuItem = wp.editor.PluginSidebarMoreMenuItem;\r\n * var registerPlugin = wp.plugins.registerPlugin;\r\n * var moreIcon = React.createElement( 'svg' ); //... svg element.\r\n *\r\n * function Component() {\r\n * \treturn el(\r\n * \t\tFragment,\r\n * \t\t{},\r\n * \t\tel(\r\n * \t\t\tPluginSidebarMoreMenuItem,\r\n * \t\t\t{\r\n * \t\t\t\ttarget: 'sidebar-name',\r\n * \t\t\t},\r\n * \t\t\t'My Sidebar'\r\n * \t\t),\r\n * \t\tel(\r\n * \t\t\tPluginSidebar,\r\n * \t\t\t{\r\n * \t\t\t\tname: 'sidebar-name',\r\n * \t\t\t\ttitle: 'My Sidebar',\r\n * \t\t\t},\r\n * \t\t\t'Content of the sidebar'\r\n * \t\t)\r\n * \t);\r\n * }\r\n * registerPlugin( 'plugin-name', {\r\n * \ticon: moreIcon,\r\n * \trender: Component,\r\n * \tscope: 'my-page',\r\n * } );\r\n * ```\r\n *\r\n * @example\r\n * ```js\r\n * // Using ESNext syntax\r\n * import { PluginSidebar, PluginSidebarMoreMenuItem } from '@wordpress/editor';\r\n * import { registerPlugin } from '@wordpress/plugins';\r\n * import { more } from '@wordpress/icons';\r\n *\r\n * const Component = () => (\r\n * \t<>\r\n * \t\t<PluginSidebarMoreMenuItem\r\n * \t\t\ttarget=\"sidebar-name\"\r\n * \t\t>\r\n * \t\t\tMy Sidebar\r\n * \t\t</PluginSidebarMoreMenuItem>\r\n * \t\t<PluginSidebar\r\n * \t\t\tname=\"sidebar-name\"\r\n * \t\t\ttitle=\"My Sidebar\"\r\n * \t\t>\r\n * \t\t\tContent of the sidebar\r\n * \t\t</PluginSidebar>\r\n * \t</>\r\n * );\r\n *\r\n * registerPlugin( 'plugin-name', {\r\n * \ticon: more,\r\n * \trender: Component,\r\n * \tscope: 'my-page',\r\n * } );\r\n * ```\r\n *\r\n * @return The final plugin settings object.\r\n */\r\nexport function registerPlugin(\r\n\tname: string,\r\n\tsettings: PluginSettings\r\n): PluginSettings | null {\r\n\tif ( typeof settings !== 'object' ) {\r\n\t\tconsole.error( 'No settings object provided!' );\r\n\t\treturn null;\r\n\t}\r\n\tif ( typeof name !== 'string' ) {\r\n\t\tconsole.error( 'Plugin name must be string.' );\r\n\t\treturn null;\r\n\t}\r\n\tif ( ! /^[a-z][a-z0-9-]*$/.test( name ) ) {\r\n\t\tconsole.error(\r\n\t\t\t'Plugin name must include only lowercase alphanumeric characters or dashes, and start with a letter. Example: \"my-plugin\".'\r\n\t\t);\r\n\t\treturn null;\r\n\t}\r\n\tif ( plugins[ name ] ) {\r\n\t\tconsole.error( `Plugin \"${ name }\" is already registered.` );\r\n\t}\r\n\r\n\tsettings = applyFilters(\r\n\t\t'plugins.registerPlugin',\r\n\t\tsettings,\r\n\t\tname\r\n\t) as PluginSettings;\r\n\r\n\tconst { render, scope } = settings;\r\n\r\n\tif ( typeof render !== 'function' ) {\r\n\t\tconsole.error(\r\n\t\t\t'The \"render\" property must be specified and must be a valid function.'\r\n\t\t);\r\n\t\treturn null;\r\n\t}\r\n\r\n\tif ( scope ) {\r\n\t\tif ( typeof scope !== 'string' ) {\r\n\t\t\tconsole.error( 'Plugin scope must be string.' );\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif ( ! /^[a-z][a-z0-9-]*$/.test( scope ) ) {\r\n\t\t\tconsole.error(\r\n\t\t\t\t'Plugin scope must include only lowercase alphanumeric characters or dashes, and start with a letter. Example: \"my-page\".'\r\n\t\t\t);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tplugins[ name ] = {\r\n\t\tname,\r\n\t\ticon: pluginsIcon,\r\n\t\t...settings,\r\n\t};\r\n\r\n\tdoAction( 'plugins.pluginRegistered', settings, name );\r\n\r\n\treturn settings;\r\n}\r\n\r\n/**\r\n * Unregisters a plugin by name.\r\n *\r\n * @param name Plugin name.\r\n *\r\n * @example\r\n * ```js\r\n * // Using ES5 syntax\r\n * var unregisterPlugin = wp.plugins.unregisterPlugin;\r\n *\r\n * unregisterPlugin( 'plugin-name' );\r\n * ```\r\n *\r\n * @example\r\n * ```js\r\n * // Using ESNext syntax\r\n * import { unregisterPlugin } from '@wordpress/plugins';\r\n *\r\n * unregisterPlugin( 'plugin-name' );\r\n * ```\r\n *\r\n * @return The previous plugin settings object, if it has been\r\n *         successfully unregistered; otherwise `undefined`.\r\n */\r\nexport function unregisterPlugin( name: string ): WPPlugin | undefined {\r\n\tif ( ! plugins[ name ] ) {\r\n\t\tconsole.error( 'Plugin \"' + name + '\" is not registered.' );\r\n\t\treturn;\r\n\t}\r\n\tconst oldPlugin = plugins[ name ];\r\n\tdelete plugins[ name ];\r\n\r\n\tdoAction( 'plugins.pluginUnregistered', oldPlugin, name );\r\n\r\n\treturn oldPlugin;\r\n}\r\n\r\n/**\r\n * Returns a registered plugin settings.\r\n *\r\n * @param name Plugin name.\r\n *\r\n * @return Plugin setting.\r\n */\r\nexport function getPlugin( name: string ): WPPlugin | undefined {\r\n\treturn plugins[ name ];\r\n}\r\n\r\n/**\r\n * Returns all registered plugins without a scope or for a given scope.\r\n *\r\n * @param scope The scope to be used when rendering inside\r\n *              a plugin area. No scope by default.\r\n *\r\n * @return The list of plugins without a scope or for a given scope.\r\n */\r\nexport function getPlugins( scope?: string ): WPPlugin[] {\r\n\treturn Object.values( plugins ).filter(\r\n\t\t( plugin ) => plugin.scope === scope\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]}