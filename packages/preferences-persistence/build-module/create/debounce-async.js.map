{"version":3,"names":["debounceAsync","func","delayMS","timeoutId","activePromise","debounced","args","Promise","resolve","reject","then","thenArgs","catch","error","finally","clearTimeout","setTimeout"],"sources":["@wordpress/preferences-persistence/src/create/debounce-async.js"],"sourcesContent":["/**\r\n * Performs a leading edge debounce of async functions.\r\n *\r\n * If three functions are throttled at the same time:\r\n * - The first happens immediately.\r\n * - The second is never called.\r\n * - The third happens `delayMS` milliseconds after the first has resolved.\r\n *\r\n * This is distinct from `{ debounce } from @wordpress/compose` in that it\r\n * waits for promise resolution.\r\n *\r\n * @param {Function} func    A function that returns a promise.\r\n * @param {number}   delayMS A delay in milliseconds.\r\n *\r\n * @return {Function} A function that debounce whatever function is passed\r\n *                    to it.\r\n */\r\nexport default function debounceAsync( func, delayMS ) {\r\n\tlet timeoutId;\r\n\tlet activePromise;\r\n\r\n\treturn async function debounced( ...args ) {\r\n\t\t// This is a leading edge debounce. If there's no promise or timeout\r\n\t\t// in progress, call the debounced function immediately.\r\n\t\tif ( ! activePromise && ! timeoutId ) {\r\n\t\t\treturn new Promise( ( resolve, reject ) => {\r\n\t\t\t\t// Keep a reference to the promise.\r\n\t\t\t\tactivePromise = func( ...args )\r\n\t\t\t\t\t.then( ( ...thenArgs ) => {\r\n\t\t\t\t\t\tresolve( ...thenArgs );\r\n\t\t\t\t\t} )\r\n\t\t\t\t\t.catch( ( error ) => {\r\n\t\t\t\t\t\treject( error );\r\n\t\t\t\t\t} )\r\n\t\t\t\t\t.finally( () => {\r\n\t\t\t\t\t\t// As soon this promise is complete, clear the way for the\r\n\t\t\t\t\t\t// next one to happen immediately.\r\n\t\t\t\t\t\tactivePromise = null;\r\n\t\t\t\t\t} );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( activePromise ) {\r\n\t\t\t// Let any active promises finish before queuing the next request.\r\n\t\t\tawait activePromise;\r\n\t\t}\r\n\r\n\t\t// Clear any active timeouts, abandoning any requests that have\r\n\t\t// been queued but not been made.\r\n\t\tif ( timeoutId ) {\r\n\t\t\tclearTimeout( timeoutId );\r\n\t\t\ttimeoutId = null;\r\n\t\t}\r\n\r\n\t\t// Trigger any trailing edge calls to the function.\r\n\t\treturn new Promise( ( resolve, reject ) => {\r\n\t\t\t// Schedule the next request but with a delay.\r\n\t\t\ttimeoutId = setTimeout( () => {\r\n\t\t\t\tactivePromise = func( ...args )\r\n\t\t\t\t\t.then( ( ...thenArgs ) => {\r\n\t\t\t\t\t\tresolve( ...thenArgs );\r\n\t\t\t\t\t} )\r\n\t\t\t\t\t.catch( ( error ) => {\r\n\t\t\t\t\t\treject( error );\r\n\t\t\t\t\t} )\r\n\t\t\t\t\t.finally( () => {\r\n\t\t\t\t\t\t// As soon this promise is complete, clear the way for the\r\n\t\t\t\t\t\t// next one to happen immediately.\r\n\t\t\t\t\t\tactivePromise = null;\r\n\t\t\t\t\t\ttimeoutId = null;\r\n\t\t\t\t\t} );\r\n\t\t\t}, delayMS );\r\n\t\t} );\r\n\t};\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,aAAaA,CAAEC,IAAI,EAAEC,OAAO,EAAG;EACtD,IAAIC,SAAS;EACb,IAAIC,aAAa;EAEjB,OAAO,eAAeC,SAASA,CAAE,GAAGC,IAAI,EAAG;IAC1C;IACA;IACA,IAAK,CAAEF,aAAa,IAAI,CAAED,SAAS,EAAG;MACrC,OAAO,IAAII,OAAO,CAAE,CAAEC,OAAO,EAAEC,MAAM,KAAM;QAC1C;QACAL,aAAa,GAAGH,IAAI,CAAE,GAAGK,IAAK,CAAC,CAC7BI,IAAI,CAAE,CAAE,GAAGC,QAAQ,KAAM;UACzBH,OAAO,CAAE,GAAGG,QAAS,CAAC;QACvB,CAAE,CAAC,CACFC,KAAK,CAAIC,KAAK,IAAM;UACpBJ,MAAM,CAAEI,KAAM,CAAC;QAChB,CAAE,CAAC,CACFC,OAAO,CAAE,MAAM;UACf;UACA;UACAV,aAAa,GAAG,IAAI;QACrB,CAAE,CAAC;MACL,CAAE,CAAC;IACJ;IAEA,IAAKA,aAAa,EAAG;MACpB;MACA,MAAMA,aAAa;IACpB;;IAEA;IACA;IACA,IAAKD,SAAS,EAAG;MAChBY,YAAY,CAAEZ,SAAU,CAAC;MACzBA,SAAS,GAAG,IAAI;IACjB;;IAEA;IACA,OAAO,IAAII,OAAO,CAAE,CAAEC,OAAO,EAAEC,MAAM,KAAM;MAC1C;MACAN,SAAS,GAAGa,UAAU,CAAE,MAAM;QAC7BZ,aAAa,GAAGH,IAAI,CAAE,GAAGK,IAAK,CAAC,CAC7BI,IAAI,CAAE,CAAE,GAAGC,QAAQ,KAAM;UACzBH,OAAO,CAAE,GAAGG,QAAS,CAAC;QACvB,CAAE,CAAC,CACFC,KAAK,CAAIC,KAAK,IAAM;UACpBJ,MAAM,CAAEI,KAAM,CAAC;QAChB,CAAE,CAAC,CACFC,OAAO,CAAE,MAAM;UACf;UACA;UACAV,aAAa,GAAG,IAAI;UACpBD,SAAS,GAAG,IAAI;QACjB,CAAE,CAAC;MACL,CAAC,EAAED,OAAQ,CAAC;IACb,CAAE,CAAC;EACJ,CAAC;AACF","ignoreList":[]}