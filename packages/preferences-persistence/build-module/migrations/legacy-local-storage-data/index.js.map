{"version":3,"names":["moveFeaturePreferences","moveThirdPartyFeaturePreferences","moveIndividualPreference","moveInterfaceEnableItems","convertEditPostPanels","getLegacyData","userId","key","unparsedData","window","localStorage","getItem","JSON","parse","convertLegacyData","data","from","to","preferences","convertLegacyLocalStorageData"],"sources":["@wordpress/preferences-persistence/src/migrations/legacy-local-storage-data/index.js"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\nimport moveFeaturePreferences from './move-feature-preferences';\r\nimport moveThirdPartyFeaturePreferences from './move-third-party-feature-preferences';\r\nimport moveIndividualPreference from './move-individual-preference';\r\nimport moveInterfaceEnableItems from './move-interface-enable-items';\r\nimport convertEditPostPanels from './convert-edit-post-panels';\r\n\r\n/**\r\n * Gets the legacy local storage data for a given user.\r\n *\r\n * @param {string | number} userId The user id.\r\n *\r\n * @return {Object | null} The local storage data.\r\n */\r\nfunction getLegacyData( userId ) {\r\n\tconst key = `WP_DATA_USER_${ userId }`;\r\n\tconst unparsedData = window.localStorage.getItem( key );\r\n\treturn JSON.parse( unparsedData );\r\n}\r\n\r\n/**\r\n * Converts data from the old `@wordpress/data` package format.\r\n *\r\n * @param {Object | null | undefined} data The legacy data in its original format.\r\n *\r\n * @return {Object | undefined} The converted data or `undefined` if there was\r\n *                              nothing to convert.\r\n */\r\nexport function convertLegacyData( data ) {\r\n\tif ( ! data ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Move boolean feature preferences from each editor into the\r\n\t// preferences store data structure.\r\n\tdata = moveFeaturePreferences( data, 'core/edit-widgets' );\r\n\tdata = moveFeaturePreferences( data, 'core/customize-widgets' );\r\n\tdata = moveFeaturePreferences( data, 'core/edit-post' );\r\n\tdata = moveFeaturePreferences( data, 'core/edit-site' );\r\n\r\n\t// Move third party boolean feature preferences from the interface package\r\n\t// to the preferences store data structure.\r\n\tdata = moveThirdPartyFeaturePreferences( data );\r\n\r\n\t// Move and convert the interface store's `enableItems` data into the\r\n\t// preferences data structure.\r\n\tdata = moveInterfaceEnableItems( data );\r\n\r\n\t// Move individual ad-hoc preferences from various packages into the\r\n\t// preferences store data structure.\r\n\tdata = moveIndividualPreference(\r\n\t\tdata,\r\n\t\t{ from: 'core/edit-post', to: 'core/edit-post' },\r\n\t\t'hiddenBlockTypes'\r\n\t);\r\n\tdata = moveIndividualPreference(\r\n\t\tdata,\r\n\t\t{ from: 'core/edit-post', to: 'core/edit-post' },\r\n\t\t'editorMode'\r\n\t);\r\n\tdata = moveIndividualPreference(\r\n\t\tdata,\r\n\t\t{ from: 'core/edit-post', to: 'core/edit-post' },\r\n\t\t'panels',\r\n\t\tconvertEditPostPanels\r\n\t);\r\n\tdata = moveIndividualPreference(\r\n\t\tdata,\r\n\t\t{ from: 'core/editor', to: 'core' },\r\n\t\t'isPublishSidebarEnabled'\r\n\t);\r\n\tdata = moveIndividualPreference(\r\n\t\tdata,\r\n\t\t{ from: 'core/edit-post', to: 'core' },\r\n\t\t'isPublishSidebarEnabled'\r\n\t);\r\n\tdata = moveIndividualPreference(\r\n\t\tdata,\r\n\t\t{ from: 'core/edit-site', to: 'core/edit-site' },\r\n\t\t'editorMode'\r\n\t);\r\n\r\n\t// The new system is only concerned with persisting\r\n\t// 'core/preferences' preferences reducer, so only return that.\r\n\treturn data?.[ 'core/preferences' ]?.preferences;\r\n}\r\n\r\n/**\r\n * Gets the legacy local storage data for the given user and returns the\r\n * data converted to the new format.\r\n *\r\n * @param {string | number} userId The user id.\r\n *\r\n * @return {Object | undefined} The converted data or undefined if no local\r\n *                              storage data could be found.\r\n */\r\nexport default function convertLegacyLocalStorageData( userId ) {\r\n\tconst data = getLegacyData( userId );\r\n\treturn convertLegacyData( data );\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,sBAAsB,MAAM,4BAA4B;AAC/D,OAAOC,gCAAgC,MAAM,wCAAwC;AACrF,OAAOC,wBAAwB,MAAM,8BAA8B;AACnE,OAAOC,wBAAwB,MAAM,+BAA+B;AACpE,OAAOC,qBAAqB,MAAM,4BAA4B;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAAEC,MAAM,EAAG;EAChC,MAAMC,GAAG,GAAI,gBAAgBD,MAAQ,EAAC;EACtC,MAAME,YAAY,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAEJ,GAAI,CAAC;EACvD,OAAOK,IAAI,CAACC,KAAK,CAAEL,YAAa,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASM,iBAAiBA,CAAEC,IAAI,EAAG;EACzC,IAAK,CAAEA,IAAI,EAAG;IACb;EACD;;EAEA;EACA;EACAA,IAAI,GAAGf,sBAAsB,CAAEe,IAAI,EAAE,mBAAoB,CAAC;EAC1DA,IAAI,GAAGf,sBAAsB,CAAEe,IAAI,EAAE,wBAAyB,CAAC;EAC/DA,IAAI,GAAGf,sBAAsB,CAAEe,IAAI,EAAE,gBAAiB,CAAC;EACvDA,IAAI,GAAGf,sBAAsB,CAAEe,IAAI,EAAE,gBAAiB,CAAC;;EAEvD;EACA;EACAA,IAAI,GAAGd,gCAAgC,CAAEc,IAAK,CAAC;;EAE/C;EACA;EACAA,IAAI,GAAGZ,wBAAwB,CAAEY,IAAK,CAAC;;EAEvC;EACA;EACAA,IAAI,GAAGb,wBAAwB,CAC9Ba,IAAI,EACJ;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,EAAE,EAAE;EAAiB,CAAC,EAChD,kBACD,CAAC;EACDF,IAAI,GAAGb,wBAAwB,CAC9Ba,IAAI,EACJ;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,EAAE,EAAE;EAAiB,CAAC,EAChD,YACD,CAAC;EACDF,IAAI,GAAGb,wBAAwB,CAC9Ba,IAAI,EACJ;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,EAAE,EAAE;EAAiB,CAAC,EAChD,QAAQ,EACRb,qBACD,CAAC;EACDW,IAAI,GAAGb,wBAAwB,CAC9Ba,IAAI,EACJ;IAAEC,IAAI,EAAE,aAAa;IAAEC,EAAE,EAAE;EAAO,CAAC,EACnC,yBACD,CAAC;EACDF,IAAI,GAAGb,wBAAwB,CAC9Ba,IAAI,EACJ;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,EAAE,EAAE;EAAO,CAAC,EACtC,yBACD,CAAC;EACDF,IAAI,GAAGb,wBAAwB,CAC9Ba,IAAI,EACJ;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,EAAE,EAAE;EAAiB,CAAC,EAChD,YACD,CAAC;;EAED;EACA;EACA,OAAOF,IAAI,GAAI,kBAAkB,CAAE,EAAEG,WAAW;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,6BAA6BA,CAAEb,MAAM,EAAG;EAC/D,MAAMS,IAAI,GAAGV,aAAa,CAAEC,MAAO,CAAC;EACpC,OAAOQ,iBAAiB,CAAEC,IAAK,CAAC;AACjC","ignoreList":[]}