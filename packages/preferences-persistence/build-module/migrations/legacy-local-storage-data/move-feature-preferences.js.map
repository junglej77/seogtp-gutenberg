{"version":3,"names":["moveFeaturePreferences","state","sourceStoreName","preferencesStoreName","interfaceStoreName","interfaceFeatures","preferences","features","sourceFeatures","featuresToMigrate","existingPreferences","updatedInterfaceState","otherInterfaceState","otherInterfaceScopes","undefined","updatedSourceState","otherSourceState","sourcePreferences"],"sources":["@wordpress/preferences-persistence/src/migrations/legacy-local-storage-data/move-feature-preferences.js"],"sourcesContent":["/**\r\n * Move the 'features' object in local storage from the sourceStoreName to the\r\n * preferences store data structure.\r\n *\r\n * Previously, editors used a data structure like this for feature preferences:\r\n * ```js\r\n * {\r\n *     'core/edit-post': {\r\n *         preferences: {\r\n *             features; {\r\n *                 topToolbar: true,\r\n *                 // ... other boolean 'feature' preferences\r\n *             },\r\n *         },\r\n *     },\r\n * }\r\n * ```\r\n *\r\n * And for a while these feature preferences lived in the interface package:\r\n * ```js\r\n * {\r\n *     'core/interface': {\r\n *         preferences: {\r\n *             features: {\r\n *                 'core/edit-post': {\r\n *                     topToolbar: true\r\n *                 }\r\n *             }\r\n *         }\r\n *     }\r\n * }\r\n * ```\r\n *\r\n * In the preferences store, 'features' aren't considered special, they're\r\n * merged to the root level of the scope along with other preferences:\r\n * ```js\r\n * {\r\n *     'core/preferences': {\r\n *         preferences: {\r\n *             'core/edit-post': {\r\n *                 topToolbar: true,\r\n *                 // ... any other preferences.\r\n *             }\r\n *         }\r\n *     }\r\n * }\r\n * ```\r\n *\r\n * This function handles moving from either the source store or the interface\r\n * store to the preferences data structure.\r\n *\r\n * @param {Object} state           The state before migration.\r\n * @param {string} sourceStoreName The name of the store that has persisted\r\n *                                 preferences to migrate to the preferences\r\n *                                 package.\r\n * @return {Object} The migrated state\r\n */\r\nexport default function moveFeaturePreferences( state, sourceStoreName ) {\r\n\tconst preferencesStoreName = 'core/preferences';\r\n\tconst interfaceStoreName = 'core/interface';\r\n\r\n\t// Features most recently (and briefly) lived in the interface package.\r\n\t// If data exists there, prioritize using that for the migration. If not\r\n\t// also check the original package as the user may have updated from an\r\n\t// older block editor version.\r\n\tconst interfaceFeatures =\r\n\t\tstate?.[ interfaceStoreName ]?.preferences?.features?.[\r\n\t\t\tsourceStoreName\r\n\t\t];\r\n\tconst sourceFeatures = state?.[ sourceStoreName ]?.preferences?.features;\r\n\tconst featuresToMigrate = interfaceFeatures\r\n\t\t? interfaceFeatures\r\n\t\t: sourceFeatures;\r\n\r\n\tif ( ! featuresToMigrate ) {\r\n\t\treturn state;\r\n\t}\r\n\r\n\tconst existingPreferences = state?.[ preferencesStoreName ]?.preferences;\r\n\r\n\t// Avoid migrating features again if they've previously been migrated.\r\n\tif ( existingPreferences?.[ sourceStoreName ] ) {\r\n\t\treturn state;\r\n\t}\r\n\r\n\tlet updatedInterfaceState;\r\n\tif ( interfaceFeatures ) {\r\n\t\tconst otherInterfaceState = state?.[ interfaceStoreName ];\r\n\t\tconst otherInterfaceScopes =\r\n\t\t\tstate?.[ interfaceStoreName ]?.preferences?.features;\r\n\r\n\t\tupdatedInterfaceState = {\r\n\t\t\t[ interfaceStoreName ]: {\r\n\t\t\t\t...otherInterfaceState,\r\n\t\t\t\tpreferences: {\r\n\t\t\t\t\tfeatures: {\r\n\t\t\t\t\t\t...otherInterfaceScopes,\r\n\t\t\t\t\t\t[ sourceStoreName ]: undefined,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\tlet updatedSourceState;\r\n\tif ( sourceFeatures ) {\r\n\t\tconst otherSourceState = state?.[ sourceStoreName ];\r\n\t\tconst sourcePreferences = state?.[ sourceStoreName ]?.preferences;\r\n\r\n\t\tupdatedSourceState = {\r\n\t\t\t[ sourceStoreName ]: {\r\n\t\t\t\t...otherSourceState,\r\n\t\t\t\tpreferences: {\r\n\t\t\t\t\t...sourcePreferences,\r\n\t\t\t\t\tfeatures: undefined,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\t// Set the feature values in the interface store, the features\r\n\t// object is keyed by 'scope', which matches the store name for\r\n\t// the source.\r\n\treturn {\r\n\t\t...state,\r\n\t\t[ preferencesStoreName ]: {\r\n\t\t\tpreferences: {\r\n\t\t\t\t...existingPreferences,\r\n\t\t\t\t[ sourceStoreName ]: featuresToMigrate,\r\n\t\t\t},\r\n\t\t},\r\n\t\t...updatedInterfaceState,\r\n\t\t...updatedSourceState,\r\n\t};\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,sBAAsBA,CAAEC,KAAK,EAAEC,eAAe,EAAG;EACxE,MAAMC,oBAAoB,GAAG,kBAAkB;EAC/C,MAAMC,kBAAkB,GAAG,gBAAgB;;EAE3C;EACA;EACA;EACA;EACA,MAAMC,iBAAiB,GACtBJ,KAAK,GAAIG,kBAAkB,CAAE,EAAEE,WAAW,EAAEC,QAAQ,GACnDL,eAAe,CACf;EACF,MAAMM,cAAc,GAAGP,KAAK,GAAIC,eAAe,CAAE,EAAEI,WAAW,EAAEC,QAAQ;EACxE,MAAME,iBAAiB,GAAGJ,iBAAiB,GACxCA,iBAAiB,GACjBG,cAAc;EAEjB,IAAK,CAAEC,iBAAiB,EAAG;IAC1B,OAAOR,KAAK;EACb;EAEA,MAAMS,mBAAmB,GAAGT,KAAK,GAAIE,oBAAoB,CAAE,EAAEG,WAAW;;EAExE;EACA,IAAKI,mBAAmB,GAAIR,eAAe,CAAE,EAAG;IAC/C,OAAOD,KAAK;EACb;EAEA,IAAIU,qBAAqB;EACzB,IAAKN,iBAAiB,EAAG;IACxB,MAAMO,mBAAmB,GAAGX,KAAK,GAAIG,kBAAkB,CAAE;IACzD,MAAMS,oBAAoB,GACzBZ,KAAK,GAAIG,kBAAkB,CAAE,EAAEE,WAAW,EAAEC,QAAQ;IAErDI,qBAAqB,GAAG;MACvB,CAAEP,kBAAkB,GAAI;QACvB,GAAGQ,mBAAmB;QACtBN,WAAW,EAAE;UACZC,QAAQ,EAAE;YACT,GAAGM,oBAAoB;YACvB,CAAEX,eAAe,GAAIY;UACtB;QACD;MACD;IACD,CAAC;EACF;EAEA,IAAIC,kBAAkB;EACtB,IAAKP,cAAc,EAAG;IACrB,MAAMQ,gBAAgB,GAAGf,KAAK,GAAIC,eAAe,CAAE;IACnD,MAAMe,iBAAiB,GAAGhB,KAAK,GAAIC,eAAe,CAAE,EAAEI,WAAW;IAEjES,kBAAkB,GAAG;MACpB,CAAEb,eAAe,GAAI;QACpB,GAAGc,gBAAgB;QACnBV,WAAW,EAAE;UACZ,GAAGW,iBAAiB;UACpBV,QAAQ,EAAEO;QACX;MACD;IACD,CAAC;EACF;;EAEA;EACA;EACA;EACA,OAAO;IACN,GAAGb,KAAK;IACR,CAAEE,oBAAoB,GAAI;MACzBG,WAAW,EAAE;QACZ,GAAGI,mBAAmB;QACtB,CAAER,eAAe,GAAIO;MACtB;IACD,CAAC;IACD,GAAGE,qBAAqB;IACxB,GAAGI;EACJ,CAAC;AACF","ignoreList":[]}