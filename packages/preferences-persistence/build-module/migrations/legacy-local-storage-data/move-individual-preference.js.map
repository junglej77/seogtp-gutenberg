{"version":3,"names":["identity","arg","moveIndividualPreferenceToPreferences","state","from","sourceStoreName","to","scope","key","convert","preferencesStoreName","sourcePreference","preferences","undefined","targetPreference","otherScopes","otherPreferences","otherSourceState","allSourcePreferences","convertedPreferences"],"sources":["@wordpress/preferences-persistence/src/migrations/legacy-local-storage-data/move-individual-preference.js"],"sourcesContent":["const identity = ( arg ) => arg;\r\n\r\n/**\r\n * Migrates an individual item inside the `preferences` object for a package's store.\r\n *\r\n * Previously, some packages had individual 'preferences' of any data type, and many used\r\n * complex nested data structures. For example:\r\n * ```js\r\n * {\r\n *     'core/edit-post': {\r\n *         preferences: {\r\n *             panels: {\r\n *                 publish: {\r\n *                     opened: true,\r\n *                     enabled: true,\r\n *                 }\r\n *             },\r\n *             // ...other preferences.\r\n *         },\r\n *     },\r\n * }\r\n *\r\n * This function supports moving an individual preference like 'panels' above into the\r\n * preferences package data structure.\r\n *\r\n * It supports moving a preference to a particular scope in the preferences store and\r\n * optionally converting the data using a `convert` function.\r\n *\r\n * ```\r\n *\r\n * @param {Object}    state        The original state.\r\n * @param {Object}    migrate      An options object that contains details of the migration.\r\n * @param {string}    migrate.from The name of the store to migrate from.\r\n * @param {string}    migrate.to   The scope in the preferences store to migrate to.\r\n * @param {string}    key          The key in the preferences object to migrate.\r\n * @param {?Function} convert      A function that converts preferences from one format to another.\r\n */\r\nexport default function moveIndividualPreferenceToPreferences(\r\n\tstate,\r\n\t{ from: sourceStoreName, to: scope },\r\n\tkey,\r\n\tconvert = identity\r\n) {\r\n\tconst preferencesStoreName = 'core/preferences';\r\n\tconst sourcePreference = state?.[ sourceStoreName ]?.preferences?.[ key ];\r\n\r\n\t// There's nothing to migrate, exit early.\r\n\tif ( sourcePreference === undefined ) {\r\n\t\treturn state;\r\n\t}\r\n\r\n\tconst targetPreference =\r\n\t\tstate?.[ preferencesStoreName ]?.preferences?.[ scope ]?.[ key ];\r\n\r\n\t// There's existing data at the target, so don't overwrite it, exit early.\r\n\tif ( targetPreference ) {\r\n\t\treturn state;\r\n\t}\r\n\r\n\tconst otherScopes = state?.[ preferencesStoreName ]?.preferences;\r\n\tconst otherPreferences =\r\n\t\tstate?.[ preferencesStoreName ]?.preferences?.[ scope ];\r\n\r\n\tconst otherSourceState = state?.[ sourceStoreName ];\r\n\tconst allSourcePreferences = state?.[ sourceStoreName ]?.preferences;\r\n\r\n\t// Pass an object with the key and value as this allows the convert\r\n\t// function to convert to a data structure that has different keys.\r\n\tconst convertedPreferences = convert( { [ key ]: sourcePreference } );\r\n\r\n\treturn {\r\n\t\t...state,\r\n\t\t[ preferencesStoreName ]: {\r\n\t\t\tpreferences: {\r\n\t\t\t\t...otherScopes,\r\n\t\t\t\t[ scope ]: {\r\n\t\t\t\t\t...otherPreferences,\r\n\t\t\t\t\t...convertedPreferences,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\t[ sourceStoreName ]: {\r\n\t\t\t...otherSourceState,\r\n\t\t\tpreferences: {\r\n\t\t\t\t...allSourcePreferences,\r\n\t\t\t\t[ key ]: undefined,\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n}\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAKC,GAAG,IAAMA,GAAG;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,qCAAqCA,CAC5DC,KAAK,EACL;EAAEC,IAAI,EAAEC,eAAe;EAAEC,EAAE,EAAEC;AAAM,CAAC,EACpCC,GAAG,EACHC,OAAO,GAAGT,QAAQ,EACjB;EACD,MAAMU,oBAAoB,GAAG,kBAAkB;EAC/C,MAAMC,gBAAgB,GAAGR,KAAK,GAAIE,eAAe,CAAE,EAAEO,WAAW,GAAIJ,GAAG,CAAE;;EAEzE;EACA,IAAKG,gBAAgB,KAAKE,SAAS,EAAG;IACrC,OAAOV,KAAK;EACb;EAEA,MAAMW,gBAAgB,GACrBX,KAAK,GAAIO,oBAAoB,CAAE,EAAEE,WAAW,GAAIL,KAAK,CAAE,GAAIC,GAAG,CAAE;;EAEjE;EACA,IAAKM,gBAAgB,EAAG;IACvB,OAAOX,KAAK;EACb;EAEA,MAAMY,WAAW,GAAGZ,KAAK,GAAIO,oBAAoB,CAAE,EAAEE,WAAW;EAChE,MAAMI,gBAAgB,GACrBb,KAAK,GAAIO,oBAAoB,CAAE,EAAEE,WAAW,GAAIL,KAAK,CAAE;EAExD,MAAMU,gBAAgB,GAAGd,KAAK,GAAIE,eAAe,CAAE;EACnD,MAAMa,oBAAoB,GAAGf,KAAK,GAAIE,eAAe,CAAE,EAAEO,WAAW;;EAEpE;EACA;EACA,MAAMO,oBAAoB,GAAGV,OAAO,CAAE;IAAE,CAAED,GAAG,GAAIG;EAAiB,CAAE,CAAC;EAErE,OAAO;IACN,GAAGR,KAAK;IACR,CAAEO,oBAAoB,GAAI;MACzBE,WAAW,EAAE;QACZ,GAAGG,WAAW;QACd,CAAER,KAAK,GAAI;UACV,GAAGS,gBAAgB;UACnB,GAAGG;QACJ;MACD;IACD,CAAC;IACD,CAAEd,eAAe,GAAI;MACpB,GAAGY,gBAAgB;MACnBL,WAAW,EAAE;QACZ,GAAGM,oBAAoB;QACvB,CAAEV,GAAG,GAAIK;MACV;IACD;EACD,CAAC;AACF","ignoreList":[]}