{"version":3,"names":["convertComplementaryAreas","state","Object","keys","reduce","stateAccumulator","scope","scopeData","complementaryArea","updatedScopeData","isComplementaryAreaVisible"],"sources":["@wordpress/preferences-persistence/src/migrations/preferences-package-data/convert-complementary-areas.js"],"sourcesContent":["export default function convertComplementaryAreas( state ) {\r\n\treturn Object.keys( state ).reduce( ( stateAccumulator, scope ) => {\r\n\t\tconst scopeData = state[ scope ];\r\n\r\n\t\t// If a complementary area is truthy, convert it to the `isComplementaryAreaVisible` boolean.\r\n\t\tif ( scopeData?.complementaryArea ) {\r\n\t\t\tconst updatedScopeData = { ...scopeData };\r\n\t\t\tdelete updatedScopeData.complementaryArea;\r\n\t\t\tupdatedScopeData.isComplementaryAreaVisible = true;\r\n\t\t\tstateAccumulator[ scope ] = updatedScopeData;\r\n\t\t\treturn stateAccumulator;\r\n\t\t}\r\n\r\n\t\treturn stateAccumulator;\r\n\t}, state );\r\n}\r\n"],"mappings":"AAAA,eAAe,SAASA,yBAAyBA,CAAEC,KAAK,EAAG;EAC1D,OAAOC,MAAM,CAACC,IAAI,CAAEF,KAAM,CAAC,CAACG,MAAM,CAAE,CAAEC,gBAAgB,EAAEC,KAAK,KAAM;IAClE,MAAMC,SAAS,GAAGN,KAAK,CAAEK,KAAK,CAAE;;IAEhC;IACA,IAAKC,SAAS,EAAEC,iBAAiB,EAAG;MACnC,MAAMC,gBAAgB,GAAG;QAAE,GAAGF;MAAU,CAAC;MACzC,OAAOE,gBAAgB,CAACD,iBAAiB;MACzCC,gBAAgB,CAACC,0BAA0B,GAAG,IAAI;MAClDL,gBAAgB,CAAEC,KAAK,CAAE,GAAGG,gBAAgB;MAC5C,OAAOJ,gBAAgB;IACxB;IAEA,OAAOA,gBAAgB;EACxB,CAAC,EAAEJ,KAAM,CAAC;AACX","ignoreList":[]}