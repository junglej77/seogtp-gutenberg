{"version":3,"names":["combineReducers","defaults","state","action","type","scope","values","withPersistenceLayer","reducer","persistenceLayer","persistence","persistedData","nextState","set","preferences","name","value"],"sources":["@wordpress/preferences/src/store/reducer.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { combineReducers } from '@wordpress/data';\r\n\r\n/**\r\n * Reducer returning the defaults for user preferences.\r\n *\r\n * This is kept intentionally separate from the preferences\r\n * themselves so that defaults are not persisted.\r\n *\r\n * @param {Object} state  Current state.\r\n * @param {Object} action Dispatched action.\r\n *\r\n * @return {Object} Updated state.\r\n */\r\nexport function defaults( state = {}, action ) {\r\n\tif ( action.type === 'SET_PREFERENCE_DEFAULTS' ) {\r\n\t\tconst { scope, defaults: values } = action;\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\t[ scope ]: {\r\n\t\t\t\t...state[ scope ],\r\n\t\t\t\t...values,\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\treturn state;\r\n}\r\n\r\n/**\r\n * Higher order reducer that does the following:\r\n * - Merges any data from the persistence layer into the state when the\r\n *   `SET_PERSISTENCE_LAYER` action is received.\r\n * - Passes any preferences changes to the persistence layer.\r\n *\r\n * @param {Function} reducer The preferences reducer.\r\n *\r\n * @return {Function} The enhanced reducer.\r\n */\r\nfunction withPersistenceLayer( reducer ) {\r\n\tlet persistenceLayer;\r\n\r\n\treturn ( state, action ) => {\r\n\t\t// Setup the persistence layer, and return the persisted data\r\n\t\t// as the state.\r\n\t\tif ( action.type === 'SET_PERSISTENCE_LAYER' ) {\r\n\t\t\tconst { persistenceLayer: persistence, persistedData } = action;\r\n\t\t\tpersistenceLayer = persistence;\r\n\t\t\treturn persistedData;\r\n\t\t}\r\n\r\n\t\tconst nextState = reducer( state, action );\r\n\t\tif ( action.type === 'SET_PREFERENCE_VALUE' ) {\r\n\t\t\tpersistenceLayer?.set( nextState );\r\n\t\t}\r\n\r\n\t\treturn nextState;\r\n\t};\r\n}\r\n\r\n/**\r\n * Reducer returning the user preferences.\r\n *\r\n * @param {Object} state  Current state.\r\n * @param {Object} action Dispatched action.\r\n *\r\n * @return {Object} Updated state.\r\n */\r\nexport const preferences = withPersistenceLayer( ( state = {}, action ) => {\r\n\tif ( action.type === 'SET_PREFERENCE_VALUE' ) {\r\n\t\tconst { scope, name, value } = action;\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\t[ scope ]: {\r\n\t\t\t\t...state[ scope ],\r\n\t\t\t\t[ name ]: value,\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\treturn state;\r\n} );\r\n\r\nexport default combineReducers( {\r\n\tdefaults,\r\n\tpreferences,\r\n} );\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,eAAe,QAAQ,iBAAiB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAAEC,KAAK,GAAG,CAAC,CAAC,EAAEC,MAAM,EAAG;EAC9C,IAAKA,MAAM,CAACC,IAAI,KAAK,yBAAyB,EAAG;IAChD,MAAM;MAAEC,KAAK;MAAEJ,QAAQ,EAAEK;IAAO,CAAC,GAAGH,MAAM;IAC1C,OAAO;MACN,GAAGD,KAAK;MACR,CAAEG,KAAK,GAAI;QACV,GAAGH,KAAK,CAAEG,KAAK,CAAE;QACjB,GAAGC;MACJ;IACD,CAAC;EACF;EAEA,OAAOJ,KAAK;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,oBAAoBA,CAAEC,OAAO,EAAG;EACxC,IAAIC,gBAAgB;EAEpB,OAAO,CAAEP,KAAK,EAAEC,MAAM,KAAM;IAC3B;IACA;IACA,IAAKA,MAAM,CAACC,IAAI,KAAK,uBAAuB,EAAG;MAC9C,MAAM;QAAEK,gBAAgB,EAAEC,WAAW;QAAEC;MAAc,CAAC,GAAGR,MAAM;MAC/DM,gBAAgB,GAAGC,WAAW;MAC9B,OAAOC,aAAa;IACrB;IAEA,MAAMC,SAAS,GAAGJ,OAAO,CAAEN,KAAK,EAAEC,MAAO,CAAC;IAC1C,IAAKA,MAAM,CAACC,IAAI,KAAK,sBAAsB,EAAG;MAC7CK,gBAAgB,EAAEI,GAAG,CAAED,SAAU,CAAC;IACnC;IAEA,OAAOA,SAAS;EACjB,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,WAAW,GAAGP,oBAAoB,CAAE,CAAEL,KAAK,GAAG,CAAC,CAAC,EAAEC,MAAM,KAAM;EAC1E,IAAKA,MAAM,CAACC,IAAI,KAAK,sBAAsB,EAAG;IAC7C,MAAM;MAAEC,KAAK;MAAEU,IAAI;MAAEC;IAAM,CAAC,GAAGb,MAAM;IACrC,OAAO;MACN,GAAGD,KAAK;MACR,CAAEG,KAAK,GAAI;QACV,GAAGH,KAAK,CAAEG,KAAK,CAAE;QACjB,CAAEU,IAAI,GAAIC;MACX;IACD,CAAC;EACF;EAEA,OAAOd,KAAK;AACb,CAAE,CAAC;AAEH,eAAeF,eAAe,CAAE;EAC/BC,QAAQ;EACRa;AACD,CAAE,CAAC","ignoreList":[]}