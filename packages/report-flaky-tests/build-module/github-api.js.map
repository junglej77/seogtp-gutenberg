{"version":3,"names":["getOctokit","GitHubAPI","octokit","repo","constructor","token","fetchAllIssuesLabeledFlaky","label","issues","paginate","rest","listForRepo","state","labels","findMergeBaseCommit","baseCommit","headCommit","data","repos","compareCommits","base","head","per_page","merge_base_commit","commit","updateIssue","params","update","createIssue","create","createCommentOnCommit","sha","body","isReportComment","comments","listCommentsForCommit","commit_sha","reportComment","find","comment","updateCommitComment","comment_id","id","createCommitComment","createCommentOnPR","prNumber","page","listComments","issue_number","length","updateComment","createComment"],"sources":["@wordpress/report-flaky-tests/src/github-api.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport { getOctokit } from '@actions/github';\r\nimport type { GitHub } from '@actions/github/lib/utils';\r\nimport type { Endpoints } from '@octokit/types';\r\n\r\ntype Octokit = InstanceType< typeof GitHub >;\r\n\r\ntype Repo = {\r\n\towner: string;\r\n\trepo: string;\r\n};\r\n\r\nclass GitHubAPI {\r\n\t#octokit: Octokit;\r\n\t#repo: Repo;\r\n\r\n\tconstructor( token: string, repo: Repo ) {\r\n\t\tthis.#octokit = getOctokit( token );\r\n\t\tthis.#repo = repo;\r\n\t}\r\n\r\n\tasync fetchAllIssuesLabeledFlaky( label: string ) {\r\n\t\tconst issues = await this.#octokit.paginate(\r\n\t\t\tthis.#octokit.rest.issues.listForRepo,\r\n\t\t\t{\r\n\t\t\t\t...this.#repo,\r\n\t\t\t\tstate: 'all',\r\n\t\t\t\tlabels: label,\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn issues;\r\n\t}\r\n\r\n\tasync findMergeBaseCommit( baseCommit: string, headCommit: string ) {\r\n\t\tconst { data } = await this.#octokit.rest.repos.compareCommits( {\r\n\t\t\t...this.#repo,\r\n\t\t\tbase: baseCommit,\r\n\t\t\thead: headCommit,\r\n\t\t\tper_page: 1,\r\n\t\t} );\r\n\r\n\t\treturn data.merge_base_commit.commit;\r\n\t}\r\n\r\n\tasync updateIssue(\r\n\t\tparams: Omit<\r\n\t\t\tEndpoints[ 'PATCH /repos/{owner}/{repo}/issues/{issue_number}' ][ 'parameters' ],\r\n\t\t\tkeyof Repo\r\n\t\t>\r\n\t) {\r\n\t\tconst { data } = await this.#octokit.rest.issues.update( {\r\n\t\t\t...this.#repo,\r\n\t\t\t...params,\r\n\t\t} );\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tasync createIssue(\r\n\t\tparams: Omit<\r\n\t\t\tEndpoints[ 'POST /repos/{owner}/{repo}/issues' ][ 'parameters' ],\r\n\t\t\tkeyof Repo\r\n\t\t>\r\n\t) {\r\n\t\tconst { data } = await this.#octokit.rest.issues.create( {\r\n\t\t\t...this.#repo,\r\n\t\t\t...params,\r\n\t\t} );\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tasync createCommentOnCommit(\r\n\t\tsha: string,\r\n\t\tbody: string,\r\n\t\tisReportComment: ( body: string ) => boolean\r\n\t) {\r\n\t\tconst { data: comments } =\r\n\t\t\tawait this.#octokit.rest.repos.listCommentsForCommit( {\r\n\t\t\t\t...this.#repo,\r\n\t\t\t\tcommit_sha: sha,\r\n\t\t\t} );\r\n\t\tconst reportComment = comments.find( ( comment ) =>\r\n\t\t\tisReportComment( comment.body )\r\n\t\t);\r\n\r\n\t\tif ( reportComment ) {\r\n\t\t\tconst { data } = await this.#octokit.rest.repos.updateCommitComment(\r\n\t\t\t\t{\r\n\t\t\t\t\t...this.#repo,\r\n\t\t\t\t\tcomment_id: reportComment.id,\r\n\t\t\t\t\tbody,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tconst { data } = await this.#octokit.rest.repos.createCommitComment( {\r\n\t\t\t...this.#repo,\r\n\t\t\tcommit_sha: sha,\r\n\t\t\tbody,\r\n\t\t} );\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tasync createCommentOnPR(\r\n\t\tprNumber: number,\r\n\t\tbody: string,\r\n\t\tisReportComment: ( body: string ) => boolean\r\n\t) {\r\n\t\tlet reportComment;\r\n\t\tlet page = 1;\r\n\r\n\t\twhile ( ! reportComment ) {\r\n\t\t\tconst { data: comments } =\r\n\t\t\t\tawait this.#octokit.rest.issues.listComments( {\r\n\t\t\t\t\t...this.#repo,\r\n\t\t\t\t\tissue_number: prNumber,\r\n\t\t\t\t\tpage,\r\n\t\t\t\t} );\r\n\t\t\treportComment = comments.find(\r\n\t\t\t\t( comment ) => comment.body && isReportComment( comment.body )\r\n\t\t\t);\r\n\t\t\tif ( comments.length > 0 ) {\r\n\t\t\t\tpage += 1;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( reportComment ) {\r\n\t\t\tconst { data } = await this.#octokit.rest.issues.updateComment( {\r\n\t\t\t\t...this.#repo,\r\n\t\t\t\tcomment_id: reportComment.id,\r\n\t\t\t\tbody,\r\n\t\t\t} );\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\tconst { data } = await this.#octokit.rest.issues.createComment( {\r\n\t\t\t...this.#repo,\r\n\t\t\tissue_number: prNumber,\r\n\t\t\tbody,\r\n\t\t} );\r\n\r\n\t\treturn data;\r\n\t}\r\n}\r\n\r\nexport { GitHubAPI };\r\n"],"mappings":"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","ignoreList":[]}