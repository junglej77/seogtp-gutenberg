{"version":3,"names":["github","core","fs","path","GitHubAPI","renderIssueBody","formatTestErrorMessage","formatTestResults","parseIssueBody","renderCommitComment","isReportComment","run","token","getInput","required","artifactPath","runId","runID","repo","ref","context","runURL","owner","api","flakyTestsDir","readdir","flakyTests","Promise","all","map","filename","readFile","join","then","text","JSON","parse","length","isPR","eventName","headBranch","payload","pull_request","head","replace","label","issues","fetchAllIssuesLabeledFlaky","reportedIssues","flakyTest","title","testTitle","issueTitle","getIssueTitle","reportedIssue","find","issue","testPath","startsWith","process","cwd","slice","currentFormattedTestResults","date","Date","failedTimes","results","errorMessage","body","closed_at","latestAncestorCommit","findMergeBaseCommit","sha","latestAncestorDate","committer","error","Error","String","meta","testResults","prevTestResults","formattedTestResults","testResult","undefined","updateIssue","issue_number","number","state","createIssue","labels","push","issueNumber","issueUrl","html_url","info","commentUrl","createCommentOnPR","commitSHA","createCommentOnCommit"],"sources":["@wordpress/report-flaky-tests/src/run.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport * as github from '@actions/github';\r\nimport * as core from '@actions/core';\r\nimport * as fs from 'fs/promises';\r\nimport * as path from 'path';\r\nimport type { PullRequestEvent } from '@octokit/webhooks-types';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { GitHubAPI } from './github-api';\r\nimport {\r\n\trenderIssueBody,\r\n\tformatTestErrorMessage,\r\n\tformatTestResults,\r\n\tparseIssueBody,\r\n\trenderCommitComment,\r\n\tisReportComment,\r\n} from './markdown';\r\nimport type { ReportedIssue } from './types';\r\n\r\nasync function run() {\r\n\tconst token = core.getInput( 'repo-token', { required: true } );\r\n\tconst artifactPath = core.getInput( 'artifact-path', {\r\n\t\trequired: true,\r\n\t} );\r\n\r\n\tconst { runId: runID, repo, ref } = github.context;\r\n\tconst runURL = `https://github.com/${ repo.owner }/${ repo.repo }/actions/runs/${ runID }`;\r\n\tconst api = new GitHubAPI( token, repo );\r\n\r\n\tconst flakyTestsDir = await fs.readdir( artifactPath );\r\n\tconst flakyTests = await Promise.all(\r\n\t\tflakyTestsDir.map( ( filename ) =>\r\n\t\t\tfs\r\n\t\t\t\t.readFile( path.join( artifactPath, filename ), 'utf-8' )\r\n\t\t\t\t.then( ( text ) => JSON.parse( text ) )\r\n\t\t)\r\n\t);\r\n\r\n\tif ( ! flakyTests || flakyTests.length === 0 ) {\r\n\t\t// No flaky tests reported in this run.\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst isPR = github.context.eventName === 'pull_request';\r\n\tconst headBranch = isPR\r\n\t\t? // Cast the payload type: https://github.com/actions/toolkit/tree/main/packages/github#webhook-payload-typescript-definitions\r\n\t\t  ( github.context.payload as PullRequestEvent ).pull_request.head.ref\r\n\t\t: ref.replace( /^refs\\/(heads|tag)\\//, '' );\r\n\r\n\tconst label = core.getInput( 'label', { required: true } );\r\n\tconst issues = await api.fetchAllIssuesLabeledFlaky( label );\r\n\tconst reportedIssues: ReportedIssue[] = [];\r\n\r\n\tfor ( const flakyTest of flakyTests ) {\r\n\t\tconst { title: testTitle } = flakyTest;\r\n\t\tconst issueTitle = getIssueTitle( testTitle );\r\n\t\tconst reportedIssue = issues.find(\r\n\t\t\t( issue ) => issue.title === issueTitle\r\n\t\t);\r\n\t\tconst testPath = flakyTest.path.startsWith( process.cwd() )\r\n\t\t\t? flakyTest.path.slice( process.cwd().length )\r\n\t\t\t: flakyTest.path;\r\n\t\tlet issue;\r\n\r\n\t\tconst currentFormattedTestResults = formatTestResults( {\r\n\t\t\tdate: new Date(),\r\n\t\t\tfailedTimes: flakyTest.results.length,\r\n\t\t\theadBranch,\r\n\t\t\trunURL,\r\n\t\t\t// Always output the latest test results' stacks.\r\n\t\t\terrorMessage: formatTestErrorMessage( flakyTest ),\r\n\t\t} );\r\n\r\n\t\tif ( reportedIssue ) {\r\n\t\t\tconst body = reportedIssue.body!;\r\n\r\n\t\t\t// The issue is closed.\r\n\t\t\tif ( reportedIssue.closed_at ) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// Represent the latest base commit on trunk.\r\n\t\t\t\t\tconst latestAncestorCommit = await api.findMergeBaseCommit(\r\n\t\t\t\t\t\t'trunk',\r\n\t\t\t\t\t\tgithub.context.sha\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst latestAncestorDate =\r\n\t\t\t\t\t\tlatestAncestorCommit.committer?.date;\r\n\r\n\t\t\t\t\t// Cannot find the commit date, skipping.\r\n\t\t\t\t\tif ( ! latestAncestorDate ) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// The issue is closed after the latest base commit on trunk,\r\n\t\t\t\t\t// which means the branch/PR/commit is outdated and the flaky test\r\n\t\t\t\t\t// has probably already been fixed. Skip reporting the outdated flaky tests.\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tnew Date( reportedIssue.closed_at ) >=\r\n\t\t\t\t\t\tnew Date( latestAncestorDate )\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch ( error ) {\r\n\t\t\t\t\t// It might be a deleted commit or something else.\r\n\t\t\t\t\tcore.error(\r\n\t\t\t\t\t\terror instanceof Error ? error : String( error )\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst { meta, testResults: prevTestResults } =\r\n\t\t\t\tparseIssueBody( body );\r\n\r\n\t\t\t// Concat the test results list with the latest test results.\r\n\t\t\tconst formattedTestResults = [\r\n\t\t\t\t...prevTestResults.map( ( testResult ) =>\r\n\t\t\t\t\tformatTestResults( {\r\n\t\t\t\t\t\t...testResult,\r\n\t\t\t\t\t\t// Don't output previous test results' stacks.\r\n\t\t\t\t\t\terrorMessage: undefined,\r\n\t\t\t\t\t} )\r\n\t\t\t\t),\r\n\t\t\t\tcurrentFormattedTestResults,\r\n\t\t\t].join( '\\n<br/>\\n' );\r\n\r\n\t\t\tissue = await api.updateIssue( {\r\n\t\t\t\tissue_number: reportedIssue.number,\r\n\t\t\t\tstate: 'open',\r\n\t\t\t\tbody: renderIssueBody( {\r\n\t\t\t\t\tmeta,\r\n\t\t\t\t\ttestTitle,\r\n\t\t\t\t\ttestPath,\r\n\t\t\t\t\tformattedTestResults,\r\n\t\t\t\t} ),\r\n\t\t\t} );\r\n\t\t} else if (\r\n\t\t\t! reportedIssue &&\r\n\t\t\t// Don't create a flaky test issue if the test was run inside a PR.\r\n\t\t\t! isPR\r\n\t\t) {\r\n\t\t\tissue = await api.createIssue( {\r\n\t\t\t\ttitle: issueTitle,\r\n\t\t\t\tbody: renderIssueBody( {\r\n\t\t\t\t\tmeta: {},\r\n\t\t\t\t\ttestTitle,\r\n\t\t\t\t\ttestPath,\r\n\t\t\t\t\tformattedTestResults: currentFormattedTestResults,\r\n\t\t\t\t} ),\r\n\t\t\t\tlabels: [ label ],\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( issue ) {\r\n\t\t\treportedIssues.push( {\r\n\t\t\t\ttestTitle,\r\n\t\t\t\ttestPath,\r\n\t\t\t\tissueNumber: issue.number,\r\n\t\t\t\tissueUrl: issue.html_url,\r\n\t\t\t} );\r\n\t\t\tcore.info( `Reported flaky test to ${ issue.html_url }` );\r\n\t\t}\r\n\t}\r\n\r\n\tif ( reportedIssues.length === 0 ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst { html_url: commentUrl } = isPR\r\n\t\t? await api.createCommentOnPR(\r\n\t\t\t\t// Cast the payload type: https://github.com/actions/toolkit/tree/main/packages/github#webhook-payload-typescript-definitions\r\n\t\t\t\t( github.context.payload as PullRequestEvent ).number,\r\n\t\t\t\trenderCommitComment( {\r\n\t\t\t\t\trunURL,\r\n\t\t\t\t\treportedIssues,\r\n\t\t\t\t\tcommitSHA: ( github.context.payload as PullRequestEvent )\r\n\t\t\t\t\t\t.pull_request.head.sha,\r\n\t\t\t\t} ),\r\n\t\t\t\tisReportComment\r\n\t\t  )\r\n\t\t: await api.createCommentOnCommit(\r\n\t\t\t\tgithub.context.sha,\r\n\t\t\t\trenderCommitComment( {\r\n\t\t\t\t\trunURL,\r\n\t\t\t\t\treportedIssues,\r\n\t\t\t\t\tcommitSHA: github.context.sha,\r\n\t\t\t\t} ),\r\n\t\t\t\tisReportComment\r\n\t\t  );\r\n\r\n\tcore.info( `Reported the summary of the flaky tests to ${ commentUrl }` );\r\n}\r\n\r\nfunction getIssueTitle( testTitle: string ) {\r\n\treturn `[Flaky Test] ${ testTitle }`;\r\n}\r\n\r\nexport { run };\r\n"],"mappings":"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","ignoreList":[]}