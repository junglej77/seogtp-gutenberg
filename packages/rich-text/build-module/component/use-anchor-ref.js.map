{"version":3,"names":["useMemo","deprecated","getActiveFormat","useAnchorRef","ref","value","settings","since","alternative","tagName","className","name","activeFormat","undefined","current","ownerDocument","defaultView","selection","getSelection","rangeCount","range","getRangeAt","element","startContainer","nextElementSibling","nodeType","ELEMENT_NODE","parentNode","closest","start","end"],"sources":["@wordpress/rich-text/src/component/use-anchor-ref.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useMemo } from '@wordpress/element';\r\nimport deprecated from '@wordpress/deprecated';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { getActiveFormat } from '../get-active-format';\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('@wordpress/element').RefObject<T>} RefObject<T>\r\n */\r\n/** @typedef {import('../register-format-type').WPFormat} WPFormat */\r\n/** @typedef {import('../types').RichTextValue} RichTextValue */\r\n\r\n/**\r\n * This hook, to be used in a format type's Edit component, returns the active\r\n * element that is formatted, or the selection range if no format is active.\r\n * The returned value is meant to be used for positioning UI, e.g. by passing it\r\n * to the `Popover` component.\r\n *\r\n * @param {Object}                 $1          Named parameters.\r\n * @param {RefObject<HTMLElement>} $1.ref      React ref of the element\r\n *                                             containing  the editable content.\r\n * @param {RichTextValue}          $1.value    Value to check for selection.\r\n * @param {WPFormat}               $1.settings The format type's settings.\r\n *\r\n * @return {Element|Range} The active element or selection range.\r\n */\r\nexport function useAnchorRef( { ref, value, settings = {} } ) {\r\n\tdeprecated( '`useAnchorRef` hook', {\r\n\t\tsince: '6.1',\r\n\t\talternative: '`useAnchor` hook',\r\n\t} );\r\n\r\n\tconst { tagName, className, name } = settings;\r\n\tconst activeFormat = name ? getActiveFormat( value, name ) : undefined;\r\n\r\n\treturn useMemo( () => {\r\n\t\tif ( ! ref.current ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst {\r\n\t\t\townerDocument: { defaultView },\r\n\t\t} = ref.current;\r\n\t\tconst selection = defaultView.getSelection();\r\n\r\n\t\tif ( ! selection.rangeCount ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst range = selection.getRangeAt( 0 );\r\n\r\n\t\tif ( ! activeFormat ) {\r\n\t\t\treturn range;\r\n\t\t}\r\n\r\n\t\tlet element = range.startContainer;\r\n\r\n\t\t// If the caret is right before the element, select the next element.\r\n\t\telement = element.nextElementSibling || element;\r\n\r\n\t\twhile ( element.nodeType !== element.ELEMENT_NODE ) {\r\n\t\t\telement = element.parentNode;\r\n\t\t}\r\n\r\n\t\treturn element.closest(\r\n\t\t\ttagName + ( className ? '.' + className : '' )\r\n\t\t);\r\n\t}, [ activeFormat, value.start, value.end, tagName, className ] );\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,UAAU,MAAM,uBAAuB;;AAE9C;AACA;AACA;AACA,SAASC,eAAe,QAAQ,sBAAsB;;AAEtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAAE;EAAEC,GAAG;EAAEC,KAAK;EAAEC,QAAQ,GAAG,CAAC;AAAE,CAAC,EAAG;EAC7DL,UAAU,CAAE,qBAAqB,EAAE;IAClCM,KAAK,EAAE,KAAK;IACZC,WAAW,EAAE;EACd,CAAE,CAAC;EAEH,MAAM;IAAEC,OAAO;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGL,QAAQ;EAC7C,MAAMM,YAAY,GAAGD,IAAI,GAAGT,eAAe,CAAEG,KAAK,EAAEM,IAAK,CAAC,GAAGE,SAAS;EAEtE,OAAOb,OAAO,CAAE,MAAM;IACrB,IAAK,CAAEI,GAAG,CAACU,OAAO,EAAG;MACpB;IACD;IACA,MAAM;MACLC,aAAa,EAAE;QAAEC;MAAY;IAC9B,CAAC,GAAGZ,GAAG,CAACU,OAAO;IACf,MAAMG,SAAS,GAAGD,WAAW,CAACE,YAAY,CAAC,CAAC;IAE5C,IAAK,CAAED,SAAS,CAACE,UAAU,EAAG;MAC7B;IACD;IAEA,MAAMC,KAAK,GAAGH,SAAS,CAACI,UAAU,CAAE,CAAE,CAAC;IAEvC,IAAK,CAAET,YAAY,EAAG;MACrB,OAAOQ,KAAK;IACb;IAEA,IAAIE,OAAO,GAAGF,KAAK,CAACG,cAAc;;IAElC;IACAD,OAAO,GAAGA,OAAO,CAACE,kBAAkB,IAAIF,OAAO;IAE/C,OAAQA,OAAO,CAACG,QAAQ,KAAKH,OAAO,CAACI,YAAY,EAAG;MACnDJ,OAAO,GAAGA,OAAO,CAACK,UAAU;IAC7B;IAEA,OAAOL,OAAO,CAACM,OAAO,CACrBnB,OAAO,IAAKC,SAAS,GAAG,GAAG,GAAGA,SAAS,GAAG,EAAE,CAC7C,CAAC;EACF,CAAC,EAAE,CAAEE,YAAY,EAAEP,KAAK,CAACwB,KAAK,EAAExB,KAAK,CAACyB,GAAG,EAAErB,OAAO,EAAEC,SAAS,CAAG,CAAC;AAClE","ignoreList":[]}