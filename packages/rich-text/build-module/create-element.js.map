{"version":3,"names":["createElement","implementation","html","body","createHTMLDocument","innerHTML"],"sources":["@wordpress/rich-text/src/create-element.js"],"sourcesContent":["/**\r\n * Parse the given HTML into a body element.\r\n *\r\n * Note: The current implementation will return a shared reference, reset on\r\n * each call to `createElement`. Therefore, you should not hold a reference to\r\n * the value to operate upon asynchronously, as it may have unexpected results.\r\n *\r\n * @param {HTMLDocument} document The HTML document to use to parse.\r\n * @param {string}       html     The HTML to parse.\r\n *\r\n * @return {HTMLBodyElement} Body element with parsed HTML.\r\n */\r\nexport function createElement( { implementation }, html ) {\r\n\t// Because `createHTMLDocument` is an expensive operation, and with this\r\n\t// function being internal to `rich-text` (full control in avoiding a risk\r\n\t// of asynchronous operations on the shared reference), a single document\r\n\t// is reused and reset for each call to the function.\r\n\tif ( ! createElement.body ) {\r\n\t\tcreateElement.body = implementation.createHTMLDocument( '' ).body;\r\n\t}\r\n\r\n\tcreateElement.body.innerHTML = html;\r\n\r\n\treturn createElement.body;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,aAAaA,CAAE;EAAEC;AAAe,CAAC,EAAEC,IAAI,EAAG;EACzD;EACA;EACA;EACA;EACA,IAAK,CAAEF,aAAa,CAACG,IAAI,EAAG;IAC3BH,aAAa,CAACG,IAAI,GAAGF,cAAc,CAACG,kBAAkB,CAAE,EAAG,CAAC,CAACD,IAAI;EAClE;EAEAH,aAAa,CAACG,IAAI,CAACE,SAAS,GAAGH,IAAI;EAEnC,OAAOF,aAAa,CAACG,IAAI;AAC1B","ignoreList":[]}