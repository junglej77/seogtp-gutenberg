{"version":3,"names":["isFormatEqual","normaliseFormats","value","newFormats","formats","slice","forEach","formatsAtIndex","index","formatsAtPreviousIndex","newFormatsAtIndex","format","formatIndex","previousFormat"],"sources":["@wordpress/rich-text/src/normalise-formats.js"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\n\r\nimport { isFormatEqual } from './is-format-equal';\r\n\r\n/** @typedef {import('./types').RichTextValue} RichTextValue */\r\n\r\n/**\r\n * Normalises formats: ensures subsequent adjacent equal formats have the same\r\n * reference.\r\n *\r\n * @param {RichTextValue} value Value to normalise formats of.\r\n *\r\n * @return {RichTextValue} New value with normalised formats.\r\n */\r\nexport function normaliseFormats( value ) {\r\n\tconst newFormats = value.formats.slice();\r\n\r\n\tnewFormats.forEach( ( formatsAtIndex, index ) => {\r\n\t\tconst formatsAtPreviousIndex = newFormats[ index - 1 ];\r\n\r\n\t\tif ( formatsAtPreviousIndex ) {\r\n\t\t\tconst newFormatsAtIndex = formatsAtIndex.slice();\r\n\r\n\t\t\tnewFormatsAtIndex.forEach( ( format, formatIndex ) => {\r\n\t\t\t\tconst previousFormat = formatsAtPreviousIndex[ formatIndex ];\r\n\r\n\t\t\t\tif ( isFormatEqual( format, previousFormat ) ) {\r\n\t\t\t\t\tnewFormatsAtIndex[ formatIndex ] = previousFormat;\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tnewFormats[ index ] = newFormatsAtIndex;\r\n\t\t}\r\n\t} );\r\n\r\n\treturn {\r\n\t\t...value,\r\n\t\tformats: newFormats,\r\n\t};\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,aAAa,QAAQ,mBAAmB;;AAEjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAAEC,KAAK,EAAG;EACzC,MAAMC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC;EAExCF,UAAU,CAACG,OAAO,CAAE,CAAEC,cAAc,EAAEC,KAAK,KAAM;IAChD,MAAMC,sBAAsB,GAAGN,UAAU,CAAEK,KAAK,GAAG,CAAC,CAAE;IAEtD,IAAKC,sBAAsB,EAAG;MAC7B,MAAMC,iBAAiB,GAAGH,cAAc,CAACF,KAAK,CAAC,CAAC;MAEhDK,iBAAiB,CAACJ,OAAO,CAAE,CAAEK,MAAM,EAAEC,WAAW,KAAM;QACrD,MAAMC,cAAc,GAAGJ,sBAAsB,CAAEG,WAAW,CAAE;QAE5D,IAAKZ,aAAa,CAAEW,MAAM,EAAEE,cAAe,CAAC,EAAG;UAC9CH,iBAAiB,CAAEE,WAAW,CAAE,GAAGC,cAAc;QAClD;MACD,CAAE,CAAC;MAEHV,UAAU,CAAEK,KAAK,CAAE,GAAGE,iBAAiB;IACxC;EACD,CAAE,CAAC;EAEH,OAAO;IACN,GAAGR,KAAK;IACRE,OAAO,EAAED;EACV,CAAC;AACF","ignoreList":[]}