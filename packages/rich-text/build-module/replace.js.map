{"version":3,"names":["normaliseFormats","replace","formats","replacements","text","start","end","pattern","replacement","match","rest","offset","length","newText","newFormats","newReplacements","Array","fill","slice","concat"],"sources":["@wordpress/rich-text/src/replace.js"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\n\r\nimport { normaliseFormats } from './normalise-formats';\r\n\r\n/** @typedef {import('./types').RichTextValue} RichTextValue */\r\n\r\n/**\r\n * Search a Rich Text value and replace the match(es) with `replacement`. This\r\n * is similar to `String.prototype.replace`.\r\n *\r\n * @param {RichTextValue}   value       The value to modify.\r\n * @param {RegExp|string}   pattern     A RegExp object or literal. Can also be\r\n *                                      a string. It is treated as a verbatim\r\n *                                      string and is not interpreted as a\r\n *                                      regular expression. Only the first\r\n *                                      occurrence will be replaced.\r\n * @param {Function|string} replacement The match or matches are replaced with\r\n *                                      the specified or the value returned by\r\n *                                      the specified function.\r\n *\r\n * @return {RichTextValue} A new value with replacements applied.\r\n */\r\nexport function replace(\r\n\t{ formats, replacements, text, start, end },\r\n\tpattern,\r\n\treplacement\r\n) {\r\n\ttext = text.replace( pattern, ( match, ...rest ) => {\r\n\t\tconst offset = rest[ rest.length - 2 ];\r\n\t\tlet newText = replacement;\r\n\t\tlet newFormats;\r\n\t\tlet newReplacements;\r\n\r\n\t\tif ( typeof newText === 'function' ) {\r\n\t\t\tnewText = replacement( match, ...rest );\r\n\t\t}\r\n\r\n\t\tif ( typeof newText === 'object' ) {\r\n\t\t\tnewFormats = newText.formats;\r\n\t\t\tnewReplacements = newText.replacements;\r\n\t\t\tnewText = newText.text;\r\n\t\t} else {\r\n\t\t\tnewFormats = Array( newText.length );\r\n\t\t\tnewReplacements = Array( newText.length );\r\n\r\n\t\t\tif ( formats[ offset ] ) {\r\n\t\t\t\tnewFormats = newFormats.fill( formats[ offset ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tformats = formats\r\n\t\t\t.slice( 0, offset )\r\n\t\t\t.concat( newFormats, formats.slice( offset + match.length ) );\r\n\t\treplacements = replacements\r\n\t\t\t.slice( 0, offset )\r\n\t\t\t.concat(\r\n\t\t\t\tnewReplacements,\r\n\t\t\t\treplacements.slice( offset + match.length )\r\n\t\t\t);\r\n\r\n\t\tif ( start ) {\r\n\t\t\tstart = end = offset + newText.length;\r\n\t\t}\r\n\r\n\t\treturn newText;\r\n\t} );\r\n\r\n\treturn normaliseFormats( { formats, replacements, text, start, end } );\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,gBAAgB,QAAQ,qBAAqB;;AAEtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,OAAOA,CACtB;EAAEC,OAAO;EAAEC,YAAY;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAI,CAAC,EAC3CC,OAAO,EACPC,WAAW,EACV;EACDJ,IAAI,GAAGA,IAAI,CAACH,OAAO,CAAEM,OAAO,EAAE,CAAEE,KAAK,EAAE,GAAGC,IAAI,KAAM;IACnD,MAAMC,MAAM,GAAGD,IAAI,CAAEA,IAAI,CAACE,MAAM,GAAG,CAAC,CAAE;IACtC,IAAIC,OAAO,GAAGL,WAAW;IACzB,IAAIM,UAAU;IACd,IAAIC,eAAe;IAEnB,IAAK,OAAOF,OAAO,KAAK,UAAU,EAAG;MACpCA,OAAO,GAAGL,WAAW,CAAEC,KAAK,EAAE,GAAGC,IAAK,CAAC;IACxC;IAEA,IAAK,OAAOG,OAAO,KAAK,QAAQ,EAAG;MAClCC,UAAU,GAAGD,OAAO,CAACX,OAAO;MAC5Ba,eAAe,GAAGF,OAAO,CAACV,YAAY;MACtCU,OAAO,GAAGA,OAAO,CAACT,IAAI;IACvB,CAAC,MAAM;MACNU,UAAU,GAAGE,KAAK,CAAEH,OAAO,CAACD,MAAO,CAAC;MACpCG,eAAe,GAAGC,KAAK,CAAEH,OAAO,CAACD,MAAO,CAAC;MAEzC,IAAKV,OAAO,CAAES,MAAM,CAAE,EAAG;QACxBG,UAAU,GAAGA,UAAU,CAACG,IAAI,CAAEf,OAAO,CAAES,MAAM,CAAG,CAAC;MAClD;IACD;IAEAT,OAAO,GAAGA,OAAO,CACfgB,KAAK,CAAE,CAAC,EAAEP,MAAO,CAAC,CAClBQ,MAAM,CAAEL,UAAU,EAAEZ,OAAO,CAACgB,KAAK,CAAEP,MAAM,GAAGF,KAAK,CAACG,MAAO,CAAE,CAAC;IAC9DT,YAAY,GAAGA,YAAY,CACzBe,KAAK,CAAE,CAAC,EAAEP,MAAO,CAAC,CAClBQ,MAAM,CACNJ,eAAe,EACfZ,YAAY,CAACe,KAAK,CAAEP,MAAM,GAAGF,KAAK,CAACG,MAAO,CAC3C,CAAC;IAEF,IAAKP,KAAK,EAAG;MACZA,KAAK,GAAGC,GAAG,GAAGK,MAAM,GAAGE,OAAO,CAACD,MAAM;IACtC;IAEA,OAAOC,OAAO;EACf,CAAE,CAAC;EAEH,OAAOb,gBAAgB,CAAE;IAAEE,OAAO;IAAEC,YAAY;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAI,CAAE,CAAC;AACvE","ignoreList":[]}