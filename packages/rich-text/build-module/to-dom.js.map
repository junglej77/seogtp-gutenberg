{"version":3,"names":["toTree","createElement","isRangeEqual","createPathToNode","node","rootNode","path","parentNode","i","previousSibling","getNodeByPath","length","childNodes","shift","offset","append","element","child","html","undefined","innerHTML","ownerDocument","createTextNode","type","attributes","key","setAttribute","appendChild","appendText","text","appendData","getLastChild","lastChild","getParent","isText","nodeType","TEXT_NODE","getText","nodeValue","remove","removeChild","toDom","value","prepareEditableTree","isEditableTree","placeholder","doc","document","startPath","endPath","formats","createEmpty","tree","onStartIndex","body","pointer","onEndIndex","selection","apply","current","__unstableDomOnly","applyValue","start","applySelection","future","futureChild","firstChild","currentChild","isEqualNode","nodeName","data","replaceChild","currentAttributes","futureAttributes","ii","name","getAttribute","removeAttribute","startContainer","startOffset","endContainer","endOffset","defaultView","getSelection","range","createRange","setStart","setEnd","activeElement","rangeCount","getRangeAt","removeAllRanges","addRange","HTMLElement","focus"],"sources":["@wordpress/rich-text/src/to-dom.js"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\n\r\nimport { toTree } from './to-tree';\r\nimport { createElement } from './create-element';\r\nimport { isRangeEqual } from './is-range-equal';\r\n\r\n/** @typedef {import('./types').RichTextValue} RichTextValue */\r\n\r\n/**\r\n * Creates a path as an array of indices from the given root node to the given\r\n * node.\r\n *\r\n * @param {Node}        node     Node to find the path of.\r\n * @param {HTMLElement} rootNode Root node to find the path from.\r\n * @param {Array}       path     Initial path to build on.\r\n *\r\n * @return {Array} The path from the root node to the node.\r\n */\r\nfunction createPathToNode( node, rootNode, path ) {\r\n\tconst parentNode = node.parentNode;\r\n\tlet i = 0;\r\n\r\n\twhile ( ( node = node.previousSibling ) ) {\r\n\t\ti++;\r\n\t}\r\n\r\n\tpath = [ i, ...path ];\r\n\r\n\tif ( parentNode !== rootNode ) {\r\n\t\tpath = createPathToNode( parentNode, rootNode, path );\r\n\t}\r\n\r\n\treturn path;\r\n}\r\n\r\n/**\r\n * Gets a node given a path (array of indices) from the given node.\r\n *\r\n * @param {HTMLElement} node Root node to find the wanted node in.\r\n * @param {Array}       path Path (indices) to the wanted node.\r\n *\r\n * @return {Object} Object with the found node and the remaining offset (if any).\r\n */\r\nfunction getNodeByPath( node, path ) {\r\n\tpath = [ ...path ];\r\n\r\n\twhile ( node && path.length > 1 ) {\r\n\t\tnode = node.childNodes[ path.shift() ];\r\n\t}\r\n\r\n\treturn {\r\n\t\tnode,\r\n\t\toffset: path[ 0 ],\r\n\t};\r\n}\r\n\r\nfunction append( element, child ) {\r\n\tif ( child.html !== undefined ) {\r\n\t\treturn ( element.innerHTML += child.html );\r\n\t}\r\n\r\n\tif ( typeof child === 'string' ) {\r\n\t\tchild = element.ownerDocument.createTextNode( child );\r\n\t}\r\n\r\n\tconst { type, attributes } = child;\r\n\r\n\tif ( type ) {\r\n\t\tchild = element.ownerDocument.createElement( type );\r\n\r\n\t\tfor ( const key in attributes ) {\r\n\t\t\tchild.setAttribute( key, attributes[ key ] );\r\n\t\t}\r\n\t}\r\n\r\n\treturn element.appendChild( child );\r\n}\r\n\r\nfunction appendText( node, text ) {\r\n\tnode.appendData( text );\r\n}\r\n\r\nfunction getLastChild( { lastChild } ) {\r\n\treturn lastChild;\r\n}\r\n\r\nfunction getParent( { parentNode } ) {\r\n\treturn parentNode;\r\n}\r\n\r\nfunction isText( node ) {\r\n\treturn node.nodeType === node.TEXT_NODE;\r\n}\r\n\r\nfunction getText( { nodeValue } ) {\r\n\treturn nodeValue;\r\n}\r\n\r\nfunction remove( node ) {\r\n\treturn node.parentNode.removeChild( node );\r\n}\r\n\r\nexport function toDom( {\r\n\tvalue,\r\n\tprepareEditableTree,\r\n\tisEditableTree = true,\r\n\tplaceholder,\r\n\tdoc = document,\r\n} ) {\r\n\tlet startPath = [];\r\n\tlet endPath = [];\r\n\r\n\tif ( prepareEditableTree ) {\r\n\t\tvalue = {\r\n\t\t\t...value,\r\n\t\t\tformats: prepareEditableTree( value ),\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new instance of a DOM tree upon which RichText operations can be\r\n\t * applied.\r\n\t *\r\n\t * Note: The current implementation will return a shared reference, reset on\r\n\t * each call to `createEmpty`. Therefore, you should not hold a reference to\r\n\t * the value to operate upon asynchronously, as it may have unexpected results.\r\n\t *\r\n\t * @return {Object} RichText tree.\r\n\t */\r\n\tconst createEmpty = () => createElement( doc, '' );\r\n\r\n\tconst tree = toTree( {\r\n\t\tvalue,\r\n\t\tcreateEmpty,\r\n\t\tappend,\r\n\t\tgetLastChild,\r\n\t\tgetParent,\r\n\t\tisText,\r\n\t\tgetText,\r\n\t\tremove,\r\n\t\tappendText,\r\n\t\tonStartIndex( body, pointer ) {\r\n\t\t\tstartPath = createPathToNode( pointer, body, [\r\n\t\t\t\tpointer.nodeValue.length,\r\n\t\t\t] );\r\n\t\t},\r\n\t\tonEndIndex( body, pointer ) {\r\n\t\t\tendPath = createPathToNode( pointer, body, [\r\n\t\t\t\tpointer.nodeValue.length,\r\n\t\t\t] );\r\n\t\t},\r\n\t\tisEditableTree,\r\n\t\tplaceholder,\r\n\t} );\r\n\r\n\treturn {\r\n\t\tbody: tree,\r\n\t\tselection: { startPath, endPath },\r\n\t};\r\n}\r\n\r\n/**\r\n * Create an `Element` tree from a Rich Text value and applies the difference to\r\n * the `Element` tree contained by `current`.\r\n *\r\n * @param {Object}        $1                       Named arguments.\r\n * @param {RichTextValue} $1.value                 Value to apply.\r\n * @param {HTMLElement}   $1.current               The live root node to apply the element tree to.\r\n * @param {Function}      [$1.prepareEditableTree] Function to filter editorable formats.\r\n * @param {boolean}       [$1.__unstableDomOnly]   Only apply elements, no selection.\r\n * @param {string}        [$1.placeholder]         Placeholder text.\r\n */\r\nexport function apply( {\r\n\tvalue,\r\n\tcurrent,\r\n\tprepareEditableTree,\r\n\t__unstableDomOnly,\r\n\tplaceholder,\r\n} ) {\r\n\t// Construct a new element tree in memory.\r\n\tconst { body, selection } = toDom( {\r\n\t\tvalue,\r\n\t\tprepareEditableTree,\r\n\t\tplaceholder,\r\n\t\tdoc: current.ownerDocument,\r\n\t} );\r\n\r\n\tapplyValue( body, current );\r\n\r\n\tif ( value.start !== undefined && ! __unstableDomOnly ) {\r\n\t\tapplySelection( selection, current );\r\n\t}\r\n}\r\n\r\nexport function applyValue( future, current ) {\r\n\tlet i = 0;\r\n\tlet futureChild;\r\n\r\n\twhile ( ( futureChild = future.firstChild ) ) {\r\n\t\tconst currentChild = current.childNodes[ i ];\r\n\r\n\t\tif ( ! currentChild ) {\r\n\t\t\tcurrent.appendChild( futureChild );\r\n\t\t} else if ( ! currentChild.isEqualNode( futureChild ) ) {\r\n\t\t\tif (\r\n\t\t\t\tcurrentChild.nodeName !== futureChild.nodeName ||\r\n\t\t\t\t( currentChild.nodeType === currentChild.TEXT_NODE &&\r\n\t\t\t\t\tcurrentChild.data !== futureChild.data )\r\n\t\t\t) {\r\n\t\t\t\tcurrent.replaceChild( futureChild, currentChild );\r\n\t\t\t} else {\r\n\t\t\t\tconst currentAttributes = currentChild.attributes;\r\n\t\t\t\tconst futureAttributes = futureChild.attributes;\r\n\r\n\t\t\t\tif ( currentAttributes ) {\r\n\t\t\t\t\tlet ii = currentAttributes.length;\r\n\r\n\t\t\t\t\t// Reverse loop because `removeAttribute` on `currentChild`\r\n\t\t\t\t\t// changes `currentAttributes`.\r\n\t\t\t\t\twhile ( ii-- ) {\r\n\t\t\t\t\t\tconst { name } = currentAttributes[ ii ];\r\n\r\n\t\t\t\t\t\tif ( ! futureChild.getAttribute( name ) ) {\r\n\t\t\t\t\t\t\tcurrentChild.removeAttribute( name );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( futureAttributes ) {\r\n\t\t\t\t\tfor ( let ii = 0; ii < futureAttributes.length; ii++ ) {\r\n\t\t\t\t\t\tconst { name, value } = futureAttributes[ ii ];\r\n\r\n\t\t\t\t\t\tif ( currentChild.getAttribute( name ) !== value ) {\r\n\t\t\t\t\t\t\tcurrentChild.setAttribute( name, value );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tapplyValue( futureChild, currentChild );\r\n\t\t\t\tfuture.removeChild( futureChild );\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfuture.removeChild( futureChild );\r\n\t\t}\r\n\r\n\t\ti++;\r\n\t}\r\n\r\n\twhile ( current.childNodes[ i ] ) {\r\n\t\tcurrent.removeChild( current.childNodes[ i ] );\r\n\t}\r\n}\r\n\r\nexport function applySelection( { startPath, endPath }, current ) {\r\n\tconst { node: startContainer, offset: startOffset } = getNodeByPath(\r\n\t\tcurrent,\r\n\t\tstartPath\r\n\t);\r\n\tconst { node: endContainer, offset: endOffset } = getNodeByPath(\r\n\t\tcurrent,\r\n\t\tendPath\r\n\t);\r\n\tconst { ownerDocument } = current;\r\n\tconst { defaultView } = ownerDocument;\r\n\tconst selection = defaultView.getSelection();\r\n\tconst range = ownerDocument.createRange();\r\n\r\n\trange.setStart( startContainer, startOffset );\r\n\trange.setEnd( endContainer, endOffset );\r\n\r\n\tconst { activeElement } = ownerDocument;\r\n\r\n\tif ( selection.rangeCount > 0 ) {\r\n\t\t// If the to be added range and the live range are the same, there's no\r\n\t\t// need to remove the live range and add the equivalent range.\r\n\t\tif ( isRangeEqual( range, selection.getRangeAt( 0 ) ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tselection.removeAllRanges();\r\n\t}\r\n\r\n\tselection.addRange( range );\r\n\r\n\t// This function is not intended to cause a shift in focus. Since the above\r\n\t// selection manipulations may shift focus, ensure that focus is restored to\r\n\t// its previous state.\r\n\tif ( activeElement !== ownerDocument.activeElement ) {\r\n\t\t// The `instanceof` checks protect against edge cases where the focused\r\n\t\t// element is not of the interface HTMLElement (does not have a `focus`\r\n\t\t// or `blur` property).\r\n\t\t//\r\n\t\t// See: https://github.com/Microsoft/TypeScript/issues/5901#issuecomment-431649653\r\n\t\tif ( activeElement instanceof defaultView.HTMLElement ) {\r\n\t\t\tactiveElement.focus();\r\n\t\t}\r\n\t}\r\n}\r\n"],"mappings":"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","ignoreList":[]}