{"version":3,"names":["getActiveFormats","getFormatType","OBJECT_REPLACEMENT_CHARACTER","ZWNBSP","restoreOnAttributes","attributes","isEditableTree","newAttributes","key","newKey","startsWith","slice","length","fromFormat","type","tagName","unregisteredAttributes","object","boundaryClass","formatType","elementAttributes","name","className","class","contentEditable","contenteditable","isEqualUntil","a","b","index","toTree","value","preserveWhiteSpace","createEmpty","append","getLastChild","getParent","isText","getText","remove","appendText","onStartIndex","onEndIndex","placeholder","formats","replacements","text","start","end","formatsLength","tree","activeFormats","deepestActiveFormat","lastCharacterFormats","lastCharacter","i","character","charAt","shouldInsertPadding","characterFormats","pointer","forEach","format","formatIndex","parent","newNode","replacement","innerHTML","html","decodeURIComponent","undefined","style"],"sources":["@wordpress/rich-text/src/to-tree.js"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\n\r\nimport { getActiveFormats } from './get-active-formats';\r\nimport { getFormatType } from './get-format-type';\r\nimport { OBJECT_REPLACEMENT_CHARACTER, ZWNBSP } from './special-characters';\r\n\r\nfunction restoreOnAttributes( attributes, isEditableTree ) {\r\n\tif ( isEditableTree ) {\r\n\t\treturn attributes;\r\n\t}\r\n\r\n\tconst newAttributes = {};\r\n\r\n\tfor ( const key in attributes ) {\r\n\t\tlet newKey = key;\r\n\t\tif ( key.startsWith( 'data-disable-rich-text-' ) ) {\r\n\t\t\tnewKey = key.slice( 'data-disable-rich-text-'.length );\r\n\t\t}\r\n\r\n\t\tnewAttributes[ newKey ] = attributes[ key ];\r\n\t}\r\n\r\n\treturn newAttributes;\r\n}\r\n\r\n/**\r\n * Converts a format object to information that can be used to create an element\r\n * from (type, attributes and object).\r\n *\r\n * @param {Object}  $1                        Named parameters.\r\n * @param {string}  $1.type                   The format type.\r\n * @param {string}  $1.tagName                The tag name.\r\n * @param {Object}  $1.attributes             The format attributes.\r\n * @param {Object}  $1.unregisteredAttributes The unregistered format\r\n *                                            attributes.\r\n * @param {boolean} $1.object                 Whether or not it is an object\r\n *                                            format.\r\n * @param {boolean} $1.boundaryClass          Whether or not to apply a boundary\r\n *                                            class.\r\n * @param {boolean} $1.isEditableTree\r\n *\r\n * @return {Object} Information to be used for element creation.\r\n */\r\nfunction fromFormat( {\r\n\ttype,\r\n\ttagName,\r\n\tattributes,\r\n\tunregisteredAttributes,\r\n\tobject,\r\n\tboundaryClass,\r\n\tisEditableTree,\r\n} ) {\r\n\tconst formatType = getFormatType( type );\r\n\r\n\tlet elementAttributes = {};\r\n\r\n\tif ( boundaryClass && isEditableTree ) {\r\n\t\telementAttributes[ 'data-rich-text-format-boundary' ] = 'true';\r\n\t}\r\n\r\n\tif ( ! formatType ) {\r\n\t\tif ( attributes ) {\r\n\t\t\telementAttributes = { ...attributes, ...elementAttributes };\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttype,\r\n\t\t\tattributes: restoreOnAttributes(\r\n\t\t\t\telementAttributes,\r\n\t\t\t\tisEditableTree\r\n\t\t\t),\r\n\t\t\tobject,\r\n\t\t};\r\n\t}\r\n\r\n\telementAttributes = { ...unregisteredAttributes, ...elementAttributes };\r\n\r\n\tfor ( const name in attributes ) {\r\n\t\tconst key = formatType.attributes\r\n\t\t\t? formatType.attributes[ name ]\r\n\t\t\t: false;\r\n\r\n\t\tif ( key ) {\r\n\t\t\telementAttributes[ key ] = attributes[ name ];\r\n\t\t} else {\r\n\t\t\telementAttributes[ name ] = attributes[ name ];\r\n\t\t}\r\n\t}\r\n\r\n\tif ( formatType.className ) {\r\n\t\tif ( elementAttributes.class ) {\r\n\t\t\telementAttributes.class = `${ formatType.className } ${ elementAttributes.class }`;\r\n\t\t} else {\r\n\t\t\telementAttributes.class = formatType.className;\r\n\t\t}\r\n\t}\r\n\r\n\t// When a format is declared as non editable, make it non editable in the\r\n\t// editor.\r\n\tif ( isEditableTree && formatType.contentEditable === false ) {\r\n\t\telementAttributes.contenteditable = 'false';\r\n\t}\r\n\r\n\treturn {\r\n\t\ttype: tagName || formatType.tagName,\r\n\t\tobject: formatType.object,\r\n\t\tattributes: restoreOnAttributes( elementAttributes, isEditableTree ),\r\n\t};\r\n}\r\n\r\n/**\r\n * Checks if both arrays of formats up until a certain index are equal.\r\n *\r\n * @param {Array}  a     Array of formats to compare.\r\n * @param {Array}  b     Array of formats to compare.\r\n * @param {number} index Index to check until.\r\n */\r\nfunction isEqualUntil( a, b, index ) {\r\n\tdo {\r\n\t\tif ( a[ index ] !== b[ index ] ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t} while ( index-- );\r\n\r\n\treturn true;\r\n}\r\n\r\nexport function toTree( {\r\n\tvalue,\r\n\tpreserveWhiteSpace,\r\n\tcreateEmpty,\r\n\tappend,\r\n\tgetLastChild,\r\n\tgetParent,\r\n\tisText,\r\n\tgetText,\r\n\tremove,\r\n\tappendText,\r\n\tonStartIndex,\r\n\tonEndIndex,\r\n\tisEditableTree,\r\n\tplaceholder,\r\n} ) {\r\n\tconst { formats, replacements, text, start, end } = value;\r\n\tconst formatsLength = formats.length + 1;\r\n\tconst tree = createEmpty();\r\n\tconst activeFormats = getActiveFormats( value );\r\n\tconst deepestActiveFormat = activeFormats[ activeFormats.length - 1 ];\r\n\r\n\tlet lastCharacterFormats;\r\n\tlet lastCharacter;\r\n\r\n\tappend( tree, '' );\r\n\r\n\tfor ( let i = 0; i < formatsLength; i++ ) {\r\n\t\tconst character = text.charAt( i );\r\n\t\tconst shouldInsertPadding =\r\n\t\t\tisEditableTree &&\r\n\t\t\t// Pad the line if the line is empty.\r\n\t\t\t( ! lastCharacter ||\r\n\t\t\t\t// Pad the line if the previous character is a line break, otherwise\r\n\t\t\t\t// the line break won't be visible.\r\n\t\t\t\tlastCharacter === '\\n' );\r\n\r\n\t\tconst characterFormats = formats[ i ];\r\n\t\tlet pointer = getLastChild( tree );\r\n\r\n\t\tif ( characterFormats ) {\r\n\t\t\tcharacterFormats.forEach( ( format, formatIndex ) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tpointer &&\r\n\t\t\t\t\tlastCharacterFormats &&\r\n\t\t\t\t\t// Reuse the last element if all formats remain the same.\r\n\t\t\t\t\tisEqualUntil(\r\n\t\t\t\t\t\tcharacterFormats,\r\n\t\t\t\t\t\tlastCharacterFormats,\r\n\t\t\t\t\t\tformatIndex\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tpointer = getLastChild( pointer );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst { type, tagName, attributes, unregisteredAttributes } =\r\n\t\t\t\t\tformat;\r\n\r\n\t\t\t\tconst boundaryClass =\r\n\t\t\t\t\tisEditableTree && format === deepestActiveFormat;\r\n\r\n\t\t\t\tconst parent = getParent( pointer );\r\n\t\t\t\tconst newNode = append(\r\n\t\t\t\t\tparent,\r\n\t\t\t\t\tfromFormat( {\r\n\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\ttagName,\r\n\t\t\t\t\t\tattributes,\r\n\t\t\t\t\t\tunregisteredAttributes,\r\n\t\t\t\t\t\tboundaryClass,\r\n\t\t\t\t\t\tisEditableTree,\r\n\t\t\t\t\t} )\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif ( isText( pointer ) && getText( pointer ).length === 0 ) {\r\n\t\t\t\t\tremove( pointer );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpointer = append( newNode, '' );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// If there is selection at 0, handle it before characters are inserted.\r\n\t\tif ( i === 0 ) {\r\n\t\t\tif ( onStartIndex && start === 0 ) {\r\n\t\t\t\tonStartIndex( tree, pointer );\r\n\t\t\t}\r\n\r\n\t\t\tif ( onEndIndex && end === 0 ) {\r\n\t\t\t\tonEndIndex( tree, pointer );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( character === OBJECT_REPLACEMENT_CHARACTER ) {\r\n\t\t\tconst replacement = replacements[ i ];\r\n\t\t\tif ( ! replacement ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst { type, attributes, innerHTML } = replacement;\r\n\t\t\tconst formatType = getFormatType( type );\r\n\r\n\t\t\tif ( ! isEditableTree && type === 'script' ) {\r\n\t\t\t\tpointer = append(\r\n\t\t\t\t\tgetParent( pointer ),\r\n\t\t\t\t\tfromFormat( {\r\n\t\t\t\t\t\ttype: 'script',\r\n\t\t\t\t\t\tisEditableTree,\r\n\t\t\t\t\t} )\r\n\t\t\t\t);\r\n\t\t\t\tappend( pointer, {\r\n\t\t\t\t\thtml: decodeURIComponent(\r\n\t\t\t\t\t\tattributes[ 'data-rich-text-script' ]\r\n\t\t\t\t\t),\r\n\t\t\t\t} );\r\n\t\t\t} else if ( formatType?.contentEditable === false ) {\r\n\t\t\t\t// For non editable formats, render the stored inner HTML.\r\n\t\t\t\tpointer = append(\r\n\t\t\t\t\tgetParent( pointer ),\r\n\t\t\t\t\tfromFormat( {\r\n\t\t\t\t\t\t...replacement,\r\n\t\t\t\t\t\tisEditableTree,\r\n\t\t\t\t\t\tboundaryClass: start === i && end === i + 1,\r\n\t\t\t\t\t} )\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif ( innerHTML ) {\r\n\t\t\t\t\tappend( pointer, {\r\n\t\t\t\t\t\thtml: innerHTML,\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tpointer = append(\r\n\t\t\t\t\tgetParent( pointer ),\r\n\t\t\t\t\tfromFormat( {\r\n\t\t\t\t\t\t...replacement,\r\n\t\t\t\t\t\tobject: true,\r\n\t\t\t\t\t\tisEditableTree,\r\n\t\t\t\t\t} )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t// Ensure pointer is text node.\r\n\t\t\tpointer = append( getParent( pointer ), '' );\r\n\t\t} else if ( ! preserveWhiteSpace && character === '\\n' ) {\r\n\t\t\tpointer = append( getParent( pointer ), {\r\n\t\t\t\ttype: 'br',\r\n\t\t\t\tattributes: isEditableTree\r\n\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t'data-rich-text-line-break': 'true',\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t: undefined,\r\n\t\t\t\tobject: true,\r\n\t\t\t} );\r\n\t\t\t// Ensure pointer is text node.\r\n\t\t\tpointer = append( getParent( pointer ), '' );\r\n\t\t} else if ( ! isText( pointer ) ) {\r\n\t\t\tpointer = append( getParent( pointer ), character );\r\n\t\t} else {\r\n\t\t\tappendText( pointer, character );\r\n\t\t}\r\n\r\n\t\tif ( onStartIndex && start === i + 1 ) {\r\n\t\t\tonStartIndex( tree, pointer );\r\n\t\t}\r\n\r\n\t\tif ( onEndIndex && end === i + 1 ) {\r\n\t\t\tonEndIndex( tree, pointer );\r\n\t\t}\r\n\r\n\t\tif ( shouldInsertPadding && i === text.length ) {\r\n\t\t\tappend( getParent( pointer ), ZWNBSP );\r\n\r\n\t\t\t// We CANNOT use CSS to add a placeholder with pseudo elements on\r\n\t\t\t// the main block wrappers because that could clash with theme CSS.\r\n\t\t\tif ( placeholder && text.length === 0 ) {\r\n\t\t\t\tappend( getParent( pointer ), {\r\n\t\t\t\t\ttype: 'span',\r\n\t\t\t\t\tattributes: {\r\n\t\t\t\t\t\t'data-rich-text-placeholder': placeholder,\r\n\t\t\t\t\t\t// Necessary to prevent the placeholder from catching\r\n\t\t\t\t\t\t// selection and being editable.\r\n\t\t\t\t\t\tstyle: 'pointer-events:none;user-select:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;',\r\n\t\t\t\t\t},\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlastCharacterFormats = characterFormats;\r\n\t\tlastCharacter = character;\r\n\t}\r\n\r\n\treturn tree;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,4BAA4B,EAAEC,MAAM,QAAQ,sBAAsB;AAE3E,SAASC,mBAAmBA,CAAEC,UAAU,EAAEC,cAAc,EAAG;EAC1D,IAAKA,cAAc,EAAG;IACrB,OAAOD,UAAU;EAClB;EAEA,MAAME,aAAa,GAAG,CAAC,CAAC;EAExB,KAAM,MAAMC,GAAG,IAAIH,UAAU,EAAG;IAC/B,IAAII,MAAM,GAAGD,GAAG;IAChB,IAAKA,GAAG,CAACE,UAAU,CAAE,yBAA0B,CAAC,EAAG;MAClDD,MAAM,GAAGD,GAAG,CAACG,KAAK,CAAE,yBAAyB,CAACC,MAAO,CAAC;IACvD;IAEAL,aAAa,CAAEE,MAAM,CAAE,GAAGJ,UAAU,CAAEG,GAAG,CAAE;EAC5C;EAEA,OAAOD,aAAa;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,UAAUA,CAAE;EACpBC,IAAI;EACJC,OAAO;EACPV,UAAU;EACVW,sBAAsB;EACtBC,MAAM;EACNC,aAAa;EACbZ;AACD,CAAC,EAAG;EACH,MAAMa,UAAU,GAAGlB,aAAa,CAAEa,IAAK,CAAC;EAExC,IAAIM,iBAAiB,GAAG,CAAC,CAAC;EAE1B,IAAKF,aAAa,IAAIZ,cAAc,EAAG;IACtCc,iBAAiB,CAAE,gCAAgC,CAAE,GAAG,MAAM;EAC/D;EAEA,IAAK,CAAED,UAAU,EAAG;IACnB,IAAKd,UAAU,EAAG;MACjBe,iBAAiB,GAAG;QAAE,GAAGf,UAAU;QAAE,GAAGe;MAAkB,CAAC;IAC5D;IAEA,OAAO;MACNN,IAAI;MACJT,UAAU,EAAED,mBAAmB,CAC9BgB,iBAAiB,EACjBd,cACD,CAAC;MACDW;IACD,CAAC;EACF;EAEAG,iBAAiB,GAAG;IAAE,GAAGJ,sBAAsB;IAAE,GAAGI;EAAkB,CAAC;EAEvE,KAAM,MAAMC,IAAI,IAAIhB,UAAU,EAAG;IAChC,MAAMG,GAAG,GAAGW,UAAU,CAACd,UAAU,GAC9Bc,UAAU,CAACd,UAAU,CAAEgB,IAAI,CAAE,GAC7B,KAAK;IAER,IAAKb,GAAG,EAAG;MACVY,iBAAiB,CAAEZ,GAAG,CAAE,GAAGH,UAAU,CAAEgB,IAAI,CAAE;IAC9C,CAAC,MAAM;MACND,iBAAiB,CAAEC,IAAI,CAAE,GAAGhB,UAAU,CAAEgB,IAAI,CAAE;IAC/C;EACD;EAEA,IAAKF,UAAU,CAACG,SAAS,EAAG;IAC3B,IAAKF,iBAAiB,CAACG,KAAK,EAAG;MAC9BH,iBAAiB,CAACG,KAAK,GAAI,GAAGJ,UAAU,CAACG,SAAW,IAAIF,iBAAiB,CAACG,KAAO,EAAC;IACnF,CAAC,MAAM;MACNH,iBAAiB,CAACG,KAAK,GAAGJ,UAAU,CAACG,SAAS;IAC/C;EACD;;EAEA;EACA;EACA,IAAKhB,cAAc,IAAIa,UAAU,CAACK,eAAe,KAAK,KAAK,EAAG;IAC7DJ,iBAAiB,CAACK,eAAe,GAAG,OAAO;EAC5C;EAEA,OAAO;IACNX,IAAI,EAAEC,OAAO,IAAII,UAAU,CAACJ,OAAO;IACnCE,MAAM,EAAEE,UAAU,CAACF,MAAM;IACzBZ,UAAU,EAAED,mBAAmB,CAAEgB,iBAAiB,EAAEd,cAAe;EACpE,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASoB,YAAYA,CAAEC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAG;EACpC,GAAG;IACF,IAAKF,CAAC,CAAEE,KAAK,CAAE,KAAKD,CAAC,CAAEC,KAAK,CAAE,EAAG;MAChC,OAAO,KAAK;IACb;EACD,CAAC,QAASA,KAAK,EAAE;EAEjB,OAAO,IAAI;AACZ;AAEA,OAAO,SAASC,MAAMA,CAAE;EACvBC,KAAK;EACLC,kBAAkB;EAClBC,WAAW;EACXC,MAAM;EACNC,YAAY;EACZC,SAAS;EACTC,MAAM;EACNC,OAAO;EACPC,MAAM;EACNC,UAAU;EACVC,YAAY;EACZC,UAAU;EACVpC,cAAc;EACdqC;AACD,CAAC,EAAG;EACH,MAAM;IAAEC,OAAO;IAAEC,YAAY;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAGjB,KAAK;EACzD,MAAMkB,aAAa,GAAGL,OAAO,CAAChC,MAAM,GAAG,CAAC;EACxC,MAAMsC,IAAI,GAAGjB,WAAW,CAAC,CAAC;EAC1B,MAAMkB,aAAa,GAAGnD,gBAAgB,CAAE+B,KAAM,CAAC;EAC/C,MAAMqB,mBAAmB,GAAGD,aAAa,CAAEA,aAAa,CAACvC,MAAM,GAAG,CAAC,CAAE;EAErE,IAAIyC,oBAAoB;EACxB,IAAIC,aAAa;EAEjBpB,MAAM,CAAEgB,IAAI,EAAE,EAAG,CAAC;EAElB,KAAM,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,aAAa,EAAEM,CAAC,EAAE,EAAG;IACzC,MAAMC,SAAS,GAAGV,IAAI,CAACW,MAAM,CAAEF,CAAE,CAAC;IAClC,MAAMG,mBAAmB,GACxBpD,cAAc;IACd;IACE,CAAEgD,aAAa;IAChB;IACA;IACAA,aAAa,KAAK,IAAI,CAAE;IAE1B,MAAMK,gBAAgB,GAAGf,OAAO,CAAEW,CAAC,CAAE;IACrC,IAAIK,OAAO,GAAGzB,YAAY,CAAEe,IAAK,CAAC;IAElC,IAAKS,gBAAgB,EAAG;MACvBA,gBAAgB,CAACE,OAAO,CAAE,CAAEC,MAAM,EAAEC,WAAW,KAAM;QACpD,IACCH,OAAO,IACPP,oBAAoB;QACpB;QACA3B,YAAY,CACXiC,gBAAgB,EAChBN,oBAAoB,EACpBU,WACD,CAAC,EACA;UACDH,OAAO,GAAGzB,YAAY,CAAEyB,OAAQ,CAAC;UACjC;QACD;QAEA,MAAM;UAAE9C,IAAI;UAAEC,OAAO;UAAEV,UAAU;UAAEW;QAAuB,CAAC,GAC1D8C,MAAM;QAEP,MAAM5C,aAAa,GAClBZ,cAAc,IAAIwD,MAAM,KAAKV,mBAAmB;QAEjD,MAAMY,MAAM,GAAG5B,SAAS,CAAEwB,OAAQ,CAAC;QACnC,MAAMK,OAAO,GAAG/B,MAAM,CACrB8B,MAAM,EACNnD,UAAU,CAAE;UACXC,IAAI;UACJC,OAAO;UACPV,UAAU;UACVW,sBAAsB;UACtBE,aAAa;UACbZ;QACD,CAAE,CACH,CAAC;QAED,IAAK+B,MAAM,CAAEuB,OAAQ,CAAC,IAAItB,OAAO,CAAEsB,OAAQ,CAAC,CAAChD,MAAM,KAAK,CAAC,EAAG;UAC3D2B,MAAM,CAAEqB,OAAQ,CAAC;QAClB;QAEAA,OAAO,GAAG1B,MAAM,CAAE+B,OAAO,EAAE,EAAG,CAAC;MAChC,CAAE,CAAC;IACJ;;IAEA;IACA,IAAKV,CAAC,KAAK,CAAC,EAAG;MACd,IAAKd,YAAY,IAAIM,KAAK,KAAK,CAAC,EAAG;QAClCN,YAAY,CAAES,IAAI,EAAEU,OAAQ,CAAC;MAC9B;MAEA,IAAKlB,UAAU,IAAIM,GAAG,KAAK,CAAC,EAAG;QAC9BN,UAAU,CAAEQ,IAAI,EAAEU,OAAQ,CAAC;MAC5B;IACD;IAEA,IAAKJ,SAAS,KAAKtD,4BAA4B,EAAG;MACjD,MAAMgE,WAAW,GAAGrB,YAAY,CAAEU,CAAC,CAAE;MACrC,IAAK,CAAEW,WAAW,EAAG;QACpB;MACD;MACA,MAAM;QAAEpD,IAAI;QAAET,UAAU;QAAE8D;MAAU,CAAC,GAAGD,WAAW;MACnD,MAAM/C,UAAU,GAAGlB,aAAa,CAAEa,IAAK,CAAC;MAExC,IAAK,CAAER,cAAc,IAAIQ,IAAI,KAAK,QAAQ,EAAG;QAC5C8C,OAAO,GAAG1B,MAAM,CACfE,SAAS,CAAEwB,OAAQ,CAAC,EACpB/C,UAAU,CAAE;UACXC,IAAI,EAAE,QAAQ;UACdR;QACD,CAAE,CACH,CAAC;QACD4B,MAAM,CAAE0B,OAAO,EAAE;UAChBQ,IAAI,EAAEC,kBAAkB,CACvBhE,UAAU,CAAE,uBAAuB,CACpC;QACD,CAAE,CAAC;MACJ,CAAC,MAAM,IAAKc,UAAU,EAAEK,eAAe,KAAK,KAAK,EAAG;QACnD;QACAoC,OAAO,GAAG1B,MAAM,CACfE,SAAS,CAAEwB,OAAQ,CAAC,EACpB/C,UAAU,CAAE;UACX,GAAGqD,WAAW;UACd5D,cAAc;UACdY,aAAa,EAAE6B,KAAK,KAAKQ,CAAC,IAAIP,GAAG,KAAKO,CAAC,GAAG;QAC3C,CAAE,CACH,CAAC;QAED,IAAKY,SAAS,EAAG;UAChBjC,MAAM,CAAE0B,OAAO,EAAE;YAChBQ,IAAI,EAAED;UACP,CAAE,CAAC;QACJ;MACD,CAAC,MAAM;QACNP,OAAO,GAAG1B,MAAM,CACfE,SAAS,CAAEwB,OAAQ,CAAC,EACpB/C,UAAU,CAAE;UACX,GAAGqD,WAAW;UACdjD,MAAM,EAAE,IAAI;UACZX;QACD,CAAE,CACH,CAAC;MACF;MACA;MACAsD,OAAO,GAAG1B,MAAM,CAAEE,SAAS,CAAEwB,OAAQ,CAAC,EAAE,EAAG,CAAC;IAC7C,CAAC,MAAM,IAAK,CAAE5B,kBAAkB,IAAIwB,SAAS,KAAK,IAAI,EAAG;MACxDI,OAAO,GAAG1B,MAAM,CAAEE,SAAS,CAAEwB,OAAQ,CAAC,EAAE;QACvC9C,IAAI,EAAE,IAAI;QACVT,UAAU,EAAEC,cAAc,GACvB;UACA,2BAA2B,EAAE;QAC7B,CAAC,GACDgE,SAAS;QACZrD,MAAM,EAAE;MACT,CAAE,CAAC;MACH;MACA2C,OAAO,GAAG1B,MAAM,CAAEE,SAAS,CAAEwB,OAAQ,CAAC,EAAE,EAAG,CAAC;IAC7C,CAAC,MAAM,IAAK,CAAEvB,MAAM,CAAEuB,OAAQ,CAAC,EAAG;MACjCA,OAAO,GAAG1B,MAAM,CAAEE,SAAS,CAAEwB,OAAQ,CAAC,EAAEJ,SAAU,CAAC;IACpD,CAAC,MAAM;MACNhB,UAAU,CAAEoB,OAAO,EAAEJ,SAAU,CAAC;IACjC;IAEA,IAAKf,YAAY,IAAIM,KAAK,KAAKQ,CAAC,GAAG,CAAC,EAAG;MACtCd,YAAY,CAAES,IAAI,EAAEU,OAAQ,CAAC;IAC9B;IAEA,IAAKlB,UAAU,IAAIM,GAAG,KAAKO,CAAC,GAAG,CAAC,EAAG;MAClCb,UAAU,CAAEQ,IAAI,EAAEU,OAAQ,CAAC;IAC5B;IAEA,IAAKF,mBAAmB,IAAIH,CAAC,KAAKT,IAAI,CAAClC,MAAM,EAAG;MAC/CsB,MAAM,CAAEE,SAAS,CAAEwB,OAAQ,CAAC,EAAEzD,MAAO,CAAC;;MAEtC;MACA;MACA,IAAKwC,WAAW,IAAIG,IAAI,CAAClC,MAAM,KAAK,CAAC,EAAG;QACvCsB,MAAM,CAAEE,SAAS,CAAEwB,OAAQ,CAAC,EAAE;UAC7B9C,IAAI,EAAE,MAAM;UACZT,UAAU,EAAE;YACX,4BAA4B,EAAEsC,WAAW;YACzC;YACA;YACA4B,KAAK,EAAE;UACR;QACD,CAAE,CAAC;MACJ;IACD;IAEAlB,oBAAoB,GAAGM,gBAAgB;IACvCL,aAAa,GAAGE,SAAS;EAC1B;EAEA,OAAON,IAAI;AACZ","ignoreList":[]}