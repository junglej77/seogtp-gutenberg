{"version":3,"names":["isFormatEqual","updateFormats","value","start","end","formats","min","Math","max","formatsBefore","formatsAfter","activeFormats","map","format","index","length"],"sources":["@wordpress/rich-text/src/update-formats.js"],"sourcesContent":["/**\r\n * Internal dependencies\r\n */\r\n\r\nimport { isFormatEqual } from './is-format-equal';\r\n\r\n/** @typedef {import('./types').RichTextValue} RichTextValue */\r\n\r\n/**\r\n * Efficiently updates all the formats from `start` (including) until `end`\r\n * (excluding) with the active formats. Mutates `value`.\r\n *\r\n * @param {Object}        $1         Named paramentes.\r\n * @param {RichTextValue} $1.value   Value te update.\r\n * @param {number}        $1.start   Index to update from.\r\n * @param {number}        $1.end     Index to update until.\r\n * @param {Array}         $1.formats Replacement formats.\r\n *\r\n * @return {RichTextValue} Mutated value.\r\n */\r\nexport function updateFormats( { value, start, end, formats } ) {\r\n\t// Start and end may be switched in case of delete.\r\n\tconst min = Math.min( start, end );\r\n\tconst max = Math.max( start, end );\r\n\tconst formatsBefore = value.formats[ min - 1 ] || [];\r\n\tconst formatsAfter = value.formats[ max ] || [];\r\n\r\n\t// First, fix the references. If any format right before or after are\r\n\t// equal, the replacement format should use the same reference.\r\n\tvalue.activeFormats = formats.map( ( format, index ) => {\r\n\t\tif ( formatsBefore[ index ] ) {\r\n\t\t\tif ( isFormatEqual( format, formatsBefore[ index ] ) ) {\r\n\t\t\t\treturn formatsBefore[ index ];\r\n\t\t\t}\r\n\t\t} else if ( formatsAfter[ index ] ) {\r\n\t\t\tif ( isFormatEqual( format, formatsAfter[ index ] ) ) {\r\n\t\t\t\treturn formatsAfter[ index ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn format;\r\n\t} );\r\n\r\n\twhile ( --end >= start ) {\r\n\t\tif ( value.activeFormats.length > 0 ) {\r\n\t\t\tvalue.formats[ end ] = value.activeFormats;\r\n\t\t} else {\r\n\t\t\tdelete value.formats[ end ];\r\n\t\t}\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA,SAASA,aAAa,QAAQ,mBAAmB;;AAEjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAAE;EAAEC,KAAK;EAAEC,KAAK;EAAEC,GAAG;EAAEC;AAAQ,CAAC,EAAG;EAC/D;EACA,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAEH,KAAK,EAAEC,GAAI,CAAC;EAClC,MAAMI,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAEL,KAAK,EAAEC,GAAI,CAAC;EAClC,MAAMK,aAAa,GAAGP,KAAK,CAACG,OAAO,CAAEC,GAAG,GAAG,CAAC,CAAE,IAAI,EAAE;EACpD,MAAMI,YAAY,GAAGR,KAAK,CAACG,OAAO,CAAEG,GAAG,CAAE,IAAI,EAAE;;EAE/C;EACA;EACAN,KAAK,CAACS,aAAa,GAAGN,OAAO,CAACO,GAAG,CAAE,CAAEC,MAAM,EAAEC,KAAK,KAAM;IACvD,IAAKL,aAAa,CAAEK,KAAK,CAAE,EAAG;MAC7B,IAAKd,aAAa,CAAEa,MAAM,EAAEJ,aAAa,CAAEK,KAAK,CAAG,CAAC,EAAG;QACtD,OAAOL,aAAa,CAAEK,KAAK,CAAE;MAC9B;IACD,CAAC,MAAM,IAAKJ,YAAY,CAAEI,KAAK,CAAE,EAAG;MACnC,IAAKd,aAAa,CAAEa,MAAM,EAAEH,YAAY,CAAEI,KAAK,CAAG,CAAC,EAAG;QACrD,OAAOJ,YAAY,CAAEI,KAAK,CAAE;MAC7B;IACD;IAEA,OAAOD,MAAM;EACd,CAAE,CAAC;EAEH,OAAQ,EAAET,GAAG,IAAID,KAAK,EAAG;IACxB,IAAKD,KAAK,CAACS,aAAa,CAACI,MAAM,GAAG,CAAC,EAAG;MACrCb,KAAK,CAACG,OAAO,CAAED,GAAG,CAAE,GAAGF,KAAK,CAACS,aAAa;IAC3C,CAAC,MAAM;MACN,OAAOT,KAAK,CAACG,OAAO,CAAED,GAAG,CAAE;IAC5B;EACD;EAEA,OAAOF,KAAK;AACb","ignoreList":[]}