{"version":3,"names":["useMemo","withSelect","ServerSideRender","jsx","_jsx","EMPTY_OBJECT","ExportedServerSideRender","select","coreEditorSelect","currentPostId","getCurrentPostId","urlQueryArgs","props","newUrlQueryArgs","post_id"],"sources":["@wordpress/server-side-render/src/index.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport { useMemo } from '@wordpress/element';\r\nimport { withSelect } from '@wordpress/data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport ServerSideRender from './server-side-render';\r\n\r\n/**\r\n * Constants\r\n */\r\nconst EMPTY_OBJECT = {};\r\n\r\nconst ExportedServerSideRender = withSelect( ( select ) => {\r\n\t// FIXME: @wordpress/server-side-render should not depend on @wordpress/editor.\r\n\t// It is used by blocks that can be loaded into a *non-post* block editor.\r\n\t// eslint-disable-next-line @wordpress/data-no-store-string-literals\r\n\tconst coreEditorSelect = select( 'core/editor' );\r\n\tif ( coreEditorSelect ) {\r\n\t\tconst currentPostId = coreEditorSelect.getCurrentPostId();\r\n\t\t// For templates and template parts we use a custom ID format.\r\n\t\t// Since they aren't real posts, we don't want to use their ID\r\n\t\t// for server-side rendering. Since they use a string based ID,\r\n\t\t// we can assume real post IDs are numbers.\r\n\t\tif ( currentPostId && typeof currentPostId === 'number' ) {\r\n\t\t\treturn {\r\n\t\t\t\tcurrentPostId,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\treturn EMPTY_OBJECT;\r\n} )( ( { urlQueryArgs = EMPTY_OBJECT, currentPostId, ...props } ) => {\r\n\tconst newUrlQueryArgs = useMemo( () => {\r\n\t\tif ( ! currentPostId ) {\r\n\t\t\treturn urlQueryArgs;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tpost_id: currentPostId,\r\n\t\t\t...urlQueryArgs,\r\n\t\t};\r\n\t}, [ currentPostId, urlQueryArgs ] );\r\n\r\n\treturn <ServerSideRender urlQueryArgs={ newUrlQueryArgs } { ...props } />;\r\n} );\r\n\r\nexport default ExportedServerSideRender;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,UAAU,QAAQ,iBAAiB;;AAE5C;AACA;AACA;AACA,OAAOC,gBAAgB,MAAM,sBAAsB;;AAEnD;AACA;AACA;AAFA,SAAAC,GAAA,IAAAC,IAAA;AAGA,MAAMC,YAAY,GAAG,CAAC,CAAC;AAEvB,MAAMC,wBAAwB,GAAGL,UAAU,CAAIM,MAAM,IAAM;EAC1D;EACA;EACA;EACA,MAAMC,gBAAgB,GAAGD,MAAM,CAAE,aAAc,CAAC;EAChD,IAAKC,gBAAgB,EAAG;IACvB,MAAMC,aAAa,GAAGD,gBAAgB,CAACE,gBAAgB,CAAC,CAAC;IACzD;IACA;IACA;IACA;IACA,IAAKD,aAAa,IAAI,OAAOA,aAAa,KAAK,QAAQ,EAAG;MACzD,OAAO;QACNA;MACD,CAAC;IACF;EACD;EACA,OAAOJ,YAAY;AACpB,CAAE,CAAC,CAAE,CAAE;EAAEM,YAAY,GAAGN,YAAY;EAAEI,aAAa;EAAE,GAAGG;AAAM,CAAC,KAAM;EACpE,MAAMC,eAAe,GAAGb,OAAO,CAAE,MAAM;IACtC,IAAK,CAAES,aAAa,EAAG;MACtB,OAAOE,YAAY;IACpB;IACA,OAAO;MACNG,OAAO,EAAEL,aAAa;MACtB,GAAGE;IACJ,CAAC;EACF,CAAC,EAAE,CAAEF,aAAa,EAAEE,YAAY,CAAG,CAAC;EAEpC,oBAAOP,IAAA,CAACF,gBAAgB;IAACS,YAAY,EAAGE,eAAiB;IAAA,GAAMD;EAAK,CAAI,CAAC;AAC1E,CAAE,CAAC;AAEH,eAAeN,wBAAwB","ignoreList":[]}