{"version":3,"names":["paramCase","kebabCase","styleDefinitions","compileCSS","style","options","rules","getCSSRules","selector","inlineRules","forEach","rule","push","key","value","join","groupedRules","reduce","acc","selectorRules","Object","keys","subSelector","map","definition","generate","getCSSValueFromRawStyle"],"sources":["@wordpress/style-engine/src/index.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport { paramCase as kebabCase } from 'change-case';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport type {\r\n\tStyle,\r\n\tStyleOptions,\r\n\tGeneratedCSSRule,\r\n\tStyleDefinition,\r\n} from './types';\r\nimport { styleDefinitions } from './styles';\r\n\r\n/**\r\n * Generates a stylesheet for a given style object and selector.\r\n *\r\n * @since 6.1.0 Introduced in WordPress core.\r\n *\r\n * @param style   Style object, for example, the value of a block's attributes.style object or the top level styles in theme.json\r\n * @param options Options object with settings to adjust how the styles are generated.\r\n *\r\n * @return A generated stylesheet or inline style declarations.\r\n */\r\nexport function compileCSS( style: Style, options: StyleOptions = {} ): string {\r\n\tconst rules = getCSSRules( style, options );\r\n\r\n\t// If no selector is provided, treat generated rules as inline styles to be returned as a single string.\r\n\tif ( ! options?.selector ) {\r\n\t\tconst inlineRules: string[] = [];\r\n\t\trules.forEach( ( rule ) => {\r\n\t\t\tinlineRules.push( `${ kebabCase( rule.key ) }: ${ rule.value };` );\r\n\t\t} );\r\n\t\treturn inlineRules.join( ' ' );\r\n\t}\r\n\r\n\tconst groupedRules = rules.reduce(\r\n\t\t( acc: Record< string, GeneratedCSSRule[] >, rule ) => {\r\n\t\t\tconst { selector } = rule;\r\n\t\t\tif ( ! selector ) {\r\n\t\t\t\treturn acc;\r\n\t\t\t}\r\n\t\t\tif ( ! acc[ selector ] ) {\r\n\t\t\t\tacc[ selector ] = [];\r\n\t\t\t}\r\n\t\t\tacc[ selector ].push( rule );\r\n\t\t\treturn acc;\r\n\t\t},\r\n\t\t{}\r\n\t);\r\n\tconst selectorRules = Object.keys( groupedRules ).reduce(\r\n\t\t( acc: string[], subSelector: string ) => {\r\n\t\t\tacc.push(\r\n\t\t\t\t`${ subSelector } { ${ groupedRules[ subSelector ]\r\n\t\t\t\t\t.map(\r\n\t\t\t\t\t\t( rule: GeneratedCSSRule ) =>\r\n\t\t\t\t\t\t\t`${ kebabCase( rule.key ) }: ${ rule.value };`\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.join( ' ' ) } }`\r\n\t\t\t);\r\n\t\t\treturn acc;\r\n\t\t},\r\n\t\t[]\r\n\t);\r\n\r\n\treturn selectorRules.join( '\\n' );\r\n}\r\n\r\n/**\r\n * Returns a JSON representation of the generated CSS rules.\r\n *\r\n * @since 6.1.0 Introduced in WordPress core.\r\n *\r\n * @param style   Style object, for example, the value of a block's attributes.style object or the top level styles in theme.json\r\n * @param options Options object with settings to adjust how the styles are generated.\r\n *\r\n * @return A collection of objects containing the selector, if any, the CSS property key (camelcase) and parsed CSS value.\r\n */\r\nexport function getCSSRules(\r\n\tstyle: Style,\r\n\toptions: StyleOptions = {}\r\n): GeneratedCSSRule[] {\r\n\tconst rules: GeneratedCSSRule[] = [];\r\n\tstyleDefinitions.forEach( ( definition: StyleDefinition ) => {\r\n\t\tif ( typeof definition.generate === 'function' ) {\r\n\t\t\trules.push( ...definition.generate( style, options ) );\r\n\t\t}\r\n\t} );\r\n\r\n\treturn rules;\r\n}\r\n\r\n// Export style utils.\r\nexport { getCSSValueFromRawStyle } from './styles/utils';\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,IAAIC,SAAS,QAAQ,aAAa;;AAEpD;AACA;AACA;;AAOA,SAASC,gBAAgB,QAAQ,UAAU;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAAEC,KAAY,EAAEC,OAAqB,GAAG,CAAC,CAAC,EAAW;EAC9E,MAAMC,KAAK,GAAGC,WAAW,CAAEH,KAAK,EAAEC,OAAQ,CAAC;;EAE3C;EACA,IAAK,CAAEA,OAAO,EAAEG,QAAQ,EAAG;IAC1B,MAAMC,WAAqB,GAAG,EAAE;IAChCH,KAAK,CAACI,OAAO,CAAIC,IAAI,IAAM;MAC1BF,WAAW,CAACG,IAAI,CAAG,GAAGX,SAAS,CAAEU,IAAI,CAACE,GAAI,CAAG,KAAKF,IAAI,CAACG,KAAO,GAAG,CAAC;IACnE,CAAE,CAAC;IACH,OAAOL,WAAW,CAACM,IAAI,CAAE,GAAI,CAAC;EAC/B;EAEA,MAAMC,YAAY,GAAGV,KAAK,CAACW,MAAM,CAChC,CAAEC,GAAyC,EAAEP,IAAI,KAAM;IACtD,MAAM;MAAEH;IAAS,CAAC,GAAGG,IAAI;IACzB,IAAK,CAAEH,QAAQ,EAAG;MACjB,OAAOU,GAAG;IACX;IACA,IAAK,CAAEA,GAAG,CAAEV,QAAQ,CAAE,EAAG;MACxBU,GAAG,CAAEV,QAAQ,CAAE,GAAG,EAAE;IACrB;IACAU,GAAG,CAAEV,QAAQ,CAAE,CAACI,IAAI,CAAED,IAAK,CAAC;IAC5B,OAAOO,GAAG;EACX,CAAC,EACD,CAAC,CACF,CAAC;EACD,MAAMC,aAAa,GAAGC,MAAM,CAACC,IAAI,CAAEL,YAAa,CAAC,CAACC,MAAM,CACvD,CAAEC,GAAa,EAAEI,WAAmB,KAAM;IACzCJ,GAAG,CAACN,IAAI,CACN,GAAGU,WAAa,MAAMN,YAAY,CAAEM,WAAW,CAAE,CAChDC,GAAG,CACDZ,IAAsB,IACtB,GAAGV,SAAS,CAAEU,IAAI,CAACE,GAAI,CAAG,KAAKF,IAAI,CAACG,KAAO,GAC9C,CAAC,CACAC,IAAI,CAAE,GAAI,CAAG,IAChB,CAAC;IACD,OAAOG,GAAG;EACX,CAAC,EACD,EACD,CAAC;EAED,OAAOC,aAAa,CAACJ,IAAI,CAAE,IAAK,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASR,WAAWA,CAC1BH,KAAY,EACZC,OAAqB,GAAG,CAAC,CAAC,EACL;EACrB,MAAMC,KAAyB,GAAG,EAAE;EACpCJ,gBAAgB,CAACQ,OAAO,CAAIc,UAA2B,IAAM;IAC5D,IAAK,OAAOA,UAAU,CAACC,QAAQ,KAAK,UAAU,EAAG;MAChDnB,KAAK,CAACM,IAAI,CAAE,GAAGY,UAAU,CAACC,QAAQ,CAAErB,KAAK,EAAEC,OAAQ,CAAE,CAAC;IACvD;EACD,CAAE,CAAC;EAEH,OAAOC,KAAK;AACb;;AAEA;AACA,SAASoB,uBAAuB,QAAQ,gBAAgB","ignoreList":[]}