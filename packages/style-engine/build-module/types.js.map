{"version":3,"names":[],"sources":["@wordpress/style-engine/src/types.ts"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\nimport type { CSSProperties } from 'react';\r\n\r\ntype BoxVariant = 'margin' | 'padding';\r\nexport interface Box< T extends BoxVariant | undefined = undefined > {\r\n\ttop?: CSSProperties[ T extends undefined ? 'top' : `${ T }Top` ];\r\n\tright?: CSSProperties[ T extends undefined ? 'right' : `${ T }Right` ];\r\n\tbottom?: CSSProperties[ T extends undefined ? 'bottom' : `${ T }Bottom` ];\r\n\tleft?: CSSProperties[ T extends undefined ? 'left' : `${ T }Left` ];\r\n}\r\n\r\nexport type BoxEdge = 'top' | 'right' | 'bottom' | 'left';\r\n\r\n// `T` is one of the values in `BorderIndividualProperty`. The expected CSSProperties key is something like `borderTopColor`.\r\nexport interface BorderIndividualStyles< T extends BoxEdge > {\r\n\tcolor?: CSSProperties[ `border${ Capitalize< T > }Color` ];\r\n\tstyle?: CSSProperties[ `border${ Capitalize< T > }Style` ];\r\n\twidth?: CSSProperties[ `border${ Capitalize< T > }Width` ];\r\n}\r\n\r\nexport interface Style {\r\n\tbackground?: {\r\n\t\tbackgroundImage?:\r\n\t\t\t| { url?: CSSProperties[ 'backgroundImage' ]; source?: string }\r\n\t\t\t| CSSProperties[ 'backgroundImage' ];\r\n\t\tbackgroundPosition?: CSSProperties[ 'backgroundPosition' ];\r\n\t\tbackgroundRepeat?: CSSProperties[ 'backgroundRepeat' ];\r\n\t\tbackgroundSize?: CSSProperties[ 'backgroundSize' ];\r\n\t};\r\n\tborder?: {\r\n\t\tcolor?: CSSProperties[ 'borderColor' ];\r\n\t\tradius?:\r\n\t\t\t| CSSProperties[ 'borderRadius' ]\r\n\t\t\t| {\r\n\t\t\t\t\ttopLeft?: CSSProperties[ 'borderTopLeftRadius' ];\r\n\t\t\t\t\ttopRight?: CSSProperties[ 'borderTopRightRadius' ];\r\n\t\t\t\t\tbottomLeft?: CSSProperties[ 'borderBottomLeftRadius' ];\r\n\t\t\t\t\tbottomRight?: CSSProperties[ 'borderBottomLeftRadius' ];\r\n\t\t\t  };\r\n\t\tstyle?: CSSProperties[ 'borderStyle' ];\r\n\t\twidth?: CSSProperties[ 'borderWidth' ];\r\n\t\ttop?: BorderIndividualStyles< 'top' >;\r\n\t\tright?: BorderIndividualStyles< 'right' >;\r\n\t\tbottom?: BorderIndividualStyles< 'bottom' >;\r\n\t\tleft?: BorderIndividualStyles< 'left' >;\r\n\t};\r\n\tdimensions?: {\r\n\t\taspectRatio?: CSSProperties[ 'aspectRatio' ];\r\n\t\tminHeight?: CSSProperties[ 'minHeight' ];\r\n\t};\r\n\tspacing?: {\r\n\t\tmargin?: CSSProperties[ 'margin' ] | Box< 'margin' >;\r\n\t\tpadding?: CSSProperties[ 'padding' ] | Box< 'padding' >;\r\n\t};\r\n\ttypography?: {\r\n\t\tfontSize?: CSSProperties[ 'fontSize' ];\r\n\t\tfontFamily?: CSSProperties[ 'fontFamily' ];\r\n\t\tfontWeight?: CSSProperties[ 'fontWeight' ];\r\n\t\tfontStyle?: CSSProperties[ 'fontStyle' ];\r\n\t\tletterSpacing?: CSSProperties[ 'letterSpacing' ];\r\n\t\tlineHeight?: CSSProperties[ 'lineHeight' ];\r\n\t\ttextColumns?: CSSProperties[ 'columnCount' ];\r\n\t\ttextDecoration?: CSSProperties[ 'textDecoration' ];\r\n\t\ttextTransform?: CSSProperties[ 'textTransform' ];\r\n\t\twritingMode?: CSSProperties[ 'writingMode' ];\r\n\t};\r\n\tcolor?: {\r\n\t\ttext?: CSSProperties[ 'color' ];\r\n\t\tbackground?: CSSProperties[ 'backgroundColor' ];\r\n\t\tgradient?: CSSProperties[ 'background' ];\r\n\t};\r\n\telements?: {\r\n\t\tlink?: {\r\n\t\t\tcolor?: {\r\n\t\t\t\ttext?: CSSProperties[ 'color' ];\r\n\t\t\t};\r\n\t\t};\r\n\t};\r\n}\r\n\r\nexport interface CssRulesKeys {\r\n\tdefault: string;\r\n\tindividual: string;\r\n}\r\n\r\nexport interface StyleOptions {\r\n\t/**\r\n\t * CSS selector for the generated style.\r\n\t */\r\n\tselector?: string;\r\n}\r\n\r\nexport interface GeneratedCSSRule {\r\n\tselector?: string;\r\n\tvalue: string | unknown;\r\n\t/**\r\n\t * The CSS key in JS style attribute format, compatible with React.\r\n\t * E.g. `paddingTop` instead of `padding-top`.\r\n\t */\r\n\tkey: string;\r\n}\r\n\r\nexport interface GenerateFunction {\r\n\t( style: Style, options: StyleOptions ): GeneratedCSSRule[];\r\n}\r\n\r\nexport interface StyleDefinition {\r\n\tname: string;\r\n\tgenerate?: GenerateFunction;\r\n}\r\n"],"mappings":"","ignoreList":[]}