{"version":3,"names":["WebrtcProvider","SignalingConn","WebrtcConn","signalingConns","rooms","publishSignalingMessage","log","cryptoutils","map","Observable","buffer","addQueryArgs","setupSignalEventHandlers","signalCon","url","on","topics","Array","from","keys","send","type","forEach","room","peerId","m","roomName","topic","get","undefined","execMessage","data","webrtcConns","to","bcConns","has","emitPeerChange","provider","emit","removed","added","webrtcPeers","bcPeers","size","maxConns","setIfUndefined","signal","existingConn","remoteToken","token","localToken","glareToken","peer","key","decryptJson","fromBase64","then","setupHttpSignal","httpClient","shouldConnect","ws","subscriberId","Math","floor","random","eventSource","window","EventSource","subscriber_id","action","pingTimeout","onmessage","event","lastMessageReceived","Date","now","messages","JSON","parse","isArray","onSingleMessage","connecting","connected","message","clearTimeout","setTimeout","sendPing","messageReconnectTimeout","onclose","error","close","unsuccessfulReconnects","readyState","OPEN","fetch","body","URLSearchParams","toString","method","catch","onerror","onopen","HttpSignalingConn","constructor","binaryType","_checkInterval","setInterval","providers","Set","stringify","destroy","clearInterval","disconnect","connect","WebrtcProviderWithHttpSignaling","signalingUrls","signalingConn","startsWith","push","add"],"sources":["@wordpress/sync/src/webrtc-http-stream-signaling.js"],"sourcesContent":["/**\r\n * External dependencies\r\n */\r\n/**\r\n * Internal dependencies\r\n */\r\nimport {\r\n\tWebrtcProvider,\r\n\tSignalingConn,\r\n\tWebrtcConn,\r\n\tsignalingConns,\r\n\trooms,\r\n\tpublishSignalingMessage,\r\n\tlog,\r\n} from './y-webrtc/y-webrtc';\r\nimport * as cryptoutils from './y-webrtc/crypto';\r\n\r\nimport * as map from 'lib0/map';\r\nimport { Observable } from 'lib0/observable';\r\nimport * as buffer from 'lib0/buffer';\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nimport { addQueryArgs } from '@wordpress/url';\r\n\r\n/**\r\n * Method copied as is from the SignalingConn constructor.\r\n * Setups the needed event handlers for an http signaling connection.\r\n *\r\n * @param {HttpSignalingConn} signalCon The signaling connection.\r\n * @param {string}            url       The url.\r\n */\r\nfunction setupSignalEventHandlers( signalCon, url ) {\r\n\tsignalCon.on( 'connect', () => {\r\n\t\tlog( `connected (${ url })` );\r\n\t\tconst topics = Array.from( rooms.keys() );\r\n\t\tsignalCon.send( { type: 'subscribe', topics } );\r\n\t\trooms.forEach( ( room ) =>\r\n\t\t\tpublishSignalingMessage( signalCon, room, {\r\n\t\t\t\ttype: 'announce',\r\n\t\t\t\tfrom: room.peerId,\r\n\t\t\t} )\r\n\t\t);\r\n\t} );\r\n\tsignalCon.on(\r\n\t\t'message',\r\n\t\t( /** @type {{ type: any; topic: any; data: string; }} */ m ) => {\r\n\t\t\tswitch ( m.type ) {\r\n\t\t\t\tcase 'publish': {\r\n\t\t\t\t\tconst roomName = m.topic;\r\n\t\t\t\t\tconst room = rooms.get( roomName );\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\troom === null ||\r\n\t\t\t\t\t\ttypeof roomName !== 'string' ||\r\n\t\t\t\t\t\troom === undefined\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst execMessage = ( /** @type {any} */ data ) => {\r\n\t\t\t\t\t\tconst webrtcConns = room.webrtcConns;\r\n\t\t\t\t\t\tconst peerId = room.peerId;\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tdata === null ||\r\n\t\t\t\t\t\t\tdata.from === peerId ||\r\n\t\t\t\t\t\t\t( data.to !== undefined && data.to !== peerId ) ||\r\n\t\t\t\t\t\t\troom.bcConns.has( data.from )\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t// ignore messages that are not addressed to this conn, or from clients that are connected via broadcastchannel\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst emitPeerChange = webrtcConns.has( data.from )\r\n\t\t\t\t\t\t\t? () => {}\r\n\t\t\t\t\t\t\t: () =>\r\n\t\t\t\t\t\t\t\t\troom.provider.emit( 'peers', [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tremoved: [],\r\n\t\t\t\t\t\t\t\t\t\t\tadded: [ data.from ],\r\n\t\t\t\t\t\t\t\t\t\t\twebrtcPeers: Array.from(\r\n\t\t\t\t\t\t\t\t\t\t\t\troom.webrtcConns.keys()\r\n\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\tbcPeers: Array.from( room.bcConns ),\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t] );\r\n\t\t\t\t\t\tswitch ( data.type ) {\r\n\t\t\t\t\t\t\tcase 'announce':\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\twebrtcConns.size < room.provider.maxConns\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\tmap.setIfUndefined(\r\n\t\t\t\t\t\t\t\t\t\twebrtcConns,\r\n\t\t\t\t\t\t\t\t\t\tdata.from,\r\n\t\t\t\t\t\t\t\t\t\t() =>\r\n\t\t\t\t\t\t\t\t\t\t\tnew WebrtcConn(\r\n\t\t\t\t\t\t\t\t\t\t\t\tsignalCon,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttrue,\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata.from,\r\n\t\t\t\t\t\t\t\t\t\t\t\troom\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\temitPeerChange();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'signal':\r\n\t\t\t\t\t\t\t\tif ( data.signal.type === 'offer' ) {\r\n\t\t\t\t\t\t\t\t\tconst existingConn = webrtcConns.get(\r\n\t\t\t\t\t\t\t\t\t\tdata.from\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\tif ( existingConn ) {\r\n\t\t\t\t\t\t\t\t\t\tconst remoteToken = data.token;\r\n\t\t\t\t\t\t\t\t\t\tconst localToken =\r\n\t\t\t\t\t\t\t\t\t\t\texistingConn.glareToken;\r\n\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\tlocalToken &&\r\n\t\t\t\t\t\t\t\t\t\t\tlocalToken > remoteToken\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\tlog(\r\n\t\t\t\t\t\t\t\t\t\t\t\t'offer rejected: ',\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata.from\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t// if we don't reject the offer, we will be accepting it and answering it\r\n\t\t\t\t\t\t\t\t\t\texistingConn.glareToken = undefined;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif ( data.signal.type === 'answer' ) {\r\n\t\t\t\t\t\t\t\t\tlog( 'offer answered by: ', data.from );\r\n\t\t\t\t\t\t\t\t\tconst existingConn = webrtcConns.get(\r\n\t\t\t\t\t\t\t\t\t\tdata.from\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\tif ( existingConn ) {\r\n\t\t\t\t\t\t\t\t\t\texistingConn.glareToken = undefined;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif ( data.to === peerId ) {\r\n\t\t\t\t\t\t\t\t\tmap.setIfUndefined(\r\n\t\t\t\t\t\t\t\t\t\twebrtcConns,\r\n\t\t\t\t\t\t\t\t\t\tdata.from,\r\n\t\t\t\t\t\t\t\t\t\t() =>\r\n\t\t\t\t\t\t\t\t\t\t\tnew WebrtcConn(\r\n\t\t\t\t\t\t\t\t\t\t\t\tsignalCon,\r\n\t\t\t\t\t\t\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata.from,\r\n\t\t\t\t\t\t\t\t\t\t\t\troom\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t).peer.signal( data.signal );\r\n\t\t\t\t\t\t\t\t\temitPeerChange();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif ( room.key ) {\r\n\t\t\t\t\t\tif ( typeof m.data === 'string' ) {\r\n\t\t\t\t\t\t\tcryptoutils\r\n\t\t\t\t\t\t\t\t.decryptJson(\r\n\t\t\t\t\t\t\t\t\tbuffer.fromBase64( m.data ),\r\n\t\t\t\t\t\t\t\t\troom.key\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.then( execMessage );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\texecMessage( m.data );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\tsignalCon.on( 'disconnect', () => log( `disconnect (${ url })` ) );\r\n}\r\n\r\n/**\r\n * Method that instantiates the http signaling connection.\r\n * Tries to implement the same methods a websocket provides using ajax requests\r\n * to send messages and EventSource to retrieve messages.\r\n *\r\n * @param {HttpSignalingConn} httpClient The signaling connection.\r\n */\r\nfunction setupHttpSignal( httpClient ) {\r\n\tif ( httpClient.shouldConnect && httpClient.ws === null ) {\r\n\t\t// eslint-disable-next-line no-restricted-syntax\r\n\t\tconst subscriberId = Math.floor( 100000 + Math.random() * 900000 );\r\n\t\tconst url = httpClient.url;\r\n\t\tconst eventSource = new window.EventSource(\r\n\t\t\taddQueryArgs( url, {\r\n\t\t\t\tsubscriber_id: subscriberId,\r\n\t\t\t\taction: 'gutenberg_signaling_server',\r\n\t\t\t} )\r\n\t\t);\r\n\t\t/**\r\n\t\t * @type {any}\r\n\t\t */\r\n\t\tlet pingTimeout = null;\r\n\t\teventSource.onmessage = ( event ) => {\r\n\t\t\thttpClient.lastMessageReceived = Date.now();\r\n\t\t\tconst data = event.data;\r\n\t\t\tif ( data ) {\r\n\t\t\t\tconst messages = JSON.parse( data );\r\n\t\t\t\tif ( Array.isArray( messages ) ) {\r\n\t\t\t\t\tmessages.forEach( onSingleMessage );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\t// @ts-ignore\r\n\t\thttpClient.ws = eventSource;\r\n\t\thttpClient.connecting = true;\r\n\t\thttpClient.connected = false;\r\n\t\tconst onSingleMessage = ( /** @type {any} */ message ) => {\r\n\t\t\tif ( message && message.type === 'pong' ) {\r\n\t\t\t\tclearTimeout( pingTimeout );\r\n\t\t\t\tpingTimeout = setTimeout(\r\n\t\t\t\t\tsendPing,\r\n\t\t\t\t\tmessageReconnectTimeout / 2\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\thttpClient.emit( 'message', [ message, httpClient ] );\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * @param {any} error\r\n\t\t */\r\n\t\tconst onclose = ( error ) => {\r\n\t\t\tif ( httpClient.ws !== null ) {\r\n\t\t\t\thttpClient.ws.close();\r\n\t\t\t\thttpClient.ws = null;\r\n\t\t\t\thttpClient.connecting = false;\r\n\t\t\t\tif ( httpClient.connected ) {\r\n\t\t\t\t\thttpClient.connected = false;\r\n\t\t\t\t\thttpClient.emit( 'disconnect', [\r\n\t\t\t\t\t\t{ type: 'disconnect', error },\r\n\t\t\t\t\t\thttpClient,\r\n\t\t\t\t\t] );\r\n\t\t\t\t} else {\r\n\t\t\t\t\thttpClient.unsuccessfulReconnects++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tclearTimeout( pingTimeout );\r\n\t\t};\r\n\t\tconst sendPing = () => {\r\n\t\t\tif (\r\n\t\t\t\thttpClient.ws &&\r\n\t\t\t\thttpClient.ws.readyState === window.EventSource.OPEN\r\n\t\t\t) {\r\n\t\t\t\thttpClient.send( {\r\n\t\t\t\t\ttype: 'ping',\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t};\r\n\t\tif ( httpClient.ws ) {\r\n\t\t\thttpClient.ws.onclose = () => {\r\n\t\t\t\tonclose( null );\r\n\t\t\t};\r\n\t\t\thttpClient.ws.send = function send(\r\n\t\t\t\t/** @type {string} */ message\r\n\t\t\t) {\r\n\t\t\t\twindow\r\n\t\t\t\t\t.fetch( url, {\r\n\t\t\t\t\t\tbody: new URLSearchParams( {\r\n\t\t\t\t\t\t\tsubscriber_id: subscriberId.toString(),\r\n\t\t\t\t\t\t\taction: 'gutenberg_signaling_server',\r\n\t\t\t\t\t\t\tmessage,\r\n\t\t\t\t\t\t} ),\r\n\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t} )\r\n\t\t\t\t\t.catch( () => {\r\n\t\t\t\t\t\tlog(\r\n\t\t\t\t\t\t\t'Error sending to server with message: ' + message\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} );\r\n\t\t\t};\r\n\t\t}\r\n\t\teventSource.onerror = () => {\r\n\t\t\t// Todo: add an error handler\r\n\t\t};\r\n\t\teventSource.onopen = () => {\r\n\t\t\tif ( httpClient.connected ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif ( eventSource.readyState === window.EventSource.OPEN ) {\r\n\t\t\t\thttpClient.lastMessageReceived = Date.now();\r\n\t\t\t\thttpClient.connecting = false;\r\n\t\t\t\thttpClient.connected = true;\r\n\t\t\t\thttpClient.unsuccessfulReconnects = 0;\r\n\t\t\t\thttpClient.emit( 'connect', [\r\n\t\t\t\t\t{ type: 'connect' },\r\n\t\t\t\t\thttpClient,\r\n\t\t\t\t] );\r\n\t\t\t\t// set ping\r\n\t\t\t\tpingTimeout = setTimeout(\r\n\t\t\t\t\tsendPing,\r\n\t\t\t\t\tmessageReconnectTimeout / 2\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}\r\nconst messageReconnectTimeout = 30000;\r\n\r\n/**\r\n * @augments Observable<string>\r\n */ export class HttpSignalingConn extends Observable {\r\n\t/**\r\n\t * @param {string} url\r\n\t */\r\n\tconstructor( url ) {\r\n\t\tsuper();\r\n\r\n\t\t//WebsocketClient from lib0/websocket.js\r\n\t\tthis.url = url;\r\n\t\t/**\r\n\t\t * @type {WebSocket?}\r\n\t\t */\r\n\t\tthis.ws = null;\r\n\t\t// @ts-ignore\r\n\t\tthis.binaryType = null; // this.binaryType = binaryType\r\n\t\tthis.connected = false;\r\n\t\tthis.connecting = false;\r\n\t\tthis.unsuccessfulReconnects = 0;\r\n\t\tthis.lastMessageReceived = 0;\r\n\t\t/**\r\n\t\t * Whether to connect to other peers or not\r\n\t\t *\r\n\t\t * @type {boolean}\r\n\t\t */\r\n\t\tthis.shouldConnect = true;\r\n\t\tthis._checkInterval = setInterval( () => {\r\n\t\t\tif (\r\n\t\t\t\tthis.connected &&\r\n\t\t\t\tmessageReconnectTimeout <\r\n\t\t\t\t\tDate.now() - this.lastMessageReceived &&\r\n\t\t\t\tthis.ws\r\n\t\t\t) {\r\n\t\t\t\t// no message received in a long time - not even your own awareness\r\n\t\t\t\t// updates (which are updated every 15 seconds)\r\n\t\t\t\tthis.ws.close();\r\n\t\t\t}\r\n\t\t}, messageReconnectTimeout / 2 );\r\n\t\t//setupWS( this );\r\n\t\tsetupHttpSignal( this );\r\n\r\n\t\t// From SignalingConn\r\n\t\t/**\r\n\t\t * @type {Set<WebrtcProvider>}\r\n\t\t */\r\n\t\tthis.providers = new Set();\r\n\r\n\t\tsetupSignalEventHandlers( this, url );\r\n\t}\r\n\r\n\t/**\r\n\t * @param {any} message\r\n\t */\r\n\tsend( message ) {\r\n\t\tif ( this.ws ) {\r\n\t\t\tthis.ws.send( JSON.stringify( message ) );\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tclearInterval( this._checkInterval );\r\n\t\tthis.disconnect();\r\n\t\tsuper.destroy();\r\n\t}\r\n\r\n\tdisconnect() {\r\n\t\tthis.shouldConnect = false;\r\n\t\tif ( this.ws !== null ) {\r\n\t\t\tthis.ws.close();\r\n\t\t}\r\n\t}\r\n\r\n\tconnect() {\r\n\t\tthis.shouldConnect = true;\r\n\t\tif ( ! this.connected && this.ws === null ) {\r\n\t\t\tsetupHttpSignal( this );\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class WebrtcProviderWithHttpSignaling extends WebrtcProvider {\r\n\tconnect() {\r\n\t\tthis.shouldConnect = true;\r\n\t\tthis.signalingUrls.forEach( ( /** @type {string} */ url ) => {\r\n\t\t\tconst signalingConn = map.setIfUndefined(\r\n\t\t\t\tsignalingConns,\r\n\t\t\t\turl,\r\n\t\t\t\t// Only this conditional logic to create a normal websocket connection or\r\n\t\t\t\t// an http signaling connection was added to the constructor when compared\r\n\t\t\t\t// with the base class.\r\n\t\t\t\turl.startsWith( 'ws://' ) || url.startsWith( 'wss://' )\r\n\t\t\t\t\t? () => new SignalingConn( url )\r\n\t\t\t\t\t: () => new HttpSignalingConn( url )\r\n\t\t\t);\r\n\t\t\tthis.signalingConns.push( signalingConn );\r\n\t\t\tsignalingConn.providers.add( this );\r\n\t\t} );\r\n\t\tif ( this.room ) {\r\n\t\t\tthis.room.connect();\r\n\t\t}\r\n\t}\r\n}\r\n"],"mappings":"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","ignoreList":[]}