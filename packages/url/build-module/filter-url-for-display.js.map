{"version":3,"names":["filterURLForDisplay","url","maxLength","filteredURL","replace","match","fileRegexp","length","split","urlPieces","file","slice","index","lastIndexOf","fileName","extension","truncatedFile"],"sources":["@wordpress/url/src/filter-url-for-display.js"],"sourcesContent":["/**\r\n * Returns a URL for display.\r\n *\r\n * @param {string}      url       Original URL.\r\n * @param {number|null} maxLength URL length.\r\n *\r\n * @example\r\n * ```js\r\n * const displayUrl = filterURLForDisplay( 'https://www.wordpress.org/gutenberg/' ); // wordpress.org/gutenberg\r\n * const imageUrl = filterURLForDisplay( 'https://www.wordpress.org/wp-content/uploads/img.png', 20 ); // …ent/uploads/img.png\r\n * ```\r\n *\r\n * @return {string} Displayed URL.\r\n */\r\nexport function filterURLForDisplay( url, maxLength = null ) {\r\n\tif ( ! url ) {\r\n\t\treturn '';\r\n\t}\r\n\r\n\t// Remove protocol and www prefixes.\r\n\tlet filteredURL = url\r\n\t\t.replace( /^[a-z\\-.\\+]+[0-9]*:(\\/\\/)?/i, '' )\r\n\t\t.replace( /^www\\./i, '' );\r\n\r\n\t// Ends with / and only has that single slash, strip it.\r\n\tif ( filteredURL.match( /^[^\\/]+\\/$/ ) ) {\r\n\t\tfilteredURL = filteredURL.replace( '/', '' );\r\n\t}\r\n\r\n\t// capture file name from URL\r\n\tconst fileRegexp = /\\/([^\\/?]+)\\.(?:[\\w]+)(?=\\?|$)/;\r\n\r\n\tif (\r\n\t\t! maxLength ||\r\n\t\tfilteredURL.length <= maxLength ||\r\n\t\t! filteredURL.match( fileRegexp )\r\n\t) {\r\n\t\treturn filteredURL;\r\n\t}\r\n\r\n\t// If the file is not greater than max length, return last portion of URL.\r\n\tfilteredURL = filteredURL.split( '?' )[ 0 ];\r\n\tconst urlPieces = filteredURL.split( '/' );\r\n\tconst file = urlPieces[ urlPieces.length - 1 ];\r\n\tif ( file.length <= maxLength ) {\r\n\t\treturn '…' + filteredURL.slice( -maxLength );\r\n\t}\r\n\r\n\t// If the file is greater than max length, truncate the file.\r\n\tconst index = file.lastIndexOf( '.' );\r\n\tconst [ fileName, extension ] = [\r\n\t\tfile.slice( 0, index ),\r\n\t\tfile.slice( index + 1 ),\r\n\t];\r\n\tconst truncatedFile = fileName.slice( -3 ) + '.' + extension;\r\n\treturn (\r\n\t\tfile.slice( 0, maxLength - truncatedFile.length - 1 ) +\r\n\t\t'…' +\r\n\t\ttruncatedFile\r\n\t);\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,mBAAmBA,CAAEC,GAAG,EAAEC,SAAS,GAAG,IAAI,EAAG;EAC5D,IAAK,CAAED,GAAG,EAAG;IACZ,OAAO,EAAE;EACV;;EAEA;EACA,IAAIE,WAAW,GAAGF,GAAG,CACnBG,OAAO,CAAE,6BAA6B,EAAE,EAAG,CAAC,CAC5CA,OAAO,CAAE,SAAS,EAAE,EAAG,CAAC;;EAE1B;EACA,IAAKD,WAAW,CAACE,KAAK,CAAE,YAAa,CAAC,EAAG;IACxCF,WAAW,GAAGA,WAAW,CAACC,OAAO,CAAE,GAAG,EAAE,EAAG,CAAC;EAC7C;;EAEA;EACA,MAAME,UAAU,GAAG,gCAAgC;EAEnD,IACC,CAAEJ,SAAS,IACXC,WAAW,CAACI,MAAM,IAAIL,SAAS,IAC/B,CAAEC,WAAW,CAACE,KAAK,CAAEC,UAAW,CAAC,EAChC;IACD,OAAOH,WAAW;EACnB;;EAEA;EACAA,WAAW,GAAGA,WAAW,CAACK,KAAK,CAAE,GAAI,CAAC,CAAE,CAAC,CAAE;EAC3C,MAAMC,SAAS,GAAGN,WAAW,CAACK,KAAK,CAAE,GAAI,CAAC;EAC1C,MAAME,IAAI,GAAGD,SAAS,CAAEA,SAAS,CAACF,MAAM,GAAG,CAAC,CAAE;EAC9C,IAAKG,IAAI,CAACH,MAAM,IAAIL,SAAS,EAAG;IAC/B,OAAO,GAAG,GAAGC,WAAW,CAACQ,KAAK,CAAE,CAACT,SAAU,CAAC;EAC7C;;EAEA;EACA,MAAMU,KAAK,GAAGF,IAAI,CAACG,WAAW,CAAE,GAAI,CAAC;EACrC,MAAM,CAAEC,QAAQ,EAAEC,SAAS,CAAE,GAAG,CAC/BL,IAAI,CAACC,KAAK,CAAE,CAAC,EAAEC,KAAM,CAAC,EACtBF,IAAI,CAACC,KAAK,CAAEC,KAAK,GAAG,CAAE,CAAC,CACvB;EACD,MAAMI,aAAa,GAAGF,QAAQ,CAACH,KAAK,CAAE,CAAC,CAAE,CAAC,GAAG,GAAG,GAAGI,SAAS;EAC5D,OACCL,IAAI,CAACC,KAAK,CAAE,CAAC,EAAET,SAAS,GAAGc,aAAa,CAACT,MAAM,GAAG,CAAE,CAAC,GACrD,GAAG,GACHS,aAAa;AAEf","ignoreList":[]}