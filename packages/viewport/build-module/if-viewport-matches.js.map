{"version":3,"names":["ifCondition","compose","createHigherOrderComponent","withViewportMatch","ifViewportMatches","query","isViewportMatch","props"],"sources":["@wordpress/viewport/src/if-viewport-matches.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport {\r\n\tifCondition,\r\n\tcompose,\r\n\tcreateHigherOrderComponent,\r\n} from '@wordpress/compose';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport withViewportMatch from './with-viewport-match';\r\n\r\n/**\r\n * Higher-order component creator, creating a new component which renders if\r\n * the viewport query is satisfied.\r\n *\r\n * @see withViewportMatches\r\n *\r\n * @param {string} query Viewport query.\r\n *\r\n * @example\r\n *\r\n * ```jsx\r\n * function MyMobileComponent() {\r\n * \treturn <div>I'm only rendered on mobile viewports!</div>;\r\n * }\r\n *\r\n * MyMobileComponent = ifViewportMatches( '< small' )( MyMobileComponent );\r\n * ```\r\n *\r\n * @return {Function} Higher-order component.\r\n */\r\nconst ifViewportMatches = ( query ) =>\r\n\tcreateHigherOrderComponent(\r\n\t\tcompose( [\r\n\t\t\twithViewportMatch( {\r\n\t\t\t\tisViewportMatch: query,\r\n\t\t\t} ),\r\n\t\t\tifCondition( ( props ) => props.isViewportMatch ),\r\n\t\t] ),\r\n\t\t'ifViewportMatches'\r\n\t);\r\n\r\nexport default ifViewportMatches;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SACCA,WAAW,EACXC,OAAO,EACPC,0BAA0B,QACpB,oBAAoB;;AAE3B;AACA;AACA;AACA,OAAOC,iBAAiB,MAAM,uBAAuB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,GAAKC,KAAK,IAChCH,0BAA0B,CACzBD,OAAO,CAAE,CACRE,iBAAiB,CAAE;EAClBG,eAAe,EAAED;AAClB,CAAE,CAAC,EACHL,WAAW,CAAIO,KAAK,IAAMA,KAAK,CAACD,eAAgB,CAAC,CAChD,CAAC,EACH,mBACD,CAAC;AAEF,eAAeF,iBAAiB","ignoreList":[]}