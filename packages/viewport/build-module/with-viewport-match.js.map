{"version":3,"names":["createHigherOrderComponent","pure","useViewportMatch","jsx","_jsx","withViewportMatch","queries","queryEntries","Object","entries","useViewPortQueriesResult","fromEntries","map","key","query","operator","breakpointName","split","undefined","WrappedComponent","props","queriesResult"],"sources":["@wordpress/viewport/src/with-viewport-match.js"],"sourcesContent":["/**\r\n * WordPress dependencies\r\n */\r\nimport {\r\n\tcreateHigherOrderComponent,\r\n\tpure,\r\n\tuseViewportMatch,\r\n} from '@wordpress/compose';\r\n\r\n/**\r\n * Higher-order component creator, creating a new component which renders with\r\n * the given prop names, where the value passed to the underlying component is\r\n * the result of the query assigned as the object's value.\r\n *\r\n * @see isViewportMatch\r\n *\r\n * @param {Object} queries Object of prop name to viewport query.\r\n *\r\n * @example\r\n *\r\n * ```jsx\r\n * function MyComponent( { isMobile } ) {\r\n * \treturn (\r\n * \t\t<div>Currently: { isMobile ? 'Mobile' : 'Not Mobile' }</div>\r\n * \t);\r\n * }\r\n *\r\n * MyComponent = withViewportMatch( { isMobile: '< small' } )( MyComponent );\r\n * ```\r\n *\r\n * @return {Function} Higher-order component.\r\n */\r\nconst withViewportMatch = ( queries ) => {\r\n\tconst queryEntries = Object.entries( queries );\r\n\tconst useViewPortQueriesResult = () =>\r\n\t\tObject.fromEntries(\r\n\t\t\tqueryEntries.map( ( [ key, query ] ) => {\r\n\t\t\t\tlet [ operator, breakpointName ] = query.split( ' ' );\r\n\t\t\t\tif ( breakpointName === undefined ) {\r\n\t\t\t\t\tbreakpointName = operator;\r\n\t\t\t\t\toperator = '>=';\r\n\t\t\t\t}\r\n\t\t\t\t// Hooks should unconditionally execute in the same order,\r\n\t\t\t\t// we are respecting that as from the static query of the HOC we generate\r\n\t\t\t\t// a hook that calls other hooks always in the same order (because the query never changes).\r\n\t\t\t\t// eslint-disable-next-line react-hooks/rules-of-hooks\r\n\t\t\t\treturn [ key, useViewportMatch( breakpointName, operator ) ];\r\n\t\t\t} )\r\n\t\t);\r\n\treturn createHigherOrderComponent( ( WrappedComponent ) => {\r\n\t\treturn pure( ( props ) => {\r\n\t\t\tconst queriesResult = useViewPortQueriesResult();\r\n\t\t\treturn <WrappedComponent { ...props } { ...queriesResult } />;\r\n\t\t} );\r\n\t}, 'withViewportMatch' );\r\n};\r\n\r\nexport default withViewportMatch;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SACCA,0BAA0B,EAC1BC,IAAI,EACJC,gBAAgB,QACV,oBAAoB;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA,SAAAC,GAAA,IAAAC,IAAA;AAuBA,MAAMC,iBAAiB,GAAKC,OAAO,IAAM;EACxC,MAAMC,YAAY,GAAGC,MAAM,CAACC,OAAO,CAAEH,OAAQ,CAAC;EAC9C,MAAMI,wBAAwB,GAAGA,CAAA,KAChCF,MAAM,CAACG,WAAW,CACjBJ,YAAY,CAACK,GAAG,CAAE,CAAE,CAAEC,GAAG,EAAEC,KAAK,CAAE,KAAM;IACvC,IAAI,CAAEC,QAAQ,EAAEC,cAAc,CAAE,GAAGF,KAAK,CAACG,KAAK,CAAE,GAAI,CAAC;IACrD,IAAKD,cAAc,KAAKE,SAAS,EAAG;MACnCF,cAAc,GAAGD,QAAQ;MACzBA,QAAQ,GAAG,IAAI;IAChB;IACA;IACA;IACA;IACA;IACA,OAAO,CAAEF,GAAG,EAAEX,gBAAgB,CAAEc,cAAc,EAAED,QAAS,CAAC,CAAE;EAC7D,CAAE,CACH,CAAC;EACF,OAAOf,0BAA0B,CAAImB,gBAAgB,IAAM;IAC1D,OAAOlB,IAAI,CAAImB,KAAK,IAAM;MACzB,MAAMC,aAAa,GAAGX,wBAAwB,CAAC,CAAC;MAChD,oBAAON,IAAA,CAACe,gBAAgB;QAAA,GAAMC,KAAK;QAAA,GAAQC;MAAa,CAAI,CAAC;IAC9D,CAAE,CAAC;EACJ,CAAC,EAAE,mBAAoB,CAAC;AACzB,CAAC;AAED,eAAehB,iBAAiB","ignoreList":[]}